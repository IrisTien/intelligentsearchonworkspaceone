/* Open Sans @font-face kit */
/* BEGIN Light */
@font-face {
  font-family: 'Open Sans';
  src: url('../fonts/open-sans-fontface/fonts/Light/OpenSans-Light.eot');
  src: url('../fonts/open-sans-fontface/fonts/Light/OpenSans-Light.eot?#iefix') format('embedded-opentype'), url('../fonts/open-sans-fontface/fonts/Light/OpenSans-Light.woff') format('woff'), url('../fonts/open-sans-fontface/fonts/Light/OpenSans-Light.ttf') format('truetype'), url('../fonts/open-sans-fontface/fonts/Light/OpenSans-Light.svg#OpenSansLight') format('svg');
  font-weight: 300;
  font-style: normal;
}
/* END Light */
/* BEGIN Light Italic */
@font-face {
  font-family: 'Open Sans';
  src: url('../fonts/open-sans-fontface/fonts/LightItalic/OpenSans-LightItalic.eot');
  src: url('../fonts/open-sans-fontface/fonts/LightItalic/OpenSans-LightItalic.eot?#iefix') format('embedded-opentype'), url('../fonts/open-sans-fontface/fonts/LightItalic/OpenSans-LightItalic.woff') format('woff'), url('../fonts/open-sans-fontface/fonts/LightItalic/OpenSans-LightItalic.ttf') format('truetype'), url('../fonts/open-sans-fontface/fonts/LightItalic/OpenSans-LightItalic.svg#OpenSansLightItalic') format('svg');
  font-weight: 300;
  font-style: italic;
}
/* END Light Italic */
/* BEGIN Regular */
@font-face {
  font-family: 'Open Sans';
  src: url('../fonts/open-sans-fontface/fonts/Regular/OpenSans-Regular.eot');
  src: url('../fonts/open-sans-fontface/fonts/Regular/OpenSans-Regular.eot?#iefix') format('embedded-opentype'), url('../fonts/open-sans-fontface/fonts/Regular/OpenSans-Regular.woff') format('woff'), url('../fonts/open-sans-fontface/fonts/Regular/OpenSans-Regular.ttf') format('truetype'), url('../fonts/open-sans-fontface/fonts/Regular/OpenSans-Regular.svg#OpenSansRegular') format('svg');
  font-weight: normal;
  font-style: normal;
}
/* END Regular */
/* BEGIN Italic */
@font-face {
  font-family: 'Open Sans';
  src: url('../fonts/open-sans-fontface/fonts/Italic/OpenSans-Italic.eot');
  src: url('../fonts/open-sans-fontface/fonts/Italic/OpenSans-Italic.eot?#iefix') format('embedded-opentype'), url('../fonts/open-sans-fontface/fonts/Italic/OpenSans-Italic.woff') format('woff'), url('../fonts/open-sans-fontface/fonts/Italic/OpenSans-Italic.ttf') format('truetype'), url('../fonts/open-sans-fontface/fonts/Italic/OpenSans-Italic.svg#OpenSansItalic') format('svg');
  font-weight: normal;
  font-style: italic;
}
/* END Italic */
/* BEGIN Semibold */
@font-face {
  font-family: 'Open Sans';
  src: url('../fonts/open-sans-fontface/fonts/Semibold/OpenSans-Semibold.eot');
  src: url('../fonts/open-sans-fontface/fonts/Semibold/OpenSans-Semibold.eot?#iefix') format('embedded-opentype'), url('../fonts/open-sans-fontface/fonts/Semibold/OpenSans-Semibold.woff') format('woff'), url('../fonts/open-sans-fontface/fonts/Semibold/OpenSans-Semibold.ttf') format('truetype'), url('../fonts/open-sans-fontface/fonts/Semibold/OpenSans-Semibold.svg#OpenSansSemibold') format('svg');
  font-weight: 600;
  font-style: normal;
}
/* END Semibold */
/* BEGIN Semibold Italic */
@font-face {
  font-family: 'Open Sans';
  src: url('../fonts/open-sans-fontface/fonts/SemiboldItalic/OpenSans-SemiboldItalic.eot');
  src: url('../fonts/open-sans-fontface/fonts/SemiboldItalic/OpenSans-SemiboldItalic.eot?#iefix') format('embedded-opentype'), url('../fonts/open-sans-fontface/fonts/SemiboldItalic/OpenSans-SemiboldItalic.woff') format('woff'), url('../fonts/open-sans-fontface/fonts/SemiboldItalic/OpenSans-SemiboldItalic.ttf') format('truetype'), url('../fonts/open-sans-fontface/fonts/SemiboldItalic/OpenSans-SemiboldItalic.svg#OpenSansSemiboldItalic') format('svg');
  font-weight: 600;
  font-style: italic;
}
/* END Semibold Italic */
/* BEGIN Bold */
@font-face {
  font-family: 'Open Sans';
  src: url('../fonts/open-sans-fontface/fonts/Bold/OpenSans-Bold.eot');
  src: url('../fonts/open-sans-fontface/fonts/Bold/OpenSans-Bold.eot?#iefix') format('embedded-opentype'), url('../fonts/open-sans-fontface/fonts/Bold/OpenSans-Bold.woff') format('woff'), url('../fonts/open-sans-fontface/fonts/Bold/OpenSans-Bold.ttf') format('truetype'), url('../fonts/open-sans-fontface/fonts/Bold/OpenSans-Bold.svg#OpenSansBold') format('svg');
  font-weight: bold;
  font-style: normal;
}
/* END Bold */
/* BEGIN Bold Italic */
@font-face {
  font-family: 'Open Sans';
  src: url('../fonts/open-sans-fontface/fonts/BoldItalic/OpenSans-BoldItalic.eot');
  src: url('../fonts/open-sans-fontface/fonts/BoldItalic/OpenSans-BoldItalic.eot?#iefix') format('embedded-opentype'), url('../fonts/open-sans-fontface/fonts/BoldItalic/OpenSans-BoldItalic.woff') format('woff'), url('../fonts/open-sans-fontface/fonts/BoldItalic/OpenSans-BoldItalic.ttf') format('truetype'), url('../fonts/open-sans-fontface/fonts/BoldItalic/OpenSans-BoldItalic.svg#OpenSansBoldItalic') format('svg');
  font-weight: bold;
  font-style: italic;
}
/* END Bold Italic */
/* BEGIN Extrabold */
@font-face {
  font-family: 'Open Sans';
  src: url('../fonts/open-sans-fontface/fonts/ExtraBold/OpenSans-ExtraBold.eot');
  src: url('../fonts/open-sans-fontface/fonts/ExtraBold/OpenSans-ExtraBold.eot?#iefix') format('embedded-opentype'), url('../fonts/open-sans-fontface/fonts/ExtraBold/OpenSans-ExtraBold.woff') format('woff'), url('../fonts/open-sans-fontface/fonts/ExtraBold/OpenSans-ExtraBold.ttf') format('truetype'), url('../fonts/open-sans-fontface/fonts/ExtraBold/OpenSans-ExtraBold.svg#OpenSansExtrabold') format('svg');
  font-weight: 800;
  font-style: normal;
}
/* END Extrabold */
/* BEGIN Extrabold Italic */
@font-face {
  font-family: 'Open Sans';
  src: url('../fonts/open-sans-fontface/fonts/ExtraBoldItalic/OpenSans-ExtraBoldItalic.eot');
  src: url('../fonts/open-sans-fontface/fonts/ExtraBoldItalic/OpenSans-ExtraBoldItalic.eot?#iefix') format('embedded-opentype'), url('../fonts/open-sans-fontface/fonts/ExtraBoldItalic/OpenSans-ExtraBoldItalic.woff') format('woff'), url('../fonts/open-sans-fontface/fonts/ExtraBoldItalic/OpenSans-ExtraBoldItalic.ttf') format('truetype'), url('../fonts/open-sans-fontface/fonts/ExtraBoldItalic/OpenSans-ExtraBoldItalic.svg#OpenSansExtraboldItalic') format('svg');
  font-weight: 800;
  font-style: italic;
}
/* END Extrabold Italic */
/*!
Project Horizon
(c) 2013-2014 VMware, Inc. All rights reserved.
VMware Confidential.
*/
/**# UX Component Library **/
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
/* end of Meyer reset */
*,
*:before,
*:after {
  -moz-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
button,
input,
select,
hr {
  margin: 0;
  padding: 0;
}
a {
  text-decoration: none;
}
a,
a:hover,
a:active,
a:focus {
  color: inherit;
}
/*
 * Project Horizon
 * (c) 2013-2014 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
.clearfix:after {
  display: block;
  content: "";
  clear: both;
}
/*
 * Project Horizon
 * (c) 2013-2014 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
/* `Font` is a package of mixins for specifying the font.  Use these mixins
   for consistency instead of directly manipulating the CSS font properties.
*/
body {
  background-color: transparent;
  font-family: "Open Sans", Verdana, Tahoma, sans-serif;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  color: #444d56;
}
/*
 * Project Horizon
 * (c) 2013-2015 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
.image {
  /** @pattern
        A rectangular area that contains an image.  The image pattern provides
        control over the size and cropping of the image.

        The image itself should be specified using an inline `background-image`
        style.  Any content within the `.image` box will be rendered on top
        of this background image.

        @example [basic-image.html] Basic image examples
    **/
  display: block;
  background-color: transparent;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: 100% auto;
  border: 1px solid #cccccc;
  overflow: hidden;
  position: relative;
}
.image,
.image.sd-,
.image.sd-.landscape- {
  width: 100%;
  height: 0;
  padding-bottom: 75%;
}
.image.filled- {
  /** The image will completely cover the area, and may be clipped. */
  background-size: cover;
}
.image.contained- {
  /** The image will be size to be contained by the area, and will not be clipped. */
  background-size: contain;
}
.image.tiled- {
  /** The image will be tiled to fill the area. */
  background-repeat: repeat;
}
.image.square- {
  /** The image area will be a square. */
  width: 100%;
  height: 0;
  padding-bottom: 100%;
}
.image.landscape- {
  /** The image will be wider than it is tall (default 4:3). */
  width: 100%;
  height: 0;
  padding-bottom: 75%;
}
.image.portrait- {
  /** The image will be taller than it is wide (default 3:4). */
  width: 100%;
  height: 0;
  padding-bottom: 133.33333333%;
}
.image.hd-,
.image.hd-.landscape- {
  /** The image will have the HD (16:9) aspect ratio. */
  width: 100%;
  height: 0;
  padding-bottom: 56.25%;
}
.image.hd-.portrait- {
  width: 100%;
  height: 0;
  padding-bottom: 177.77777778%;
}
.image.cinema-,
.image.cinema-.landscape- {
  /** The image will have the cinematic (21:9) aspect ratio. */
  width: 100%;
  height: 0;
  padding-bottom: 42.85714286%;
}
.image.cinema-.portrait- {
  width: 100%;
  height: 0;
  padding-bottom: 233.33333333%;
}
/** @pattern .glyph

Glyphs are small graphical elements, roughly the same size as text characters.
Implemented as a custom web font, glyphs can be manipulated using CSS
text effects.

@example The set of available glyphs
<ul>
<li><i class="glyph"></i> Default (placeholder)
<li><i class="app-center- glyph"></i> app-center- glyph
<li><i class="bang- glyph"></i> bang- glyph
<li><i class="bullet- glyph"></i> bullet- glyph
<li><i class="bullseye- glyph"></i> bullseye- glyph
<li><i class="check- glyph"></i> check- glyph
<li><i class="check-circle- glyph"></i> check-circle- glyph
<li><i class="clock- glyph"></i> clock- glyph
<li><i class="columns- glyph"></i> columns- glyph
<li><i class="connector- glyph"></i> connector- glyph
<li><i class="coverflow- glyph"></i> coverflow- glyph
<li><i class="down-caret- glyph"></i> down-caret- glyph
<li><i class="directory- glyph"></i> directory- glyph
<li><i class="empty- glyph"></i> empty- glyph
<li><i class="gear- glyph"></i> gear- glyph
<li><i class="grid- glyph"></i> grid- glyph
<li><i class="hamburger- glyph"></i> hamburger- glyph
<li><i class="health- glyph"></i> health- glyph
<li><i class="i- glyph"></i> i- glyph
<li><i class="identity- glyph"></i> identity- glyph
<li><i class="launch- glyph"></i> launch- glyph
<li><i class="left- glyph"></i> left- glyph
<li><i class="list- glyph"></i> list- glyph
<li><i class="move- glyph"></i> move- glyph
<li><i class="move-to-beginning- glyph"></i> move-to-beginning- glyph
<li><i class="move-to-end- glyph"></i> move-to-end- glyph
<li><i class="play- glyph"></i> play- glyph
<li><i class="plus- glyph"></i> plus- glyph
<li><i class="policy- glyph"></i> policy- glyph
<li><i class="power- glyph"></i> power- glyph
<li><i class="reload- glyph"></i> reload- glyph
<li><i class="reverse-play- glyph"></i> reverse-play- glyph
<li><i class="right- glyph"></i> right- glyph
<li><i class="search- glyph"></i> search- glyph
<li><i class="solid-disc- glyph"></i> solid-disc- glyph
<li><i class="solid-square- glyph"></i> solid-square- glyph
<li><i class="star- glyph"></i> star- glyph
<li><i class="sync- glyph"></i> sync- glyph
<li><i class="trash- glyph"></i> trash- glyph
<li><i class="user-group- glyph"></i> user-group- glyph
<li><i class="user- glyph"></i> user- glyph
<li><i class="x- glyph"></i> x- glyph
</ul>
<!-- demo style -->
<style>
li { float: left; width: 15em; margin: .5em;}
</style>

**/
.glyph,
.button.close-,
.message .message-icon {
  font-size: 1em;
  font-family: "hznglyphs";
  display: inline-block;
  line-height: 1em;
  width: 1em;
  box-sizing: content-box;
  text-align: center;
  font-weight: normal;
  font-style: normal;
  text-decoration: inherit;
  text-transform: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  position: relative;
  /** ## Special Effects on Glyphs ##

        The following effects utilize `-webkit-background-clip: text` and
        are only available on Webkit browsers.  They fallback to the simple
        glyph on other browsers.
    */
}
.glyph:after,
.glyph:before,
.button.close-:before,
.button.close-:after,
.message .message-icon:before,
.message .message-icon:after {
  content: "\f100";
}
.glyph:before,
.glyph:after,
.button.close-:before,
.button.close-:after,
.message .message-icon:before,
.message .message-icon:after {
  display: inline-block;
  width: 1em;
  height: 1em;
}
.glyph:before,
.button.close-:before,
.message .message-icon:before {
  visibility: hidden;
  width: 0;
}
.glyph.circled-,
.message .message-icon {
  /** Add a circle around the glyph.

            @example
            <i class="circled- check- glyph"></i>
            <i class="circled- x- glyph"></i>
            <i class="circled- bang- glyph"></i>
            <style>
            .check-.glyph{ color: #58bf6c; }
            .x-.glyph{ color: #f35958; }
            .bang-.glyph{ color: #fff; border-color: #f3b319; }
            </style>
        */
  padding: 0.5em;
  border: 2px solid;
  border-radius: 50%;
}
.glyph.boxed- {
  /** Add a box around the glyph.

            @example
            <i class="boxed- check- glyph"></i>

        */
  padding: 0.2em;
  border: 1px solid;
  border-radius: 2px;
}
.glyph.cutout- {
  /** Applies an inner shadow effect, which makes the glyph look cut out
            from the background.  This only works on webkit browsers.

         @example Cutout glyphs
         <ul>
         <li><i class="cutout- gear- glyph"></i> cutout- gear- glyph
         <li><i class="cutout- grid- glyph"></i> cutout- grid- glyph
         <li><i class="circled- cutout- app-center- glyph"></i> circled- cutout- app-center- glyph
         <li><i class="circled- cutout- user- glyph"></i> circled- cutout- user- glyph
         <li><i class="circled- cutout- sync- glyph"></i> circled- cutout- sync- glyph
         </ul>
         <!-- demo style -->
         <style>
         li { margin: .5em;}
         .glyph { font-size: 4em; }
         </style>

         **/
  text-shadow: rgba(255, 255, 255, 0.5) 0 0.05em 0.05em;
}
.glyph.cutout-:after {
  color: #999;
  background: #999 -webkit-linear-gradient(transparent, transparent);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
.glyph.emboss- {
  /** Applies a shadow to make the glyph look raised off the page. */
  text-shadow: none;
}
.glyph.emboss-:before {
  visibility: visible;
  text-shadow: rgba(0, 0, 0, 0.4) 0 0.07em 0.07em;
}
.glyph.gloss- {
  /** Applies a gloss effect using a gradient fill on the glyph.
            The gradient fill only works on webkit browsers.

         @example Glyphs with gloss and emboss effects
         <ul>
         <li><i class="gloss- emboss- gear- glyph"></i> gloss- emboss- gear- glyph
         <li><i class="gloss- emboss- grid- glyph"></i> gloss- emboss- grid- glyph
         <li><i class="gloss- emboss- solid-disc- glyph"></i> gloss- emboss- solid-disc- glyph
         </ul>
         <!-- demo style -->
         <style>
         li { margin: .5em;}
         .glyph { color: #999; }
         </style>
         **/
}
.glyph.gloss-:after {
  color: transparent;
  background: transparent -webkit-linear-gradient(rgba(255, 255, 255, 0.5), transparent);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
@font-face {
  font-family: "hznglyphs";
  src: url("fonts/hznglyphs-5cd6f62979b222e9480ef63c5e30cb2b.eot");
  src: url("fonts/hznglyphs-5cd6f62979b222e9480ef63c5e30cb2b.eot?#iefix") format("embedded-opentype"), url("fonts/hznglyphs-5cd6f62979b222e9480ef63c5e30cb2b.woff") format("woff"), url("fonts/hznglyphs-5cd6f62979b222e9480ef63c5e30cb2b.ttf") format("truetype"), url("fonts/hznglyphs-5cd6f62979b222e9480ef63c5e30cb2b.svg?#hznglyphs") format("svg");
  font-weight: normal;
  font-style: normal;
}
.glyph.0default-:after,
.glyph.0default-:before {
  content: "\f100";
}
.glyph.app-center-:after,
.glyph.app-center-:before {
  content: "\f101";
}
.glyph.bang-:after,
.glyph.bang-:before,
.glyph.warning-:after,
.message.error- .message-icon:after,
.message.warning- .message-icon:after {
  content: "\f102";
}
.glyph.bullet-:after,
.glyph.bullet-:before {
  content: "\f103";
}
.glyph.bullseye-:after,
.glyph.bullseye-:before {
  content: "\f104";
}
.glyph.check-circle-:after,
.glyph.check-circle-:before {
  content: "\f105";
}
.glyph.check-:after,
.glyph.check-:before,
.message.success- .message-icon:after {
  content: "\f106";
}
.glyph.clock-:after,
.glyph.clock-:before {
  content: "\f107";
}
.glyph.columns-:after,
.glyph.columns-:before {
  content: "\f108";
}
.glyph.connector-:after,
.glyph.connector-:before {
  content: "\f109";
}
.glyph.coverflow-:after,
.glyph.coverflow-:before {
  content: "\f10a";
}
.glyph.directory-:after,
.glyph.directory-:before {
  content: "\f10b";
}
.glyph.down-caret-:after,
.glyph.down-caret-:before {
  content: "\f10c";
}
.glyph.empty-:after,
.glyph.empty-:before {
  content: "\f10d";
}
.glyph.gear-:after,
.glyph.gear-:before {
  content: "\f10e";
}
.glyph.grid-:after,
.glyph.grid-:before {
  content: "\f10f";
}
.glyph.hamburger-:after,
.glyph.hamburger-:before {
  content: "\f110";
}
.glyph.health-:after,
.glyph.health-:before {
  content: "\f111";
}
.glyph.i-:after,
.glyph.i-:before,
.glyph.info-:after,
.message.info- .message-icon:after {
  content: "\f112";
}
.glyph.identity-:after,
.glyph.identity-:before {
  content: "\f113";
}
.glyph.launch-:after,
.glyph.launch-:before {
  content: "\f114";
}
.glyph.left-:after,
.glyph.left-:before {
  content: "\f115";
}
.glyph.list-:after,
.glyph.list-:before {
  content: "\f116";
}
.glyph.move-to-beginning-:after,
.glyph.move-to-beginning-:before {
  content: "\f117";
}
.glyph.move-to-end-:after,
.glyph.move-to-end-:before {
  content: "\f118";
}
.glyph.move-:after,
.glyph.move-:before {
  content: "\f119";
}
.glyph.play-:after,
.glyph.play-:before {
  content: "\f11a";
}
.glyph.plus-:after,
.glyph.plus-:before {
  content: "\f11b";
}
.glyph.policy-:after,
.glyph.policy-:before {
  content: "\f11c";
}
.glyph.power-:after,
.glyph.power-:before {
  content: "\f11d";
}
.glyph.reload-:after,
.glyph.reload-:before {
  content: "\f11e";
}
.glyph.reverse-play-:after,
.glyph.reverse-play-:before {
  content: "\f11f";
}
.glyph.right-:after,
.glyph.right-:before {
  content: "\f120";
}
.glyph.search-:after,
.glyph.search-:before {
  content: "\f121";
}
.glyph.solid-disc-:after,
.glyph.solid-disc-:before,
.glyph.stacked-.on-solid-disc-:before,
.glyph.favorite-:before,
.glyph.info-:before,
.glyph.warning-:before {
  content: "\f122";
}
.glyph.solid-square-:after,
.glyph.solid-square-:before,
.glyph.stacked-.on-solid-square-:before {
  content: "\f123";
}
.glyph.star-:after,
.glyph.star-:before,
.glyph.favorite-:after {
  content: "\f124";
}
.glyph.sync-:after,
.glyph.sync-:before {
  content: "\f125";
}
.glyph.trash-:after,
.glyph.trash-:before {
  content: "\f126";
}
.glyph.user-group-:after,
.glyph.user-group-:before {
  content: "\f127";
}
.glyph.user-:after,
.glyph.user-:before {
  content: "\f128";
}
.glyph.x-:after,
.glyph.x-:before,
.button.close-:after {
  content: "\f129";
}
.glyph,
.button.close-,
.message .message-icon {
  /** ## Stacked Glyphs ##

        Multi-colored icons can be built up by stacking up glyphs. The solid disc
        and solid square glyphs are often used as backgrounds, with another glyph
        being displayed on top.
    **/
}
.glyph.stacked- {
  /** Stack two glyphs on top of each other.  The usual modifiers are used
            to specify the top (foreground) glyph.  Additional modifier classes
            prefixed with `on-` specify the bottom (background) glyph.  The foreground
            glyph is automatically scaled to "fit" within the background.

        @example Stacked glyphs
        <ul>
        <li><i class="play- stacked- on-solid-square- glyph"></i> play- stacked- on-solid-square- glyph
        <li><i class="x- stacked- on-solid-disc- glyph"></i> x- stacked- on-solid-disc- glyph
        <li><i class="solid-disc- stacked- on-solid-disc- glyph"></i>
            <i class="solid-square- stacked- on-solid-square- glyph"></i>
            <i class="solid-square- stacked- on-solid-disc- glyph"></i>
            <i class="solid-disc- stacked- on-solid-square- glyph"></i>
            solid-{disc,square}- stacked- on-solid-{disc,square}- glyph
        <li><i class="favorite- glyph"></i> favorite- glyph
        <li><i class="info- glyph"></i> info- glyph
        </ul>
        <!-- demo style -->
        <style>
        li { margin: .5em;}
        </style>
        **/
}
.glyph.stacked-:before,
.glyph.favorite-:before,
.glyph.info-:before,
.glyph.warning-:before {
  visibility: visible;
  color: inherit;
}
.glyph.stacked-:after,
.glyph.favorite-:after,
.glyph.info-:after,
.glyph.warning-:after {
  color: white;
  width: 100%;
  vertical-align: top;
}
.glyph.stacked-.on-solid-disc- {
  /** Show the icon with a solid disc behind it. */
}
.glyph.stacked-.on-solid-disc-:after {
  font-size: 0.66666em;
}
.glyph.stacked-.on-solid-square- {
  /** Show the icon with a solid square behind it. */
}
.glyph.stacked-.on-solid-square-:after {
  font-size: 0.8em;
}
.glyph.favorite- {
  /** A white star in a yellow circle.  It is defined
            using stacked glyph mixins. */
}
.glyph.favorite-:after {
  font-size: 0.85em;
}
.glyph.favorite-:after {
  color: white;
}
.glyph.favorite-:before {
  color: #fdb813;
}
.glyph.favorite-:after {
  -webkit-transform: translateY(-0.05em);
}
.glyph.info- {
  /** A white "i" in a grey circle.  It is defined
            using stacked glyph mixins. */
}
.glyph.info-:after {
  font-size: 0.66666em;
}
.glyph.info-:after {
  color: white;
}
.glyph.info-:before {
  color: #828082;
}
.glyph.warning- {
  /** A white "!" in a red circle.  It is defined
            using stacked glyph mixins. */
}
.glyph.warning-:after {
  font-size: 0.66666em;
}
.glyph.warning-:after {
  color: white;
}
.glyph.warning-:before {
  color: #df464b;
}
/** @pattern .symbol

A repeated graphical element, such as an icon.  Sourced in SVG,
symbols are injected into the DOM as `<symbol>`s and then
referenced with `<use>`.  Standard symbols may be written
directly into the HTML by the server; alternatively symbols may
be loaded dynamically by using the `symbol` directive.

@example [symbol.html] An example of a symbol

The symbol directive provides a nicer syntax and also takes
care of dynamically loading SVG files.

@example [symbol-directive.html] The symbol directive
**/
.symbol,
[symbol] {
  display: inline-block;
  height: 1em;
  width: 1em;
  vertical-align: top;
}
svg.symbol {
  fill: currentColor;
  stroke: currentColor;
}
/** @pattern .spinner

Shown when waiting for server to respond
with data before rendering.

@example[spinner-colors.html] Colored spinners
**/
.spinner {
  height: 50px;
  width: 50px;
  fill: currentColor;
}
.spinner.inline- {
  display: inline-block;
  vertical-align: middle;
}
.spinner.center- {
  margin-left: auto;
  margin-right: auto;
}
.spinner use {
  opacity: 0.3;
  -webkit-animation: spinner-animation 2s linear infinite;
  -moz-animation: spinner-animation 2s linear infinite;
  animation: spinner-animation 2s linear infinite;
}
.spinner use:nth-child(0) {
  -webkit-animation-delay: -0.16666667s;
  -moz-animation-delay: -0.16666667s;
  animation-delay: -0.16666667s;
}
.spinner use:nth-child(1) {
  -webkit-animation-delay: 0s;
  -moz-animation-delay: 0s;
  animation-delay: 0s;
}
.spinner use:nth-child(2) {
  -webkit-animation-delay: 0.16666667s;
  -moz-animation-delay: 0.16666667s;
  animation-delay: 0.16666667s;
}
.spinner use:nth-child(3) {
  -webkit-animation-delay: 0.33333333s;
  -moz-animation-delay: 0.33333333s;
  animation-delay: 0.33333333s;
}
.spinner use:nth-child(4) {
  -webkit-animation-delay: 0.5s;
  -moz-animation-delay: 0.5s;
  animation-delay: 0.5s;
}
.spinner use:nth-child(5) {
  -webkit-animation-delay: 0.66666667s;
  -moz-animation-delay: 0.66666667s;
  animation-delay: 0.66666667s;
}
.spinner use:nth-child(6) {
  -webkit-animation-delay: 0.83333333s;
  -moz-animation-delay: 0.83333333s;
  animation-delay: 0.83333333s;
}
.spinner use:nth-child(7) {
  -webkit-animation-delay: 1s;
  -moz-animation-delay: 1s;
  animation-delay: 1s;
}
.spinner use:nth-child(8) {
  -webkit-animation-delay: 1.16666667s;
  -moz-animation-delay: 1.16666667s;
  animation-delay: 1.16666667s;
}
.spinner use:nth-child(9) {
  -webkit-animation-delay: 1.33333333s;
  -moz-animation-delay: 1.33333333s;
  animation-delay: 1.33333333s;
}
.spinner use:nth-child(10) {
  -webkit-animation-delay: 1.5s;
  -moz-animation-delay: 1.5s;
  animation-delay: 1.5s;
}
.spinner use:nth-child(11) {
  -webkit-animation-delay: 1.66666667s;
  -moz-animation-delay: 1.66666667s;
  animation-delay: 1.66666667s;
}
.spinner use:nth-child(12) {
  -webkit-animation-delay: 1.83333333s;
  -moz-animation-delay: 1.83333333s;
  animation-delay: 1.83333333s;
}
.spinner.large {
  height: 100px;
  width: 100px;
}
@-moz-keyframes spinner-animation {
  0% {
    opacity: 0.3;
  }
  0.1% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
  100% {
    opacity: 0.3;
  }
}
@-webkit-keyframes spinner-animation {
  0% {
    opacity: 0.3;
  }
  0.1% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
  100% {
    opacity: 0.3;
  }
}
@keyframes spinner-animation {
  0% {
    opacity: 0.3;
  }
  0.1% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
  100% {
    opacity: 0.3;
  }
}
/*
 * Project Horizon
 * (c) 2013-2015 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
/** @pattern .rating

A visual indicator of a user rating (i.e., one to five stars).

 @example[rating.html]

 **/
.rating {
  white-space: nowrap;
  color: #9B9B9B;
}
.rating > .symbol {
  fill: none;
}
.rating > .symbol.filled- {
  fill: #FFC20E;
  stroke: none;
}
.rating > .symbol + .symbol {
  margin-left: .25em;
}
/** @pattern .bar

A bar is a horizontal, packed arrangement of items, such as buttons, tools, or input fields.

@example [basic] Basic Bar Layout
<ul class="bar">
  <li>First
  <li>Second
  <li>Third
</ul>

 **/
.bar,
.tabs.tertiary- {
  display: inline-table;
  max-width: 100%;
  white-space: nowrap;
}
.bar.full-width- {
  /** A bar which stretches to the full width of the parent container */
  width: 100%;
}
.bar > *,
.tabs.tertiary- > * {
  display: table-cell;
  vertical-align: middle;
}
/** @pattern .link

A hyperlink on a web page.  Provides the default styling for `<a href="">`
elements.
*/
.link,
a[href] {
  color: #4990C2;
  cursor: pointer;
}
.link:hover,
a[href]:hover,
.link:focus,
a[href]:focus,
.link:active,
a[href]:active {
  color: #4990C2;
  text-decoration: underline;
}
/*
 * Project Horizon
 * (c) 2013-2014 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
/*
 * Project Horizon
 * (c) 2013-2015 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
/** @pattern .grid

A layout system which strives to align the edges of elements
vertically by constraining their horizontal dimensions to
integer multiples of a fixed dimension (called a modulus).

By default, child elements of a grid are laid out as rows.  Columns are
created using the `box` class.  Boxes within a grid are laid out left-to-right (by default).
If there are more boxes than will fit in the width of
the grid (or other container), they drop below the
previous boxes. How exactly this lays out is determined
by the CSS `float` mechanics.

The overall width of the grid can be set by specifying the number of
columns with a modifier on the `grid` class; by default, it fills its parent container.
Boxes are floated within the grid; if a box will not fit on the same row
as the preceding box(es), it will drop below.

@example[basic-grid.html] Basic grid

### Nested Grids

A `box` may contain a `grid`, creating a nested grid.  By default, the grid will
be as wide as the `box`.

The `grid` element is optional in this case; you can put `grid-row`s directly
in a `box`.

@example[nested-grid.html] Nested Grids

**/
.grid-base,
.grid,
.masthead.desktop-,
.media {
  float: none;
  margin: -10px;
}
.grid-base:after,
.grid:after,
.masthead.desktop-:after,
.media:after {
  display: block;
  content: "";
  clear: both;
}
.grid-base > *,
.grid > *,
.masthead.desktop- > *,
.media > * {
  padding: 10px;
  float: left;
}
.grid-base > .grid-base,
.grid > .grid,
.masthead.desktop- > .masthead.desktop-,
.media > .media {
  float: none;
}
.grid.middle-aligned- {
  /**
        A grid in which boxes are aligned vertically at the middle of each box.
        **/
  -webkit-transform: translateY(50%);
  -moz-transform: translateY(50%);
  -ms-transform: translateY(50%);
  -o-transform: translateY(50%);
  transform: translateY(50%);
}
.grid.middle-aligned- > * {
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  transform: translateY(-50%);
}
.grid.base- {
  /**
        The top-level grid, not nested.  Only required if mixing grid layouts
        with other elements not in a grid, to keep the grid from encroaching
        on the previous/next elements. */
  margin-top: 0;
  margin-bottom: 0;
}
.grid.page- {
  /**
        A grid which is sized responsively to match the page size.*/
  margin-left: auto;
  margin-right: auto;
  padding: 0;
}
.grid > .grid-br {
  /**

        Break a row of the grid, forcing a new layout row.
        The element should be empty, so it's
        convenient to use the self-closing `<br>` tag.

        @example[grid-br.html] Using breaks to control layout

        **/
  clear: both;
  float: none;
  height: 0;
}
.grid > .grid-rule,
.grid > .grid-hr {
  /**

        A horizontal rule which spans the width of the grid.  Like `grid-br`, it
        forces a new row of boxes, and should be empty.  The rule is drawn from the
        inside edge of each gutter so that the endpoints align with any text in the boxes.

        @example[grid-rule.html] Adding a rule between rows of the grid.

        **/
  clear: both;
  margin: 0 10px;
  height: 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.5);
  border-top: 1px solid rgba(0, 0, 0, 0.2);
  padding-top: 0;
  padding-bottom: 0;
  float: none;
}
/*
 * Project Horizon
 * (c) 2013-2014 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
/*
 * Project Horizon
 * (c) 2013-2014 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
/** @pattern .list

A simple list.  Items are arranged vertically, with no decoration.

@example
<ul class="list">
  <li><%= s.1 %>
  <li><%= s.2 %>
  <li><%= s.3 %>
</ul>
*/
.list {
  margin-left: 2em;
}
.list .list-item,
.list > li,
.list .list-term,
.list.description- > dt,
.list .list-description,
.list.description- > dd {
  /** An item in a list */
  list-style: none;
  margin-top: 0.25em;
  text-indent: -2em;
}
.list .list-item:first-child,
.list > li:first-child,
.list .list-term:first-child,
.list.description- > dt:first-child,
.list .list-description:first-child,
.list.description- > dd:first-child {
  margin-top: 0;
}
.list.bullet- {
  /**
       A bulleted list.  Items are arranged vertically with colored bullets.
       @example
       <ul class="bullet- list">
           <li><%= s.1 %>
           <li><%= s.2 %>
           <li><%= s.3 %>
       </ul>
    */
}
.list.bullet- > * {
  text-indent: 0;
}
.list.bullet- > *::before {
  display: inline-block;
  font-family: 'Symbol', symbol;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  content: '•';
  margin-left: -2em;
  width: 2em;
  text-align: center;
}
.list.inline-,
.list.comma-,
.list.arrow- {
  /**
       An inline list.  Items are arranged left-to-right and flow as text.
       @example
       <ul class="inline- list">
         <li><%= w.1 %>
         <li><%= w.2 %>
         <li><%= w.3 %>
       </ul>
    */
  display: inline;
  margin-left: 0;
}
.list.inline- > *,
.list.comma- > *,
.list.arrow- > * {
  display: inline;
  padding: 0;
  text-indent: 0;
}
.list.comma- {
  /**
        An inline list of comma-separated items.
    */
}
.list.comma- > li + li::before {
  content: ', ';
}
.list.arrow- {
  /** An inline list, separated by arrows to indicate a sequence. */
}
.list.arrow- > li + li::before {
  content: ' ➜ ';
  color: #b7b7b7;
}
.list.description- {
  /** A list of terms and their definitions

        @example[description-list.html]*/
}
.list .list-term,
.list.description- > dt {
  /** A term defined in a description list */
  font-family: "Open Sans", Verdana, Tahoma, sans-serif;
  font-weight: 600;
}
.list .list-term + *,
.list.description- > dt + * {
  margin-top: 0;
}
.list .list-description,
.list.description- > dd {
  /** The definition for a term in a description list */
  text-indent: 0;
}
.list.compact-.description- {
  /** A more compact description list, with terms and descriptions on the same line. */
}
.list.compact-.description- > .list-term,
.list.compact-.description- > dt {
  display: inline;
  margin-left: -2em;
}
.list.compact-.description- > .list-term::after,
.list.compact-.description- > dt::after {
  display: inline;
  content: ': ';
}
.list.compact-.description- > .list-term.list-item::after,
.list.compact-.description- > dt.list-item::after {
  content: none;
}
.list.compact-.description- > .list-description,
.list.compact-.description- > dd {
  display: inline;
  margin-left: 0;
  text-indent: 0;
}
.list.compact-.description- > .list-description::after,
.list.compact-.description- > dd::after {
  content: '\0a';
  white-space: pre;
}
.list.compact-.description- > .list-description + ::before,
.list.compact-.description- > dd + ::before {
  display: inline-block;
  content: '';
  height: 1em;
  width: 0;
  margin-top: 0.25em;
}
.typography-headings,
.typography,
.dialog .dialog-header {
  /** @helper
        Define font styles for headings h1 .. h6 */
}
.typography-headings h1,
.typography-headings h2,
.typography-headings h3,
.typography-headings h4,
.typography-headings h5,
.typography-headings h6,
.typography h1,
.typography h2,
.typography h3,
.typography h4,
.typography h5,
.typography h6,
.dialog .dialog-header h1,
.dialog .dialog-header h2,
.dialog .dialog-header h3,
.dialog .dialog-header h4,
.dialog .dialog-header h5,
.dialog .dialog-header h6 {
  font-family: "Open Sans", Verdana, Tahoma, sans-serif;
  font-weight: 500;
  -webkit-font-smoothing: antialiased;
  line-height: 1.14285714;
  margin-top: 0.5em;
}
.typography-headings h1:first-child,
.typography-headings h2:first-child,
.typography-headings h3:first-child,
.typography-headings h4:first-child,
.typography-headings h5:first-child,
.typography-headings h6:first-child,
.typography h1:first-child,
.typography h2:first-child,
.typography h3:first-child,
.typography h4:first-child,
.typography h5:first-child,
.typography h6:first-child,
.dialog .dialog-header h1:first-child,
.dialog .dialog-header h2:first-child,
.dialog .dialog-header h3:first-child,
.dialog .dialog-header h4:first-child,
.dialog .dialog-header h5:first-child,
.dialog .dialog-header h6:first-child {
  margin-top: 0;
}
.typography-headings h1 small,
.typography-headings h2 small,
.typography-headings h3 small,
.typography-headings h4 small,
.typography-headings h5 small,
.typography-headings h6 small,
.typography h1 small,
.typography h2 small,
.typography h3 small,
.typography h4 small,
.typography h5 small,
.typography h6 small,
.dialog .dialog-header h1 small,
.dialog .dialog-header h2 small,
.dialog .dialog-header h3 small,
.dialog .dialog-header h4 small,
.dialog .dialog-header h5 small,
.dialog .dialog-header h6 small {
  font-weight: 300;
  -webkit-font-smoothing: antialiased;
}
.typography-headings h1 small.is-loading,
.typography-headings h2 small.is-loading,
.typography-headings h3 small.is-loading,
.typography-headings h4 small.is-loading,
.typography-headings h5 small.is-loading,
.typography-headings h6 small.is-loading,
.typography h1 small.is-loading,
.typography h2 small.is-loading,
.typography h3 small.is-loading,
.typography h4 small.is-loading,
.typography h5 small.is-loading,
.typography h6 small.is-loading,
.dialog .dialog-header h1 small.is-loading,
.dialog .dialog-header h2 small.is-loading,
.dialog .dialog-header h3 small.is-loading,
.dialog .dialog-header h4 small.is-loading,
.dialog .dialog-header h5 small.is-loading,
.dialog .dialog-header h6 small.is-loading {
  opacity: 0.5;
}
.typography-headings h1,
.typography h1,
.dialog .dialog-header h1 {
  font-weight: 600;
  font-size: 20px;
}
.typography-headings h2,
.typography h2,
.dialog .dialog-header h2 {
  font-size: 18px;
}
.typography-headings h3,
.typography h3,
.dialog .dialog-header h3 {
  font-size: 16px;
}
.typography-headings h4,
.typography h4,
.dialog .dialog-header h4 {
  font-size: 14px;
}
.typography-headings h5,
.typography h5,
.dialog .dialog-header h5 {
  font-size: 13px;
}
.typography-headings h6,
.typography h6,
.dialog .dialog-header h6 {
  font-size: 11px;
}
.typography-font,
.typography,
.page,
.modal {
  /** @helper
        Define default typography font styles */
  font-family: "Open Sans", Verdana, Tahoma, sans-serif;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  font-size: 14px;
  font-style: normal;
  line-height: 1.30612245;
  color: #444d56;
  text-rendering: optimizeLegibility;
}
.typography {
  /** Applies standard typographical formatting conventions
    to semantic HTML tags inside.  These styles are not applied
    globally because they interfere with layout constraints in
    typical web applications.

@example An article with typography applied.
    <article class="typography">
      <header>
        <h1><%= h.0 %></h1>
        <p><%= p.0 %>
      </header>
      <section>
        <h2><%= h.1 %></h2>
        <p><%= p.1 %>
      </section>
      <section>
        <h3><%= h.2 %></h3>
        <p><%= p.2 %>
      </section>
      <section>
        <h4><%= h.3 %></h4>
        <p><%= p.3 %>
      </section>
    </article>
    */
}
.typography header,
.typography h1,
.typography h2,
.typography h3,
.typography h4,
.typography h5,
.typography h6 {
  line-height: 1.25;
}
.typography h1 + h2,
.typography h2 + h3,
.typography h3 + h4,
.typography h4 + h5,
.typography h5 + h6 {
  margin-top: 0;
}
.typography h4 + h1,
.typography h5 + h1,
.typography h6 + h1,
.typography h4 + h2,
.typography h5 + h2,
.typography h6 + h2,
.typography h4 + h3,
.typography h5 + h3,
.typography h6 + h3 {
  margin-top: -0.25em;
}
.typography > * + section {
  margin-top: 1.5em;
}
.typography p,
.typography ul,
.typography ol,
.typography dl,
.typography table,
.typography pre {
  margin-top: 0.5em;
}
.typography p:first-child,
.typography ul:first-child,
.typography ol:first-child,
.typography dl:first-child,
.typography table:first-child,
.typography pre:first-child {
  margin-top: 0;
}
.typography h4 + p,
.typography h5 + p,
.typography h6 + p {
  margin-top: 0;
}
.typography header > :first-child,
.typography footer > :first-child,
.typography section > :first-child,
.typography acticle > :first-child {
  margin-top: 0;
}
.typography table td,
.typography table th {
  white-space: nowrap;
  padding: 10px 1em;
}
.typography pre {
  font-family: 'Lucida Console', Monaco, monospace;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  font-size: 13px;
}
.typography code {
  font-family: 'Lucida Console', Monaco, monospace;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  font-size: 13px;
  padding: 0 0.25em;
}
.typography em {
  font-style: oblique;
}
.typography hr {
  border-top: 1px solid #ddd;
}
/** @pattern .page

The main content area of the screen, which changes as the user navigates.
Presented as a centered, fixed-width rectangle, styled as a piece of paper
floating over the background.

A page should occur within a `pane`, which will handle scrolling if the
page size exceeds the area in which it is viewed.

Relative to the grid system, a page is like a box in that it may contain
one or more grids.  The defaut width of a page is 22 columns.  f the browser
width is too small, the page width will "snap" down to 16 columns. With the
`widescreen-` modifier, an additional 28-column page width is enabled.

By default, half a grid of padding is added to each side of the page, so
a grid inside a page will be only 21 columns (15 columns on narrower screens).
This padding can be removed by adding the `fullbleed-` modifier, allowing a
full 22-column grid to be embedded in the page.
*/
.page {
  padding: 20px 30px 30px;
  margin: 0 auto;
  background: #fff;
  min-height: 100%;
  box-shadow: 0 0 1px rgba(0, 0, 0, 0.5);
}
.page.full-height- {
  /** A page which is as tall as will fit within its parent container. */
  height: 100%;
}
.page.full-bleed- {
  /** A page without a visible edge, border, or padding.
        Because of the reduced padding, a 22-column (or 16-column) grid will fit inside. */
  padding: 10px;
  background: transparent;
  box-shadow: none;
}
.page.widescreen- {
  /** A page which changes width to account for wider screens.

            With the `widescreen-` modifier, the page may be as wide as
            28 columns, leaving 27 columns for a grid inside.  The full 28
            columns are available with a `full-bleed- widescreen- page`.

            By adding this modifier to a page, you are asserting that the content
            is able to be layed out effectively on wide pages.  If the page does
            not lay out well on a wide screen, do not use the `widescreen-` modifier.
        */
}
@media screen and (min-width: 1700px) /*at least W*/ {
  .page.widescreen- {
    width: 1680px;
  }
}
.page,
.page-.grid {
  width: 1320px;
}
@media screen and (max-width: 1339px) /*at most M*/ {
  .page,
  .page-.grid {
    width: 960px;
  }
}
@media screen and (max-width: 979px) /*at most S*/ {
  .page,
  .page-.grid {
    width: 720px;
  }
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .page,
  .page-.grid {
    width: 540px;
  }
}
@media screen and (max-width: 539px) /*at most MP*/ {
  .page,
  .page-.grid {
    width: 360px;
  }
}
@media screen and (max-width: 359px) /*at most SP*/ {
  .page,
  .page-.grid {
    width: 300px;
    padding-left: 10px;
    padding-right: 10px;
  }
}
/** @pattern .button

A button consists of text and/or an image that clearly communicates
what action will occur when the user touches it.
A button can have an image, text, or both.

@example[basic-buttons.html] Basic buttons

**/
.button,
button,
input[type="button"],
input[type="submit"],
.tabs.tertiary- > li {
  display: inline-block;
  position: relative;
  padding-left: 1.5em;
  padding-right: 1.5em;
  min-width: 5em;
  font-family: "Open Sans", Verdana, Tahoma, sans-serif;
  font-weight: 500;
  text-decoration: none;
  color: #979797;
  -webkit-font-smoothing: antialiased;
  border: 1px solid #bbb;
  border-radius: 4px;
  outline: none;
  box-shadow: 0 1px 1px transparent, inset 0 1px transparent;
  background-color: #f3f3f3;
  background-image: -webkit-linear-gradient(top, transparent, transparent);
  background-image: -moz-linear-gradient(top, transparent, transparent);
  background-image: -ms-linear-gradient(top, transparent, transparent);
  background-image: linear-gradient(to bottom, transparent, transparent);
  vertical-align: baseline;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  line-height: 14px;
  min-height: 28px;
  padding-top: 6px;
  padding-bottom: 6px;
  font-size: 14px;
}
.button:before {
  background-image: -webkit-linear-gradient(top left, transparent, transparent);
  background-image: -moz-linear-gradient(top left, transparent, transparent);
  background-image: -ms-linear-gradient(top left, transparent, transparent);
  background-image: linear-gradient(top left, transparent, transparent);
}
.button.iconic-,
.bar.tool- > .button,
.bar.tool- > button {
  padding: 6px;
}
.button .glyph,
button .glyph,
input[type="button"] .glyph,
input[type="submit"] .glyph,
.tabs.tertiary- > li .glyph {
  font-size: 14px;
}
.button .button-text,
button .button-text,
input[type="button"] .button-text,
input[type="submit"] .button-text,
.tabs.tertiary- > li .button-text {
  max-height: 42px;
}
.button.next-:before,
.button.previous-:before {
  width: 19.79898987px;
  height: 19.79898987px;
}
.button.next- {
  margin-right: 14px;
}
.button.previous- {
  margin-left: 14px;
}
p > .button {
  margin-top: 3px;
  margin-bottom: 3px;
}
.button .button-text,
button .button-text,
input[type="button"] .button-text,
input[type="submit"] .button-text,
.tabs.tertiary- > li .button-text {
  /** The text of the button.  Optional, unless the button also contains an
            icon, in which case the text itself must be marked up as `button-text`.

            Applying `button-text` also causes the text to be clipped with ellipses
            if the text is too long to fit.
            **/
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
}
.button .glyph.down-caret-,
button .glyph.down-caret-,
input[type="button"] .glyph.down-caret-,
input[type="submit"] .glyph.down-caret-,
.tabs.tertiary- > li .glyph.down-caret- {
  font-size: 100%;
  vertical-align: middle;
}
.button > *,
button > *,
input[type="button"] > *,
input[type="submit"] > *,
.tabs.tertiary- > li > * {
  vertical-align: bottom;
}
.button .button-badge {
  /**
        A round badge overlaid on the button.

        @example[button-badge.html] Button badge
        **/
  display: block;
  position: absolute;
  top: -0.8em;
  right: -0.8em;
  height: 1.6em;
  width: 1.6em;
  line-height: 1.6em;
  box-sizing: content-box;
  border: 1px solid #979797;
  background: #d8d8d8;
  color: #979797;
  border-radius: 50%;
}
.button.is-hovered,
.button:hover,
.button:focus,
.button.hollow-:hover,
.button.hollow-:focus .button.hollow-.is-hovered,
.button.hollow-.is-selected,
button:hover,
button:focus,
button.is-hovered,
button.is-selected,
input[type="button"]:hover,
input[type="submit"]:hover,
input[type="button"]:focus,
input[type="submit"]:focus,
input[type="button"].is-hovered,
input[type="submit"].is-hovered,
input[type="button"].is-selected,
input[type="submit"].is-selected,
.tabs.tertiary- > li:hover,
.tabs.tertiary- > li:focus,
.tabs.tertiary- > li.is-hovered,
.tabs.tertiary- > li.is-selected {
  /** Adding `is-hovered` to a button will emulate the `:hover` state **/
  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.15), inset 0 1px transparent;
  border-color: #999;
  background-color: #e9e9e9;
  color: #979797;
  background-image: -webkit-linear-gradient(top, transparent, transparent);
  background-image: -moz-linear-gradient(top, transparent, transparent);
  background-image: -ms-linear-gradient(top, transparent, transparent);
  background-image: linear-gradient(to bottom, transparent, transparent);
}
.button.is-hovered,
.button:hover,
.button:focus,
a[href].button.is-hovered,
a[href].button:hover,
a[href].button:focus,
.button.hollow-:hover,
.button.hollow-:focus .button.hollow-.is-hovered,
.button.hollow-.is-selected,
button:hover,
button:focus,
button.is-hovered,
button.is-selected,
input[type="button"]:hover,
input[type="submit"]:hover,
input[type="button"]:focus,
input[type="submit"]:focus,
input[type="button"].is-hovered,
input[type="submit"].is-hovered,
input[type="button"].is-selected,
input[type="submit"].is-selected,
.tabs.tertiary- > li:hover,
.tabs.tertiary- > li:focus,
.tabs.tertiary- > li.is-hovered,
.tabs.tertiary- > li.is-selected {
  text-decoration: none;
}
.button.is-hovered:before,
.button:hover:before,
.button:focus:before {
  background-image: -webkit-linear-gradient(top left, transparent, transparent);
  background-image: -moz-linear-gradient(top left, transparent, transparent);
  background-image: -ms-linear-gradient(top left, transparent, transparent);
  background-image: linear-gradient(top left, transparent, transparent);
}
.button.is-active,
.button:active,
.button.hollow-:active,
.button.hollow-.is-active,
button:active,
button.is-active,
input[type="button"]:active,
input[type="submit"]:active,
input[type="button"].is-active,
input[type="submit"].is-active,
.tabs.tertiary- > li:active,
.tabs.tertiary- > li.is-active {
  /** Adding `is-active` to a button will emulate the `:active` state **/
  color: #fff;
  border-color: transparent;
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.4);
  background-color: #6e6e6e;
  background-image: none;
}
.button.is-active:before,
.button:active:before {
  background-image: none;
}
.button.is-selected {
  /** A button which `is-selected` will be highlighted to distinguish it
            from other buttons in a button bar **/
  background-color: #e9e9e9;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}
.button.is-disabled,
.button:disabled,
button:disabled,
button.is-disabled,
input[type="button"]:disabled,
input[type="submit"]:disabled,
input[type="button"].is-disabled,
input[type="submit"].is-disabled,
.tabs.tertiary- > li:disabled,
.tabs.tertiary- > li.is-disabled {
  /** Adding `is-disabled` to a button will emulate the `:disabled` state **/
  cursor: default;
  color: rgba(151, 151, 151, 0.7);
  border-color: rgba(187, 187, 187, 0.4);
  box-shadow: none;
  background-color: #dddddd;
  background-color: rgba(207, 207, 207, 0.7);
  background-image: none;
}
.button.is-disabled:before,
.button:disabled:before {
  background-image: none;
}
.button.is-loading {
  /**
        Adding `is-loading` to a button will present a busy state
        @example[loading-buttons.html] Loading buttons
        **/
  -webkit-animation: button-is-loading-animation 5s ease infinite;
  -moz-animation: button-is-loading-animation 5s ease infinite;
  animation: button-is-loading-animation 5s ease infinite;
}
.button.is-loading.primary-,
.button.is-loading.safe-,
.button.is-loading.danger- {
  -webkit-animation: button-is-loading-animation-white 5s ease infinite;
  -moz-animation: button-is-loading-animation-white 5s ease infinite;
  animation: button-is-loading-animation-white 5s ease infinite;
}
.button.left- {
  float: left;
}
.button.right- {
  float: right;
}
.button.primary- {
  /**
            A primary button is the button a user is most
            likely wanting to click.  It is designed to be
            easy to find, standing out from other buttons
            and interactive elements on the page.
            **/
  color: #FFFFFF;
  background-color: #6db33f;
  border-color: #6db33f;
}
.button.primary-:hover,
.button.primary-:focus,
.button.primary-.is-hovered,
.button.primary-.is-selected,
.button.hollow-.primary-:hover,
.button.hollow-.primary-.is-hovered,
.button.hollow-.primary-.is-selected {
  background-color: #5e9a36;
  color: #FFFFFF;
}
.button.primary-:active,
.button.primary-.is-active,
.button.hollow-.primary-:active,
.button.hollow-.primary-.is-active {
  background-color: #5e9a36;
  color: #FFFFFF;
}
.button.primary-:disabled,
.button.primary-.is-disabled {
  color: rgba(255, 255, 255, 0.7);
  background-color: #73bbe7;
  background-color: rgba(55, 158, 221, 0.7);
  border-color: rgba(109, 179, 63, 0.2);
}
.button.danger- {
  /**
           A danger button is used for a potentially
           dangerous action, such as deleting data.
           **/
  color: #fff;
  background-color: #c90000;
  border-color: #990000;
}
.button.danger-:hover,
.button.danger-:focus,
.button.danger-.is-hovered,
.button.danger-.is-selected,
.button.hollow-.danger-:hover,
.button.hollow-.danger-.is-hovered,
.button.hollow-.danger-.is-selected {
  background-color: #e70000;
  color: #fff;
}
.button.danger-:active,
.button.danger-.is-active,
.button.hollow-.danger-:active,
.button.hollow-.danger-.is-active,
.button.hollow-.danger-.is-loading {
  background-color: #a00000;
  color: #fff;
}
.button.danger-:disabled,
.button.danger-.is-disabled {
  color: rgba(255, 255, 255, 0.7);
  background-color: #bd4d4d;
  background-color: rgba(160, 0, 0, 0.7);
  border-color: rgba(153, 0, 0, 0.2);
}
.button.safe- {
  /**
           A safe button is often used along with
           a danger button and indicates to the user
           a generally safe action.
           **/
  color: #fff;
  background-color: #6db33f;
  border-color: #387c2c;
}
.button.safe-:hover,
.button.safe-:focus,
.button.safe-.is-hovered,
.button.safe-.is-selected,
.button.hollow-.safe-:hover,
.button.hollow-.safe-.is-hovered,
.button.hollow-.safe-.is-selected {
  background-color: #8bc850;
  color: #fff;
}
.button.safe-:active,
.button.safe-.is-active,
.button.hollow-.safe-:active,
.button.hollow-.safe-.is-active {
  background-color: #6DB33F;
  color: #fff;
}
.button.safe-:disabled,
.button.safe-.is-disabled {
  color: rgba(255, 255, 255, 0.7);
  background-color: #76a86d;
  background-color: rgba(59, 131, 47, 0.7);
  border-color: rgba(56, 124, 44, 0.2);
}
.button.text-,
.button.link-,
.button.close- {
  /** A button that looks like the text around it. */
  display: inline;
  background: transparent;
  box-shadow: none;
  border-color: transparent;
  min-width: 0;
}
.button.link- {
  /** A button that looks like a link.
        @example[link-buttons.html] Link Buttons
        */
  display: inline-block;
  color: #4990C2;
  font-size: inherit;
}
.button.link-:hover,
.button.link-:focus,
.button.link-.is-hovered,
.button.link-.is-selected {
  color: #4990C2;
  background-color: transparent;
  border-color: currentColor;
}
.button.link-:active,
.button.link-.is-active {
  background-color: rgba(0, 0, 0, 0.2);
}
.button.link-:disabled,
.button.link-.is-disabled {
  border-color: transparent;
  background-color: transparent;
  opacity: 0.5;
}
.button.hollow- {
  /** A button with no background, and same-colored border and text. */
  background: transparent;
  box-shadow: none;
  color: #979797;
  border-color: currentColor;
}
.button.hollow-.safe- {
  color: #6DB33F;
}
.button.hollow-.danger- {
  color: #c90000;
}
.button.hollow-.primary- {
  color: #5e9a36;
}
.button.hollow-:disabled,
.button.hollow-.is-disabled {
  background-color: transparent;
  opacity: 0.5;
}
.button.text-.safe-,
.button.link-.safe-,
.button.text-.safe-:hover,
.button.link-.safe-:hover,
.button.text-.safe-:focus,
.button.link-.safe-:focus,
.button.text-.safe-.is-hovered,
.button.link-.safe-.is-hovered,
.button.text-.safe-.is-selected,
.button.link-.safe-.is-selected {
  color: #6DB33F;
}
.button.text-.danger-,
.button.link-.danger-,
.button.text-.danger-:hover,
.button.link-.danger-:hover,
.button.text-.danger-:focus,
.button.link-.danger-:focus,
.button.text-.danger-.is-hovered,
.button.link-.danger-.is-hovered,
.button.text-.danger-.is-selected,
.button.link-.danger-.is-selected {
  color: #c90000;
}
.button.text-.primary-,
.button.link-.primary-,
.button.text-.primary-:hover,
.button.link-.primary-:hover,
.button.text-.primary-:focus,
.button.link-.primary-:focus,
.button.text-.primary-.is-hovered,
.button.link-.primary-.is-hovered,
.button.text-.primary-.is-selected,
.button.link-.primary-.is-selected {
  color: #5e9a36;
}
.button.close- {
  padding: 0;
  min-height: 1em;
  position: absolute;
  top: 10px;
  right: 10px;
}
.button.x-small-,
.bar.button-.x-small- > .button,
.bar.tool-.x-small- > .button,
.bar.button-.x-small- > button,
.bar.tool-.x-small- > button {
  /** A very small button **/
  line-height: 11px;
  min-height: 22px;
  padding-top: 4.5px;
  padding-bottom: 4.5px;
  font-size: 11px;
}
.button.x-small-.iconic-,
.bar.button-.x-small- > .button.iconic-,
.bar.tool-.x-small- > .button.iconic-,
.bar.button-.x-small- > button.iconic-,
.bar.tool-.x-small- > button.iconic- {
  padding: 4.5px;
}
.button.x-small- .glyph,
.bar.button-.x-small- > .button .glyph,
.bar.tool-.x-small- > .button .glyph,
.bar.button-.x-small- > button .glyph,
.bar.tool-.x-small- > button .glyph {
  font-size: 11px;
}
.button.x-small- .button-text,
.bar.button-.x-small- > .button .button-text,
.bar.tool-.x-small- > .button .button-text,
.bar.button-.x-small- > button .button-text,
.bar.tool-.x-small- > button .button-text {
  max-height: 33px;
}
.button.x-small-.next-:before,
.button.x-small-.previous-:before,
.bar.button-.x-small- > .button.next-:before,
.bar.button-.x-small- > .button.previous-:before,
.bar.tool-.x-small- > .button.next-:before,
.bar.tool-.x-small- > .button.previous-:before,
.bar.button-.x-small- > button.next-:before,
.bar.button-.x-small- > button.previous-:before,
.bar.tool-.x-small- > button.next-:before,
.bar.tool-.x-small- > button.previous-:before {
  width: 15.55634919px;
  height: 15.55634919px;
}
.button.x-small-.next-,
.bar.button-.x-small- > .button.next-,
.bar.tool-.x-small- > .button.next-,
.bar.button-.x-small- > button.next-,
.bar.tool-.x-small- > button.next- {
  margin-right: 11px;
}
.button.x-small-.previous-,
.bar.button-.x-small- > .button.previous-,
.bar.tool-.x-small- > .button.previous-,
.bar.button-.x-small- > button.previous-,
.bar.tool-.x-small- > button.previous- {
  margin-left: 11px;
}
.button.small-,
.bar.button-.small- > .button,
.bar.tool-.small- > .button,
.bar.button-.small- > button,
.bar.tool-.small- > button {
  /** A small button **/
  line-height: 13px;
  min-height: 26px;
  padding-top: 5.5px;
  padding-bottom: 5.5px;
  font-size: 13px;
}
.button.small-.iconic-,
.bar.button-.small- > .button.iconic-,
.bar.tool-.small- > .button.iconic-,
.bar.button-.small- > button.iconic-,
.bar.tool-.small- > button.iconic- {
  padding: 5.5px;
}
.button.small- .glyph,
.bar.button-.small- > .button .glyph,
.bar.tool-.small- > .button .glyph,
.bar.button-.small- > button .glyph,
.bar.tool-.small- > button .glyph {
  font-size: 13px;
}
.button.small- .button-text,
.bar.button-.small- > .button .button-text,
.bar.tool-.small- > .button .button-text,
.bar.button-.small- > button .button-text,
.bar.tool-.small- > button .button-text {
  max-height: 39px;
}
.button.small-.next-:before,
.button.small-.previous-:before,
.bar.button-.small- > .button.next-:before,
.bar.button-.small- > .button.previous-:before,
.bar.tool-.small- > .button.next-:before,
.bar.tool-.small- > .button.previous-:before,
.bar.button-.small- > button.next-:before,
.bar.button-.small- > button.previous-:before,
.bar.tool-.small- > button.next-:before,
.bar.tool-.small- > button.previous-:before {
  width: 18.38477631px;
  height: 18.38477631px;
}
.button.small-.next-,
.bar.button-.small- > .button.next-,
.bar.tool-.small- > .button.next-,
.bar.button-.small- > button.next-,
.bar.tool-.small- > button.next- {
  margin-right: 13px;
}
.button.small-.previous-,
.bar.button-.small- > .button.previous-,
.bar.tool-.small- > .button.previous-,
.bar.button-.small- > button.previous-,
.bar.tool-.small- > button.previous- {
  margin-left: 13px;
}
.button.medium-,
.bar.button-.medium- > .button,
.bar.tool-.medium- > .button,
.bar.button-.medium- > button,
.bar.tool-.medium- > button {
  /** The default size **/
  line-height: 14px;
  min-height: 28px;
  padding-top: 6px;
  padding-bottom: 6px;
  font-size: 14px;
}
.button.medium-.iconic-,
.bar.button-.medium- > .button.iconic-,
.bar.tool-.medium- > .button.iconic-,
.bar.button-.medium- > button.iconic-,
.bar.tool-.medium- > button.iconic- {
  padding: 6px;
}
.button.medium- .glyph,
.bar.button-.medium- > .button .glyph,
.bar.tool-.medium- > .button .glyph,
.bar.button-.medium- > button .glyph,
.bar.tool-.medium- > button .glyph {
  font-size: 14px;
}
.button.medium- .button-text,
.bar.button-.medium- > .button .button-text,
.bar.tool-.medium- > .button .button-text,
.bar.button-.medium- > button .button-text,
.bar.tool-.medium- > button .button-text {
  max-height: 42px;
}
.button.medium-.next-:before,
.button.medium-.previous-:before,
.bar.button-.medium- > .button.next-:before,
.bar.button-.medium- > .button.previous-:before,
.bar.tool-.medium- > .button.next-:before,
.bar.tool-.medium- > .button.previous-:before,
.bar.button-.medium- > button.next-:before,
.bar.button-.medium- > button.previous-:before,
.bar.tool-.medium- > button.next-:before,
.bar.tool-.medium- > button.previous-:before {
  width: 19.79898987px;
  height: 19.79898987px;
}
.button.medium-.next-,
.bar.button-.medium- > .button.next-,
.bar.tool-.medium- > .button.next-,
.bar.button-.medium- > button.next-,
.bar.tool-.medium- > button.next- {
  margin-right: 14px;
}
.button.medium-.previous-,
.bar.button-.medium- > .button.previous-,
.bar.tool-.medium- > .button.previous-,
.bar.button-.medium- > button.previous-,
.bar.tool-.medium- > button.previous- {
  margin-left: 14px;
}
.button.large-,
.bar.button-.large- > .button,
.bar.tool-.large- > .button,
.bar.button-.large- > button,
.bar.tool-.large- > button {
  /** A larger button **/
  line-height: 16px;
  min-height: 32px;
  padding-top: 7px;
  padding-bottom: 7px;
  font-size: 16px;
}
.button.large-.iconic-,
.bar.button-.large- > .button.iconic-,
.bar.tool-.large- > .button.iconic-,
.bar.button-.large- > button.iconic-,
.bar.tool-.large- > button.iconic- {
  padding: 7px;
}
.button.large- .glyph,
.bar.button-.large- > .button .glyph,
.bar.tool-.large- > .button .glyph,
.bar.button-.large- > button .glyph,
.bar.tool-.large- > button .glyph {
  font-size: 16px;
}
.button.large- .button-text,
.bar.button-.large- > .button .button-text,
.bar.tool-.large- > .button .button-text,
.bar.button-.large- > button .button-text,
.bar.tool-.large- > button .button-text {
  max-height: 48px;
}
.button.large-.next-:before,
.button.large-.previous-:before,
.bar.button-.large- > .button.next-:before,
.bar.button-.large- > .button.previous-:before,
.bar.tool-.large- > .button.next-:before,
.bar.tool-.large- > .button.previous-:before,
.bar.button-.large- > button.next-:before,
.bar.button-.large- > button.previous-:before,
.bar.tool-.large- > button.next-:before,
.bar.tool-.large- > button.previous-:before {
  width: 22.627417px;
  height: 22.627417px;
}
.button.large-.next-,
.bar.button-.large- > .button.next-,
.bar.tool-.large- > .button.next-,
.bar.button-.large- > button.next-,
.bar.tool-.large- > button.next- {
  margin-right: 16px;
}
.button.large-.previous-,
.bar.button-.large- > .button.previous-,
.bar.tool-.large- > .button.previous-,
.bar.button-.large- > button.previous-,
.bar.tool-.large- > button.previous- {
  margin-left: 16px;
}
.button.x-large- {
  /** A much larger button **/
  line-height: 18px;
  min-height: 36px;
  padding-top: 8px;
  padding-bottom: 8px;
  font-size: 18px;
  /**
            @example[button-sizes.html] Different sizes of buttons
        **/
}
.button.x-large-.iconic- {
  padding: 8px;
}
.button.x-large- .glyph {
  font-size: 18px;
}
.button.x-large- .button-text {
  max-height: 54px;
}
.button.x-large-.next-:before,
.button.x-large-.previous-:before {
  width: 25.45584412px;
  height: 25.45584412px;
}
.button.x-large-.next- {
  margin-right: 18px;
}
.button.x-large-.previous- {
  margin-left: 18px;
}
.button.iconic-,
.bar.tool- > .button,
.bar.tool- > button {
  /**
           A button which contains an icon (or glyph), and possibly some text.
           The padding is adjusted so that the left and right padding
           are equal to the top and bottom padding, so that buttons which
           contain only a single icon end up being square.

           @example[iconic-buttons.html] Buttons with icons

           Note that when combining icons and text you must wrap the
           button text in a `<span class="button-text">`.  Also make sure to have no
           whitespace between the `<i>` and the `<span>`.  Both of these are necessary
           to obtain the proper (and consistent) spacing between the icon and the
           text.  The `button-text` span also indicates the text to remove if the
           button is collapsible.
        **/
  min-width: 1em;
}
.button.iconic- .glyph + .button-text,
.bar.tool- > .button .glyph + .button-text,
.bar.tool- > button .glyph + .button-text {
  margin-left: .5em;
}
.button.iconic- .button-text + .glyph,
.bar.tool- > .button .button-text + .glyph,
.bar.tool- > button .button-text + .glyph {
  margin-left: .3em;
}
.button.iconic-.collapsible-,
.bar.tool- > .button.collapsible-,
.bar.tool- > button.collapsible- {
  /**
               A collapsible iconic button will show only the icon on smaller
               devices where space may be at a premium.  If the button is collapsible,
               be sure the icon is identifiable enough to stand on its own.
               **/
}
@media screen and (max-width: 1339px) /*at most M*/ {
  .button.iconic-.collapsible- .button-text,
  .bar.tool- > .button.collapsible- .button-text,
  .bar.tool- > button.collapsible- .button-text {
    display: none;
  }
  .button.iconic-.collapsible- .button-text + .glyph,
  .bar.tool- > .button.collapsible- .button-text + .glyph,
  .bar.tool- > button.collapsible- .button-text + .glyph {
    margin-left: 0;
  }
}
.button.text-.iconic- .glyph + .button-text,
.button.link-.iconic- .glyph + .button-text {
  margin-left: .25em;
}
.button.text-.iconic- .button-text + .glyph,
.button.link-.iconic- .button-text + .glyph {
  margin-left: .15em;
}
.button.next-,
.button.previous- {
  position: relative;
  overflow: visible;
  min-width: 8em;
}
.button.next-:before,
.button.previous-:before {
  content: ' ';
  position: absolute;
  top: -1px;
  -webkit-transform-origin: 0 0;
  -moz-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  -o-transform-origin: 0 0;
  transform-origin: 0 0;
  -webkit-transform: rotate(45deg);
  -moz-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  -o-transform: rotate(45deg);
  transform: rotate(45deg);
  border: inherit;
  background-color: inherit;
  border-radius: inherit;
}
.button.next-:disabled,
.button.previous-:disabled,
.button.next-.is-disabled,
.button.previous-.is-disabled {
  background-color: #dddddd;
}
.button.next-:disabled.primary-,
.button.previous-:disabled.primary-,
.button.next-.is-disabled.primary-,
.button.previous-.is-disabled.primary- {
  background-color: #73bbe7;
}
.button.next-:disabled.danger-,
.button.previous-:disabled.danger-,
.button.next-.is-disabled.danger-,
.button.previous-.is-disabled.danger- {
  background-color: #bd4d4d;
}
.button.next-:disabled.safe-,
.button.previous-:disabled.safe-,
.button.next-.is-disabled.safe-,
.button.previous-.is-disabled.safe- {
  background-color: #76a86d;
}
.button.next- {
  /**
           A next button is styled directionally so as to indicate
           progress in the forward direction.
         **/
  border-right-width: 0;
  padding-left: 3em;
  padding-right: 2.5em;
}
.button.next-:before {
  left: 100%;
  border-width: 1px 1px 0 0;
  box-shadow: inset 0 1px transparent;
}
.button.next-:active:before,
.button.next-.is-active:before {
  box-shadow: inset -2px 2px 4px rgba(0, 0, 0, 0.2);
}
.button.previous- {
  /**
           A previous button is styled directionally the opposite of the
           next button.
         **/
  border-left-width: 0;
  padding-left: 2.5em;
  padding-right: 3em;
  /**
           @example[directional-buttons.html] Next and Previous Buttons
         **/
}
.button.previous-:before {
  left: 0;
  border-width: 0 0 1px 1px;
  box-shadow: inset 1px 0 transparent;
}
.button.previous-:active:before,
.button.previous-.is-active:before {
  box-shadow: inset 2px -2px 4px rgba(0, 0, 0, 0.2);
}
.button.inline- {
  /**
        A reduced-height button intended to be used inline in text and forms.
        Its height is the same as a text input field.

        All buttons are intended to align properly when set in a paragraph
        of text; the text of the button will align with the adjacent text.
        However, adding inline buttons to text or a form will cause lines
        with buttons to have increased line height.  An inline button reduces
        this effect. (It may or may not eliminate it completely depending on
        the prevailing `line-height`).

        @example[inline-buttons.html] Inline buttons
        **/
  line-height: 14px;
  min-height: 28px;
  padding-top: 6px;
  padding-bottom: 6px;
  font-size: 14px;
  height: 28px;
}
.button.inline-.iconic- {
  padding: 6px;
}
.button.inline- .glyph {
  font-size: 14px;
}
.button.inline- .button-text {
  max-height: 42px;
}
.button.inline-.next-:before,
.button.inline-.previous-:before {
  width: 19.79898987px;
  height: 19.79898987px;
}
.button.inline-.next- {
  margin-right: 14px;
}
.button.inline-.previous- {
  margin-left: 14px;
}
.button.multiline- {
  /**
           A multiline button allows for additional content
           by wrapping the text to additional line(s), if
           required.  Often used with `width` or `max-width`
           to constrain the overall width of the button.

           @example[multiline-buttons.html] Buttons with long text


           Note that the button height is limited to 3 lines, so that the button
           does not begin to look like a notification.  Additional content will
           be hidden.
        **/
  white-space: normal;
}
.button.multiline- .button-text {
  display: block;
}
.button.full-width-,
.button.block- {
  display: block;
  width: 100%;
}
.button.block- {
  border-radius: 0;
  border-color: transparent;
  color: #828082;
  background-color: #e5e4e5;
  background-image: none;
  /**
           @example[full-width-buttons.html] Full-width buttons
         **/
}
.button.block-:hover,
.button.block-:focus {
  color: #717171;
}
/**
   ## Button Bars ##

   Buttons may be combined into a button bar, which causes the borders
   between the buttons to be collapsed into one divider.

   @example[button-bar.html] Button Bars

 **/
.bar.button- {
  /**
           A button bar displays a series of buttons which
           the user may select.

        @example [button-bar] A Button Bar
        <ul class="button- bar">
          <li class="button">First
          <li class="button">Second
          <li class="button">Third
        </ul>
        **/
}
.bar.tool- {
  /**
           A tool bar displays a series of icons from
           which the user may select.

           @example [tool-bar] A Tool Bar
           <ul class="tool- bar">
             <li class="button"><i class="move- glyph"></i>
             <li class="button"><i class="reload- glyph"></i>
           </ul>
           **/
}
.bar.button- > .button,
.bar.tool- > .button,
.bar.button- > button,
.bar.tool- > button,
.tabs.tertiary- > li {
  border-style: solid;
  border-color: #bbb;
  border-width: 1px 0 1px 1px;
  border-radius: 0;
  box-shadow: inset 0 1px transparent;
}
.bar.button- > .button:first-child,
.bar.tool- > .button:first-child,
.bar.button- > button:first-child,
.bar.tool- > button:first-child,
.tabs.tertiary- > li:first-child {
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}
.bar.button- > .button:last-child,
.bar.tool- > .button:last-child,
.bar.button- > button:last-child,
.bar.tool- > button:last-child,
.tabs.tertiary- > li:last-child {
  border-right-width: 1px;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
}
@-webkit-keyframes button-is-loading-animation {
  0%,
  100% {
    color: rgba(113, 113, 113, 0.2);
  }
  35% {
    color: rgba(113, 113, 113, 0.5);
  }
  70% {
    color: rgba(113, 113, 113, 0.7);
  }
  85% {
    color: #717171;
  }
}
@-moz-keyframes button-is-loading-animation {
  0%,
  100% {
    color: rgba(113, 113, 113, 0.2);
  }
  35% {
    color: rgba(113, 113, 113, 0.5);
  }
  70% {
    color: rgba(113, 113, 113, 0.7);
  }
  85% {
    color: #717171;
  }
}
@keyframes button-is-loading-animation {
  0%,
  100% {
    color: rgba(113, 113, 113, 0.2);
  }
  35% {
    color: rgba(113, 113, 113, 0.5);
  }
  70% {
    color: rgba(113, 113, 113, 0.7);
  }
  85% {
    color: #717171;
  }
}
@-webkit-keyframes button-is-loading-animation-white {
  0%,
  100% {
    color: rgba(255, 255, 255, 0.2);
  }
  35% {
    color: rgba(255, 255, 255, 0.5);
  }
  70% {
    color: rgba(255, 255, 255, 0.7);
  }
  85% {
    color: #fff;
  }
}
@-moz-keyframes button-is-loading-animation-white {
  0%,
  100% {
    color: rgba(255, 255, 255, 0.2);
  }
  35% {
    color: rgba(255, 255, 255, 0.5);
  }
  70% {
    color: rgba(255, 255, 255, 0.7);
  }
  85% {
    color: #fff;
  }
}
@keyframes button-is-loading-animation-white {
  0%,
  100% {
    color: rgba(255, 255, 255, 0.2);
  }
  35% {
    color: rgba(255, 255, 255, 0.5);
  }
  70% {
    color: rgba(255, 255, 255, 0.7);
  }
  85% {
    color: #fff;
  }
}
/** @pattern .input

A field where the user may type to enter data.

@example
<p>
<!-- A text input -->
<input type="text" name="t1" value="Joe">
<!-- A number input -->
<input type="number" name="n1" value="6">

*/
.input,
input,
select,
textarea {
  display: inline-block;
  font-size: 14px;
  line-height: 16px;
  max-width: 100%;
  padding: 7px 0.25em;
  border: 1px solid #cccccc;
  border-radius: 8px;
  background: #ffffff;
  outline: none;
  font-family: inherit;
  font-weight: inherit;
  color: inherit;
  height: 32px;
}
.input:active,
.input:focus,
.input.is-active,
input:active,
select:active,
textarea:active,
input:focus,
select:focus,
textarea:focus,
input.is-active,
select.is-active,
textarea.is-active {
  border-color: #0099ff;
  outline: none;
}
.input::-webkit-input-placeholder {
  color: #999999;
}
.input::-moz-placeholder {
  color: #999999;
}
.input.is-hidden,
input.is-hidden,
select.is-hidden,
textarea.is-hidden {
  /** A hidden input field. */
  display: none;
}
.input.is-invalid,
input.is-invalid,
select.is-invalid,
textarea.is-invalid {
  /** An input field with an invalid value. */
  border-color: #df464b;
}
.input.full-width- {
  /** An input field which is as wide as its parent container. */
  width: 100%;
  min-width: 100%;
}
.input.number-,
input[type="number"] {
  /** An input field intended for numeric (integer) input. */
  width: 5.5em;
  text-align: right;
}
.input.text-,
input[type="text"],
textarea {
  /** An input field intended for text input. */
  white-space: pre;
  width: 30.5em;
}
.input.text-.is-disabled {
  background-color: #eee;
}
.input.search- {
  /** An input field intended for entering a search string */
  white-space: pre;
  width: 20.5em;
}
.input.code-,
.input.email-,
input[type="email"],
input[type="url"] {
  /** An input field intended for computer code. */
  white-space: pre;
  width: 30.5em;
}
.input.password-,
input[type="password"] {
  /** An input field intended for password input. */
  white-space: pre;
  width: 10.5em;
}
.input.stealth- {
  /** An input field (usually for text) which does not look
        like an input until you focus on it (by clicking or tabbing
        onto it).

        @example
        <!-- A text input -->
        <input class="stealth- input" type="text" name="t1" value="Joe">
        <!-- A number input -->
        <input class="stealth- input" type="number" name="n1" value="6">

        */
  font-family: inherit;
  font-weight: inherit;
}
.input.stealth-:not(:focus) {
  background: transparent;
  border-color: transparent;
  text-overflow: ellipsis;
}
.input.stealth-:hover {
  border-color: #cccccc;
}
.input.stealth-:focus {
  border-color: #0099ff;
}
.input.multiline- {
  height: auto;
}
.input.image- {
  height: 0;
  background: url("images/checkerboard.svg");
  padding-bottom: 33%;
  width: 100%;
  position: relative;
  vertical-align: top;
}
.input.image- img {
  max-height: 100%;
  max-width: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}
input[type="checkbox"],
input[type="radio"] {
  padding: 0;
  height: 1em;
  width: 1em;
  vertical-align: baseline;
  margin: 0 .25em;
}
input[type="button"],
input[type="submit"] {
  width: auto;
  height: auto;
}
select {
  height: 32px;
  min-width: 10.5em;
}
textarea,
textarea.input {
  height: 80px;
  resize: none;
}
option {
  font: inherit;
}
/**
    ## Input bars

    A group of inputs and other fields presented together in a bar.
    Usually contains one primary input field, with related labels
    and/or controls contained within a single UI element.  The size
    of the `input- bar` can be constrained, and the fields will
    be sized to fit inside.

    @example
    <p>
      <span class="input- bar">
        <label><%= phr %></label>
        <input type="text">
      </span>
    </p>
    <p>
      <span class="input- bar">
        <i class="user- glyph"></i>
        <input type="text">
      </span>
    </p>
    <p>
      <span class="input- bar">
        <i class="search- glyph"></i>
        <input class="search- input" type="text">
        <span class="input-bar-action iconic- button"><i class="x- glyph"></i></span>
      </span>
    </p>
    <!-- demo styling -->
    <style>
    p + p { margin-top: 1em; }
    .bar.input- { width: 300px; }
    </style>

**/
.bar.input- {
  /**
        An input bar displays one or more inputs,
        along with additional fields or controls.

        @example [input-bar] An Input Bar
        <span class="input- bar">
          <label><%= phr %></label>
          <input type="text" value="type here">
          <i class="right- glyph"></i>
        </span>
        **/
  line-height: 16px;
  position: relative;
  z-index: 0;
  background-color: #ffffff;
  border-radius: 8px;
  border-style: none;
  border-color: #cccccc;
}
.bar.input-:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  border: 1px solid;
  border-color: inherit;
  border-radius: 8px;
  background: transparent;
  z-index: -1;
}
.bar.input- > * {
  display: table-cell;
  margin: 0;
  padding: 7px 0.5em;
  background: transparent;
  border-style: solid;
  border-color: inherit;
  border-width: 1px 0 1px 0;
  border-radius: 0;
}
.bar.input- > *:first-child,
.bar.input- > *.button:first-child,
.bar.input- > *.dropdown:first-child .dropdown-toggle {
  border-left-width: 0;
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
}
.bar.input- > *:last-child,
.bar.input- > *.button:last-child,
.bar.input- > *.dropdown:last-child .dropdown-toggle {
  border-right-width: 0;
  border-top-right-radius: 8px;
  border-bottom-right-radius: 8px;
}
.bar.input- > .input,
.bar.input- > input {
  background: transparent;
}
.bar.input- > .dropdown {
  padding: 0;
}
.bar.input- > .button,
.bar.input- > button {
  border-radius: 0;
  box-shadow: none;
  vertical-align: bottom;
}
.bar.input- .symbol {
  font-size: 16px;
}
.bar.input- > .dropdown .dropdown-toggle {
  border-radius: 0;
  border: none;
  box-shadow: none;
}
.bar.input-.full-width- .input-group-primary,
.bar.input-.fixed-width- .input-group-primary,
.bar.input-.full-width- > .input,
.bar.input-.fixed-width- > .input,
.bar.input-.full-width- > input,
.bar.input-.fixed-width- > input {
  width: 100%;
}
.bar.input- > .is-hidden,
.bar.input- .input-bar-action {
  visibility: hidden;
}
.bar.input- > .is-visible,
.bar.input-:hover .input-bar-action,
.bar.input- > input:active ~ .input-bar-action,
.bar.input- > input:focus ~ .input-bar-action {
  visibility: visible;
}
::-ms-clear {
  display: none;
}
input[type="search"]::-webkit-search-cancel-button {
  display: none;
}
.button.link-:hover {
  border-color: transparent;
}
/** @pattern .frame

A container for one or more panes.  It may or may not have a visible
frame or border around it.  It serves as a fixed context within which
panes of content are positioned and sized.

@example[basic-frame.html] A basic frame with one scrollable pane.

Frames should only contain panes and the `frame-*` members defined below.
Intervening wrapper `<div>`s around panes will upset the layout, especially
if the panes are scrollable.  However,
see `frame-body` for a possible solution when wrapping panes in another `<div>`
is unavoidable.

**/
.frame,
.modal.fixed-height- .wizard-state,
.modal.scrollable- .wizard-state {
  height: 100%;
  width: 100%;
  z-index: 0;
  text-align: left;
  position: relative;
  overflow: hidden;
}
.frame > * {
  z-index: 1;
}
.frame > header,
.frame .frame-header {
  /** An optional fixed header at the top of the frame.  The header might include
            a title, navigation, or tools, for example.

            @example[headered-frame.html] A frame with a header
        */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 2em;
  line-height: 2em;
  background-color: #fff;
  font-family: "Open Sans", Verdana, Tahoma, sans-serif;
  font-weight: 600;
  font-size: 16px;
  font-weight: 500;
  -webkit-font-smoothing: antialiased;
  z-index: 2;
}
.frame.fullscreen- {
  /** A frame which takes the full screen and has fixed position. */
  position: fixed;
}
.frame.page- {
  /** A frame intended to fill a page, and providing a larger space
        for the header. */
  padding-top: 80px;
}
.frame.page- > header,
.frame.page- > .frame-header,
.frame.page- > .frame-body > .frame-header {
  height: 80px;
  line-height: inherit;
}
.frame.page- > aside,
.frame.page- > .frame-sidebar,
.frame.page- > .frame-body > .frame-sidebar {
  padding-top: 80px;
}
.frame.headered- {
  /** A frame which has a header at the top. */
  padding-top: 2em;
}
.frame.headered- > header,
.frame.headered- > .frame-header,
.frame.headered- > .frame-body > .frame-header {
  height: 2em;
  line-height: 2em;
}
.frame.headered- > aside,
.frame.headered- > .frame-sidebar,
.frame.headered- > .frame-body > .frame-sidebar {
  padding-top: 2em;
}
.frame .frame-header-left {
  /** The left-hand side of a frame header. */
  float: left;
}
.frame .frame-header-right {
  /** The right-hand side of a frame header. */
  float: right;
}
.frame.footered- {
  /** A frame which has a footer at the bottom. */
  padding-bottom: 2em;
}
.frame.footered- > footer,
.frame.footered- > .frame-footer,
.frame.footered- > .frame-body > .frame-footer {
  height: 2em;
  line-height: 2em;
}
.frame > footer,
.frame .frame-footer {
  /** An optional fixed footer at the bottom of the frame.

            @example[footered-frame.html] A frame with a header and footer **/
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2em;
  line-height: 2em;
}
.frame.overlaid- {
  /** A frame which has an overlay.*/
}
.frame.overlaid-.overlaid- > .pane {
  padding-bottom: 2em;
}
.frame.overlaid-.overlaid- .grid .grid-sidebar .box-module,
.frame.overlaid-.overlaid- .grid .grid-row:last-child {
  padding-bottom: 2em;
}
.frame.overlaid- > .frame-overlay,
.frame.overlaid- > .frame-body > .frame-overlay {
  height: 2em;
  line-height: 2em;
}
.frame .frame-overlay {
  /** An optional overlay at the bottom of the frame.  By default, the overlay
            is at the bottom of the frame.

            @example[overlaid-frame.html] A frame with a header and an overlay
        **/
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2em;
  z-index: 2;
}
.frame.sidebarred- {
  /** A frame which has a sidebar. */
  padding-left: 360px;
}
.grid > .frame.sidebarred- {
  padding-left: 370px;
}
.frame.sidebarred- > aside,
.frame.sidebarred- > .frame-sidebar,
.frame.sidebarred- > .frame-body > .frame-sidebar {
  width: 360px;
}
@media screen and (max-width: 1339px) /*at most M*/ {
  .frame.sidebarred- {
    padding-left: 240px;
  }
  .grid > .frame.sidebarred- {
    padding-left: 250px;
  }
  .frame.sidebarred- > aside,
  .frame.sidebarred- > .frame-sidebar,
  .frame.sidebarred- > .frame-body > .frame-sidebar {
    width: 240px;
  }
}
@media screen and (max-width: 979px) /*at most S*/ {
  .frame.sidebarred- {
    padding-left: 0px;
    padding-left: 0;
  }
  .grid > .frame.sidebarred- {
    padding-left: 10px;
  }
  .frame.sidebarred- > aside,
  .frame.sidebarred- > .frame-sidebar,
  .frame.sidebarred- > .frame-body > .frame-sidebar {
    width: 0px;
  }
  .frame.sidebarred- > aside,
  .frame.sidebarred- > .frame-sidebar,
  .frame.sidebarred- > .frame-body > .frame-sidebar {
    display: none;
  }
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .frame.sidebarred- {
    padding-left: 0px;
    padding-left: 0;
  }
  .grid > .frame.sidebarred- {
    padding-left: 10px;
  }
  .frame.sidebarred- > aside,
  .frame.sidebarred- > .frame-sidebar,
  .frame.sidebarred- > .frame-body > .frame-sidebar {
    width: 0px;
  }
  .frame.sidebarred- > aside,
  .frame.sidebarred- > .frame-sidebar,
  .frame.sidebarred- > .frame-body > .frame-sidebar {
    display: none;
  }
}
.frame .frame-sidebar {
  /**
            An optional sidebar, fixed to the frame, so as not to scroll
            with any pane(s) inside the frame.

            @example[frame-sidebar.html] A frame with a sidebar and a header
        **/
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
}
.frame.balanced- {
  /** A frame whose contents are centered.  If the frame is `sidebarred-`,
            then the `frame-sidebar` and the `page` (or `page- grid`) are both
            considered to be content, centered together.

            @example[balanced-frame.html] A balanced frame with sidebar
        **/
}
.frame.balanced-,
.frame.balanced-.sidebarred- {
  padding-left: 0;
}
.frame.balanced- .frame-sidebar {
  left: 50%;
  padding-left: 10px;
  padding-right: 10px;
}
.frame.balanced- .page,
.frame.balanced- .page-.grid {
  position: relative;
}
.frame.balanced- .frame-sidebar {
  width: 360px;
  margin-left: -660px;
}
.frame.balanced- .page,
.frame.balanced- .page-.grid {
  left: 180px;
  width: 960px;
}
@media screen and (min-width: 1700px) /*at least W*/ {
  .frame.balanced- .frame-sidebar {
    width: 360px;
    margin-left: -840px;
  }
  .frame.balanced- .page,
  .frame.balanced- .page-.grid {
    left: 180px;
    width: 1320px;
  }
}
@media screen and (max-width: 1339px) /*at most M*/ {
  .frame.balanced- .frame-sidebar {
    width: 240px;
    margin-left: -480px;
  }
  .frame.balanced- .page,
  .frame.balanced- .page-.grid {
    left: 120px;
    width: 720px;
  }
}
@media screen and (max-width: 979px) /*at most S*/ {
  .frame.balanced- .frame-sidebar {
    width: 0px;
    margin-left: -360px;
  }
  .frame.balanced- .page,
  .frame.balanced- .page-.grid {
    left: 0px;
    width: 720px;
  }
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .frame.balanced- .frame-sidebar {
    width: 0px;
    margin-left: -270px;
  }
  .frame.balanced- .page,
  .frame.balanced- .page-.grid {
    left: 0px;
    width: 540px;
  }
}
@media screen and (max-width: 539px) /*at most MP*/ {
  .frame.balanced- .frame-sidebar {
    width: 0px;
    margin-left: -180px;
  }
  .frame.balanced- .page,
  .frame.balanced- .page-.grid {
    left: 0px;
    width: 360px;
  }
  .frame.balanced- .frame-sidebar {
    display: none;
  }
}
@media screen and (max-width: 359px) /*at most SP*/ {
  .frame.balanced- .frame-sidebar {
    width: 0px;
    margin-left: -150px;
  }
  .frame.balanced- .page,
  .frame.balanced- .page-.grid {
    left: 0px;
    width: 300px;
  }
}
.frame .frame-body {
  /**
        An optional wrapper around the pane(s) or any combination
        of frame elements.  If intervening <div>s between the
        frame and its elements, giving them this class will
        propagate down the height of the frame.

        This class is helpful if, for example, the header and pane
        are generated by a partial, but the footer is not.

        @example[frame-body.html] A frame with a frame body.
        **/
  height: 100%;
  z-index: 1;
}
.frame .frame-drawer {
  /** A layer of content below the rest of the frame's
            content.  The frame's other content slides away
            to reveal the drawer.

            Drawers are often used in place of sidebars on small-screen
            mobile devices.  However, in many designs, the contents of the drawer
            differ from the contents of a sidebar, so there is little advantage to
            combining the two into one responsive layout pattern.  Instead, use
            @media queries and the mixins provided to hide/show the drawer and
            sidebar as required.

            @example[frame-drawer.html] A frame with a drawer.
            */
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 280px;
  padding: 10px;
  z-index: 0;
}
.frame .frame-drawer:after {
  content: "";
  position: absolute;
  left: -5px;
  top: 0;
  width: 5px;
  height: 100%;
  background: -webkit-linear-gradient(left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5));
  background: -moz-linear-gradient(left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5));
  background: -ms-linear-gradient(left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5));
  background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5));
  -webkit-transform: translate(0, 0);
  -moz-transform: translate(0, 0);
  -ms-transform: translate(0, 0);
  -o-transform: translate(0, 0);
  transform: translate(0, 0);
  -webkit-transition: -webkit-transform 0.3s ease;
  -moz-transition: -moz-transform 0.3s ease;
  -o-transition: -o-transform 0.3s ease;
  transition: -ms-transform 0.3s ease;
  transition: transform 0.3s ease;
}
.frame .frame-drawer.is-active:after {
  -webkit-transform: translate(280px, 0);
  -moz-transform: translate(280px, 0);
  -ms-transform: translate(280px, 0);
  -o-transform: translate(280px, 0);
  transform: translate(280px, 0);
}
.frame .frame-drawer ~ * {
  background-color: #fff;
  -webkit-transform: translate(0, 0);
  -moz-transform: translate(0, 0);
  -ms-transform: translate(0, 0);
  -o-transform: translate(0, 0);
  transform: translate(0, 0);
  -webkit-transition: -webkit-transform 0.3s ease;
  -moz-transition: -moz-transform 0.3s ease;
  -o-transition: -o-transform 0.3s ease;
  transition: -ms-transform 0.3s ease;
  transition: transform 0.3s ease;
}
.frame .frame-drawer.is-active ~ * {
  -webkit-transform: translate(280px, 0);
  -moz-transform: translate(280px, 0);
  -ms-transform: translate(280px, 0);
  -o-transform: translate(280px, 0);
  transform: translate(280px, 0);
}
.frame.split-,
.frame .frame-split {
  /** Split a frame into two panes.

            Use the `split-` modifier only if the frame only contains two panes,
            and no header or footer.  Otherwise, wrap the two panes in a
            `frame-split` element.
            */
  position: relative;
  height: 100%;
  width: 100%;
}
.frame.split- > *,
.frame .frame-split > * {
  position: absolute;
}
.frame.split-.horizontal-,
.frame .frame-split.horizontal- {
  /** A frame which is split horizontally.
                By default the frame is split equally (1:1)

               @example[split-frame.html] Two panes side-by-side
               **/
}
.frame.split-.horizontal- > *,
.frame .frame-split.horizontal- > * {
  height: 100%;
  top: 0;
}
.frame.split-.horizontal- > :first-child,
.frame .frame-split.horizontal- > :first-child {
  left: 0;
}
.frame.split-.horizontal- > :last-child,
.frame .frame-split.horizontal- > :last-child {
  right: 0;
}
.frame.split-.horizontal- > :first-child,
.frame .frame-split.horizontal- > :first-child {
  width: 50%;
}
.frame.split-.horizontal- > :last-child,
.frame .frame-split.horizontal- > :last-child {
  width: 50%;
}
.frame.split-.horizontal-.one-two-,
.frame .frame-split.horizontal-.one-two- {
  /** Split the frame 1:2 */
}
.frame.split-.horizontal-.one-two- > :first-child,
.frame .frame-split.horizontal-.one-two- > :first-child {
  width: 33.33333333%;
}
.frame.split-.horizontal-.one-two- > :last-child,
.frame .frame-split.horizontal-.one-two- > :last-child {
  width: 66.66666667%;
}
.frame.split-.vertical-,
.frame .frame-split.vertical- {
  /** A frame which is split vertically.
                By default the frame is split equally (1:1)
                */
}
.frame.split-.vertical- > *,
.frame .frame-split.vertical- > * {
  width: 100%;
  left: 0;
}
.frame.split-.vertical- > *:first-child,
.frame .frame-split.vertical- > *:first-child {
  top: 0;
}
.frame.split-.vertical- > *:last-child,
.frame .frame-split.vertical- > *:last-child {
  bottom: 0;
}
.frame.split-.vertical- > :first-child,
.frame .frame-split.vertical- > :first-child {
  height: 50%;
}
.frame.split-.vertical- > :last-child,
.frame .frame-split.vertical- > :last-child {
  height: 50%;
}
.frame.split-.vertical-.one-two-,
.frame .frame-split.vertical-.one-two- {
  /** Split the frame 1:2 */
}
.frame.split-.vertical-.one-two- > :first-child,
.frame .frame-split.vertical-.one-two- > :first-child {
  height: 33.33333333%;
}
.frame.split-.vertical-.one-two- > :last-child,
.frame .frame-split.vertical-.one-two- > :last-child {
  height: 66.66666667%;
}
.frame.split-.vertical-.two-one-,
.frame .frame-split.vertical-.two-one- {
  /** Split the frame 2:1 */
}
.frame.split-.vertical-.two-one- > :first-child,
.frame .frame-split.vertical-.two-one- > :first-child {
  height: 66.66666667%;
}
.frame.split-.vertical-.two-one- > :last-child,
.frame .frame-split.vertical-.two-one- > :last-child {
  height: 33.33333333%;
}
.frame.tabbed- {
  /** TODO: A frame with tabs which select alternate panes to view. */
}
/** @pattern .emblem

A branded representation of an app (or resource?)
as it appears in the launcher and catalog.

@example[emblem-examples.html]


**/
.emblem {
  position: relative;
  padding-top: 80px;
  min-width: 80px;
}
.emblem:before {
  content: "";
  display: block;
  position: absolute;
  width: 80px;
  height: 80px;
  top: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -moz-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  -o-transform: translateX(-50%);
  transform: translateX(-50%);
  background: #fff;
  border-radius: 20%;
  box-shadow: 0 1px 3px 2px rgba(94, 111, 120, 0.13);
}
.emblem .emblem-image {
  /** The image (icon or logo) with the decoration that surrounds it.
            The image file is set with an inline `background-image` style
            in the markup. */
  margin: 0;
  position: absolute;
  width: 64px;
  height: 64px;
  top: 8px;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -moz-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  -o-transform: translateX(-50%);
  transform: translateX(-50%);
  border-radius: 20%;
  background-color: #fff;
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}
.emblem .emblem-title {
  /** The name of the app or resource.  Can be branded by adding
            the `theme-launcher-text` class. */
  margin: 10px auto 0;
  font-size: 12px;
  color: inherit;
  line-height: 1.25em;
  height: 18px;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  text-shadow: inherit;
}
.emblem .emblem-flag {
  /** Optional. A textual flag displayed in the upper-right of the emblem.
            Should be hidden (or removed) if empty. */
  display: block;
  position: absolute;
  top: 0;
  left: 50%;
  -webkit-transform: translateX(-40px);
  -moz-transform: translateX(-40px);
  -ms-transform: translateX(-40px);
  -o-transform: translateX(-40px);
  transform: translateX(-40px);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  color: #fff;
  background-color: #6DB33F;
  border-radius: 2px;
  font-size: 10px;
  line-height: 12px;
  padding: 2px .5em;
  text-transform: uppercase;
  -webkit-font-smoothing: antialiased;
  z-index: 1;
}
.emblem .emblem-title,
.emblem .emblem-flag {
  opacity: 1;
  -webkit-transition: opacity 0.5s;
  -moz-transition: opacity 0.5s;
  -o-transition: opacity 0.5s;
  transition: opacity 0.5s;
}
.emblem .emblem-favorite {
  /** A star used to indicate and toggle whether this app is a favorite **/
  font-size: 24px;
  position: absolute;
  top: -12px;
  right: 50%;
  -webkit-transform: translateX(52px);
  -moz-transform: translateX(52px);
  -ms-transform: translateX(52px);
  -o-transform: translateX(52px);
  transform: translateX(52px);
}
.emblem .emblem-favorite .symbol {
  fill: none;
  stroke: #9B9B9B;
}
.emblem .emblem-favorite .symbol.filled- {
  fill: #FFC20E;
  stroke: none;
}
.emblem .emblem-badge {
  /** An icon overlayed on the emblem to convey the app type. **/
  position: absolute;
  bottom: 22px;
  right: 50%;
  width: 22px;
  height: 22px;
  border-radius: 11px;
  -webkit-transform: translateX(46px);
  -moz-transform: translateX(46px);
  -ms-transform: translateX(46px);
  -o-transform: translateX(46px);
  transform: translateX(46px);
  background: #D8D8D8;
  border: 1px solid #979797;
  color: #979797;
  font-size: 16px;
  line-height: 22px;
  text-align: center;
}
.emblem .emblem-badge .symbol {
  margin-top: 2px;
}
.emblem .emblem-status {
  /** A status message overlaid on top of the emblem,
            used to display launching status.
            Normally hidden. */
  display: none;
  position: absolute;
  top: 50%;
  left: 0;
  max-height: 100%;
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  transform: translateY(-50%);
  font-size: 12px;
  font-weight: bold;
  -webkit-transition: opacity 0.5s;
  -moz-transition: opacity 0.5s;
  -o-transition: opacity 0.5s;
  transition: opacity 0.5s;
  color: #fff;
  text-shadow: 1px 1px rgba(0, 0, 0, 0.8);
  opacity: 0;
  text-align: center;
}
.emblem.launching- .emblem-status {
  display: block;
  opacity: 1;
}
.box.is-dragging .emblem .emblem-title,
.box.is-dragging .emblem .emblem-flag,
.box.is-dragging .emblem .emblem-badge,
.box.is-dragging .emblem .emblem-favorite {
  opacity: 0;
  -webkit-transition: opacity 0;
  -moz-transition: opacity 0;
  -o-transition: opacity 0;
  transition: opacity 0;
}
.emblem.simple- {
  /** @modifier
          A simplified version of emblem, for use where interaction is not required. **/
}
.emblem.simple-::before {
  box-shadow: none;
}
.emblem.simple-::before {
  border: 1px solid #9B9B9B;
}
.emblem.highlighted- {
  /** @modifier
          A highlighted emblem used for "NEW" apps. **/
}
.emblem.highlighted-::before {
  border: 2px solid #6DB33F;
}
.emblem.highlighted- .emblem-title {
  font-weight: 600;
}
.emblem.borderless-::before {
  border: none;
}
/** @pattern .pane

A rectangular region of the screen, which holds content.

@example
<div class="pane typography">
  <h1><%= h %></h1>
  <p><%= p.1 %>
  <p><%= p.2 %>
  <p><%= p.3 %>
</div>

**/
.pane,
.modal.fixed-height- .wizard-state > .wizard-body,
.modal.scrollable- .wizard-state > .wizard-body {
  position: relative;
  height: 100%;
  width: 100%;
  overflow: hidden;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  z-index: 0;
}
.pane.has-overflow {
  /**
           If a pane contains elements which overflow,
           adding this class will allow them to be visible.
           */
  overflow: visible;
  z-index: auto;
}
.pane.backdrop- {
  /**
        A pane that has a solid background on top of which pages are displayed.
        */
  padding-bottom: 20px;
  background-color: transparent;
}
.pane.scrollable-,
.modal.fixed-height- .wizard-state > .wizard-body,
.modal.scrollable- .wizard-state > .wizard-body {
  /** A pane with scrolling content (in both directions).
            @example Scrolling in both directions
            <div class="scrollable- pane typography">
              <h1><%= h %></h1>
              <p><%= p.1 %>
              <p><%= p.2 %>
              <p><%= p.3 %>
              <p><%= p.4 %>
              <p><%= p.5 %>
              <p><%= p.6 %>
              <p><%= p.7 %>
              <p><%= p.8 %>
              <p><%= p.9 %>
              <p><%= p.10 %>
              <p><%= p.11 %>
              <p><%= p.12 %>
            </div>
            <!-- demo style -->
            <style> p { width: 200%; } </style>
        **/
  overflow-x: auto;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}
.pane.scrollable-.vertically-,
.modal.fixed-height- .wizard-state > .wizard-body,
.modal.scrollable- .wizard-state > .wizard-body {
  /** A pane with vertically scrolling content.
                @example Vertical scrolling
                <div class="vertically- scrollable- pane typography">
                  <h1><%= h %></h1>
                  <p><%= p.1 %>
                  <p><%= p.2 %>
                  <p><%= p.3 %>
                  <p><%= p.4 %>
                  <p><%= p.5 %>
                  <p><%= p.6 %>
                  <p><%= p.7 %>
                  <p><%= p.8 %>
                  <p><%= p.9 %>
                  <p><%= p.10 %>
                  <p><%= p.11 %>
                  <p><%= p.12 %>
                </div>
             */
  overflow-x: hidden;
}
.pane.scrollable-.horizontally- {
  /** A pane with horizontally scrolling content.
                @example Horizontal scrolling
                <div class="horizontally- scrollable- pane typography">
                  <h1><%= h %></h1>
                  <p><%= p.1 %>
                  <p><%= p.2 %>
                  <p><%= p.3 %>
                </div>
                <!-- demo style -->
                <style> p { width: 200%; } </style>
             */
  overflow-y: hidden;
}
.pane > .grid:first-child:last-child {
  min-height: 100%;
}
/** @pattern .box

A box is a unit of layout, a rectangle of content
positioned relative to other boxes.

The box class itself does not control layout.
Layout is controlled by the boxes' parent element, which
is often a `grid`.  In this case, the grid controls spacing
of the boxes, while the boxes' modifiers
control the width of the boxes
such that they align with the grid.

@example [box-demo.html] Boxes of various sizes

**/
.box-base,
.box,
.media .media-image,
.media .media-body {
  display: block;
  position: relative;
  overflow: hidden;
  width: 100%;
  max-width: 100%;
}
.box.one- {
  width: 40px;
  box-sizing: content-box;
}
.box.two- {
  width: 100px;
  box-sizing: content-box;
}
.box.three- {
  width: 160px;
  box-sizing: content-box;
}
.box.four- {
  width: 220px;
  box-sizing: content-box;
}
.box.five- {
  width: 280px;
  box-sizing: content-box;
}
.box.six- {
  width: 340px;
  box-sizing: content-box;
}
.box.seven- {
  width: 400px;
  box-sizing: content-box;
}
.box.eight- {
  width: 460px;
  box-sizing: content-box;
}
.box.nine- {
  width: 520px;
  box-sizing: content-box;
}
.box.ten- {
  width: 580px;
  box-sizing: content-box;
}
.box.eleven- {
  width: 640px;
  box-sizing: content-box;
}
.box.twelve- {
  width: 700px;
  box-sizing: content-box;
}
.box.thirteen- {
  width: 760px;
  box-sizing: content-box;
}
.box.fourteen- {
  width: 820px;
  box-sizing: content-box;
}
.box.fifteen- {
  width: 880px;
  box-sizing: content-box;
}
.box.sixteen- {
  width: 940px;
  box-sizing: content-box;
}
.box.seventeen- {
  width: 1000px;
  box-sizing: content-box;
}
.box.eighteen- {
  width: 1060px;
  box-sizing: content-box;
}
.box.nineteen- {
  width: 1120px;
  box-sizing: content-box;
}
.box.twenty- {
  width: 1180px;
  box-sizing: content-box;
}
.box.twenty-one- {
  width: 1240px;
  box-sizing: content-box;
}
.box.twenty-two- {
  width: 1300px;
  box-sizing: content-box;
}
.box img {
  max-width: 100%;
}
.box.left- {
  /** Float the box to the left (default). */
  float: left;
}
.box.right-,
.media .media-image.right- {
  /** Float the box to the right. */
  float: right;
}
.box.center- {
  /** Center the box in the row. */
  float: none;
  margin: 0 auto;
}
.box.flushleft- {
  /** Justify text within the box to the left edge (default). */
  text-align: left;
}
.box.flushright- {
  /** Justify text within the box to the right edge. */
  text-align: right;
}
.box.centering- {
  /** Center text within the box. */
  text-align: center;
}
.box.clearleft- {
  /** Clear left floats before setting this box. */
  clear: left;
}
.box.clearright- {
  /** Clear left floats before setting this box. */
  clear: right;
}
.box.clear- {
  /** Clear left floats before setting this box. */
  clear: both;
}
.box.header- {
  /** A box used to build a header.  The `line-height` is controlled
        so that baselines in all header boxes will align.
        */
  line-height: 2em;
}
.box.header- h1,
.box.header- h2,
.box.header- h3,
.box.header- h4,
.box.header- h5,
.box.header- h6 {
  line-height: inherit;
}
.box.auto- {
  /** Let the box retain its own natural (auto) width (the default). */
  width: auto;
}
.box.full-width- {
  /** Let the box assume the width of its parent grid. */
  width: 100%;
  box-sizing: border-box;
}
.box.full-height- {
  /** Let the box assume the height of its parent grid. */
  height: 100%;
  padding-top: 0;
  padding-bottom: 0;
}
.box.full-height- .box-module {
  height: 100%;
}
.box.remainder-,
.media .media-body {
  /**

        A remainder box will use the remaining space on a row.

        @example [remainder-box-demo.html] A remainder box


        When combined with a nested sub-grid, a remainder box will create a
        column as wide as the remaining space on the row where it begins,
        regardless of whether the column's height exceeds the height of the
        side column(s).

        @example [remainder-subgrid-demo.html] A sub-grid in a remainder box
        **/
  float: none;
  width: auto;
  overflow: hidden;
}
.box.has-overflow {
  /**
        If a box contains elements which overflow,
        adding this class to the box allows them to be visible.
        **/
  overflow: visible;
  z-index: 2;
}
.box .box-module {
  /** Create a framed module within a box, and have the edges
        of the module align with the grid.  Typically you will
        have other CSS that sets a border and/or background on
        the module.

       @example [box-module-demo.html] Box modules
       **/
  width: 100%;
  margin: 0;
  padding: 10px;
  position: relative;
  overflow: hidden;
}
.box .box-module + .box-module {
  margin-top: 20px;
}
.box.leave-one- {
  /** Leave one column(s) of space between this box and the
        previous one. */
  margin-left: 60px;
}
.box.leave-one-.right- {
  margin-left: 0px;
  margin-right: 60px;
}
.box.leave-two- {
  margin-left: 120px;
}
.box.leave-two-.right- {
  margin-left: 0px;
  margin-right: 120px;
}
.box.leave-three- {
  margin-left: 180px;
}
.box.leave-three-.right- {
  margin-left: 0px;
  margin-right: 180px;
}
.box.leave-four- {
  margin-left: 240px;
}
.box.leave-four-.right- {
  margin-left: 0px;
  margin-right: 240px;
}
.box.leave-five- {
  margin-left: 300px;
}
.box.leave-five-.right- {
  margin-left: 0px;
  margin-right: 300px;
}
.box.leave-six- {
  margin-left: 360px;
}
.box.leave-six-.right- {
  margin-left: 0px;
  margin-right: 360px;
}
.box.leave-seven- {
  margin-left: 420px;
}
.box.leave-seven-.right- {
  margin-left: 0px;
  margin-right: 420px;
}
.box.leave-eight- {
  margin-left: 480px;
}
.box.leave-eight-.right- {
  margin-left: 0px;
  margin-right: 480px;
}
@media screen and (max-width: 1339px) /*at most M*/ {
  .box.M-one- {
    width: 40px;
    box-sizing: content-box;
  }
  .box.M-two- {
    width: 100px;
    box-sizing: content-box;
  }
  .box.M-three- {
    width: 160px;
    box-sizing: content-box;
  }
  .box.M-four- {
    width: 220px;
    box-sizing: content-box;
  }
  .box.M-five- {
    width: 280px;
    box-sizing: content-box;
  }
  .box.M-six- {
    width: 340px;
    box-sizing: content-box;
  }
  .box.M-seven- {
    width: 400px;
    box-sizing: content-box;
  }
  .box.M-eight- {
    width: 460px;
    box-sizing: content-box;
  }
  .box.M-nine- {
    width: 520px;
    box-sizing: content-box;
  }
  .box.M-ten- {
    width: 580px;
    box-sizing: content-box;
  }
  .box.M-eleven- {
    width: 640px;
    box-sizing: content-box;
  }
  .box.M-twelve- {
    width: 700px;
    box-sizing: content-box;
  }
  .box.M-thirteen- {
    width: 760px;
    box-sizing: content-box;
  }
  .box.M-fourteen- {
    width: 820px;
    box-sizing: content-box;
  }
  .box.M-fifteen- {
    width: 880px;
    box-sizing: content-box;
  }
  .box.M-sixteen- {
    width: 940px;
    box-sizing: content-box;
  }
  .box.M-full-width- {
    width: 100%;
    box-sizing: border-box;
  }
  .box.M-half-width- {
    width: 50%;
    box-sizing: border-box;
  }
  .box.M-auto- {
    width: auto;
  }
  .box.M-remainder- {
    float: none;
    width: auto;
    overflow: hidden;
  }
  .box.M-left- {
    float: left;
  }
  .box.M-right- {
    float: right;
  }
  .box.M-center- {
    float: none;
    margin: 0 auto;
  }
  .box.M-flushleft- {
    text-align: left;
  }
  .box.M-flushright- {
    text-align: right;
  }
  .box.M-centering- {
    text-align: center;
  }
  .box.M-clearleft- {
    clear: left;
  }
  .box.M-clearright- {
    clear: right;
  }
  .box.M-clear- {
    clear: both;
  }
  .box.M-hide- {
    display: none;
  }
}
@media screen and (max-width: 979px) /*at most S*/ {
  .box.S-one- {
    width: 40px;
    box-sizing: content-box;
  }
  .box.S-two- {
    width: 100px;
    box-sizing: content-box;
  }
  .box.S-three- {
    width: 160px;
    box-sizing: content-box;
  }
  .box.S-four- {
    width: 220px;
    box-sizing: content-box;
  }
  .box.S-five- {
    width: 280px;
    box-sizing: content-box;
  }
  .box.S-six- {
    width: 340px;
    box-sizing: content-box;
  }
  .box.S-seven- {
    width: 400px;
    box-sizing: content-box;
  }
  .box.S-eight- {
    width: 460px;
    box-sizing: content-box;
  }
  .box.S-nine- {
    width: 520px;
    box-sizing: content-box;
  }
  .box.S-ten- {
    width: 580px;
    box-sizing: content-box;
  }
  .box.S-eleven- {
    width: 640px;
    box-sizing: content-box;
  }
  .box.S-twelve- {
    width: 700px;
    box-sizing: content-box;
  }
  .box.S-full-width- {
    width: 100%;
    box-sizing: border-box;
  }
  .box.S-half-width- {
    width: 50%;
    box-sizing: border-box;
  }
  .box.S-auto- {
    width: auto;
  }
  .box.S-remainder- {
    float: none;
    width: auto;
    overflow: hidden;
  }
  .box.S-left- {
    float: left;
  }
  .box.S-right- {
    float: right;
  }
  .box.S-center- {
    float: none;
    margin: 0 auto;
  }
  .box.S-flushleft- {
    text-align: left;
  }
  .box.S-flushright- {
    text-align: right;
  }
  .box.S-centering- {
    text-align: center;
  }
  .box.S-clearleft- {
    clear: left;
  }
  .box.S-clearright- {
    clear: right;
  }
  .box.S-clear- {
    clear: both;
  }
  .box.S-hide- {
    display: none;
  }
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .box.LP-one- {
    width: 40px;
    box-sizing: content-box;
  }
  .box.LP-two- {
    width: 100px;
    box-sizing: content-box;
  }
  .box.LP-three- {
    width: 160px;
    box-sizing: content-box;
  }
  .box.LP-four- {
    width: 220px;
    box-sizing: content-box;
  }
  .box.LP-five- {
    width: 280px;
    box-sizing: content-box;
  }
  .box.LP-six- {
    width: 340px;
    box-sizing: content-box;
  }
  .box.LP-seven- {
    width: 400px;
    box-sizing: content-box;
  }
  .box.LP-eight- {
    width: 460px;
    box-sizing: content-box;
  }
  .box.LP-nine- {
    width: 520px;
    box-sizing: content-box;
  }
  .box.LP-full-width- {
    width: 100%;
    box-sizing: border-box;
  }
  .box.LP-half-width- {
    width: 50%;
    box-sizing: border-box;
  }
  .box.LP-auto- {
    width: auto;
  }
  .box.LP-remainder- {
    float: none;
    width: auto;
    overflow: hidden;
  }
  .box.LP-left- {
    float: left;
  }
  .box.LP-right- {
    float: right;
  }
  .box.LP-center- {
    float: none;
    margin: 0 auto;
  }
  .box.LP-flushleft- {
    text-align: left;
  }
  .box.LP-flushright- {
    text-align: right;
  }
  .box.LP-centering- {
    text-align: center;
  }
  .box.LP-clearleft- {
    clear: left;
  }
  .box.LP-clearright- {
    clear: right;
  }
  .box.LP-clear- {
    clear: both;
  }
  .box.LP-hide- {
    display: none;
  }
}
@media screen and (max-width: 539px) /*at most MP*/ {
  .box.MP-one- {
    width: 40px;
    box-sizing: content-box;
  }
  .box.MP-two- {
    width: 100px;
    box-sizing: content-box;
  }
  .box.MP-three- {
    width: 160px;
    box-sizing: content-box;
  }
  .box.MP-four- {
    width: 220px;
    box-sizing: content-box;
  }
  .box.MP-five- {
    width: 280px;
    box-sizing: content-box;
  }
  .box.MP-six- {
    width: 340px;
    box-sizing: content-box;
  }
  .box.MP-full-width- {
    width: 100%;
    box-sizing: border-box;
  }
  .box.MP-half-width- {
    width: 50%;
    box-sizing: border-box;
  }
  .box.MP-auto- {
    width: auto;
  }
  .box.MP-remainder- {
    float: none;
    width: auto;
    overflow: hidden;
  }
  .box.MP-left- {
    float: left;
  }
  .box.MP-right- {
    float: right;
  }
  .box.MP-center- {
    float: none;
    margin: 0 auto;
  }
  .box.MP-flushleft- {
    text-align: left;
  }
  .box.MP-flushright- {
    text-align: right;
  }
  .box.MP-centering- {
    text-align: center;
  }
  .box.MP-clearleft- {
    clear: left;
  }
  .box.MP-clearright- {
    clear: right;
  }
  .box.MP-clear- {
    clear: both;
  }
  .box.MP-hide- {
    display: none;
  }
}
@media screen and (max-width: 359px) /*at most SP*/ {
  .box.SP-one- {
    width: 40px;
    box-sizing: content-box;
  }
  .box.SP-two- {
    width: 100px;
    box-sizing: content-box;
  }
  .box.SP-three- {
    width: 160px;
    box-sizing: content-box;
  }
  .box.SP-four- {
    width: 220px;
    box-sizing: content-box;
  }
  .box.SP-five- {
    width: 280px;
    box-sizing: content-box;
  }
  .box.SP-six- {
    width: 340px;
    box-sizing: content-box;
  }
  .box.SP-full-width- {
    width: 100%;
    box-sizing: border-box;
  }
  .box.SP-half-width- {
    width: 50%;
    box-sizing: border-box;
  }
  .box.SP-auto- {
    width: auto;
  }
  .box.SP-remainder- {
    float: none;
    width: auto;
    overflow: hidden;
  }
  .box.SP-left- {
    float: left;
  }
  .box.SP-right- {
    float: right;
  }
  .box.SP-center- {
    float: none;
    margin: 0 auto;
  }
  .box.SP-flushleft- {
    text-align: left;
  }
  .box.SP-flushright- {
    text-align: right;
  }
  .box.SP-centering- {
    text-align: center;
  }
  .box.SP-clearleft- {
    clear: left;
  }
  .box.SP-clearright- {
    clear: right;
  }
  .box.SP-clear- {
    clear: both;
  }
  .box.SP-hide- {
    display: none;
  }
}
/*
 * Project Horizon
 * (c) 2013-2014 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
/** @pattern .media

A concise reference to some entity, consisting of an image,
title, and description.  The name `media` was
[coined by Nicole Sullivan](http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/).

@example
<div class="eight- grid">
  <div class="media">
    <div class="media-image">
      <svg><circle cx="50" cy="50" r="50" fill="#fc0"/></svg>
    </div>
    <div class="media-body typography">
      <h2> <%= h.0 %> </h2>
      <p> <%= p.1 %> </p>
    </div>
  </div>
</div>

*/
.media .media-image {
  width: 100px;
  box-sizing: content-box;
}
.media .media-image {
  /** The area where the image is shown. */
}
.media .media-image img,
.media .media-image svg {
  width: 100%;
}
.media .media-body {
  /** The textual content, usually including a title and description. */
}
/*
 * Project Horizon
 * (c) 2013-2015 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
/** @pattern .dropdown
A button from which a panel drops down when clicked.
The panel often contains a menu.

@example[dropdown-menu.html, dropdown-menu.js]
*/
.dropdown {
  position: relative;
  display: inline-block;
  z-index: 1;
}
.dropdown .dropdown-toggle {
  cursor: pointer;
  color: #4990C2;
}
.dropdown .dropdown-toggle:hover {
  text-decoration: none;
}
.dropdown .dropdown-toggle label {
  color: #828082;
  margin-right: .5em;
}
.dropdown .dropdown-toggle label::after {
  content: ":";
}
.dropdown .dropdown-panel {
  display: block;
  position: absolute;
  top: 100%;
  left: 0;
  margin-top: 2px;
  padding: 12px 10px;
  min-width: 100%;
  min-height: 1em;
  color: #444d56;
  background-color: #fff;
  border: 1px solid #A7B8C4;
  border-radius: 4px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.36);
  min-width: 250px;
  max-height: 600px;
  visibility: hidden;
  opacity: 0;
  overflow: visible;
  transform: translateY(-0.5em);
  z-index: -1;
  -webkit-transition: opacity 0.3s ease-in-out 0s, transform 0.3s ease-in-out 0s, visibility 0s linear 0.4s, z-index 0s linear 0.01s;
  -moz-transition: opacity 0.3s ease-in-out 0s, transform 0.3s ease-in-out 0s, visibility 0s linear 0.4s, z-index 0s linear 0.01s;
  -o-transition: opacity 0.3s ease-in-out 0s, transform 0.3s ease-in-out 0s, visibility 0s linear 0.4s, z-index 0s linear 0.01s;
  transition: opacity 0.3s ease-in-out 0s, transform 0.3s ease-in-out 0s, visibility 0s linear 0.4s, z-index 0s linear 0.01s;
  /*
        Need to use 2 SVGs: one for the white background and one for the border,
        because the arrow css trick (with border) doesn't scale down (zooming out)
        */
}
.dropdown .dropdown-panel .dropdown-arrow svg.symbol {
  position: absolute;
  width: 16px;
  bottom: 100%;
  left: 0;
  stroke: none;
}
.dropdown .dropdown-panel .dropdown-arrow svg.bg {
  height: 9px;
  margin-left: 7px;
  margin-bottom: -1px;
  fill: #fff;
}
.dropdown .dropdown-panel .dropdown-arrow svg.border {
  width: 18px;
  height: 10px;
  margin-left: 6px;
  fill: #A7B8C4;
}
.dropdown .dropdown-panel .dropdown-arrow.dropdown-arrow-right svg.symbol {
  left: auto;
  right: 0;
  margin-left: 0;
  margin-right: 6px;
}
.dropdown .dropdown-panel .dropdown-arrow.dropdown-arrow-right svg.border {
  margin-right: 5px;
}
.dropdown.inline- {
  display: inline-block;
}
.dropdown.right- .dropdown-panel {
  left: auto;
  right: 0;
}
.dropdown.center- .dropdown-panel {
  left: 50%;
  -webkit-transform: translateX(-50%);
  -moz-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  -o-transform: translateX(-50%);
  transform: translateX(-50%);
}
.dropdown.is-active > .dropdown-panel {
  visibility: visible;
  opacity: 1;
  z-index: 2;
  -webkit-transform: translateY(0%);
  -moz-transform: translateY(0%);
  -ms-transform: translateY(0%);
  -o-transform: translateY(0%);
  transform: translateY(0%);
  -webkit-transition-delay: 0s, 0s, 0s, 0s;
  -moz-transition-delay: 0s, 0s, 0s, 0s;
  -o-transition-delay: 0s, 0s, 0s, 0s;
  transition-delay: 0s, 0s, 0s, 0s;
}
.dropdown .menu .menu-hrule {
  width: auto;
  margin-left: -10px;
  margin-right: -10px;
  margin-top: 0;
  margin-bottom: 12px;
}
.dropdown .menu > li {
  padding: 0;
  padding-bottom: 12px;
}
.dropdown .dropdown-panel.menu li:last-child {
  padding-bottom: 0;
}
.dropdown .dropdown-panel > .menu:last-child li:last-child {
  padding-bottom: 0;
}
.centered-.list {
  text-align: left;
  margin: 0 auto;
  display: inline-block;
}
/*
 * Project Horizon
 * (c) 2013-2014 VMware, Inc. All rights reserved.
 * VMware Confidential.
 */
/** @pattern .menu

A vertical list of options from which the user makes a selection.  It may
occur as a popup or dropdown, in a sidebar, or in the middle of the content.

@example
<ul class="menu">
    <li class="is-selected"><a><%=phr.0%></a>
    <li><a><%=phr.1%></a>
    <li><a><%=phr.2%></a>
</ul>
*/
.menu {
  padding: 0;
  margin: 0;
  color: #444d56;
  font-size: 14px;
}
.menu > li,
.menu.dropdown-menu > li {
  list-style: none;
  padding: 0.5em 10px;
  line-height: 1.25em;
  white-space: nowrap;
}
.menu > li > *,
.menu.dropdown-menu > li > * {
  text-overflow: ellipsis;
  overflow: hidden;
}
.menu > li > a,
.menu.dropdown-menu > li > a {
  display: block;
  white-space: nowrap;
  padding: 0.5em 10px;
  margin: -0.5em -10px;
  cursor: pointer;
}
.menu > li > a,
.menu.dropdown-menu > li > a,
.menu > li > a:hover,
.menu.dropdown-menu > li > a:hover,
.menu > li > a:focus,
.menu.dropdown-menu > li > a:focus {
  font-family: inherit;
  color: #44525e;
  text-decoration: none;
  text-shadow: none;
}
.menu > li.is-selected > a,
.menu.dropdown-menu > li.is-selected > a {
  color: #FFFFFF;
  background: #6EB145;
}
.menu > li > a:hover,
.menu.dropdown-menu > li > a:hover {
  color: #44525e;
  background: #DBE0E3;
}
.menu > li.menu-title,
.menu.dropdown-menu > li.menu-title {
  /** @member **/
  padding-left: 0;
  font-size: 114.28571429%;
  font-variant: small-caps;
  text-transform: lowercase;
}
.menu > li.menu-hrule,
.menu.dropdown-menu > li.menu-hrule {
  /** @member **/
  height: 0;
  padding: 0;
  border-top: 1px solid #e2e7eb;
  width: 100%;
  margin: 0.5em 0;
}
.menu > li.is-disabled > a,
.menu.dropdown-menu > li.is-disabled > a {
  color: #999;
}
.menu > li.is-disabled > a:hover,
.menu.dropdown-menu > li.is-disabled > a:hover,
.menu > li.is-disabled > a:focus,
.menu.dropdown-menu > li.is-disabled > a:focus {
  background: transparent;
  cursor: default;
}
.menu.center- {
  text-align: center;
}
.menu.right- {
  text-align: right;
}
/** @pattern .actions

An ordered list of alternatives provided to the user, usually in the form of
of buttons that may be clicked.

The primary call to action should be the first action listed.  The CSS will
handle ordering them left-to-right or right-to-left, as appropriate.

@example[actions-demo.html]
*/
.actions {
  display: block;
  width: 100%;
  margin: 0 -0.25em;
}
.actions:after {
  display: block;
  content: "";
  clear: both;
}
.actions .action-item,
.actions > li {
  padding: 0 0.25em;
  float: left;
}
.actions.left-to-right- {
  /** @modifier */
}
.actions.right-to-left- {
  /** @modifier */
}
.actions.right-to-left- .action-item,
.actions.right-to-left- > li {
  float: right;
}
.actions.vertical- {
  /** @modifier */
  display: inline-table;
  width: auto;
  margin: 0;
}
.actions.vertical- .action-item,
.actions.vertical- > li {
  float: none;
  padding: 0.25em 0;
}
.actions.vertical- .action-item button,
.actions.vertical- > li button,
.actions.vertical- .action-item .button,
.actions.vertical- > li .button {
  width: 100%;
}
.breadcrumb {
  /** A navigational method for allowing the user to go back "up" in
    the hierarchy to see other pages.

    Pages linked to by breadcrumbs have usually already been visited,
    but in the case of deep linking, they allow access to other, more
    general pages. */
  line-height: 1.5;
  font-size: 13px;
}
.breadcrumb > * {
  display: inline-block;
  padding: .25em 0;
  border: 1px solid transparent;
  vertical-align: top;
}
/** @pattern .tabs

A set of navigation elements, arranged horizontally or vertically,
which cause an associated view to be changed.

To use tabs as the main navigation for the app, reflecting the current
app route, use the `nav-path` directive.

@example [nav-tabs.html, nav-tabs.js] Basic Tabs
*/
.tabs {
  width: 100%;
  white-space: nowrap;
  padding: 0 14px;
  font-family: "Open Sans", Verdana, Tahoma, sans-serif;
  font-weight: 600;
  font-size: 13px;
  letter-spacing: 0.01em;
  line-height: 21px;
}
.tabs > li {
  display: inline-block;
  white-space: nowrap;
  padding: 7px 14px;
  vertical-align: top;
}
.tabs > li > a {
  display: block;
  white-space: nowrap;
  padding: 0 14px;
  text-decoration: none;
  text-shadow: 0 1px rgba(0, 0, 0, 0.3);
  cursor: pointer;
}
.tabs > li > a,
.tabs > li > a[href] {
  color: inherit;
}
.tabs > li > a:hover,
.tabs > li > a:focus,
.tabs > li > a:active {
  color: inherit;
  text-decoration: none;
}
.tabs > li.is-active > a:hover {
  background-color: transparent;
}
.tabs.center- {
  /** Tabs which are centered. */
  text-align: center;
}
.tabs.primary- {
  /** Tabs used for the first level of navigation. */
  color: #fff;
  background-color: #5e7078;
  padding: 0 21px;
}
.tabs.primary- > li {
  padding: 6px 7px;
}
.tabs.primary- > li > a {
  border-radius: 4px;
  border: 1px solid rgba(255, 255, 255, 0.2);
}
.tabs.primary- > li > a:hover,
.tabs.primary- > li > a:focus,
.tabs.primary- > li > a:active {
  background-color: rgba(255, 255, 255, 0.2);
}
.tabs.primary- > li.is-active > a {
  background-color: rgba(255, 255, 255, 0.2);
  border-color: transparent;
}
.tabs.secondary- {
  /** Tabs used for the second level of navigation. */
  color: #fff;
  background-color: #5e7078;
}
.tabs.secondary- > li {
  padding: 7px 14px 6px 14px;
}
.tabs.secondary- > li:first-child {
  padding-left: 7px;
}
.tabs.secondary- > li > a {
  padding: 0;
  border-bottom: 1px solid transparent;
}
.tabs.secondary- > li.is-active > a {
  border-bottom-color: #444d56;
}
.tabs.tertiary- {
  /** Tabs used for the third level of navigation. */
  display: table;
  margin: 0 auto;
  padding: 10px 0;
  width: auto;
  letter-spacing: 0;
}
.tabs.tertiary-::after {
  content: none;
}
.tabs.tertiary- > li {
  line-height: 13px;
  min-height: 26px;
  padding-top: 5.5px;
  padding-bottom: 5.5px;
  font-size: 13px;
  display: table-cell;
  padding: 5px 0;
}
.tabs.tertiary- > li.iconic- {
  padding: 5.5px;
}
.tabs.tertiary- > li .glyph {
  font-size: 13px;
}
.tabs.tertiary- > li .button-text {
  max-height: 39px;
}
.tabs.tertiary- > li.next-:before,
.tabs.tertiary- > li.previous-:before {
  width: 18.38477631px;
  height: 18.38477631px;
}
.tabs.tertiary- > li.next- {
  margin-right: 13px;
}
.tabs.tertiary- > li.previous- {
  margin-left: 13px;
}
.tabs.tertiary- > li > a {
  color: inherit;
  text-shadow: inherit;
  background-color: transparent;
}
.tabs.secondary- {
  color: inherit;
  background-color: inherit;
}
.tabs.secondary- > li {
  padding: 7px 0 0;
  margin-left: 45px;
}
.tabs.secondary- > li:first-child {
  margin-left: 0;
  padding-left: 0;
}
.tabs.secondary- > li.is-active {
  border-bottom: 4px solid #6DB33F;
  padding-bottom: 5px;
}
.tabs.secondary- > li.is-active a {
  border: none;
  color: #5E6F78;
}
.tabs.secondary- > li a {
  float: right;
  color: #5E6F78;
  text-shadow: none;
}
@media screen and (min-width: 740px) /*at least S*/ {
  .tabs.secondary- > li a {
    padding-left: 10px;
  }
}
.dialog {
  /** An interaction which presents some small amount of information
    and then requests the user respond by choosing between one or more actions.

    @example [basic-dialog.html]

    Dialogs often occur within modals.
    */
}
.dialog .dialog-header {
  /** The heading or title at the top of the dialog. */
  padding: 20px 30px;
  height: 72px;
}
.dialog .dialog-header .avatar {
  vertical-align: top;
  margin-right: 20px;
}
.dialog .dialog-body {
  /** The main information presente in the dialog. */
  padding: 20px 30px;
}
.dialog .dialog-header + .dialog-body {
  padding: 0 30px 20px 30px;
}
.dialog .dialog-footer {
  /** A footer for dialogs that don't have actions. */
  padding: 0 30px 20px 30px;
}
.dialog .dialog-actions {
  /** The place where the user may choose which action
        to take (usually by clicking a button). */
  padding: 20px 30px;
  text-align: right;
  height: 72px;
}
.dialog.centered- {
  text-align: center;
}
/** @pattern .modal

The `modal` dialog may be defined anywhere within the `modal-context`.  A modal
may be opened by calling the `$modal.open` function from anywhere inside the
`modal-context`, and passing any scope values required by the `modal` template.

An inline modal dialog is given a name by assigning to the `modal` attribute.

@example [inline-modal.html, modal-demo.js] Modal dialog defined inline HTML

The dialog may also be defined in an external template file.

@example [external-modal.html, modal-demo.js, modalTemplate.html] Modal dialog defined in template

A modal dialog can also be opened from a controller inside the `modal-context`.
In such cases, it is also possible to pass the controller's scope to the modal
instead of passing parameters into the modal's scope.

@example [controller-modal.html, controller-modal.js, controllerModalTemplate.html] Open modal dialog from controller

A modal dialog may "return" a value to the controller via the promise returned by
`$modal.open`.

@example [promise-modal.html, promise-modal.js, promiseModalTemplate.html] Using the modal's promise

Confirmation dialogs are a common use case of modals.  There is a standard
confirmation dialog available which can be opened using `$modal.confirm`.

@example [confirm-modal.html, confirm-modal.js] Confirmation dialog

If a modal raises a message, that message will appear on top of the modal.

@example [message-modal.html, message-modal.js, messageModalTemplate.html] Modal opening a message

**/
[modal],
.modal {
  display: none;
}
.modal {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 100;
}
.modal.is-active {
  /** The state of the modal when it is visible. */
  display: block;
}
.modal .modal-window-overlay {
  /** This is transparent overlay that covers entire browser window */
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: transparent;
}
.modal .modal-overlay {
  /** @member */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(200, 200, 200, 0.4);
  overflow: hidden;
}
.modal .modal-frame {
  /** A frame in which to display the modal. */
  position: absolute;
  left: 50%;
  -webkit-transform: translate(-50%, 0);
  -moz-transform: translate(-50%, 0);
  -ms-transform: translate(-50%, 0);
  -o-transform: translate(-50%, 0);
  transform: translate(-50%, 0);
  min-height: 20%;
  max-width: 100%;
  overflow: hidden;
  width: 902px;
  border: 1px solid #ccc;
  border-top: none;
  border-radius: 0 0 2px 2px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);
  background: #fff;
}
.modal .modal-pane {
  /** The content of the modal. */
  position: relative;
}
.modal.mini- .modal-frame {
  width: 302px;
  padding-top: 0;
}
.modal.mini- .modal-frame .dialog-header {
  position: static;
  height: auto;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .modal.medium-max- .modal-frame {
    width: 302px;
  }
}
@media screen and (min-width: 740px) /*at least S*/ {
  .modal.medium-max- .modal-frame {
    width: 542px;
  }
}
.modal.headered- .modal-frame {
  padding-top: 72px;
}
.modal.footered- .modal-frame {
  padding-bottom: 72px;
}
.modal.footered- .modal-pane {
  border-bottom: 1px solid #ccc;
}
.modal .dialog-header,
.modal .wizard-header {
  position: absolute;
  left: 0;
  bottom: 100%;
  width: 100%;
  height: 72px;
  overflow: hidden;
}
.modal .dialog-actions,
.modal .wizard-actions {
  position: absolute;
  left: 0;
  top: 100%;
  width: 100%;
  height: 72px;
  overflow: hidden;
  background: #f0f0f0;
}
.modal .wizard {
  position: static;
  padding-bottom: 0;
  overflow: visible;
}
.modal.fixed-height- .modal-frame,
.modal.scrollable- .modal-frame {
  height: 95%;
}
.modal.fixed-height- .modal-pane,
.modal.scrollable- .modal-pane {
  height: 100%;
}
.modal.fixed-height- .dialog-body,
.modal.scrollable- .dialog-body {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
}
.modal.fixed-height-,
.modal.scrollable- {
  /** Make the modal as tall as it can be. */
}
.modal.fixed-height- .wizard,
.modal.scrollable- .wizard,
.modal.fixed-height- .wizard-sequence,
.modal.scrollable- .wizard-sequence,
.modal.fixed-height- .wizard-state,
.modal.scrollable- .wizard-state {
  height: 100%;
}
.modal.fixed-height- .wizard-state .wizard-body,
.modal.scrollable- .wizard-state .wizard-body {
  padding: 0;
}
.modal.fixed-height- .wizard-state .dialog-body,
.modal.scrollable- .wizard-state .dialog-body {
  position: static;
}
.modal.fixed-height- .wizard-state .dialog-body.full-height-,
.modal.scrollable- .wizard-state .dialog-body.full-height- {
  position: absolute;
}
.modal.scrollable- {
  /**
       Makes the modal scrollable, if its content does not fit in the allocated
       area.

       By default, the height of a modal depends on the content of the modal,
       which means it is possible for modals to be taller than the context area,
       which may introduce scrolling in the parent context, which is usually not
       what's intended.

       Scrollable modals will always be smaller than the context area.  A scrollbar
       will be added to the modal itself, if the content overflows the modal.

       In the case of a modal dialog, the header and body of the dialog
       will scroll, but space is reserved for the header at the top
       and action buttons at the bottom of the modal will always be visible.

       @example [scroll-modal.html, modal-demo.js] A modal with scrolling content
    */
}
.modal.scrollable- .dialog-body {
  overflow-x: hidden;
  overflow-y: auto;
}
.modal.scrollable- .dialog-body::-webkit-scrollbar {
  width: 12px;
  height: 12px;
}
.modal.scrollable- .dialog-body::-webkit-scrollbar-thumb {
  background: rgba(200, 200, 200, 0.8);
  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.2);
  border: 2px solid #fff;
  border-radius: 6px;
}
.modal.scrollable- .dialog-body::-webkit-scrollbar-track,
.modal.scrollable- .dialog-body::-webkit-scrollbar-corner {
  background: #fff;
}
.modal.is-active-add {
  display: block;
  -webkit-transition: all 1s linear;
  -moz-transition: all 1s linear;
  -o-transition: all 1s linear;
  transition: all 1s linear;
}
.modal.is-active-add .modal-frame {
  -webkit-transform: translate(-50%, -100%);
  -moz-transform: translate(-50%, -100%);
  -ms-transform: translate(-50%, -100%);
  -o-transform: translate(-50%, -100%);
  transform: translate(-50%, -100%);
  -webkit-transition: -webkit-transform 1s cubic-bezier(0.26, 0.99, 0.54, 0.99);
  -moz-transition: -moz-transform 1s cubic-bezier(0.26, 0.99, 0.54, 0.99);
  -o-transition: -o-transform 1s cubic-bezier(0.26, 0.99, 0.54, 0.99);
  transition: -ms-transform 1s cubic-bezier(0.26, 0.99, 0.54, 0.99);
  transition: transform 1s cubic-bezier(0.26, 0.99, 0.54, 0.99);
}
.modal.is-active-add .modal-overlay {
  background-color: transparent;
  -webkit-transition: background-color 1s linear;
  -moz-transition: background-color 1s linear;
  -o-transition: background-color 1s linear;
  transition: background-color 1s linear;
}
.modal.is-active-add.is-active-add-active .modal-frame {
  -webkit-transform: translate(-50%, 0);
  -moz-transform: translate(-50%, 0);
  -ms-transform: translate(-50%, 0);
  -o-transform: translate(-50%, 0);
  transform: translate(-50%, 0);
}
.modal.is-active-add.is-active-add-active .modal-overlay {
  background-color: rgba(200, 200, 200, 0.4);
}
.modal.is-active-remove {
  display: block;
  -webkit-transition: all 0.2s linear;
  -moz-transition: all 0.2s linear;
  -o-transition: all 0.2s linear;
  transition: all 0.2s linear;
}
.modal.is-active-remove .modal-frame {
  -webkit-transform: translate(-50%, 0);
  -moz-transform: translate(-50%, 0);
  -ms-transform: translate(-50%, 0);
  -o-transform: translate(-50%, 0);
  transform: translate(-50%, 0);
  -webkit-transition: -webkit-transform 0.2s ease-in;
  -moz-transition: -moz-transform 0.2s ease-in;
  -o-transition: -o-transform 0.2s ease-in;
  transition: -ms-transform 0.2s ease-in;
  transition: transform 0.2s ease-in;
}
.modal.is-active-remove .modal-overlay {
  background-color: rgba(200, 200, 200, 0.4);
  -webkit-transition: background-color 0.2s linear;
  -moz-transition: background-color 0.2s linear;
  -o-transition: background-color 0.2s linear;
  transition: background-color 0.2s linear;
}
.modal.is-active-remove.is-active-remove-active .modal-frame {
  -webkit-transform: translate(-50%, -100%);
  -moz-transform: translate(-50%, -100%);
  -ms-transform: translate(-50%, -100%);
  -o-transform: translate(-50%, -100%);
  transform: translate(-50%, -100%);
}
.modal.is-active-remove.is-active-remove-active .modal-overlay {
  background-color: transparent;
}
.modal-context {
  /** @helper
    Provides a context relative to which the modal will be opened.  When opened,
    the modal is positioned relative to, and on top of, its context.  The context
    is often a `pane`.

    The `modal-context` directive defines the area covered by the modal.  Usually, this
    will be applied to the entire app, but there may be situations (e.g., in multi-pane apps)
    when the modal is intended to cover only a portion of the screen.

    In addition to defining a rectangular region, `modal-context`
    establishes a stacking context, which means that elements outside the `modal-context`
    but positioned over the `modal-context` will not be covered by the modal overlay.

    In the following example, the `modal-context` covers the right half of the pane.
    The element outside the modal context is not obscured by modal overlay even though
    the overlay has a higher `z-index`.  If this is not intended, the solution is to
    add a positive `z-index` value to the `modal-context` itself.

    @example [contextual-modal.html, modal-demo.js, modalTemplate.html] Local modal context and stacking
    */
  position: relative;
  z-index: 0;
}
.masthead {
  /** @pattern **/
  position: relative;
}
.masthead .masthead-left,
.masthead .masthead-right {
  position: absolute;
  top: 0;
}
.masthead .masthead-left {
  left: 0;
}
.masthead .masthead-center {
  text-align: center;
}
.masthead .masthead-right {
  right: 0;
  text-align: right;
}
.masthead.desktop- {
  margin: 0 auto;
  width: 1320px;
}
@media screen and (max-width: 1339px) /*at most M*/ {
  .masthead.desktop- {
    width: 960px;
  }
}
@media screen and (max-width: 979px) /*at most S*/ {
  .masthead.desktop- {
    width: 720px;
  }
}
@media screen and (min-width: 1700px) /*at least W*/ {
  .masthead.desktop- {
    width: 1680px;
  }
}
.masthead.desktop- .masthead-left,
.masthead.desktop- .masthead-right {
  width: 220px;
  box-sizing: content-box;
}
.masthead.desktop- .masthead-center {
  float: none;
  width: auto;
  overflow: hidden;
}
.masthead.desktop- .masthead-right {
  text-align: right;
}
.masthead.desktop- .masthead-left {
  width: 200px;
  top: 10px;
}
@media screen and (max-width: 979px) /*at most S*/ {
  .masthead.desktop- .masthead-left {
    width: 170px;
    top: 13px;
  }
}
.masthead.desktop- .userinfo-avatar {
  font-size: 24px;
  opacity: .6;
}
.masthead.desktop- .dropdown-toggle {
  font-size: 13px;
  color: inherit;
  height: 50px;
  padding-right: 8px;
}
.masthead.desktop- .dropdown-toggle > * {
  vertical-align: middle;
}
.masthead.desktop- .dropdown-toggle > * + * {
  margin-left: 10px;
}
.masthead.desktop- .userinfo .dropdown-panel ul.menu {
  text-align: left;
}
.masthead.desktop- .userinfo-name {
  max-width: 130px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
}
.masthead.desktop- .input-.bar {
  background-color: #ebeef0;
  border: 1px solid #e1e6e9;
  border-radius: 4px;
  vertical-align: top;
  margin-top: 14px;
}
.masthead.desktop- .input-.bar::before,
.masthead.desktop- .input-.bar > * {
  border: 0;
}
.masthead.desktop- .input-.bar .clear-search {
  position: absolute;
  top: 0;
  right: 0;
}
.masthead.desktop- .input-.bar:active {
  border-color: #c4cdd3;
}
.masthead.desktop- .input-.bar:active > .input-bar-action {
  visibility: visible;
}
.masthead.desktop- .input-.bar > input {
  height: 30px;
  color: #9B9B9B;
}
.masthead.desktop- .input-.bar .symbol {
  stroke: #9B9B9B;
  fill: #9B9B9B;
}
@media screen and (max-width: 979px) /*at most S*/ {
  .masthead.desktop- .masthead-right {
    width: 100px;
    box-sizing: content-box;
  }
  .masthead.desktop- .userinfo-name {
    display: none;
  }
  .masthead.desktop- .search-.input {
    width: 15em;
  }
}
.masthead.mobile- {
  font-size: 18px;
  margin: 0;
}
.masthead.mobile-.search- {
  padding: 0;
}
.masthead.mobile- .link-.button,
.masthead.mobile- a.link {
  color: inherit;
  border: none;
}
.masthead.mobile- .symbol {
  font-size: 21px;
}
.masthead.mobile- .symbol[symbol^="sort-"] {
  width: 1.5em;
}
.masthead.mobile- .button {
  vertical-align: 0.2em;
}
.masthead.mobile- .button > * {
  vertical-align: middle;
}
.masthead.mobile- .masthead-left,
.masthead.mobile- .masthead-right {
  width: 100%;
  height: 0;
}
.masthead.mobile- .masthead-left .dropdown,
.masthead.mobile- .masthead-right .dropdown {
  position: static;
}
.masthead.mobile- .masthead-left .dropdown .dropdown-panel,
.masthead.mobile- .masthead-right .dropdown .dropdown-panel {
  top: 50px;
  margin-top: 0;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-top: none;
  width: 100%;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
}
.masthead.mobile- .searchContainer {
  opacity: 1;
  transition: all ease-in-out 0.225s;
  -webkit-transition: all ease-in-out 0.225s;
  -moz-transition: all ease-in-out 0.225s;
  -ms-transition: all ease-in-out 0.225s;
  position: absolute;
  top: 0;
  width: 100%;
  background: #fff;
  z-index: 1;
  padding: 0 10px;
}
.masthead.mobile- .searchContainer svg {
  font-size: 16px;
}
.masthead.mobile- .searchContainer .icon-left,
.masthead.mobile- .searchContainer .icon-right {
  position: absolute;
  top: 5px;
}
.masthead.mobile- .searchContainer .icon-left {
  left: 10px;
}
.masthead.mobile- .searchContainer .icon-right {
  right: 10px;
}
.masthead.mobile- .searchContainer .inputContainer {
  position: relative;
  margin-left: 0;
  transition: all ease-in-out 0.25s;
  -webkit-transition: all ease-in-out 0.25s;
  -moz-transition: all ease-in-out 0.25s;
  -ms-transition: all ease-in-out 0.25s;
}
.masthead.mobile- .searchContainer .inputContainer #searchInput {
  border: 1px solid #e1e6e9;
  background-color: #ebeef0;
  border-radius: 1px;
  padding-left: 35px;
  height: 35px;
  -webkit-appearance: none;
  line-height: normal;
  width: 80%;
  transition: all ease-in-out 0.25s;
  -webkit-transition: all ease-in-out 0.25s;
  -moz-transition: all ease-in-out 0.25s;
  -ms-transition: all ease-in-out 0.25s;
}
.masthead.mobile- .searchContainer .inputContainer .symbol {
  stroke: #9B9B9B;
  fill: #9B9B9B;
}
.masthead.mobile- .searchContainer .close {
  float: right;
  color: #4990C2;
}
.masthead.mobile- .searchContainer.ng-hide {
  opacity: 0;
  z-index: -1;
}
.masthead.mobile- .searchContainer.ng-hide .inputContainer {
  margin-left: 75%;
  transition: all ease-in-out 0.2s;
  -webkit-transition: all ease-in-out 0.2s;
  -moz-transition: all ease-in-out 0.2s;
  -ms-transition: all ease-in-out 0.2s;
}
.masthead.mobile- .searchContainer.ng-hide .inputContainer #searchInput {
  width: 5%;
  transition: all ease-in-out 0.2s;
  -webkit-transition: all ease-in-out 0.2s;
  -moz-transition: all ease-in-out 0.2s;
  -ms-transition: all ease-in-out 0.2s;
}
.masthead.mobile- .searchContainer .input {
  color: #9B9B9B;
}
.masthead.mobile- .mastheadContainer {
  margin: 0 10px;
  position: relative;
}
.masthead.mobile- .is-active .searchDropdown.dropdown-panel {
  display: block;
}
.masthead.mobile- .link-.button.symbolHighlight {
  background-color: #6DB33F;
  color: #FFFFFF;
}
.masthead-logo {
  width: 100%;
  height: 0;
  padding-bottom: 18.01801802%;
  background-image: url('../app/graphics/logo.svg');
  background-position: left center;
  border: none;
}
.selected-category-name {
  max-width: 100px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  vertical-align: middle;
}
.launcher-main .page > .grid .emblem::before {
  border-radius: 4px;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.18);
}
.launcher-main .page > .grid .emblem:hover::before {
  border: 2px solid #3d87c3;
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.36);
}
.launcher-main .page > .grid .emblem-title {
  font-size: 13px;
  font-family: "Open Sans Semibold", Verdana, Tahoma, sans-serif;
}
.launcher-main .page.full-bleed- {
  padding: 0px 0px 10px 0px;
}
.launcher-main .launcheritem:hover {
  cursor: pointer;
}
.launcher-main .launcheritem-details-dialog {
  width: 420px;
  min-height: 310px;
  position: absolute;
  background-color: #fff;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
  padding: 25px;
  padding-bottom: 100px;
  border: 1px solid #a8a6a8;
  z-index: 2;
  -webkit-transform: translateZ(2px);
  cursor: default;
}
.launcher-main .launcheritem-details-dialog.north-,
.launcher-main .launcheritem-details-dialog.northeast-,
.launcher-main .launcheritem-details-dialog.northwest- {
  bottom: -10px;
}
.launcher-main .launcheritem-details-dialog.south-,
.launcher-main .launcheritem-details-dialog.southeast-,
.launcher-main .launcheritem-details-dialog.southwest- {
  top: -10px;
}
.launcher-main .launcheritem-details-dialog.northeast-,
.launcher-main .launcheritem-details-dialog.southeast- {
  left: -10px;
}
.launcher-main .launcheritem-details-dialog.northwest-,
.launcher-main .launcheritem-details-dialog.southwest- {
  right: -10px;
}
.launcher-main .launcheritem-details-dialog.north-,
.launcher-main .launcheritem-details-dialog.south- {
  left: 50%;
  -webkit-transform: translateX(-50%);
  -moz-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  -o-transform: translateX(-50%);
  transform: translateX(-50%);
}
.launcher-main .launcheritem-details-dialog .dialog-image {
  float: left;
  background-repeat: no-repeat;
  border: 1px solid #a8a6a8;
  border-radius: 20%;
  background-position: center;
  background-color: white;
  background-size: 64px;
}
.launcher-main .launcheritem-details-dialog .emblem {
  margin-left: -90px;
  float: left;
}
.launcher-main .launcheritem-details-dialog .symbol {
  font-size: 30px;
  stroke: none;
}
.launcher-main .launcheritem-details-dialog .symbol[symbol="trash"] {
  fill: #D0011B;
}
.launcher-main .launcheritem-details-dialog .symbol[symbol="launch"] {
  fill: #0095D3;
  font-size: 26px;
  padding-top: 5px;
}
.launcher-main .launcheritem-details-dialog .symbol[symbol="close"] {
  fill: #5E6F78;
  font-size: 15px;
}
.launcher-main .launcheritem-details-dialog .symbol[symbol="star"] {
  fill: none;
  stroke: #9B9B9B;
}
.launcher-main .launcheritem-details-dialog .symbol[symbol="star"].filled- {
  fill: #FFC20E;
  stroke: none;
}
.launcher-main .launcheritem-details-dialog .symbol[symbol="power"] {
  font-size: 35px;
  fill: #9B9B9B;
  stroke: #9B9B9B;
}
.launcher-main .launcheritem-details-dialog .symbol[symbol="default-icon"] {
  fill: none;
  stroke: #9B9B9B;
}
.launcher-main .launcheritem-details-dialog .symbol[symbol="set-password"] {
  fill: none;
  stroke: none;
}
.launcher-main .launcheritem-details-dialog .dialog-close {
  position: absolute;
  top: 0;
  right: 0;
  width: 2em;
  height: 2em;
  margin: 5px;
}
.launcher-main .launcheritem-details-dialog dl {
  margin: .5em 0;
}
.launcher-main .launcheritem-details-dialog dt,
.launcher-main .launcheritem-details-dialog dd {
  display: inline;
  line-height: 1.5;
  margin: 0;
}
.launcher-main .launcheritem-details-dialog dt + dd:before {
  content: ' ';
  display: inline-block;
  width: .5em;
}
.launcher-main .launcheritem-details-dialog dd:after {
  display: block;
  content: '';
  height: 0;
}
.launcher-main .launcheritem-details-dialog dt {
  font-weight: 600;
}
.launcher-main .launcheritem-details-dialog .info-container {
  font-size: 13px;
  padding-left: 90px;
}
.launcher-main .launcheritem-details-dialog .info-container h3 {
  font-size: 16px;
  word-wrap: break-word;
  line-height: 1.2em;
  margin: 0;
  padding-top: 8px;
}
.launcher-main .launcheritem-details-dialog .dialog-text {
  overflow: hidden;
  width: 100%;
}
.launcher-main .launcheritem-details-dialog .dialog-text .app-description {
  padding: 15px 0;
}
.launcher-main .launcheritem-details-dialog .dialog-image {
  margin-right: 15px;
  width: 100px;
  height: 100px;
}
.launcher-main .launcheritem-details-dialog .dialog-actions {
  list-style: none;
  padding: 25px;
  bottom: 0px;
  position: absolute;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  margin-left: -25px;
  width: 100%;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .actions {
  height: 30px;
  margin-bottom: 1em;
  width: auto;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .actions li {
  padding: 0 0.5em;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .actions a:active,
.launcher-main .launcheritem-details-dialog .dialog-actions .actions a:focus {
  outline: none;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-btn {
  padding-left: 0.8em;
  padding-right: 0.8em;
  background-color: #6DB33F;
  border-color: #6DB33F;
  color: #FFFFFF;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-btn:hover {
  background-color: #5e9a36;
  horder-color: #5e9a36;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-link {
  line-height: 13px;
  min-height: 26px;
  padding-top: 5.5px;
  padding-bottom: 5.5px;
  font-size: 13px;
  padding-left: 0;
  padding-right: 0;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-link.iconic- {
  padding: 5.5px;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-link .glyph {
  font-size: 13px;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-link .button-text {
  max-height: 39px;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-link.next-:before,
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-link.previous-:before {
  width: 18.38477631px;
  height: 18.38477631px;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-link.next- {
  margin-right: 13px;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-link.previous- {
  margin-left: 13px;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-link.is-disabled {
  color: rgba(151, 151, 151, 0.7);
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-btn,
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-link {
  padding-top: 6px;
  padding-bottom: 6px;
  float: right;
}
.launcher-main .launcheritem-details-dialog .dialog-actions .launch-options li {
  margin-left: 0.5em;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .launcher-main .launcheritem-details-dialog .dialog-actions > li {
    width: 16.66666667%;
    padding: 10px 0 0;
  }
}
@media screen and (max-width: 539px) /*at most MP*/ {
  .launcher-main .launcheritem-details-dialog {
    width: 300px;
    min-height: auto;
  }
  .launcher-main .launcheritem-details-dialog .dialog-image {
    display: none;
  }
}
.launcher-main .launcheritem-details-dialog .launch-options li {
  float: none;
  margin-top: 2px;
}
.launcher-main .launcheritem-details-dialog .launch-options .button.is-disabled {
  float: right;
}
.launcher-main .launcheritem-details-dialog .symbol[symbol="carat-down"] {
  fill: white;
  stroke: white;
  font-size: 15px;
  padding-left: 3px;
}
.launcher-main .emblem a {
  cursor: pointer;
}
.launcher-main .emblem .emblem-title {
  white-space: normal;
  line-height: 1.25em;
  height: 2.5em;
}
@media screen and (min-width: 980px) /*at least M*/ {
  .launcher-main .searchFilterMsg {
    display: none;
  }
  .launcher-main .dialog-close {
    margin: 5px;
  }
}
.launcher-main .welcomeMessageContainer {
  height: 98px;
  width: 100%;
  margin: auto;
  padding: 40px 22px 22px 22px;
}
.launcher-main .welcomeMessageContainer .welcomeMessage {
  font-size: 28px;
  line-height: 36px;
  font-weight: 100;
  -webkit-font-smoothing: antialiased;
  width: 65%;
  float: left;
  max-width: 100%;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
}
.launcher-main .welcomeMessageContainer .desktopFilterBarContainer .dropdown-panel {
  max-width: 144px;
}
.launcher-main .welcomeMessageContainer .desktopFilterBarContainer .dropdown-panel .menu-item-name {
  max-width: 99px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
}
.launcher-main .welcomeMessageContainer .desktopFilterBarContainer .filterName {
  max-width: 114px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
}
.launcher-main .mobileFilterBarContainer {
  margin: 16px 0 8.5px 0;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .launcher-main .mobileFilterBarContainer {
    padding-left: 20px;
    padding-right: 20px;
  }
}
@media screen and (max-width: 359px) /*at most SP*/ {
  .launcher-main .mobileFilterBarContainer {
    padding-left: 10px;
    padding-right: 10px;
  }
}
.launcher-main #launch-progress-container {
  position: absolute;
  top: 0px;
  left: 0px;
  background-color: rgba(200, 200, 200, 0.4);
  height: 100%;
  width: 100%;
  display: none;
}
.launcher-main #launch-progress-container > .spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  z-index: 2;
}
.launch-password-dialog .input-field {
  border: none;
  border-bottom: 1px solid #99a8b5;
  border-radius: 0;
  padding: 0 0 8px 0;
  margin: 0;
  box-shadow: none;
}
.launch-password-dialog .password-field {
  width: 100%;
}
.launch-password-dialog .error-message {
  font-weight: 200;
  font-size: 15px;
  color: #E4331E;
}
.launch-password-dialog .spinner {
  top: 50%;
  left: 50%;
  position: absolute;
  transform: translate(-50%, -50%);
}
.launch-password-dialog.fade {
  opacity: 0.5;
}
.dialog-info-icon .symbol {
  font-size: 30px;
  stroke: none;
}
.dialog-info-icon .symbol[symbol="info"] {
  fill: #3A87C5;
  stroke: #3A87C5;
}
/** @pattern .catalogitem

Card layout for catalog items which is vertical on desktop/tablet and horizontal layout on mobile.
Each catalog item has an app icon (emblem), name, other metadata, and a button.
On mobile, the layout changes to span the width of the parent box for a vertical list and
we float the image left in case of mobile view.

**/
.catalogitem {
  position: relative;
  cursor: pointer;
}
.notouch- .catalogitem {
  border-radius: 4px;
  border-width: 2px;
  border-color: transparent;
  border-style: solid;
}
.notouch- .catalogitem:hover {
  border-color: #3d87c3;
  box-shadow: 0px 2px 8px 0 rgba(0, 0, 0, 0.36);
}
.notouch- .catalogitem:hover .box-module {
  box-shadow: none;
}
.catalogitem .box-module {
  background: #ffffff;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.18);
}
@media screen and (min-width: 540px) /*at least LP*/ {
  .catalogitem .box-module {
    border-radius: 4px;
  }
}
@media screen and (min-width: 740px) /*at least S*/ {
  .catalogitem .box-module {
    padding: 20px 0px 0px;
  }
}
.catalogitem .catalogitem-info {
  margin: 10px 10px;
  color: #71828B;
  font-size: 14px;
  line-height: 18px;
  height: 72px;
}
@media screen and (min-width: 540px) /*at least LP*/ {
  .catalogitem .catalogitem-info {
    margin: 10px 10px;
  }
}
.catalogitem .catalogitem-name p {
  color: #0095D3;
  display: inline-block;
  overflow: hidden;
  max-width: 100%;
  max-height: 36px;
  text-overflow: ellipsis;
}
@media screen and (max-width: 539px) /*at most MP*/ {
  .catalogitem .catalogitem-name p {
    white-space: nowrap;
  }
}
.catalogitem .catalogitem-type {
  font-size: 13px;
}
.catalogitem .catalogitem-rating {
  margin-bottom: .5em;
}
.catalogitem .catalogitem-action {
  font-size: 13px;
}
@media screen and (min-width: 740px) /*at least S*/ {
  .catalogitem .catalogitem-action {
    border: 0;
    border-radius: 0;
    font-family: "Open Sans Semibold", Verdana, Tahoma, sans-serif;
    height: 40px;
    background-color: #ebeef0;
  }
  .catalogitem .catalogitem-action:disabled {
    opacity: 1;
    background-color: #ebeef0;
  }
  .catalogitem .catalogitem-action:disabled span {
    opacity: 0.5;
  }
}
.catalogitem .catalogitem-actiontext {
  max-width: 100%;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
  padding-bottom: 1px;
}
.catalogitem .catalogitem-mgmtrequired-desktop {
  float: right;
}
@media screen and (min-width: 740px) /*at least S*/ {
  .catalogitem .catalogitem-mgmtrequired-desktop {
    margin-right: 10px;
  }
}
.catalogitem .catalogitem-mgmtrequired-mobile {
  display: none;
}
.catalogitem a[href] {
  color: inherit;
}
.catalogitem .emblem.simple-::before {
  border: none;
}
@media screen and (max-width: 539px) /*at most MP*/ {
  .catalogitem .catalogitem-type {
    max-width: 45%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}
@media screen and (max-width: 539px) /*at most MP*/ {
  .catalogitem .box-module {
    border: 2px solid transparent;
    height: 80px;
    padding: 10px 10px 10px 80px;
    margin-bottom: 16px;
  }
  .notouch- .catalogitem .box-module,
  .notouch- .catalogitem .box-module:hover {
    padding: 8px 8px 8px 88px;
  }
  .catalogitem .emblem {
    position: absolute;
    left: 0;
    top: 0;
  }
  .catalogitem .emblem::before {
    border: none;
  }
  .catalogitem .catalogitem-info {
    margin: 0;
    height: 36px;
  }
  .catalogitem .catalogitem-action {
    width: 8em;
    position: absolute;
    bottom: 10px;
    right: 10px;
    padding-left: .5em;
    padding-right: .5em;
    letter-spacing: 0.05em;
  }
  .catalogitem .catalogitem-mgmtrequired-mobile {
    padding-right: 7.8em;
    float: right;
    display: block;
  }
  .catalogitem .catalogitem-mgmtrequired-desktop {
    display: none;
  }
}
.catalog-main {
  overflow: visible;
}
@media screen and (min-width: 980px) /*at least M*/ {
  .catalog-main .appcenter-filter-show {
    visibility: hidden;
  }
  .catalog-main .searchFilterMsg {
    display: none;
  }
}
@media screen and (min-width: 740px) /*at least S*/ and (max-width: 979px) /*S only*/ {
  .catalog-main .appcenter-categorydropdown {
    margin: -45px 0 0 0px;
  }
}
@media screen and (max-width: 539px) /*at most MP*/ {
  .catalog-main .grid > * {
    padding: 7px 10px;
  }
}
.catalog-main .myapps-icon {
  background: #0095D3;
}
.catalog-main .frame-header .page {
  left: 0px;
}
.catalog-main .appcenter-categorydropdown {
  padding: 10px 10px 10px 20px;
  float: left;
  margin: -42px 0 0;
}
.catalog-main .dropdown-panel .full-width-.button {
  font-variant: small-caps;
  text-transform: lowercase;
}
.catalog-main .frame-sidebar .menu > li {
  padding: 0.5em 20px;
}
.catalog-main .frame-sidebar .menu li.menu-hrule {
  border-bottom: 1px solid #bbc8d1;
  padding: 0;
}
.catalog-main .frame-sidebar .menu .menu-title {
  padding: 0 0 10px 0;
}
.catalog-main .frame-sidebar .menu .menu-title img {
  width: 12px;
  color: #44525e;
}
.catalog-main .frame-sidebar .menu .menu-title .menu-title-text {
  padding-left: 4px;
}
.catalog-main .frame-sidebar .menu > li > a {
  color: inherit;
}
.catalog-main .frame-sidebar .menu > li.is-selected > a {
  font-weight: bold;
  background-color: inherit;
}
.catalog-main .mobileFilterBarContainer {
  margin: 16px 0 16px 0;
}
.catalog-main .welcomeMessageContainer {
  height: 110px;
  width: 100%;
  margin: auto;
  padding: 40px 22px 34px 22px;
}
.catalog-main .welcomeMessageContainer .welcomeMessage {
  font-size: 28px;
  line-height: 36px;
  font-weight: 100;
  -webkit-font-smoothing: antialiased;
  float: left;
  max-width: 100%;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
}
.catalog-main .welcomeMessageContainer .desktopFilterBarContainer .dropdown-panel {
  max-width: 180px;
}
.catalog-main .welcomeMessageContainer .desktopFilterBarContainer .dropdown-panel .menu-item-name {
  max-width: 135px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
}
.catalog-main .welcomeMessageContainer .desktopFilterBarContainer .mobileFilterBar .filterDropdown {
  display: block;
}
.catalog-main .welcomeMessageContainer .desktopFilterBarContainer .mobileFilterBar .filterName {
  max-width: 145px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
}
@media screen and (max-width: 979px) /*at most S*/ {
  .catalog-main .welcomeMessageContainer .welcomeMessage {
    width: 65%;
  }
}
@media screen and (min-width: 740px) /*at least S*/ {
  .catalog-main .sidebarred-.frame {
    padding-bottom: 110px;
  }
  .catalog-main .page.full-bleed- {
    padding: 0px 10px 10px 10px;
  }
}
.catalog-main.frame.view- > .headered-.frame.no-tabs- {
  padding-top: 0;
}
.catalog-main.frame.view- > .headered-.frame.no-tabs- > header,
.catalog-main.frame.view- > .headered-.frame.no-tabs- > .frame-header,
.catalog-main.frame.view- > .headered-.frame.no-tabs- > .frame-body > .frame-header {
  height: 0;
  line-height: 0;
}
.catalog-main.frame.view- > .headered-.frame.no-tabs- > aside,
.catalog-main.frame.view- > .headered-.frame.no-tabs- > .frame-sidebar,
.catalog-main.frame.view- > .headered-.frame.no-tabs- > .frame-body > .frame-sidebar {
  padding-top: 0;
}
.catalog-main.frame.view- > .headered-.frame.no-tabs- > header,
.catalog-main.frame.view- > .headered-.frame.no-tabs- > .frame-header,
.catalog-main.frame.view- > .headered-.frame.no-tabs- > .frame-body > .frame-header {
  display: none;
}
.catalog-main.frame.view- > .headered-.frame.no-tabs- .frame-sidebar {
  padding-top: 120px;
}
.frame-header {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.frame-body {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.searchFilterMsg {
  text-align: center;
}
.modal .modal-frame {
  position: fixed;
  top: 50%;
  left: 50%;
  margin: auto;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .modal .modal-frame {
    position: absolute;
  }
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .installPrompt-action {
    max-width: 50%;
    padding: 6px 1em;
  }
}
.button .button-text,
button .button-text,
input[type="button"] .button-text,
input[type="submit"] .button-text,
.tabs.tertiary- > li .button-text {
  text-rendering: auto;
}
.details-main nav .bar {
  display: table;
  margin: 0 auto;
  width: 100%;
  max-width: 30em;
}
.details-main nav .bar > * {
  width: 50%;
}
.details-main nav .bar .button {
  background-image: none;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
}
.details-main nav .bar .button:first-child,
.details-main nav .bar .button:last-child {
  border-radius: 0;
}
@media screen and (max-width: 979px) /*at most S*/ {
  .details-main .grid.appdetails-screenshots > li {
    width: 25%;
    box-sizing: border-box;
  }
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .details-main .grid.appdetails-screenshots > li {
    width: 33.33333333%;
    box-sizing: border-box;
  }
}
.details-main .grid.appdetails-screenshots > li .image {
  border-color: 1px solid #eee;
  cursor: pointer;
}
.details-main .details-filter-bar {
  height: 52px;
  background-color: #fff;
  border-bottom: 1px solid #c4cdd3;
}
.details-main .details-filter-bar .link-.button {
  color: inherit;
  border: none;
}
@media screen and (min-width: 740px) /*at least S*/ {
  .appdetails {
    margin: 20px 75px;
  }
}
@media screen and (min-width: 980px) /*at least M*/ {
  .appdetails {
    margin: 20px 100px;
  }
}
@media screen and (min-width: 980px) /*at least M*/ {
  .appdetails {
    margin: 20px 150px;
  }
}
.appdetails .appdetails-rating {
  float: left;
  line-height: 2em;
}
.appdetails .appdetails-action {
  float: right;
  margin-top: 0.5em;
}
.appdetails .appdetails-action button {
  font-size: 11px;
  letter-spacing: 0.15em;
}
@media screen and (max-width: 539px) /*at most MP*/ {
  .appdetails .appdetails-action {
    clear: both;
    float: none;
  }
}
.appdetails .appdetails-nodata {
  text-align: center;
}
.appdetails .list {
  word-wrap: break-word;
}
.inline-.appdetails .list > li + li {
  margin-left: 1em;
}
.appdetails .media-body h2 {
  padding-top: 10px;
}
.zoomedImageCarousel {
  height: 100%;
}
.zoomedImageCarousel .dialog-body {
  padding: 0;
  background: #e1e6e9;
}
.zoomedImageCarousel .zoomedImageCarouselSlides {
  padding: 10px 0;
  height: 88%;
  height: calc(100% - 70px);
}
.zoomedImageCarousel .zoomedImageCarouselSlides ul[rn-carousel] {
  height: 100%;
  width: 100%;
}
.zoomedImageCarousel .zoomedImageCarouselSlides ul[rn-carousel] li:last-child {
  padding: 0 5px;
}
.zoomedImageCarousel .carouselHeader {
  height: 50px;
  padding: 10px;
  font-weight: 600;
}
.zoomedImageCarousel .carouselHeader label {
  color: inherit;
}
.zoomedImageCarousel .carouselHeader a {
  float: right;
}
.zoomedImageCarousel .carouselFooter {
  height: 20px;
  position: absolute;
  width: 100%;
  bottom: 0;
  text-align: center;
  background: #fff;
}
.zoomedImageCarousel .carouselFooter .rn-carousel-indicator > span {
  color: #71828B;
}
.zoomedImageCarousel .carouselFooter .rn-carousel-indicator .active {
  color: #0095D3;
}
.zoomedImageCarousel .slide-img {
  height: 100%;
  margin: auto;
  position: relative;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center center;
}
.usersettings .usersettings-title {
  text-align: center;
  font-size: 18px;
}
.usersettings nav {
  margin-top: 2em;
}
.usersettings nav li {
  font-size: 16px;
}
.usersettings .media {
  padding-top: 2em;
}
.usersettings .media .media-image {
  width: 50px;
}
.usersettings .media .media-image .symbol {
  font-size: 50px;
  color: grey;
}
.usersettings .media .media-body {
  padding-top: 1.2em;
}
.usersettings .media .media-body .usersettings-name {
  font-size: 14px;
  font-weight: 600;
}
.usersettings .media .media-body .usersettings-email {
  font-size: 13px;
}
/** @pattern .message

The message dialog

@example [message.html, message-demo.js, externalMessageTemplate.html] Message dialogs

**/
.notify {
  position: fixed;
  bottom: 0;
  width: 100%;
  transition: transform .3s ease;
}
.notify.move-right {
  transform: translateX(87.5%);
}
.message {
  /** The dialog box which contains the content of the of the message. */
  width: 100%;
  margin: 40px auto;
  color: #444d56;
  border: 1px solid #828082;
  border-radius: 2px;
  background: #fff;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.25);
  padding: 0.5em 1em;
  overflow: hidden;
  position: relative;
}
.message .message-icon {
  display: none;
  font-size: 13px;
  position: absolute;
  left: 1.5em;
  top: 0.5em;
}
.message .message-icon:after {
  -webkit-transform: translateY(-0.12em);
  -moz-transform: translateY(-0.12em);
  -ms-transform: translateY(-0.12em);
  -o-transform: translateY(-0.12em);
  transform: translateY(-0.12em);
}
.message.info- {
  /** A general, informative message. */
  border-color: #31a7d9;
  background-color: #31a7d9;
}
.message.info- .message-icon {
  display: block;
  color: #31a7d9;
}
.message.info- .typography {
  color: #fff;
}
.message.error- {
  /** A message which states that an error occur. */
  border-color: #df464b;
  background-color: #df464b;
}
.message.error- .message-icon {
  display: block;
  color: #df464b;
}
.message.error- .typography {
  color: #fff;
}
.message.warning- {
  /** A message which states that an error occur. */
  border-color: #fdb813;
  background-color: #fdb813;
}
.message.warning- .message-icon {
  display: block;
  color: #fdb813;
}
.message.success- {
  /** A message which states that a requested operation was successful. */
  border-color: #6bb23e;
  background-color: #6bb23e;
}
.message.success- .message-icon {
  display: block;
  color: #6bb23e;
}
.message .button.close- {
  position: absolute;
  right: 1.5em;
  top: 0.5em;
  color: rgba(0, 0, 0, 0.5);
}
.message .message-actions {
  text-align: right;
}
.message .dialog {
  margin: -0.5em -1em;
}
.message-queue {
  position: absolute;
  bottom: 0;
  width: 100%;
  left: 50%;
  z-index: 200;
  -webkit-transform: translate(-50%, 0);
  -moz-transform: translate(-50%, 0);
  -ms-transform: translate(-50%, 0);
  -o-transform: translate(-50%, 0);
  transform: translate(-50%, 0);
}
.message-queue .message {
  width: 100%;
  margin: 0;
}
.message-queue .message .message-body {
  margin: 0 15px;
}
.message-body > p {
  text-align: center;
}
.installButton {
  cursor: pointer;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .installButton.add- {
    color: #6fb246;
    border-color: #6fb246;
    background-color: #FFFFFF;
  }
  .installButton.update- {
    color: #3A87C5;
    border-color: #3A87C5;
    background-color: #FFFFFF;
  }
}
.installButton.add- {
  color: #6fb246;
}
.installButton.add-:hover {
  background-color: #6fb246;
  border-color: #6fb246;
  color: #FFFFFF;
}
.installButton.update- {
  color: #3A87C5;
}
.installButton.update-:hover {
  background-color: #3A87C5;
  border-color: #3A87C5;
  color: #FFFFFF;
}
.thinapp-devices .emblem {
  float: left;
  width: 100px;
  margin-right: 10px;
  margin-bottom: 10px;
}
.thinapp-devices .device-table {
  margin-top: 20px;
}
.thinapp-devices .device-table tr td {
  white-space: normal;
}
.thinapp-devices .device-icon {
  height: 30px;
  width: 30px;
  vertical-align: middle;
}
.thinapp-devices h3 {
  font-weight: bold;
}
.thinapp-devices table {
  border: 1px solid #ddd;
  border-collapse: collapse;
  width: 100%;
  margin-bottom: 20px;
  background-color: transparent;
  display: table;
}
.thinapp-devices thead {
  display: table-header-group;
  vertical-align: middle;
  border-color: inherit;
}
.thinapp-devices tr {
  display: table-row;
  vertical-align: inherit;
  border-color: inherit;
}
.thinapp-devices th {
  vertical-align: bottom;
  padding: 4px 5px;
  font-weight: 700;
  line-height: 20px;
  display: table-cell;
}
.thinapp-devices tbody {
  display: table-row-group;
  vertical-align: middle;
  border-color: inherit;
  background-color: #f9f9f9;
}
.thinapp-devices td,
.thinapp-devices th {
  border: 1px solid #ddd;
  padding: 0.5rem;
  text-align: left;
}
.thinapp-devices td {
  vertical-align: middle;
}
.thinapp-devices.modal .setAppPassword .form-group {
  padding: 10px 0;
}
.thinapp-devices.modal .setAppPassword label {
  display: block;
  margin-bottom: 5px;
}
.thinapp-devices.modal .setAppPassword .error-text {
  font-weight: bold;
  color: #A94442;
  padding: 5px 0;
}
.thinapp-devices.modal .setAppPassword h3 {
  word-wrap: break-word;
}
.thinapp-devices.modal .setAppPassword p {
  padding-top: 5px;
}
.thinapp-devices.modal.fullscreen-mobile- .modal-frame {
  -webkit-transform: none;
  -moz-transform: none;
  -ms-transform: none;
  transform: none;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .thinapp-devices.modal.fullscreen-mobile- .modal-frame {
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
  }
}
@media screen and (min-width: 740px) /*at least S*/ {
  .thinapp-devices.modal.fullscreen-mobile- .modal-frame {
    width: 80%;
    height: 400px;
    margin-left: -40%;
    margin-top: -200px;
  }
}
.thinapp-devices.modal.fullscreen-mobile- .dialog-body {
  overflow-x: auto;
}
.thinapp-devices.modal .userDevices h3 {
  margin-bottom: 20px;
}
.thinapp-devices.modal .userDevices td,
.thinapp-devices.modal .userDevices th {
  word-wrap: break-word;
  white-space: normal;
}
.thinapp-devices.modal .userDevices .lastLoginTimeLabel {
  font-weight: 700;
  margin-right: 5px;
}
.thinapp-devices.modal .userDevices .unlinkDeviceBtn {
  float: right;
}
.thinapp-devices.modal .userDevices > .spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  z-index: 2;
}
.stepper .step {
  position: relative;
  min-height: 24px;
}
.stepper .step > div:first-child {
  position: static;
  height: 0;
}
.stepper .step .body {
  margin-left: 24px;
  padding-left: 12px;
  padding-bottom: 20px;
}
.stepper .step:last-child .line {
  display: none;
}
.stepper .step .circle {
  width: 24px;
  height: 24px;
  line-height: 20px;
  border-radius: 12px;
  position: relative;
  color: #DCDCDC;
  text-align: center;
  border: 2px solid;
  font-size: 11px;
}
.stepper .step .line {
  position: absolute;
  border-left: 1px solid #DCDCDC;
  left: 12px;
  bottom: 4px;
  top: 28px;
}
/*Overriding grid*/
.launcher-main .mobileFilterBarContainer,
.catalog-main .mobileFilterBarContainer {
  padding: 0px 7.5px;
}
.launcher-main .page > .base-.grid,
.catalog-main .page > .base-.grid {
  margin-left: auto;
  margin-right: auto;
}
.launcher-main .base-.grid.launcher-items-container,
.catalog-main .base-.grid.launcher-items-container,
.launcher-main .full-bleed-.page.catalog-items-container,
.catalog-main .full-bleed-.page.catalog-items-container,
.launcher-main .welcomeMessageContainer,
.catalog-main .welcomeMessageContainer {
  width: 303px;
}
@media screen and (min-width: 540px) /*at least LP*/ {
  .launcher-main .base-.grid.launcher-items-container,
  .catalog-main .base-.grid.launcher-items-container,
  .launcher-main .full-bleed-.page.catalog-items-container,
  .catalog-main .full-bleed-.page.catalog-items-container,
  .launcher-main .welcomeMessageContainer,
  .catalog-main .welcomeMessageContainer {
    width: 404px;
  }
}
@media screen and (min-width: 740px) /*at least S*/ {
  .launcher-main .base-.grid.launcher-items-container,
  .catalog-main .base-.grid.launcher-items-container,
  .launcher-main .full-bleed-.page.catalog-items-container,
  .catalog-main .full-bleed-.page.catalog-items-container,
  .launcher-main .welcomeMessageContainer,
  .catalog-main .welcomeMessageContainer {
    width: 656px;
  }
}
@media screen and (min-width: 980px) /*at least M*/ {
  .launcher-main .base-.grid.launcher-items-container,
  .catalog-main .base-.grid.launcher-items-container,
  .launcher-main .full-bleed-.page.catalog-items-container,
  .catalog-main .full-bleed-.page.catalog-items-container,
  .launcher-main .welcomeMessageContainer,
  .catalog-main .welcomeMessageContainer {
    width: 984px;
  }
}
@media screen and (min-width: 1340px) /*at least L*/ {
  .launcher-main .base-.grid.launcher-items-container,
  .catalog-main .base-.grid.launcher-items-container,
  .launcher-main .full-bleed-.page.catalog-items-container,
  .catalog-main .full-bleed-.page.catalog-items-container,
  .launcher-main .welcomeMessageContainer,
  .catalog-main .welcomeMessageContainer {
    width: 1148px;
  }
}
@media screen and (min-width: 1700px) /*at least W*/ {
  .launcher-main .base-.grid.launcher-items-container,
  .catalog-main .base-.grid.launcher-items-container,
  .launcher-main .full-bleed-.page.catalog-items-container,
  .catalog-main .full-bleed-.page.catalog-items-container,
  .launcher-main .welcomeMessageContainer,
  .catalog-main .welcomeMessageContainer {
    width: 1312px;
  }
}
.launcher-main .box.two- {
  width: 86px;
  padding: 7.5px;
}
.launcher-main .emblem.large- {
  padding-top: 86px;
  min-width: 86px;
}
.launcher-main .emblem.large-:before {
  width: 86px;
  height: 86px;
}
.launcher-main .emblem.large- > a .emblem-image {
  width: 58px;
  height: 58px;
  top: 14px;
}
@media screen and (min-width: 740px) /*at least S*/ {
  .launcher-main .box.two- {
    width: 120px;
    padding: 22px;
  }
  .launcher-main .emblem.large- {
    padding-top: 120px;
    min-width: 120px;
  }
  .launcher-main .emblem.large-:before {
    width: 120px;
    height: 120px;
  }
  .launcher-main .emblem.large- > a .emblem-image {
    width: 76px;
    height: 76px;
    top: 22px;
  }
}
.catalog-main .box.three- {
  width: 100%;
  padding: 7.5px;
}
.catalog-main .emblem .emblem-image {
  top: 14px;
  height: 52px;
  width: 52px;
}
@media screen and (max-width: 539px) /*at most MP*/ {
  .catalog-main .box.three- {
    padding-bottom: 0;
    padding-top: 0;
  }
}
@media screen and (min-width: 540px) /*at least LP*/ {
  .catalog-main .box.three- {
    width: 160px;
    padding: 10px;
  }
  .catalog-main .catalogitem .box-module {
    padding: 20px 0px 0px;
  }
  .catalog-main .emblem {
    padding-top: 120px;
  }
  .catalog-main .emblem .emblem-image {
    top: 0px;
    height: 120px;
    width: 120px;
  }
}
@media screen and (min-width: 540px) /*at least LP*/ and (max-width: 739px) /*LP only*/ {
  .catalog-main .catalogitem .box-module {
    padding: 20px 10px 10px 10px;
  }
}
@media screen and (min-width: 980px) /*at least M*/ {
  .catalog-main .frame.balanced-.sidebarred- .frame-sidebar {
    padding: 10px 22px 0 22px;
    width: 242px;
  }
  .catalog-main .full-bleed-.page.catalog-items-container {
    left: 50%;
    margin: 0;
    padding: 0px 10px;
  }
  .catalog-main .frame.balanced-.sidebarred- .frame-sidebar {
    margin-left: -492px;
  }
  .catalog-main .full-bleed-.page.catalog-items-container {
    width: 742px;
    margin-left: -250px;
    padding-right: 22px;
    padding-left: 20px;
  }
}
@media screen and (min-width: 1340px) /*at least L*/ {
  .catalog-main .frame.balanced-.sidebarred- .frame-sidebar {
    margin-left: -574px;
  }
  .catalog-main .full-bleed-.page.catalog-items-container {
    width: 906px;
    margin-left: -332px;
    padding-right: 22px;
    padding-left: 4px;
  }
}
@media screen and (min-width: 1700px) /*at least W*/ {
  .catalog-main .frame.balanced-.sidebarred- .frame-sidebar {
    margin-left: -656px;
  }
  .catalog-main .full-bleed-.page.catalog-items-container {
    width: 1070px;
    margin-left: -414px;
    padding-right: 22px;
    padding-left: 168px;
  }
}
@media screen and (min-width: 740px) /*at least S*/ and (max-width: 979px) /*S only*/ {
  .catalog-main .box.three- {
    padding: 10px 22px;
  }
  .catalog-main .box.three-:nth-child(3n+2) {
    padding: 10px 44px;
  }
}
@media screen and (min-width: 540px) /*at least LP*/ and (max-width: 739px) /*LP only*/ {
  .catalog-main .box.three-:nth-child(odd) {
    padding-right: 32px;
  }
  .catalog-main .box.three-:nth-child(even) {
    padding-left: 32px;
  }
}
input,
select {
  -webkit-tap-highlight-color: transparent;
}
html {
  -webkit-text-size-adjust: 100%;
}
.theme-portal-masthead {
  background-color: #fff;
  color: #44535f;
  border-bottom: 1px solid #e0e5e8;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .theme-portal-masthead {
    border-bottom: 1px solid #c4cdd3;
  }
}
.theme-portal-background,
.theme-portal-background.frame {
  background: #e1e6e9;
  background-repeat: no-repeat;
  background-size: cover;
}
.frame.fullscreen- {
  padding-top: 80px;
}
.frame.fullscreen- > header,
.frame.fullscreen- > .frame-header,
.frame.fullscreen- > .frame-body > .frame-header {
  height: 80px;
  line-height: 80px;
}
.frame.fullscreen- > aside,
.frame.fullscreen- > .frame-sidebar,
.frame.fullscreen- > .frame-body > .frame-sidebar {
  padding-top: 80px;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .frame.fullscreen- {
    padding-top: 0;
  }
  .frame.fullscreen- > header,
  .frame.fullscreen- > .frame-header,
  .frame.fullscreen- > .frame-body > .frame-header {
    height: 0;
    line-height: 0;
  }
  .frame.fullscreen- > aside,
  .frame.fullscreen- > .frame-sidebar,
  .frame.fullscreen- > .frame-body > .frame-sidebar {
    padding-top: 0;
  }
  .frame.fullscreen- > header,
  .frame.fullscreen- > .frame-header,
  .frame.fullscreen- > .frame-body > .frame-header {
    display: none;
  }
}
.frame.fullscreen- > .frame-header .masthead {
  height: 80px;
  line-height: 60px;
}
.frame.view- {
  overflow: visible;
  padding-top: 50px;
}
.frame.view- > header,
.frame.view- > .frame-header,
.frame.view- > .frame-body > .frame-header {
  height: 50px;
  line-height: 50px;
}
.frame.view- > aside,
.frame.view- > .frame-sidebar,
.frame.view- > .frame-body > .frame-sidebar {
  padding-top: 50px;
}
@media screen and (min-width: 740px) /*at least S*/ {
  .frame.view- {
    padding-top: 0;
  }
  .frame.view- > header,
  .frame.view- > .frame-header,
  .frame.view- > .frame-body > .frame-header {
    height: 0;
    line-height: 0;
  }
  .frame.view- > aside,
  .frame.view- > .frame-sidebar,
  .frame.view- > .frame-body > .frame-sidebar {
    padding-top: 0;
  }
  .frame.view- > header,
  .frame.view- > .frame-header,
  .frame.view- > .frame-body > .frame-header {
    display: none;
  }
}
.frame.view- > .frame-header .masthead {
  height: 50px;
}
.frame.view- > .headered-.frame {
  padding-top: 42px;
}
.frame.view- > .headered-.frame > header,
.frame.view- > .headered-.frame > .frame-header,
.frame.view- > .headered-.frame > .frame-body > .frame-header {
  height: 42px;
  line-height: 42px;
}
.frame.view- > .headered-.frame > aside,
.frame.view- > .headered-.frame > .frame-sidebar,
.frame.view- > .headered-.frame > .frame-body > .frame-sidebar {
  padding-top: 42px;
}
.frame.view- > .headered-.frame .frame-sidebar {
  padding-top: 162px;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .frame.view- > .headered-.frame {
    padding-top: 0;
  }
  .frame.view- > .headered-.frame > header,
  .frame.view- > .headered-.frame > .frame-header,
  .frame.view- > .headered-.frame > .frame-body > .frame-header {
    height: 0;
    line-height: 0;
  }
  .frame.view- > .headered-.frame > aside,
  .frame.view- > .headered-.frame > .frame-sidebar,
  .frame.view- > .headered-.frame > .frame-body > .frame-sidebar {
    padding-top: 0;
  }
  .frame.view- > .headered-.frame > header,
  .frame.view- > .headered-.frame > .frame-header,
  .frame.view- > .headered-.frame > .frame-body > .frame-header {
    display: none;
  }
}
.frame.view- .frame-sidebar .menu {
  font-size: 13px;
}
.frame.view- .frame-sidebar .menu-title {
  font-size: 14px;
  font-weight: 600;
  font-variant: normal;
  text-transform: uppercase;
}
.frame.view- > .spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  z-index: 2;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .catalog-main.frame.view-,
  .launcher-main.frame.view- {
    padding-top: 90px;
  }
  .catalog-main.frame.view- > header,
  .launcher-main.frame.view- > header,
  .catalog-main.frame.view- > .frame-header,
  .launcher-main.frame.view- > .frame-header,
  .catalog-main.frame.view- > .frame-body > .frame-header,
  .launcher-main.frame.view- > .frame-body > .frame-header {
    height: 90px;
    line-height: 50px;
  }
  .catalog-main.frame.view- > aside,
  .launcher-main.frame.view- > aside,
  .catalog-main.frame.view- > .frame-sidebar,
  .launcher-main.frame.view- > .frame-sidebar,
  .catalog-main.frame.view- > .frame-body > .frame-sidebar,
  .launcher-main.frame.view- > .frame-body > .frame-sidebar {
    padding-top: 90px;
  }
  .catalog-main.frame.view-.no-tabs- {
    padding-top: 50px;
  }
  .catalog-main.frame.view-.no-tabs- > header,
  .catalog-main.frame.view-.no-tabs- > .frame-header,
  .catalog-main.frame.view-.no-tabs- > .frame-body > .frame-header {
    height: 50px;
    line-height: 50px;
  }
  .catalog-main.frame.view-.no-tabs- > aside,
  .catalog-main.frame.view-.no-tabs- > .frame-sidebar,
  .catalog-main.frame.view-.no-tabs- > .frame-body > .frame-sidebar {
    padding-top: 50px;
  }
}
[branding] {
  display: none;
}
.appstore-banner {
  height: 26px;
  float: left;
}
.passwordvault-banner p {
  text-align: left;
}
.passwordvault-banner .symbol {
  font-size: 20px;
  vertical-align: middle;
}
.emblem .emblem-flag {
  border-radius: 0;
  -webkit-transform: translateX(-40px);
  -moz-transform: translateX(-40px);
  -ms-transform: translateX(-40px);
  -o-transform: translateX(-40px);
  transform: translateX(-40px);
  border-top-left-radius: 2px;
  line-height: 1em;
  max-width: 80px;
}
.frame .frame-header.appcenter-filter-bar {
  background-color: #fff;
  border-bottom: 1px solid #c4cdd3;
}
.frame .frame-header.appcenter-filter-bar .dropdown {
  font-size: 14px;
}
.spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
}
.appcenter-floating-row {
  position: absolute;
  height: 0;
  width: 100%;
  top: 16px;
  left: 0;
  z-index: 3;
}
.appcenter-floating-row .page-.grid {
  height: 0;
}
.appcenter-floating-row ~ .pane,
.appcenter-floating-row ~ .frame-sidebar > .pane {
  padding-top: 25px;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .appcenter-floating-row {
    bottom: 60px;
    top: auto;
  }
  .appcenter-floating-row ~ .pane,
  .appcenter-floating-row ~ .frame-sidebar > .pane {
    padding-top: 0;
    padding-bottom: 75px;
  }
  .appcenter-floating-row .page-.grid,
  .balanced-.frame .appcenter-floating-row .page-.grid {
    width: 100%;
  }
  .appcenter-floating-row .page-.grid .box,
  .balanced-.frame .appcenter-floating-row .page-.grid .box {
    width: auto;
  }
}
.circle-floating-icon {
  display: block;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  font-size: 24px;
  padding: 13px;
  margin: 0 auto;
}
.circle-floating-icon svg {
  color: white;
}
.navbar-categories-dropdown {
  padding: 10px 10px 10px 20px;
  float: left;
  margin: -44px 0 0;
}
.navbar-categories-dropdown.hide-dropdown {
  visibility: hidden;
}
.masthead-navigation-tabs {
  background-color: #fff;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .masthead-navigation-tabs > .tabs {
    padding: 0;
  }
  .masthead-navigation-tabs > .tabs > li {
    border: solid #c4cdd3;
    border-width: 0 0 1px 1px;
    height: 40px;
    margin: 0;
    padding: 0;
    position: relative;
    width: 50%;
  }
  .masthead-navigation-tabs > .tabs > li:first-child {
    border-left: 0;
    padding: 0;
  }
  .masthead-navigation-tabs > .tabs > li a {
    font-weight: 600;
    border: 0;
    float: none;
    font-size: 14px;
    line-height: 40px;
    color: #5E6F78;
  }
}
.navigation-tabs-container {
  display: inline-block;
  width: 100%;
  text-align: center;
  float: right;
  margin: -42px 0 0 0;
}
.navigation-tabs-container .navigation-image {
  float: left;
  vertical-align: middle;
  width: 17px;
  height: 17px;
}
.navigation-tabs-container .catalog-navigation-image {
  width: 19px;
}
.navigation-tabs-container.catalog-margin {
  margin: 5px 0 0 0;
  padding: 0;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .desktopOnly {
    display: none;
  }
  .tabs.secondary- > li > a {
    padding-left: 0;
  }
}
@media screen and (min-width: 740px) /*at least S*/ {
  .tabs.secondary- {
    padding-top: 10px;
  }
  .mobileOnly {
    display: none;
  }
  .frame .frame-drawer {
    display: none;
  }
  .frame .frame-drawer.is-active ~ * {
    -webkit-transform: translate(0, 0);
    -moz-transform: translate(0, 0);
    -ms-transform: translate(0, 0);
    -o-transform: translate(0, 0);
    transform: translate(0, 0);
  }
}
.frame .frame-drawer ~ .spinner {
  background-color: transparent;
}
.frame .frame-drawer.hamburgermenu {
  background-color: #586877;
  color: #b2c0cc;
  font-size: 15px;
  padding: 0;
  width: 87.5%;
}
.frame .frame-drawer.hamburgermenu::after,
.frame .frame-drawer.hamburgermenu.is-active::after {
  background: -webkit-linear-gradient(left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15));
  background: -moz-linear-gradient(left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15));
  background: -ms-linear-gradient(left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15));
  background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15));
  -webkit-transform: none;
  -moz-transform: none;
  -ms-transform: none;
  -o-transform: none;
  transform: none;
  left: auto;
  right: 0;
  width: 7px;
}
.frame .frame-drawer.hamburgermenu.is-active ~ * {
  -webkit-transform: translateX(87.5%);
  -moz-transform: translateX(87.5%);
  -ms-transform: translateX(87.5%);
  -o-transform: translateX(87.5%);
  transform: translateX(87.5%);
}
.frame .frame-drawer.hamburgermenu.headered- {
  padding-top: 50px;
}
.frame .frame-drawer.hamburgermenu.footered- {
  padding-bottom: 50px;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-header {
  height: 50px;
  left: 0;
  padding: 0 15px;
  position: absolute;
  right: 0;
  max-width: 100%;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
  border-bottom: 1px solid rgba(255, 255, 255, 0.15);
  color: #fff;
  top: 0;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-header > * {
  display: inline;
  line-height: 50px;
  vertical-align: middle;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-header a {
  cursor: pointer;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-header a:hover {
  color: #fff;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-header .userinfo-avatar {
  font-size: 20px;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-header .userinfo-name {
  margin-left: 10px;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-footer {
  height: 50px;
  left: 0;
  padding: 0 15px;
  position: absolute;
  right: 0;
  max-width: 100%;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
  border-top: 1px solid rgba(255, 255, 255, 0.15);
  bottom: 0;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-footer > * {
  display: inline;
  line-height: 50px;
  vertical-align: middle;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-footer a {
  cursor: pointer;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-footer a:hover {
  color: #fff;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-footer .userinfo-avatar {
  font-size: 20px;
}
.frame .frame-drawer.hamburgermenu .hamburgermenu-footer .userinfo-name {
  margin-left: 10px;
}
.frame .frame-drawer.hamburgermenu .menu {
  color: #b2c0cc;
  font-size: inherit;
}
.frame .frame-drawer.hamburgermenu .menu > li {
  overflow: hidden;
  padding: 15px;
  text-overflow: ellipsis;
}
.frame .frame-drawer.hamburgermenu .menu > li > a {
  color: inherit;
  line-height: normal;
  margin: 0;
  padding: 0;
}
.frame .frame-drawer.hamburgermenu .menu > li > a:hover {
  color: #fff;
  background: initial;
}
.frame .frame-drawer.hamburgermenu .menu > li.menu-title {
  font-size: inherit;
  font-variant: normal;
  text-transform: uppercase;
}
.frame .frame-drawer.hamburgermenu .menu > li.is-selected > a {
  background: 0;
  color: #fff;
}
.frame .frame-drawer.hamburgermenu .menu > li.menu-hrule {
  border-top: 1px solid rgba(255, 255, 255, 0.15);
  padding: 0;
}
.frame .drawer-overlay {
  background-color: transparent;
  display: none;
}
.frame .drawer-overlay.is-active {
  display: block;
  height: 100%;
  position: absolute;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 5;
}
@media screen and (max-width: 739px) /*at most LP*/ {
  .modal.fullscreen-mobile- .modal-frame {
    width: 100%;
    height: 100%;
  }
}
@media screen and (min-width: 740px) /*at least S*/ {
  .modal.medium-desktop- .modal-frame {
    width: 640px;
    height: 400px;
  }
}
@media screen and (min-width: 1340px) /*at least L*/ {
  .modal.medium-desktop- .modal-frame {
    width: 800px;
    height: 600px;
  }
}
@media screen and (min-width: 740px) /*at least S*/ {
  .modal.small-desktop- .modal-frame {
    width: 320px;
    height: 480px;
  }
}
.modal.new .modal-frame {
  padding-top: 50px;
}
.modal.new .modal-frame {
  padding-bottom: 48px;
}
.modal.new .no-footer {
  padding-bottom: 0;
}
.modal.new .dialog-header {
  height: auto;
  padding: 15px 20px;
  border-bottom: 1px solid #e0e5e8;
}
.modal.new .dialog-header h3 {
  font-weight: 600;
}
.modal.new .dialog-header .right-icon {
  float: right;
  padding: 0;
  min-height: initial;
}
.modal.new .dialog-header .close-ico {
  height: 10px;
  width: 10px;
  margin-top: 5px;
  color: #5E6F78;
}
.modal.new .dialog-body {
  padding: 20px;
}
.modal.new .dialog-actions {
  padding: 15px 20px;
  height: 50px;
  border-top: 1px solid #e0e5e8;
}
.modal.new .dialog-actions .button.link- {
  padding: 0;
  min-height: inherit;
}
.modal .dialog .form-row {
  display: inline-block;
}
.modal .dialog .form-row.lock-icon {
  margin-right: 5px;
}
.modal .dialog .form-label {
  width: 35%;
}
.modal .dialog .dialog-body {
  min-height: 60px;
  font-size: 12px;
}
.modal .dialog .dialog-body .left-container {
  width: 100%;
  display: inline-block;
  vertical-align: top;
  padding-right: 20px;
}
.modal .dialog .dialog-body .left-container.reduce-width {
  width: 44%;
}
.modal .dialog .dialog-body .profile-container .label {
  display: inline-block;
  width: 50px;
}
.modal .dialog .dialog-body .profile-container .profile-value {
  width: 70%;
  display: inline-block;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  vertical-align: text-top;
}
.modal .dialog .dialog-body .profile-container .user-name {
  width: 95%;
}
.modal .dialog .dialog-body .profile-container p {
  margin-bottom: 5px;
}
.modal .dialog .dialog-body .profile-container p:first-child {
  margin-bottom: 10px;
}
.modal .dialog .dialog-body .profile-container .button.link- {
  padding: 0;
  min-height: initial;
  background: #fff;
}
.modal .dialog .dialog-body .policy-container {
  color: #939CA3;
  padding-top: 10px;
}
.modal .dialog .dialog-body .policy-container .password-policy {
  padding-bottom: 15px;
}
.modal .dialog .dialog-body .password-container {
  width: 55%;
  display: inline-block;
  vertical-align: bottom;
}
.modal .dialog .dialog-body .password-container .new-password-label {
  text-align: center;
  color: #939CA3;
}
.modal .dialog .dialog-body .password-container .divider {
  padding-left: 20px;
  border-left: 1px solid #e0e5e8;
}
.modal .dialog .dialog-body .form-fields-holder {
  width: 100%;
  margin-bottom: 15px;
  display: inline-block;
}
.modal .dialog .dialog-body .form-fields-holder.no-margin {
  margin: 0;
}
.modal .dialog .dialog-actions .password-save-button:focus,
.modal .dialog .dialog-actions .close-button:focus {
  border: none;
}
.modal .dialog .dialog-actions .move-left {
  float: left;
}
.modal .dialog .input-field {
  width: 100%;
  font-size: 12px;
  border: 1px solid #e1e6e9;
  border-radius: 1px;
  padding-left: 15px;
  height: 30px;
  -webkit-appearance: none;
  line-height: normal;
}
.modal .dialog input + input {
  margin-top: 15px;
}
.modal .dialog .error-messages {
  padding-left: 20px;
  color: #c84a54;
  margin-bottom: 10px;
  min-height: 18px;
}
.modal .dialog .error-messages div {
  display: inline-block;
  width: 90%;
}
.modal .dialog .error {
  border-color: #c84a54;
}
.noresultsmsg {
  position: absolute;
  top: 30%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  text-align: center;
  max-width: 400px;
}
.noresultsmsg.no-favorites {
  color: #91A0AA;
}
.noresultsmsg.no-favorites .symbol[symbol=star] {
  font-size: 3em;
  margin-bottom: 0.3em;
  stroke: #91A0AA;
  fill: none;
}
.invisible {
  visibility: hidden;
}
@media screen and (min-width: 740px) /*at least S*/ {
  .commonMenu {
    display: none;
  }
}
.navbar-categories-dropdown,
.appcenter-categorydropdown {
  /*
    Default max height of dropdown panel is 600px. This could cause dropdown to not scroll
    on devices less 750px. This could be a case in Windows 10 where app window size can be resized.
    Adding couple of breakpoints to scale down dropdown's max height.
    Masthead + Filter bar size + padding = 150px. So difference between break points need to be 150px.
    */
}
@media (max-height: 750px) {
  .navbar-categories-dropdown .dropdown-panel,
  .appcenter-categorydropdown .dropdown-panel {
    max-height: 500px;
  }
}
@media (max-height: 650px) {
  .navbar-categories-dropdown .dropdown-panel,
  .appcenter-categorydropdown .dropdown-panel {
    max-height: 400px;
  }
}
.message .button.close- {
  right: 0.5em;
  top: 50%;
  transform: translateY(-50%);
}
.message a {
  cursor: pointer;
  text-decoration: none;
}
.message.info- .message-icon {
  top: 50%;
  transform: translateY(-50%);
  font-size: 0.5em;
  left: 0.5em;
  color: inherit;
}
.message .link {
  text-decoration: underline;
  color: inherit;
}
.privacy-page-text {
  color: #4990C2;
}
.tabletPotraitOnly {
  display: none;
}
@media screen and (min-width: 740px) /*at least S*/ and (max-width: 979px) /*S only*/ {
  .tabletPotraitOnly {
    display: block;
  }
}
.desktopFilterBarContainer {
  float: right;
  cursor: pointer;
  padding-top: 2px;
}
.desktopFilterBarContainer .mobileFilterBar {
  height: 32px;
  border: 1px solid #a7b8c4;
  border-radius: 2px;
  background-color: rgba(255, 255, 255, 0.2);
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.1);
}
.desktopFilterBarContainer .mobileFilterBar .filterFavorite {
  float: left;
  padding: 6px 10px;
  width: 36px;
  color: #919fa9;
  border-right: 1px solid #a7b8c4;
  text-align: center;
}
.desktopFilterBarContainer .mobileFilterBar .filterFavorite:hover {
  color: #576876;
}
.desktopFilterBarContainer .mobileFilterBar .filterFavorite.is-active {
  color: #f69631;
  background-color: #dae1e4;
  box-shadow: inset 0px 1px 1px 0px rgba(116, 124, 142, 0.2);
}
.desktopFilterBarContainer .mobileFilterBar .filterDropdown {
  height: 100%;
}
.desktopFilterBarContainer .mobileFilterBar .filterDropdown .filterName {
  float: left;
  padding: 6px 10px;
  font-size: 14px;
}
.desktopFilterBarContainer .mobileFilterBar .filterDropdown .filterIcon {
  float: right;
  height: 30px;
  line-height: 30px;
}
.desktopFilterBarContainer .mobileFilterBar .filterDropdown .filterIcon a.link- {
  color: inherit;
}
.desktopFilterBarContainer .mobileFilterBar svg.symbol {
  stroke: none;
}
.desktopFilterBarContainer .mobileFilterBar.starred- .filterDropdown {
  margin-left: 36px;
  display: block;
}
.desktopFilterBarContainer .mobileFilterBar:hover {
  background-color: rgba(255, 255, 255, 0.4);
}
.desktopFilterBarContainer .mobileFilterBar {
  width: 180px;
}
.desktopFilterBarContainer .dropdown-panel {
  min-width: 100%;
}
.mobileFilterBarContainer {
  width: 100%;
}
.mobileFilterBarContainer .mobileFilterBar {
  height: 32px;
  border: 1px solid #a7b8c4;
  border-radius: 2px;
  background-color: rgba(255, 255, 255, 0.2);
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.1);
}
.mobileFilterBarContainer .mobileFilterBar .filterFavorite {
  float: left;
  padding: 6px 10px;
  width: 36px;
  color: #919fa9;
  border-right: 1px solid #a7b8c4;
  text-align: center;
}
.mobileFilterBarContainer .mobileFilterBar .filterFavorite:hover {
  color: #576876;
}
.mobileFilterBarContainer .mobileFilterBar .filterFavorite.is-active {
  color: #f69631;
  background-color: #dae1e4;
  box-shadow: inset 0px 1px 1px 0px rgba(116, 124, 142, 0.2);
}
.mobileFilterBarContainer .mobileFilterBar .filterDropdown {
  height: 100%;
}
.mobileFilterBarContainer .mobileFilterBar .filterDropdown .filterName {
  float: left;
  padding: 6px 10px;
  font-size: 14px;
}
.mobileFilterBarContainer .mobileFilterBar .filterDropdown .filterIcon {
  float: right;
  height: 30px;
  line-height: 30px;
}
.mobileFilterBarContainer .mobileFilterBar .filterDropdown .filterIcon a.link- {
  color: inherit;
}
.mobileFilterBarContainer .mobileFilterBar svg.symbol {
  stroke: none;
}
.mobileFilterBarContainer .mobileFilterBar.starred- .filterDropdown {
  margin-left: 36px;
  display: block;
}
.mobileFilterBarContainer .mobileFilterBar:hover {
  background-color: rgba(255, 255, 255, 0.4);
}
.mobileFilterBarContainer .mobileFilterBar {
  height: 40px;
}
.mobileFilterBarContainer .mobileFilterBar .filterFavorite {
  padding: 10px;
}
.mobileFilterBarContainer .mobileFilterBar .filterDropdown .filterName {
  padding: 10px;
  max-width: 85%;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
}
.mobileFilterBarContainer .mobileFilterBar .filterDropdown .filterIcon {
  height: 38px;
  line-height: 38px;
}
.mobileFilterMenuContainer {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
}
.mobileFilterMenuContainer .menu > li {
  border-bottom: 1px solid #e5e5e5;
  line-height: 30px;
}
.mobileFilterMenuContainer .menu > li a {
  /* By default a inside a .menu get blue link color.
            Overriding it to get text branding color */
  color: inherit;
}
.mobileFilterMenuContainer .menu > li .symbol {
  height: 30px;
  line-height: 30px;
  color: #6EB145;
}
.mobileFilterMenuContainer .menu > li .menu-item-name {
  max-width: 90%;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-rendering: auto;
}
.mobileFilterMenuContainer .page {
  margin-top: 20px;
  width: 90%;
  padding: 0;
}
.desktopFilterMenuContainer .button.link-:hover {
  border: none;
}
.desktopFilterMenuContainer .menu a {
  font-size: 13px;
  color: #44525e;
  padding: 6px 10px;
}
.desktopFilterMenuContainer .menu li {
  padding: 6px 0;
}
.desktopFilterMenuContainer .menu li:first-child {
  padding-top: 0;
}
.password-page-mobile .masthead-right {
  color: #4990C2;
}
.password-page-mobile .back-arrow {
  margin-top: 5px;
  font-size: 18px;
}
.password-page-mobile .password-save-button {
  text-transform: lowercase;
}
.password-page-mobile .page {
  width: 100%;
  font-size: 12px;
}
.password-page-mobile .policy-container {
  text-align: center;
}
.password-page-mobile .error {
  border-color: #c84a54;
}
.warning-ico {
  margin-right: 5px;
  height: 1.3em;
  width: 1.3em;
}
.input-fields-container .input-field-holder {
  margin-bottom: 30px;
  vertical-align: middle;
  white-space: nowrap;
}
.input-fields-container .input-field-holder .input-field {
  width: 100%;
  font-size: 13px;
  height: 24px;
  line-height: 24px;
  position: relative;
  border: none;
  border-bottom: 1px solid #44535f;
  border-radius: 0;
  padding: 0 0 8px 0;
  margin: 0;
  box-shadow: none;
  color: #99a8b5;
  background-color: transparent;
}
.input-fields-container .input-field-holder .input-field.error {
  border-color: #c84a54;
}
.input-fields-container .new-password-label {
  text-align: center;
  color: #939CA3;
}
.input-fields-container .error-messages {
  color: #c84a54;
  width: 80%;
  margin: 0 auto 20px;
  min-height: 20px;
}
.input-fields-container .error-messages div {
  display: inline-block;
  width: 85%;
}
