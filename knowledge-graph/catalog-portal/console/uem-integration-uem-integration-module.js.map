{"version":3,"sources":["webpack:///./src/app/uem-integration/uem-details.ts","webpack:///./src/app/uem-integration/uem-integration-routing.module.ts","webpack:///./src/app/uem-integration/uem-integration.component.html","webpack:///./src/app/uem-integration/uem-integration.component.less","webpack:///./src/app/uem-integration/uem-integration.component.ts","webpack:///./src/app/uem-integration/uem-integration.module.ts","webpack:///./src/app/uem-integration/uem-integration.service.ts"],"names":[],"mappings":"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","file":"uem-integration-uem-integration-module.js","sourcesContent":["export class UemDetails {\n\n  constructor(\n    public apiServicesUrl: string,\n    public apiKey: string,\n    public organizationGroupId: string,\n    public certificate: any,\n    public base64EncodedCert: any,\n    public privateKeyPassword: string,\n    public deviceServicesUrl: string\n  ) {\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {UemIntegrationComponent} from './uem-integration.component';\n\nconst routes: Routes = [\n  {path: '', component: UemIntegrationComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UemIntegrationRoutingModule {\n}\n\nexport const RoutedComponents = [UemIntegrationComponent];\n","module.exports = \"<div class=\\\"uem-integrations\\\">\\n  <section class=\\\"section-header\\\">\\n    <h2 [innerHTML]=\\\"'nav.label.uem' | translate\\\"></h2>\\n    <p [innerHTML]=\\\"'desc.uem' | translate\\\"></p>\\n  </section>\\n  <section class=\\\"content-scrollable\\\">\\n    <form (ngSubmit)=\\\"saveUemDetails()\\\" [formGroup]=\\\"uemForm\\\">\\n      <section class=\\\"form-block\\\">\\n        <div class=\\\"form-group\\\">\\n          <label [innerHTML]=\\\"'uem.form.label.airwatch.url' | translate\\\" for=\\\"url\\\"></label>\\n          <input type=\\\"text\\\" formControlName=\\\"apiServicesUrl\\\" class=\\\"text-field\\\" size=\\\"50\\\" name=\\\"apiServicesUrl\\\" id=\\\"url\\\"\\n                 [ngClass]=\\\"{'error': isInputValid('apiServicesUrl')}\\\" [attr.disabled]=\\\"true\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label [innerHTML]=\\\"'uem.form.label.airwatch.certificate' | translate\\\"></label>\\n          <div *ngIf=\\\"false\\\">\\n            <input class=\\\"hidden-upload\\\" (change)=\\\"onFileChange($event)\\\" formControlName=\\\"base64EncodedCert\\\" type=\\\"file\\\"\\n                   name=\\\"base64EncodedCert\\\"/>\\n            <button class=\\\"btn btn-outline btn-upload\\\" [innerHTML]=\\\"'form.label.upload' | translate\\\"></button>\\n            <span class=\\\"clr-subtext filename\\\" *ngIf=\\\"file\\\">{{file.name}}</span>\\n            <div class=\\\"btn btn-link\\\"\\n                 [innerHTML]=\\\"(showCertificateDetails ? 'form.label.hide.details' : 'form.label.show.details') | translate\\\"\\n                 (click)=\\\"toggleCertificateDetails()\\\" *ngIf=\\\"uemDetails.certificate && !file\\\"></div>\\n          </div>\\n        </div>\\n        <div class=\\\"certificate-details\\\" *ngIf=\\\"uemDetails.certificate && !file\\\">\\n          <div>\\n            <label [innerHTML]=\\\"'uem.cert.issue.by' | translate\\\"></label>\\n            <span>{{uemDetails.certificate.metadata['Issuer']}}</span>\\n          </div>\\n          <div>\\n            <label [innerHTML]=\\\"'uem.cert.valid.from' | translate\\\"></label>\\n            <span>{{uemDetails.certificate.metadata['Valid-From']}}</span>\\n          </div>\\n          <div>\\n            <label [innerHTML]=\\\"'uem.cert.valid.to' | translate\\\"></label>\\n            <span>{{uemDetails.certificate.metadata['Valid-To']}}</span>\\n          </div>\\n          <div>\\n            <label [innerHTML]=\\\"'uem.cert.thumbprint' | translate\\\"></label>\\n            <span>{{uemDetails.certificate.metadata['Thumbprint']}}</span>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label [innerHTML]=\\\"'uem.form.label.airwatch.certificate.password' | translate\\\"></label>\\n          <input type=\\\"password\\\" class=\\\"text-field\\\" formControlName=\\\"privateKeyPassword\\\"\\n                 [ngClass]=\\\"{'error': isInputValid('privateKeyPassword')}\\\" size=\\\"50\\\" name=\\\"privateKeyPassword\\\"\\n                 [attr.disabled]=\\\"true\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label [innerHTML]=\\\"'uem.form.label.airwatch.api.key' | translate\\\"></label>\\n          <input type=\\\"text\\\" class=\\\"text-field\\\" formControlName=\\\"apiKey\\\" [ngClass]=\\\"{'error': isInputValid('apiKey')}\\\" size=\\\"50\\\"\\n                 name=\\\"apiKey\\\" [attr.disabled]=\\\"true\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label [innerHTML]=\\\"'uem.form.label.airwatch.group.id' | translate\\\"></label>\\n          <input type=\\\"text\\\" class=\\\"text-field\\\" formControlName=\\\"organizationGroupId\\\"\\n                 [ngClass]=\\\"{'error': isInputValid('organizationGroupId')}\\\" size=\\\"50\\\" name=\\\"organizationGroupId\\\"\\n                 [attr.disabled]=\\\"true\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label [innerHTML]=\\\"'uem.form.label.airwatch.ds.url' | translate\\\"></label>\\n          <input type=\\\"text\\\" class=\\\"text-field\\\" formControlName=\\\"deviceServicesUrl\\\"\\n                 [ngClass]=\\\"{'error': isInputValid('deviceServicesUrl')}\\\" size=\\\"50\\\" name=\\\"deviceServicesUrl\\\"\\n                 [attr.disabled]=\\\"true\\\">\\n        </div>\\n      </section>\\n    </form>\\n  </section>\\n</div>\\n\"","module.exports = \".uem-integrations .certificate-details {\\n  margin-left: 50px;\\n  margin-top: 40px;\\n}\\n.uem-integrations .certificate-details > div {\\n  height: 50px;\\n}\\n.uem-integrations .certificate-details > div label {\\n  width: 13em;\\n}\\n.uem-integrations .hidden-upload {\\n  opacity: 0;\\n  width: 90px;\\n  height: 45px;\\n  position: absolute;\\n  z-index: 10;\\n  cursor: pointer;\\n  font-size: 0;\\n}\\n.uem-integrations .filename {\\n  line-height: 36px;\\n}\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UemDetails} from './uem-details';\nimport {UemIntegrationService} from './uem-integration.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {SpinnerService, ToastService} from '../core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-uem-integration',\n  templateUrl: './uem-integration.component.html',\n  styleUrls: ['./uem-integration.component.less']\n})\nexport class UemIntegrationComponent implements OnInit {\n  public showCertificateDetails: boolean;\n  uemForm: FormGroup;\n  uemDetails: UemDetails;\n  file: any;\n\n  constructor(private uemService: UemIntegrationService, private spinnerService: SpinnerService, private toastService: ToastService,\n              private translate: TranslateService) {\n    this.showCertificateDetails = false;\n    this.uemDetails = new UemDetails('', '', '', '', '', '', '');\n    this.uemForm = this.createForm();\n  }\n\n  ngOnInit() {\n    const self = this;\n    this.spinnerService.show();\n    this.uemService.getUemDetails().subscribe(data => {\n      self.uemDetails = data;\n      this.uemForm = this.createForm();\n      this.spinnerService.hide();\n    }, () => {\n      this.spinnerService.hide();\n    });\n  }\n\n  private prepareSave(): any {\n    const input = new FormData();\n    const config = this.uemForm.getRawValue();\n    input.append('config', new Blob([JSON.stringify(config)],\n      {type: 'application/vnd.vmware.catalog.tenants-console-aw-config-v1+json'}));\n    input.append('certificate', this.file);\n    return input;\n  }\n\n  private createForm() {\n    return new FormGroup({\n      'apiServicesUrl': new FormControl(this.uemDetails.apiServicesUrl, [\n        Validators.required\n      ]),\n      'apiKey': new FormControl(this.uemDetails.apiKey, [\n        Validators.required\n      ]),\n      'organizationGroupId': new FormControl(this.uemDetails.organizationGroupId, [\n        Validators.required\n      ]),\n      'base64EncodedCert': new FormControl(this.uemDetails.base64EncodedCert, this.uemDetails.certificate ? [] : [\n        Validators.required\n      ]),\n      'privateKeyPassword': new FormControl(this.uemDetails.privateKeyPassword, [\n        Validators.required\n      ]),\n      'deviceServicesUrl': new FormControl(this.uemDetails.deviceServicesUrl, [\n        Validators.required\n      ])\n    });\n  }\n\n  isInputValid(key) {\n    return this.uemForm.controls[key].invalid && this.uemForm.controls[key].touched;\n  }\n\n  onFileChange(event) {\n    if (event.target.files.length > 0) {\n      this.file = event.target.files[0];\n    }\n  }\n\n  public toggleCertificateDetails() {\n    this.showCertificateDetails = !this.showCertificateDetails;\n  }\n\n  public saveUemDetails() {\n    const self = this;\n    this.spinnerService.show();\n    const data = this.prepareSave();\n    this.uemService.saveUemDetails(data).subscribe(res => {\n      self.uemDetails = res;\n      self.file = false;\n      this.uemForm = this.createForm();\n      this.spinnerService.hide();\n      this.toastService.activateWithTranslate('uem.save.success', 'success');\n    }, error => {\n      this.spinnerService.hide();\n      if (error.code === 'airwatch.certificate.invalid') {\n        this.toastService.activateWithTranslate('uem.password.error', 'danger');\n      } else {\n        this.toastService.activateWithTranslate('uem.save.error', 'danger');\n      }\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {UemIntegrationRoutingModule, RoutedComponents} from './uem-integration-routing.module';\nimport {ClarityModule, ClrFormsNextModule} from '@clr/angular';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  imports: [UemIntegrationRoutingModule,\n    TranslateModule,\n    ClarityModule,\n    ClrFormsNextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule],\n  exports: [TranslateModule],\n  declarations: [RoutedComponents]\n})\nexport class UemIntegrationModule {\n}\n","import {Injectable} from '@angular/core';\nimport {ApiService, HttpService} from '../core';\nimport {flatMap} from 'rxjs/operators';\nimport {HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UemIntegrationService {\n\n  constructor(private httpService: HttpService, private apiService: ApiService) {\n  }\n\n  getUemDetails() {\n    return this.apiService.getLink('consoleAirWatchConfig')\n      .pipe(flatMap(url => this.httpService.get(url + window.location.search)));\n  }\n\n  saveUemDetails(data: FormData) {\n    return this.apiService.getLink('consoleAirWatchConfig')\n      .pipe(flatMap(url => this.httpService\n        .put(url + window.location.search, {\n          headers: new HttpHeaders({\n            'Accept': 'application/vnd.vmware.catalog.tenants-console-aw-config-v1+json'\n          })\n        }, data)));\n  }\n}\n"],"sourceRoot":""}