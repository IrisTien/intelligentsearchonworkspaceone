<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>endusercatalog</artifactId>
        <groupId>com.vmware</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>${packaging.type}</packaging>

    <artifactId>endusercatalog-assembly</artifactId>
    <properties>
        <sonar.skip>true</sonar.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmware</groupId>
            <artifactId>endusercatalog-api</artifactId>
            <version>${project.version}</version>
            <classifier>classes</classifier>
        </dependency>
        <dependency>
            <groupId>com.vmware</groupId>
            <artifactId>endusercatalog-ui</artifactId>
            <version>${project.version}</version>
            <classifier>classes</classifier>
        </dependency>
        <dependency>
            <groupId>com.vmware</groupId>
            <artifactId>endusercatalog-console</artifactId>
            <version>${project.version}</version>
            <classifier>classes</classifier>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bc-fips</artifactId>
            <version>1.0.1.BC-FIPS-Certified</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vmware</groupId>
            <artifactId>endusercatalog-auth-stub</artifactId>
            <version>${endusercatalog.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmware</groupId>
            <artifactId>endusercatalog-cache-seeder</artifactId>
            <version>${endusercatalog.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmware</groupId>
            <artifactId>http-client-stub</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmware</groupId>
            <artifactId>endusercatalog-repository-stub</artifactId>
            <version>${endusercatalog.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>spring-boot-config-files</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${project.build.directory}/config</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/test/resources/</directory>
                                    <includes>
                                        <include>*.properties</include>
                                        <include>*.xml</include>
                                        <include>*.json</include>
                                        <include>*.jks</include>
                                        <include>*.p12</include>
                                        <include>greenbox_client_secret</include>
                                        <include>*.txt</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>static-content</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${project.build.directory}/gulp-generated</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../ui/target/gulp-generated</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>static-content-console</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${project.build.directory}/gulp-generated/public/console</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../console/target/gulp-generated/public/console</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warName>catalog-portal</warName>
                    <webResources>
                        <resource>
                            <directory>${project.build.directory}/gulp-generated/public</directory>
                            <includes>
                                <include>**</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <finalName>catalog-portal</finalName>
                    <mainClass>com.vmware.endusercatalog.bootstrap.CatalogApplication</mainClass>
                    <folders>
                        <folder>${project.build.directory}/gulp-generated/public</folder>
                        <folder>${project.build.directory}/config/</folder>
                    </folders>
                    <requiresUnpack>
                        <dependency>
                            <groupId>org.bouncycastle</groupId>
                            <artifactId>bc-fips</artifactId>
                        </dependency>
                    </requiresUnpack>
                    <arguments>
                        <argument>--spring.config.location=classpath:euc-ux-test.properties</argument>
                        <argument>--banner.location=classpath:banner-ux-test.txt</argument>
                        <argument>--application.formatted-version=${project.version}</argument>
                        <argument>--logging.config=classpath:logback-ux-test.xml</argument>
                        <!--When run from IDE (or) using maven plugin goal, the default is set to dev mode-->
                        <argument>--euc.dev.mode=true</argument>
                        <argument>--euc.trust.all.ssl.certs=true</argument>
                        <argument>
                            --server.context-parameters.org.eclipse.jetty.servlet.Default.resourceBase=${project.build.directory}/gulp-generated/public
                        </argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <!-- Use the GIT plugin to mainly tag Docker images. -->
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                        <configuration>
                            <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                            <!-- Turning this to true will generate a Java properties file with all Git info. -->
                            <generateGitPropertiesFile>false</generateGitPropertiesFile>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptor>src/main/ebconfig-assembly.xml</descriptor>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <images>
                                <!-- A single's image configuration -->
                                <image>
                                    <name>greenbox:${user.name}-${git.commit.id}</name>
                                    <registry>${aws.account.id}.dkr.ecr.${aws.region}.amazonaws.com</registry>
                                    <build>
                                        <dockerFile>Dockerfile</dockerFile>
                                        <assembly>
                                            <descriptor>docker-assembly.xml</descriptor>
                                        </assembly>
                                        <tags>
                                            <tag>${user.name}-${git.commit.id}</tag>
                                        </tags>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>push-image</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>create-application-version</id>
            <build>
                <plugins>
                    <!-- Use the GIT plugin to mainly tag Docker images. -->
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                        <configuration>
                            <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                            <!-- Turning this to true will generate a Java properties file with all Git info. -->
                            <generateGitPropertiesFile>false</generateGitPropertiesFile>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptor>src/main/ebconfig-assembly.xml</descriptor>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>integration-tests</id>
            <properties>
                <environment.type>default</environment.type>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <workingDirectory>${project.basedir}/src/it/javascript</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                            </execution>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>protractor integration tests</id>
                                <goals>
                                    <goal>gulp</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <arguments>${environment.type}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>pre-integration-test</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>post-integration-test</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <wait>1000</wait> <!--wait for a sec before checking again for app is up-->
                            <maxAttempts>100</maxAttempts>
                            <mainClass>com.vmware.endusercatalog.bootstrap.CatalogApplication</mainClass>
                            <folders>
                                <folder>${project.build.directory}/gulp-generated/public</folder>
                                <folder>${project.build.directory}/config/</folder>
                            </folders>
                            <arguments>
                                <argument>--spring.config.location=classpath:euc-ux-it.properties</argument>
                                <argument>--banner.location=classpath:banner-ux-it.txt</argument>
                                <argument>--application.formatted-version=${project.version}</argument>
                                <argument>--logging.config=classpath:logback-ux-it.xml</argument>

                                <!--When running protractor test, browser may not allow to set Host header. So, running in dev mode for protractor tests.-->
                                <argument>--euc.dev.mode=true</argument>
                                <argument>--euc.trust.all.ssl.certs=true</argument>
                                <argument>
                                    --server.context-parameters.org.eclipse.jetty.servlet.Default.resourceBase=${project.build.directory}/gulp-generated/public
                                </argument>
                            </arguments>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>overall-unit-test-report
                                </id>  <!--disable generating unit test report when integration-tests profile chosen-->
                                <phase>none</phase> <!-- this disables plugin -->
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>all-tests</id>
            <properties>
                <environment.type>default</environment.type>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <workingDirectory>${project.basedir}/src/it/javascript</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                            </execution>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>protractor integration tests</id>
                                <goals>
                                    <goal>gulp</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <arguments>${environment.type}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>pre-integration-test</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>post-integration-test</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <wait>1000</wait> <!--wait for a sec before checking again for app is up-->
                            <maxAttempts>100</maxAttempts>
                            <mainClass>com.vmware.endusercatalog.bootstrap.CatalogApplication</mainClass>
                            <folders>
                                <folder>${project.build.directory}/gulp-generated/public</folder>
                                <folder>${project.build.directory}/config/</folder>
                            </folders>
                            <arguments>
                                <argument>--spring.config.location=classpath:euc-ux-it.properties</argument>
                                <argument>--banner.location=classpath:banner-ux-it.txt</argument>
                                <argument>--application.formatted-version=${project.version}</argument>
                                <argument>--logging.config=classpath:logback-ux-it.xml</argument>
                                <!--When running protractor test, browser may not allow to set Host header. So, running in dev mode for protractor tests.-->
                                <argument>--euc.dev.mode=true</argument>
                                <argument>--euc.trust.all.ssl.certs=true</argument>
                                <argument>
                                    --server.context-parameters.org.eclipse.jetty.servlet.Default.resourceBase=${project.build.directory}/gulp-generated/public
                                </argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
