(function(module) {
    'use strict';

    module.controller('AppCenterController', [
        '$scope',
        '$rootScope',
        '$timeout',
        'Localization',
        'ConfigService',
        'SettingsService',
        'HorizonService',
        'UserAgent',
        'UtilService',
        'BrandingService',
        'EventsService',
        '$location',
        '$notify',
        'PasswordPolicyService',
        'hznLocalStorage',
        'PasswordVaultService',
        'AppLaunchService',
        'ClientRuntimeService',
        'ModalService',
        '$filter',
        'BootstrapService',
        'HttpProxyService',
        'LocalStorageService',
        'Events',
        '$q',
        '$state',
        'ScrollToTopService',
        'SearchService',
        'POLLING_INTERVALS',
        'AppDownloadService',
        'LocationReloadService',
        'NotificationService',
        'SignOutService',
        'TenantCustomizationService',
        'CatalogService',
        'NativeBridgeService',
        function($scope,
                  $rootScope,
                  $timeout,
                  Localization,
                  ConfigService,
                  SettingsService,
                  HorizonService,
                  UserAgent,
                  UtilService,
                  BrandingService,
                  EventsService,
                  $location,
                  $notify,
                  PasswordPolicyService,
                  hznLocalStorage,
                  PasswordVaultService,
                  AppLaunchService,
                  ClientRuntimeService,
                  ModalService,
                  $filter,
                  BootstrapService,
                  HttpProxyService,
                  LocalStorageService,
                  Events,
                  $q,
                  $state,
                  ScrollToTopService,
                  SearchService,
                  POLLING_INTERVALS,
                  AppDownloadService,
                  LocationReloadService,
                  NotificationService,
                  SignOutService,
                  TenantCustomizationService,
                  CatalogService,
                  NativeBridgeService) {
            NativeBridgeService.registerBridge();

            //Creating a promise for index route to wait on
            var initAppCallsDefer = $q.defer();
            var initAppCallsPromise = initAppCallsDefer.promise;
            var deviceRegistrationDetailsTimer;
            BootstrapService.setInitAppCallsPromise(initAppCallsPromise);
            var vm = this,
                title = Localization.getLocalizedString('appCenter');
            vm.pageTitle = title;
            vm.appsLoaded = false;
            vm.user = {};
            vm.searchFieldToggle = {};
            vm.isBrowser = UserAgent.isBrowser();
            vm.isAWJade = UserAgent.isAWJade();
            vm.isAWJadeV2 = UserAgent.isAWJadeV2();
            vm.isAWJadeMobile = UserAgent.isAWJadeMobile();
            vm.isMobileBrowser = UserAgent.isMobileBrowser();
            vm.isAWJadeDesktop = UserAgent.isAWJadeDesktop();
            vm.isAWJadeDocked = UserAgent.isAWJadeDocked();
            vm.isAwJade30orAbove = UserAgent.isAWJadeV3();
            vm.isWindowsJade = UserAgent.isWindowsJade();
            vm.isWindowsTabletJade = UserAgent.isWindowsTabletJade();
            vm.isMacJade = UserAgent.isMacJade();
            vm.isMobileNonWindowBrowser = UserAgent.isMobileNonWindowBrowser();
            vm.isWindowsBrowser = UserAgent.isWindowsBrowser();
            vm.showMacAppDownloadBanner = false;
            vm.isMAC_PROMO_BANNERenabled = UtilService.getObjValue(window, 'workspaceOne.featureFlags.MAC_PROMO_BANNER', false);
            vm.isRenderNotificationBellForMobile = vm.isAWJadeMobile || (UserAgent.isPhone() && UserAgent.isBrowser());
            vm.isMacBrowser = UserAgent.isMacBrowser();
            vm.directEnrollmentEnabled = false;
            vm.isDesktopAppRefreshing = false;
            vm.pollForEnrollmentStatus = false;
            //used to show overlay on the header when app re-order is in progress
            vm.sortingDisabled = true;
            vm.brandingAvailable = false;
            vm.showPeopleTab = false;
            vm.userAnnouncementMsg = '';
            vm.notificationsLoaded = false;
            vm.isNotificationDropdownActive = false;
            vm.previousUrl = '';
            angular.extend($rootScope, workspaceOne);
            ModalService.setCurrentModal($scope.$modal);
            //If the page load is because of clicking on refresh button
            if (window.performance && window.performance.navigation.type === 1) {
                HttpProxyService.clearAll();
                HttpProxyService.clearPeopleSearch();
                ConfigService.refreshCache(true);
            }

            //mac app is only supported in and above 10.11.0
            if (UserAgent.isMacAppDownloadSupported('10.11.0') && vm.isMAC_PROMO_BANNERenabled && !hznLocalStorage.hidePromoBanner) {
                AppDownloadService.checkIfMacAppExists().then(function(data) {
                    if (data && data.downloadUrl) {
                        vm.showMacAppDownloadBanner = true;
                    }
                });
            }

            SettingsService.getUserInfo().then(function(user) {
                var properties = ['userName', 'firstName', 'lastName', 'emailAddress', 'numOfManagedDevices', 'phoneNumber', 'adminUser', 'internalUserType', 'changePasswordAllowed', 'localUser', 'imageURL'];
                _.extend(vm.user, _.pick(user, properties));
                SettingsService.setCurrentUser(vm.user);
                vm.userAvailable = true;
                if (vm.user.adminUser) {
                    SettingsService.getUserAnnouncement().then(function(userAnnouncement) {
                        vm.userAnnouncementMsg = userAnnouncement.message;
                    }, function() {
                        vm.userAnnouncementMsg = '';
                    });
                }
            }, function(response) {
                vm.userAvailable = false;
                if (!vm.isAWJade && _.get(response, "data.code", undefined) === "admin.terms.not.accepted") {
                    ConfigService.getAdminConsoleTermsUrl().then(function(url) {
                        window.location = url;
                    });
                }
            });

            BrandingService.getBranding().then(function(branding) {
                branding = branding || {};
                var defaultFavIconUrl = "";
                var catalogItemBackground = {};
                var catalogItemTransparency = 1;
                var nameAndImages = branding.brandNameAndImages || {},
                    companyName = nameAndImages.companyName,
                    brandName = nameAndImages.brandName || title,
                    favIconUrl = nameAndImages.favIconUrl || defaultFavIconUrl;

                vm.branding = branding;
                vm.pageTitle = brandName;
                vm.favIconUrl = favIconUrl;

                if (companyName) {
                    vm.pageTitle = companyName + ' — ' + vm.pageTitle;
                }

                branding.pageTitle = vm.pageTitle;
                branding.favIconUrl = vm.favIconUrl;

                if (_.get(branding, 'portalBranding.appIconBackgroundColor')) {
                    var appIconBgColor = branding.portalBranding.appIconBackgroundColor,
                        hexRegex6 = /^#[0-9a-fA-F]{6}$/,
                        hexRegex3 = /^#[0-9a-fA-F]{3}$/;

                    if (hexRegex3.test(appIconBgColor) && !hexRegex6.test(appIconBgColor)) {
                        appIconBgColor = UtilService.threeHexToSixHex(appIconBgColor);
                    }

                    catalogItemBackground = UtilService.hexToRgb(appIconBgColor);

                    if (_.get(branding, 'portalBranding.appIconBackgroundTransparency')) {
                        catalogItemTransparency = branding.portalBranding.appIconBackgroundTransparency / 100;
                    }

                    branding.catalogItemBackground = 'rgba(' + catalogItemBackground.r + ',' + catalogItemBackground.g + ',' + catalogItemBackground.b + ',' + catalogItemTransparency + ')';
                }

                SettingsService.setCurrentBranding(branding);

                // We removed branding directive and the branding.html, directly inject the styles to the head to be faster
                // Needs this otherwise will not render the header when there is branding is set to default

                if (branding.brandNameAndImages) {
                    vm.brandingLogo = branding.brandNameAndImages.logoUrl;
                } else {
                    //use the default from the asset folder
                    vm.brandingLogo = "app-v2/graphics/logo-ws1.png";
                }

                if (branding.portalBranding) {
                    vm.brandingStyles = branding.portalBranding;
                    vm.brandingStyles.image = '';
                    if (branding.portalBranding.backgroundHighlightUrl) {
                        vm.brandingStyles.image = 'url(' + vm.brandingStyles.backgroundHighlightUrl + ')';
                    }
                    if (branding.portalBranding.backgroundPatternUrl) {
                        if (vm.brandingStyles.image) {
                            vm.brandingStyles.image += ', ';
                        }
                        vm.brandingStyles.image += 'url(' + vm.brandingStyles.backgroundPatternUrl + ')';
                    }
                    if (branding.portalBranding.backgroundImageUrl) {
                        if (vm.brandingStyles.image) {
                            vm.brandingStyles.image += ', ';
                        }
                        vm.brandingStyles.image += 'url(' + vm.brandingStyles.backgroundImageUrl + ')';
                    }

                    vm.catalogItemBackground = branding.catalogItemBackground;
                    if (branding.portalBranding.letteringEffect === 'letterpress') {
                        vm.textEffect = "1px 1px rgba(255, 255, 255, 0.5)";
                    }
                    if (branding.portalBranding.letteringEffect === 'emboss') {
                        vm.textEffect = "1px 1px rgba(0, 0, 0, 0.5)";
                    }
                }
                vm.brandingAvailable = true;
            }, function() {
                // Handle getBranding failed, show the default styling
                vm.brandingAvailable = true;
            });

            vm.getDeviceRegistrationDetail = function() {
                var deferred = $q.defer();
                if (UserAgent.isNativeAppVersionIsEqualOrAbove('2.1') && UtilService.getQueryParams().deviceUdid) {
                    ConfigService.getDeviceRegistrationDetail().then(function(deviceDetails) {
                        //Mdm URL is null if MDM is not configured
                        if (deviceDetails) {
                            deviceDetails.get().then(function(deviceStatus) {
                                var prevDeviceMgmtStatus = HttpProxyService.getDeviceMgmtStatus();
                                vm.unEnrollEnable = false;
                                vm.deviceContainerOrMdmEnrolled = false;
                                if (deviceStatus.deviceMgmtDetails) {
                                    var isMdmEnrolled = deviceStatus.deviceMgmtDetails.deviceMdmEnrolled
                                        && UserAgent.isNativeAppVersionIsEqualOrAbove('2.1');
                                    var isContainerEnrolled = deviceStatus.deviceMgmtDetails.deviceContainerOrMdmEnrolled
                                        && UserAgent.isNativeAppVersionIsEqualOrAbove('2.2');
                                    NativeBridgeService.setContainerMode(isMdmEnrolled);
                                    vm.deviceContainerOrMdmEnrolled = deviceStatus.deviceMgmtDetails.deviceContainerOrMdmEnrolled;
                                    vm.unEnrollEnable = isMdmEnrolled || isContainerEnrolled;
                                    var deviceEnrollStatusType = deviceStatus.deviceMgmtDetails.deviceEnrollStatusType;
                                    if (prevDeviceMgmtStatus !== deviceStatus.deviceMgmtDetails.deviceMgmtType) {
                                        HttpProxyService.setDeviceMgmtStatus(deviceStatus.deviceMgmtDetails.deviceMgmtType);
                                        HttpProxyService.clearAll();
                                    }
                                    deferred.resolve(deviceEnrollStatusType);
                                }
                            }, function() {
                                vm.unEnrollEnable = false;
                                deferred.reject(vm.unEnrollEnable);
                            });
                        } else {
                            vm.unEnrollEnable = false;
                            deferred.reject(vm.unEnrollEnable);
                        }
                    });
                } else {
                    vm.unEnrollEnable = false;
                    deferred.reject(vm.unEnrollEnable);
                }
                return deferred.promise;
            };

            vm.checkMdmStatus = function(status) {
                if (UserAgent.isAWJadeV2()) {
                    //Device is not enrolled
                    var isMdmError = status === 'UNENROLLED' || status === 'BLACKLISTED' || status === 'ENTWIPEPEND' || status === 'MDM_DEVICE_BLACKLISTED' || status === 'UNKNOWN';

                    if (isMdmError) {
                        ModalService.getCurrentModal().open('app-v2/common/modalDialog/templates/mdmError.html').then(function() {
                            vm.continueSignout();
                        });
                    }
                }
            };

            //poll until the status is enrolled or wait for 3 min and show sign out and retry option
            vm.getDeviceRegistrationDetailPoll = function() {
                function pollDeviceRegistration() {
                    hznLocalStorage.deviceDetailDelay = hznLocalStorage.deviceDetailDelay ? hznLocalStorage.deviceDetailDelay : new Date().getTime() + POLLING_INTERVALS.DEVICE_REGISTRATION_CHECK_INTERVAL; //3 min
                    var delay = hznLocalStorage.deviceDetailDelay - new Date().getTime();
                    if (delay > 0) {
                        if (!deviceRegistrationDetailsTimer) {
                            $timeout.cancel(deviceRegistrationDetailsTimer);
                        }
                        deviceRegistrationDetailsTimer = $timeout(function() {
                            getData();
                        }, 5000);
                    } else {
                        deferred.reject();
                    }
                }
                var deferred = $q.defer();
                var getData = function() {
                    vm.getDeviceRegistrationDetail().then(function(status) {
                        var prevEnrollmentStatus = HttpProxyService.getDeviceEnrollmentStatus();
                        if (vm.deviceContainerOrMdmEnrolled) {
                            // If current status is enrolled and
                            // If prev status is null or if prev status is not equal to current status
                            // Then resolve the promise and call the bootstarp api with refresh cache.
                            HttpProxyService.setDeviceEnrollmentStatus(status);
                            if (status === 'ENROLLED') {
                                if (prevEnrollmentStatus === status) {
                                    deferred.resolve(false);
                                } else {
                                    // status has changed, clear cache
                                    deferred.resolve(true);
                                }
                                //if status is ENROLLINPROGRESS _and_ previous_status was not that
                                //then we should poll for a while to see if it switches to ENROLLED. So go into else if
                                // if status is ENROLLINPROGRESS _and previous_status was also ENROLLINPROGRESS
                                //then we should assume that the user is stuck there and just take them to the catalog
                                // Hence resolve the promise with clearcache false.
                            } else if (status === 'ENROLLINPROGRESS' && prevEnrollmentStatus === status) {
                                //https://jira-euc.eng.vmware.com/jira/browse/HW-76958
                                deferred.resolve(false);
                            } else {
                                pollDeviceRegistration();
                            }
                        } else {
                            pollDeviceRegistration();
                        }
                    }, function() {
                        deferred.resolve();
                    });
                };

                getData();
                return deferred.promise;
            };

            vm.continueSignout = function($event) {
                SignOutService.continueSignOut($event);
            };

            vm.retryLoad = function() {
                delete hznLocalStorage.deviceDetailDelay;
                ModalService.getCurrentModal().open('app-v2/common/deviceNotEnrolledWarning.html').then(function() {
                    LocationReloadService.reload();
                }, function() {
                    vm.continueSignout();
                });
            };

            vm.bootstrap = function(clearEntitlementsCache) {
                $q.all([BootstrapService.getBootstrapInfo(null, clearEntitlementsCache), EventsService.getEvents(), ConfigService.getTenantCustomizations(false)])
                    .then(function(promisesData) {
                        var appData = promisesData[0];
                        var events = promisesData[1];
                        var customizationSettings = promisesData[2] || {};
                        var installEvents = EventsService.filterEventsByType(events, Events.INSTALL);
                        var hasInstallEvents = installEvents.length > 0;
                        var launchableApps = _.get(appData, 'appInfo', {});
                        var bookmarkedAppsCount = appData.appInfo.bookmarkedApps.entitledCount;
                        BootstrapService.setAppTypeInfo(launchableApps);
                        BootstrapService.setBookmarkedAppsCount(bookmarkedAppsCount);
                        vm.mdmEnrolledEvents = EventsService.filterEventsByType(events, Events.MDM_ENROLLED);
                        vm.isWebClip = false;
                        vm.lastActivePage = "last_active_page_v2";
                        vm.nativenavPeople = "nativenav_people";
                        TenantCustomizationService.setCustomizationSettings(customizationSettings);
                        vm.hideCatalogTab = customizationSettings.hideCatalogTab;
                        vm.hideBookmarksTab = customizationSettings.hideBookmarksTab;
                        vm.showPeopleTab = !customizationSettings.hidePeopleTab;
                        vm.inAppNotificationEnabled = customizationSettings.notificationsEnabled;
                        vm.mdmOnlyWS1 = appData.mdmOnlyWS1;
                        vm.isTermsOfUseEnabled = customizationSettings.termsOfUseApplicable && !vm.mdmOnlyWS1;
                        vm.passwordChangeEnabled = vm.user.changePasswordAllowed && !vm.mdmOnlyWS1;
                        vm.isAWJadeWithNativenav = customizationSettings.nativenavEnabled && UserAgent.isAWJadeWithNativenav();
                        vm.isAWJadeWindowsWithNativenav = customizationSettings.nativenavEnabled && UserAgent.isAWJadeWindowsNativenav();
                        checkTermsOfUse(vm.user.userName);

                        vm.showNotification = function() {
                            $state.go('notifications');
                        };

                        //If events api returns MDM_ENROLLED events
                        if (UserAgent.isAWJade() && vm.mdmEnrolledEvents.length) {
                            vm.directEnrollmentEnabled = true;
                            HttpProxyService.setStepupStatusForOktaAppLaunch(true);
                            BootstrapService.setDirectEnrollmentStatus(vm.directEnrollmentEnabled);
                        }

                        BootstrapService.setInstallEventsStatus(hasInstallEvents);
                        //Resolving the promise as all the required calls required to initialize the application are resolved and processed.
                        initAppCallsDefer.resolve();
                        workspaceOne.hasLaunchableApps = false;
                        //same logic ported from UIController.java
                        for (var obj in launchableApps) {
                            if (launchableApps[obj].entitledCount) {
                                workspaceOne.hasLaunchableApps = true;
                                break;
                            }
                        }
                        vm.hasLaunchableApps = UtilService.getObjValue(window, 'workspaceOne.hasLaunchableApps', false);
                        vm.showBookmarksTab = (customizationSettings.hideCatalogTab && vm.showPeopleTab) || (!customizationSettings.hideBookmarksTab && vm.hasLaunchableApps);
                        vm.showCatalogTab = !vm.hideCatalogTab;
                        vm.showTabsSection = vm.showPeopleTab || (!vm.showPeopleTab && vm.hasLaunchableApps && vm.showBookmarksTab && vm.showCatalogTab);
                        $timeout(function() {
                            document.getElementById("PVConduit").ping = PasswordVaultService.pingExtension;
                        }, 0);

                        //show when everything is ready
                        vm.appsLoaded = true;

                        vm.isWebClip = UserAgent.isWebClip();

                        vm.dismissUserAnnouncement = function($event) {
                            SettingsService.dismissUserAnnouncement().then(function() {
                                vm.userAnnouncementMsg = '';
                            });
                        };

                        vm.unEnrollConfirm = function($event) {
                            if ($event) {
                                $event.preventDefault();
                            }
                            ModalService.getCurrentModal().open('app-v2/common/unenrollWarning.html', {
                                modal: ModalService.getCurrentModal()
                            });
                        };

                        vm.desktopRefresh = function(activeTab) {
                            if (!vm.isDesktopAppRefreshing) {
                                vm.isDesktopAppRefreshing = true;
                                ConfigService.refreshCache().then(function() {
                                    vm.isDesktopAppRefreshing = false;
                                }, function() {
                                    vm.isDesktopAppRefreshing = false;
                                });

                                if (activeTab === 'bookmarks') {
                                    $rootScope.$broadcast('Desktop-Bookmarks-Refresh');
                                }
                                if (activeTab === 'catalog') {
                                    $rootScope.$broadcast('Desktop-Catalog-Refresh');
                                }
                                if (activeTab === 'people') {
                                    $rootScope.$broadcast('Desktop-People-Refresh');
                                }
                                if (activeTab === 'peopleDetails') {
                                    $rootScope.$broadcast('Desktop-People-Details-Refresh');
                                }
                            }
                        };

                        vm.unEnrollCallback = function() {
                            HttpProxyService.clearAllAlongWithEnrollmentStatus();
                            delete hznLocalStorage.deviceDetailDelay;
                            if (vm.unEnrollEnable) {
                                ClientRuntimeService.unEnroll();
                            } else {
                                ClientRuntimeService.unEnroll(true);
                            }
                        };

                        vm.openProfile = function($event) {
                            if ($event) {
                                $event.preventDefault();
                            }
                            $scope.$broadcast('open-modal-dialog', {
                                dialogtemplate: 'app-v2/common/profileDialog.html',
                                dialogparams: {}
                            });
                        };

                        vm.changePassword = function($event) {
                            if ($event) {
                                $event.preventDefault();
                            }
                            var policies = PasswordPolicyService.getPasswordPolicy() || null;

                            if (!policies && vm.user.localUser) {
                                vm.isLoading = true;
                                ConfigService.getPasswordPolicy().then(function(passwordPolicy) {
                                    passwordPolicy.get().then(function(policies) {
                                        PasswordPolicyService.setPasswordPolicy(policies);
                                        vm.isLoading = false;
                                        location.hash = '#/changePassword';
                                    }, function() {
                                        vm.isLoading = false;
                                        location.hash = '#/changePassword';
                                    });
                                });
                            } else {
                                location.hash = '#/changePassword';
                            }
                        };

                        vm.signout = function($event) {
                            if (UserAgent.isNativeAppVersionIsEqualOrAbove('2.1')) {
                                ModalService.getCurrentModal().open('app-v2/common/modalDialog/templates/confirm.html', {
                                    title: $filter('i18n')('app.logout.title'),
                                    message: $filter('i18n')('app.logout.confirm.msg'),
                                    ok: $filter('i18n')('userInfo.signout'),
                                    cancel: $filter('i18n')('button.cancel')
                                }).then(function() {
                                    vm.continueSignout($event);
                                });
                            } else {
                                vm.continueSignout($event);
                            }
                        };

                        vm.signoutNativenav = function($event) {
                            ModalService.getCurrentModal().open('app-v2/settings/signoutnativenav-confirm.html', {
                            }).then(function() {
                                vm.continueSignout($event);
                            });
                        };

                        /*
                         * ios UIWebview, has problem wih href="#..." syntax
                         */
                        vm.catalog = function() {
                            location.hash = '#/catalog';
                        };

                        vm.bookmark = function() {
                            location.hash = '#/bookmarks';
                        };

                        vm.peopleSearch = function() {
                            location.hash = '#/people';
                        };

                        vm.preferences = function($event) {
                            if ($event) {
                                $event.preventDefault();
                            }
                            location.hash = '#/preferences';
                        };

                        vm.adminConsole = function($event) {
                            if ($event) {
                                $event.preventDefault();
                            }
                            ConfigService.getAdminConsoleUrl().then(function(url) {
                                window.open(url);
                            });
                        };

                        /*
                        If nativenav is enabled and the user leaves the app on the notifications page on either the
                        people or apps tab, then when the user comes back to the app, the back button on the notfications
                        page should take them back to where they came from. On the apps tab the previous state is maintained
                        in the last_active local storage variable but on people tab that variable is not set if nativenav is enabled
                        hence we use another localstorage variable peopleNativeNav for this purpose.
                        */

                        vm.backAction = function(activeTab) {
                            var lastActive = hznLocalStorage[vm.lastActivePage];
                            var peopleNativeNav = hznLocalStorage[vm.nativenavPeople];
                            if (vm.isAWJadeMobile && activeTab == 'notifications') {
                                if (peopleNativeNav === 'true') {
                                    $state.go('people');
                                    return;
                                } else {
                                    $state.go(lastActive);
                                    return;
                                }
                            }
                            return window.history.back();
                        };

                        vm.openDevices = function($event, showDialog) {
                            if ($event) {
                                $event.preventDefault();
                            }
                            $scope.$broadcast('open-modal-dialog', {
                                dialogtemplate: 'app-v2/common/devicesDialog.html',
                                dialogparams: {}
                            });
                        };

                        vm.virtualClientAppInstalled = function(app) {
                            AppLaunchService.appInstalled(app);
                        };

                        $scope.$on('$locationChangeStart', function(ev, newUrl, oldUrl) {
                            //close the filter if its open
                            //prevent navigation to previous screen
                            if (vm.categoryFilterOn) {
                                ev.preventDefault();
                                vm.categoryFilterOn = false;
                            }
                        });

                        $scope.$on('$locationChangeSuccess', function(ev, newUrl, oldUrl) {
                            // store previous Url so page controllers can determine their "referrer"
                            vm.previousUrl = (newUrl !== oldUrl) && oldUrl;
                        });

                        $scope.$on('deviceOnlineStatusChanged', function(event, deviceOnline) {
                            if (!UserAgent.isAWJade()) {
                                if (deviceOnline) {
                                    $notify.close('deviceStatus.networkLost');
                                } else {
                                    $notify.error('deviceStatus.networkLost');
                                }
                            }
                        });

                        vm.$state = $state;
                        vm.searchFieldOn = false;
                        vm.showRecentSearch = false;

                        vm.toggleSearchField = function() {
                            vm.searchFieldOn = !vm.searchFieldOn;
                            if (!vm.searchFieldOn) {
                                vm.searchFieldToggle.clearSearch();
                                SearchService.clearSearchQueryAndResults();
                            }

                            if ($state.current.activeTab === 'peopleDetails') {
                                vm.showRecentSearch = !vm.showRecentSearch;
                            }
                        };

                        //searchFieldOn is true by default on people tab
                        //showRecentSearch is true when people input is focused
                        vm.cancelPeopleSearchField = function() {
                            vm.showRecentSearch = false;
                            vm.searchFieldToggle.clearSearch();
                            SearchService.clearSearchQueryAndResults();
                        };

                        vm.categoryFilterOn = false;

                        vm.closeMobileFilter = function() {
                            vm.categoryFilterOn = false;
                        };

                        vm.updateTopnavActions = function() {
                            var currentPath = $state.current.activeTab;

                            if (currentPath.search('catalog') !== -1) {
                                vm.categoryFilterOn = !vm.categoryFilterOn;
                            }
                        };

                        vm.openPrivacyPage = function($event, privacyUrl) {
                            if ($event) {
                                $event.preventDefault();
                            }
                            ClientRuntimeService.openUrl(privacyUrl);
                        };

                        vm.showAppInstall = function() {
                            ClientRuntimeService.showAppInstall();
                        };

                        vm.gotoAppsFromFooter = function() {
                            var lastActive = hznLocalStorage[vm.lastActivePage];
                            vm.searchFieldOn = false;
                            var customizationSettings = TenantCustomizationService.getCustomizationSettings();
                            if (customizationSettings.hideCatalogTab) {
                                $location.path('/bookmarks');
                            } else if (workspaceOne && workspaceOne.hasLaunchableApps === false || lastActive === 'catalog' || customizationSettings.hideBookmarksTab) {
                                $location.path('/catalog');
                            } else {
                                $location.path('/bookmarks');
                            }
                        };

                        vm.gotoPeopleFromFooter = function() {
                            $location.path('/people');
                        };

                        vm.scrollToTop = function() {
                            if ($state.current.activeTab === "bookmarks") {
                                ScrollToTopService.scroll("bookmarks-container");
                            } else if ($state.current.activeTab === "catalog") {
                                ScrollToTopService.scroll("catalog-container");
                            }
                        };

                        vm.showNotificationsOverflowContainer = function() {
                            if ($state.current.name == 'newApps') {
                                $rootScope.$broadcast('notification-newapps-overlflow-actions', true);
                            }
                            $rootScope.$broadcast('notification-overlflow-actions', true);
                        };

                        $rootScope.$on('people-search-field-on', function(event, data) {
                            vm.showRecentSearch = data;

                            // Search field is should always be on for people tab even when scrim cancels the search
                            if ($state.current.activeTab === 'people') {
                                vm.searchFieldOn = true;
                            } else if ($state.current.activeTab === 'peopleDetails') {
                                vm.searchFieldOn = data;
                            }
                        });

                        //navigating to other page, check for device status, async call
                        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState) {
                            //searchFieldOn should be false when going from people search
                            if (_.get(fromState, 'name') === 'people') {
                                vm.searchFieldOn = false;
                            }

                            //searchFieldOn should be true when going to people search
                            if (_.get(toState, 'name') === 'people') {
                                vm.searchFieldOn = true;
                                vm.showRecentSearch = false;
                            }

                            if (!vm.pollForEnrollmentStatus && _.get(fromState, 'name') !== 'index') {
                                vm.getDeviceRegistrationDetail().then(function(status) {
                                    vm.checkMdmStatus(status);
                                });
                            }
                        });
                    });
            };

            function checkDeviceEnrollment() {
                //poll for device enrollment status
                if (UserAgent.isAWJadeV2()) {
                    var cancelPollForEnrollmentTimeOut = $timeout(function() {
                        vm.pollForEnrollmentStatus = true;
                    }, 2000);

                    var callback = function(clearEntitlementCache) {
                        $timeout.cancel(cancelPollForEnrollmentTimeOut);
                        vm.pollForEnrollmentStatus = false;
                        vm.bootstrap(clearEntitlementCache);
                    if (clearEntitlementCache) {
                        LocalStorageService.clearAll();
                    }
                    };

                    vm.getDeviceRegistrationDetailPoll().then(function(clearEntitlementCache) {
                        callback(clearEntitlementCache);
                    }, function() {
                        callback();
                        vm.retryLoad();
                    });
                } else {
                    vm.getDeviceRegistrationDetail();
                    vm.bootstrap();
                }
            }

            function checkTermsOfUse(userName) {
                // Terms of use will not be checked in Android less than 3.3 versions because native client should add document.referer header to display vIDM TOU page
                if (!vm.mdmOnlyWS1 && UtilService.checkTermsOfUseStatus()) {
                    ConfigService.getTermsOfUseStatus().then(function(response) {
                        if (!response.termsOfUseAcceptanceStatus.accepted) {
                            ConfigService.getUserConsoleTermsUrl().then(function(url) {
                                ConfigService.getLogoutUrl().then(function(logoutUrl) {
                                    window.location = UtilService.constructTouRedirectUrl(url, logoutUrl, userName);
                                });
                            });
                        }
                    });
                }
            }

            checkDeviceEnrollment();
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.controller('BookmarkItemContextDialogController', [
                        '$scope',
                        '$timeout',
                        '$filter',
                        'BookmarksService',
                        'OfflineService',
                        'UserAgent',
                        '$window',
                        '$sce',
                        '$location',
                        '$state',
                        '$notify',
                        'JadeV1Scheme',
                        'JadeV2Scheme',
                        'CatalogService',
                        'SearchService',
                        'UpdateUrlParamsService',
                        '$rootScope',
                        'UtilService',
                        'ModalService',
                        function($scope,
                                 $timeout,
                                 $filter,
                                 BookmarksService,
                                 OfflineService,
                                 UserAgent,
                                 $window,
                                 $sce,
                                 $location,
                                 $state,
                                 $notify,
                                 JadeV1Scheme,
                                 JadeV2Scheme,
                                 CatalogService,
                                 SearchService,
                                 UpdateUrlParamsService,
                                 $rootScope,
                                 UtilService,
                                 ModalService) {
            var vm = this;
            vm.isIOS = UserAgent.isIOS();
            var appDetails = $scope.appDetails;
            if (appDetails) {
                vm.hasAppRequirements = appDetails.subType === 'THINAPP' || appDetails.subType === 'XENAPP' || appDetails.subType === 'XENAPPDELIVERYGROUP' || appDetails.subType === 'VIEWPOOL' || appDetails.subType === 'VIEWAPP' || appDetails.subType === 'DESKTONEDESKTOP' || appDetails.subType === 'DESKTONEAPPLICATION';

                var descriptionText = htmlToPlaintext(appDetails.description);
                if (appDetails.description && descriptionText && descriptionText !== "") {
                    vm.appDescription = descriptionText;
                } else {
                    vm.appDescription = $filter('i18n')('app.details.label.noDescription');
                }
                angular.extend(appDetails._links, $scope.app._links);
                angular.extend($scope.app, appDetails);
            }

            function htmlToPlaintext(text) {
                return text ? String(text).replace(/<[^>]+>/gm, '') : '';
            }

            vm.hideApp = function(app, apps, index, $event) {
                var successHandler = function(returnData) {
                    $scope.unbBookmarkApp(app);
                };
                BookmarksService.toggleBookmark(app, false, successHandler);
            };

            //Hub specific functions
            vm.isBookmarkableApp = function(app) {
                return CatalogService.isBookmarkableApp(app);
            };

            // Do the same as the CatalogItemActionsDirective does here
            vm.hubToggleFavoriteApp = function(app, apps, index, $event) {
                if ($event) {
                    $event.preventDefault();
                }

                if (app.bookmarking) {
                    return;
                }
                //broadcast to update apps.js controller
                var handler = function(result) {
                    app = result;
                    if (app.favorite) {
                        $notify.success('app.details.label.addedFavorites');
                    }
                    $rootScope.$broadcast('app-bookmarked', app);
                };

                CatalogService.activateAndBookmarkApp(app, false, handler);
            };

            vm.appDetails = function(app) {
                location.hash = '#/bookmarks/details/' + encodeURIComponent(app.appId);
                SearchService.clearSearchQueryAndResults();
            };

            // Hub specific functions
            vm.hubAppDetails = function(app) {
                // close the modal if one exists
                var modal = ModalService.getCurrentModal();
                if (modal) {
                    modal.close(true);
                }
                location.hash = '#/apps/details/' + encodeURIComponent(app.appId) + '?nativenav=Hide';
                SearchService.clearSearchQueryAndResults();
            };

            var viewDownloadLink = $filter('i18n')('viewDownloadUrl');
            if (UserAgent.isIOS()) {
                viewDownloadLink = $filter('i18n')('viewDownloadUrlIOS');
            } else if (UserAgent.isAndroid()) {
                viewDownloadLink = $filter('i18n')('viewDownloadUrlAndroid');
            }
            var xenreceiverDownloadLink = $filter('i18n')('citrixReceiverDownloadUrl');
            if (UserAgent.isAWJadeV2()) {
                if (UserAgent.isWindows()) {
                    viewDownloadLink = JadeV2Scheme.APP_LAUNCH + "&uri=" + viewDownloadLink;
                    xenreceiverDownloadLink = JadeV2Scheme.APP_LAUNCH + "&uri=" + xenreceiverDownloadLink;
                } else {
                    viewDownloadLink = JadeV2Scheme.APP_LAUNCH + "&url=" + viewDownloadLink;
                    xenreceiverDownloadLink = JadeV2Scheme.APP_LAUNCH + "&url=" + xenreceiverDownloadLink;
                }
            }

            // TODO can this part isIE8OrLower to be removed??
            if (UserAgent.isIE8OrLower()) {
                vm.xenAppTooltip = $filter('i18n')('app.details.xenapp.msg.IE8OrLower');
                vm.xenAppDeliveryGroupTooltip = $filter('i18n')('app.details.xenappsDeliveryGroup.requirement');
            } else {
                vm.xenAppTooltip = $sce.trustAsHtml($filter('i18n')('app.details.xenapp.requirement', "<a target='_blank' href='" + xenreceiverDownloadLink + "'>", "</a>"));
                vm.xenAppDeliveryGroupTooltip = $sce.trustAsHtml($filter('i18n')('app.details.xenappsDeliveryGroup.requirement', "<a target='_blank' href='" + xenreceiverDownloadLink + "'>", "</a>"));
            }
            vm.viewDesktopTooltip = $sce.trustAsHtml($filter('i18n')('app.details.viewDesktop.requirement', "<a target='_blank' href='" + viewDownloadLink + "'>", "</a>"));
            vm.viewAppTooltip = $sce.trustAsHtml($filter('i18n')('app.details.viewapp.requirement', "<a target='_blank' href='" + viewDownloadLink + "'>", "</a>"));
            vm.desktoneTooltip = $sce.trustAsHtml($filter('i18n')('app.details.desktoneDesktop.requirement', "<a target='_blank' href='" + viewDownloadLink + "'>", "</a>"));
            vm.daasAppTooltip = $sce.trustAsHtml($filter('i18n')('app.details.desktoneApp.requirement', "<a target='_blank' href='" + viewDownloadLink + "'>", "</a>"));
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';
    module.controller('BookmarksItemController', ['$scope',
        'BookmarksService',
        '$log',
        '$sce',
        'OfflineService',
        'Localization',
        'UserAgent',
        'AppLaunchService',
        '$element',
        '$attrs',
        '$window',
        '$filter',
        'VirtualAppLaunchService',
        'HorizonResourcesLaunchService',
        'DetailsService',
        '$timeout',
        'CatalogService',
        'UtilService',
        function($scope,
                 BookmarksService,
                 $log,
                 $sce,
                 OfflineService,
                 Localization,
                 UserAgent,
                 AppLaunchService,
                 $element,
                 $attrs,
                 $window,
                 $filter,
                 VirtualAppLaunchService,
                 HorizonResourcesLaunchService,
                 DetailsService,
                 $timeout,
                 CatalogService,
                 UtilService) {
            var vm = this;
            vm.app = vm.app ? vm.app : $scope.app;
            var app = vm.app || $scope.app;
            vm.app.launching = false;
            vm.isAWJade = UserAgent.isAWJade();
            vm.isHorizon = UserAgent.isHorizon();
            var isHubApp = UtilService.isHub();

            var editMode = $attrs.currentview === "FAVORITES_EDIT";

            // For hub browser load different template, and also load the different template for favorites edit mode
            if (UserAgent.isAWJadeMobile()) {
                this.templateUrl = 'appItem.html';
            } else {
                this.templateUrl = editMode ? 'appItemFavoriteEdit.html' : 'appItemBrowser.html';
            }

            if (app.type === 'VIRTUAL') {
                app.badge = 'virtual-app';
            }
            app.icon = app._links.icon.href;
            app.launch = app._links.launch !== undefined ? app._links.launch.href : "";
            app.disabledThinApps = UserAgent.isThinAppSortSupportedBrowser() && !UserAgent.isWindowsBrowser() && app.subType === 'THINAPP';
            app.isMdmApp = CatalogService.isMdmApp(app.type, app.subType);
            app.resetAllowed = _.get(app, 'optionalAppInfo.resetAllowed', false);

            if (app.subType === 'VIEWPOOL' || app.subType === 'VIEWAPP' || app.subType === 'DESKTONEDESKTOP' || app.subType === 'DESKTONEAPPLICATION') {
                app.isViewResource = true;
            }

            vm.openSetAppPasswordDialog = function(app, $event) {
                BookmarksService.openSetAppPasswordDialog(app, $event);
            };
            $scope.openSetAppPasswordDialog = vm.openSetAppPasswordDialog;

            vm.launchApp = function(app, $event) {
                //if its disabled thinApp prevent app opening
                if (app.disabledThinApps) {
                    return;
                }
                //there is cases that app is launched when user says that the launching program are installed in dialog.
                // So we need to check the event here
                if ($event) {
                    $event.preventDefault();
                }

                if (isHubApp) {
                    CatalogService.activateAndLaunchApp(app);
                } else {
                    AppLaunchService.launchApp(app);
                }
            };

            // Hub specific function
            vm.openThinAppPackageModal = function(app, $event) {
                if ($event) {
                    $event.preventDefault();
                }
                CatalogService.activateAndViewThinappPackage(app);
            };

            vm.openWithViewClient = function(app, $event) {
                if ($event) {
                    $event.preventDefault();
                }
                if (!(VirtualAppLaunchService.isViewApp(app) || VirtualAppLaunchService.isDesktoneApp(app))) {
                    return;
                }

                HorizonResourcesLaunchService.launchByViewClient(app);
            };
            vm.openWithBrowser = function(app, $event) {
                if ($event) {
                    $event.preventDefault();
                }
                if (!(VirtualAppLaunchService.isViewApp(app) || VirtualAppLaunchService.isDesktoneApp(app))) {
                    return;
                }
                HorizonResourcesLaunchService.launchByBrowser(app);
            };

            vm.isViewOptionSupported = function(app, clientType) {
                return HorizonResourcesLaunchService.isViewOptionSupported(app, clientType);
            };

            if (vm.isViewOptionSupported(app, "BROWSER")) {
                app.viewBrowserLaunchSupported = true;
            }
            if (vm.isViewOptionSupported(app, "NATIVE")) {
                app.viewClientLaunchSupported = true;
            }

            app.viewClientLaunchEnabled = app.isViewResource && app.viewClientLaunchSupported && !vm.isAWJade && !app.disabledThinApps;
            app.viewBrowserLaunchEnabled = app.isViewResource && app.viewBrowserLaunchSupported && !vm.isAWJade && !app.disabledThinApps;
            app.isViewResourceEnabled = (!app.isViewResource || (app.isViewResource && vm.isAWJade)) && !app.disabledThinApps && !app.isMdmApp;

            // only trigger the long-hold on mobile devices browser view < 540
            // Trigger long-press on standalone apps regardless of screensize

            vm.longPressEnabled = UserAgent.isAWJadeMobile() || (UserAgent.isMobile() && $window.innerWidth < 540);

            function openContextMenu() {
                var bookmarkItem = $element.find('.bookmark-item-actions');
                $timeout(function() {
                    bookmarkItem.trigger('click');
                    angular.element(".bookmark-contextdialog-scrim").off('click');
                }, false);
            }

            // This is onload adding the actionsheet label aka "remove from favorites or add to favorites"
            setActionSheetLabel(vm.app);
            // This is to update
            $scope.$on('app-bookmarked', function(event, app) {
                setActionSheetLabel(app);
            });

            $scope.$on('native-bridge-app-bookmarked', function(event, app) {
                setActionSheetLabel(app);
            });

            function setActionSheetLabel() {
                if (app.favorite && !app.bookmarking) {
                    vm.actionSheetLabel = $filter('i18n')('hub.actionsheet.label.removeFavorites');
                    vm.contextDialogFavoriteLabel = $filter('i18n')('hub.contextDialog.label.removeFavorites');
                } else if (!app.favorite && !app.bookmarking) {
                    vm.actionSheetLabel = $filter('i18n')('hub.actionsheet.label.addFavorites');
                    vm.contextDialogFavoriteLabel = $filter('i18n')('hub.contextDialog.label.addFavorites');
                }
            }

            vm.triggerContextdialog = function() {
                if (!vm.longPressEnabled) {
                    return;
                }
                DetailsService.getAppDetailsResource($scope.app.appId).get().then(function(appDetails) {
                    $scope.appDetails = appDetails;
                    openContextMenu();
                }, function() {
                    openContextMenu();
                });
            };

            vm.resetDesktop = function(app, $event) {
                BookmarksService.performResetDesktop(app, $event);
            };
            $scope.resetDesktop = vm.resetDesktop;
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.directive('bookmarkItem', [function() {
        return {
            restrict: 'A',
            scope: true,
            templateUrl: 'app-v2/bookmarks/bookmarkItem.html',
            link: function(scope, element, attr) {
            },
            controller: 'BookmarksItemController',
            controllerAs: 'bookmarkItemCtrl',
            bindToController: true
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';
    module.controller('BookmarksController', [
        '$scope',
        'BookmarksService',
        '$timeout',
        '$filter',
        'ConfigService',
        'UserAgent',
        'PAGING',
        'CatalogService',
        'SettingsService',
        'BootstrapService',
        'ModalService',
        '$location',
        'hznLocalStorage',
        '$window',
        '$notify',
        'HttpProxyService',
        'TenantCustomizationService',
        function($scope,
                 BookmarksService,
                 $timeout,
                 $filter,
                 ConfigService,
                 UserAgent,
                 PAGING,
                 CatalogService,
                 SettingsService,
                 BootstrapService,
                 ModalService,
                 $location,
                 hznLocalStorage,
                 $window,
                 $notify,
                 HttpProxyService,
                 TenantCustomizationService) {
            hznLocalStorage.last_active_page_v2 = "bookmarks";
            var vm = this;
            var appCenterCtrl = $scope.appCenterCtrl;
            var customOrderVisibleLauncherApps = [];
            var loadingUnCachedEntitlements = false;
            var allLauncherApps = [];
            var index = 0;
            var customizedSettings = TenantCustomizationService.getCustomizationSettings();
            vm.hideCatalogTab = customizedSettings.hideCatalogTab;
            vm.featureFlags = workspaceOne.featureFlags;
            vm.excludeThinApps = !UserAgent.isThinAppSortSupportedBrowser();
            vm.isTouchEnabled = UserAgent.isTouchEnabled();
            vm.sortType = {
                model: 'custom',
                text: $filter('i18n')('appCenter.nav.sortBy.customView'),
                types: [
                    {
                        id: 'asc',
                        text: $filter('i18n')('appCenter.nav.sortBy.alpha')
                    },
                    {
                        id: 'desc',
                        text: $filter('i18n')('appCenter.nav.sortBy.inverseAlpha')
                    },
                    {
                        id: 'custom',
                        text: $filter('i18n')('appCenter.nav.sortBy.customView')
                    }
                ]
            };
            $scope.shouldSuppressLaunchDialog = false;
            var defaultLabels = CatalogService.getDefaultLabels();
            SettingsService.getUserInfo().then(function(user) {
                vm.welcomeMessage = $filter('i18n')('myapps.welcomeMsg', user.firstName);
            });

            var init = function() {
                vm.visibleLauncherApps = [];
                vm.emptyFillers = [1, 2, 3, 4, 5, 6, 7, 8];
                vm.appCategories = [];
                vm.allAppsLabel = defaultLabels[0];
                vm.selectedCategory = BookmarksService.getSelectedCategory();
                vm.filterConfig = { items: vm.appCategories, defaultItem: vm.selectedCategory};
                appCenterCtrl.sortingDisabled = true;

                vm.resetFilter = function() {
                    BookmarksService.setSelectedCategory(vm.allAppsLabel);
                    getFirstPageOfApps();
                };

                $scope.unbBookmarkApp = function(app) {
                    unbBookmarkApp(app);
                };
            };

            vm.showLauncherMessage = function(apps) {
                if (apps) {
                    vm.showNoAppsMsg = !apps.length;
                } else {
                    vm.showNoAppsMsg = !allLauncherApps.length;
                }
                vm.showBookmarksTooltip = !hznLocalStorage.bookmarksToolTip || false;
            };

            vm.closeTooltip = function() {
                vm.showBookmarksTooltip = false;
                hznLocalStorage.bookmarksToolTip = true;
            };

            vm.emptyAddBookmark = function() {
                $location.path('/catalog');
            };

            vm.clearCache = function() {
                loadingUnCachedEntitlements = true;
                HttpProxyService.clearAll();
                return getFirstPageOfApps(true, true)
                    .then(function() {
                        return BootstrapService.init();
                    });
            };

            $scope.$on('Desktop-Bookmarks-Refresh', function() {
                vm.clearCache();
            });

            var getFirstPageOfApps = function(doNotReloadCategories, noCache) {
                index = 0;
                var params = {};
                if (vm.selectedCategory) {
                    params.category = getCategoryName(vm.selectedCategory);
                }
                params.favoriteOnly = true;
                params.excludeThinApps = vm.excludeThinApps;
                loadingUnCachedEntitlements = false;
                // Delay showing spinner till 2 seconds.
                // Do not show loading spinner on pull to refresh
                if (!noCache) {
                    var cancelPromise = $timeout(function() {
                        startLoading();
                    }, 200);
                }

                return BookmarksService.getFirstPage(params, noCache).then(function(data) {
                    $timeout.cancel(cancelPromise);
                    doneLoading();
                    allLauncherApps = data.myapps;
                    vm.visibleLauncherApps = [];
                    vm.bookmarkOrderSet = data.bookmarkOrderSet;
                    vm.getNextPage();
                    vm.showLauncherMessage();

                    if (!doNotReloadCategories) {
                        loadCategories();
                    }
                });
            };

            var loadFirstPageOnLoad = function() {
                BootstrapService.init().then(getFirstPageOfApps);
            };

            var loadCategories = function() {
                var params = {};
                params.excludeThinApps = vm.excludeThinApps;

                BookmarksService.getLauncherCategories(params).then(function(data) {
                    if (data) {
                        vm.appCategories = data;
                        vm.filterConfig.items = defaultLabels.concat(data);
                    } else {
                        vm.filterConfig.items = defaultLabels;
                    }
                });
            };

            vm.getNextPage = function() {
                //stop pagination when pull to refresh in progress
                if (!loadingUnCachedEntitlements) {
                    var endIndex = index + PAGING.PAGE_SIZE;
                    var sortText = $filter('i18n')('appCenter.nav.sortBy.alpha');
                    while (index < endIndex && index < allLauncherApps.length) {
                        vm.visibleLauncherApps.push(allLauncherApps[index]);
                        index++;
                    }
                    //copy it to save the default order
                    customOrderVisibleLauncherApps = _.clone(vm.visibleLauncherApps);
                    //if custom view not set, set the order to asc
                    if (!vm.bookmarkOrderSet) {
                        vm.sortType.model = 'asc';
                        vm.sortType.text = $filter('i18n')('appCenter.nav.sortBy.alpha');
                    }

                    //get previous sort order, if any from local storage
                    if (hznLocalStorage.bookmarkSortType) {
                        vm.sortType.model = hznLocalStorage.bookmarkSortType;
                        sortText = vm.sortType.types.filter(function(type) {
                            return type.id === vm.sortType.model;
                        });
                        if (sortText) {
                            vm.sortType.text = sortText[0] && sortText[0].text;
                        }
                        //sort the apps
                        if (vm.sortType.model !== 'custom' || vm.bookmarkOrderSet) {
                            sortApps();
                        }
                    }
                }
            };

            function startLoading() {
                vm.isLoading = true;
            }

            function doneLoading() {
                vm.isLoading = false;
            }

            function getCategoryName(category) {
                if (category && category.type && category.type === 'all' || !category) {
                    return '';
                } else {
                    return category.name;
                }
            }

            $scope.$on('open-modal-dialog', function(event, app) {
                var template = args.dialogtemplate;
                $scope.$modal.open(template, $scope, {params: args.dialogparams});
            });

            $scope.$on('app-bookmarked-from-search', function(event, app) {
                bookmarkApp(app);
            });

            $scope.$on('app-unbookmarked-from-search', function(event, app) {
                unbBookmarkApp(app);
            });

            function bookmarkApp(app) {
                allLauncherApps.push(app);
                vm.visibleLauncherApps.push(app);
                customOrderVisibleLauncherApps.push(app);
                vm.showLauncherMessage();
                //sort apps based on sort order selected
                sortApps();
            }

            function unbBookmarkApp(app) {
                allLauncherApps = _.reject(allLauncherApps, function(el) {
                    return el.appId === app.appId;
                });
                vm.visibleLauncherApps = _.reject(vm.visibleLauncherApps, function(el) {
                    return el.appId === app.appId;
                });
                customOrderVisibleLauncherApps = _.reject(customOrderVisibleLauncherApps, function(el) {
                    return el.appId === app.appId;
                });
                vm.showLauncherMessage();
                //sort apps based on sort order selected
                sortApps();
            }

            $scope.$on('app-bookmarked', function(event, app) {
                if (app.favorite) {
                    bookmarkApp(app);
                } else {
                    unbBookmarkApp(app);
                }
            });

            init();
            loadFirstPageOnLoad();

            vm.sortableOptions = {
                cursor: "move",
                placeholder: "sort-placeholder",
                forcePlaceholderSize: true,
                delay: 150,
                distance: 15,
                forceHelperSize: true,
                opacity: 0.7,
                revert: 150,
                tolerance: "intersect",
                disabled: true,
                containment: "parent",
                helper: "clone"
            };

            var resetCustomView = function() {
                //if custom view is one set already, use the selected sort order for ordering
                //if desc is selected, it will use desc for custom view
                if (vm.bookmarkOrderSet) {
                    vm.visibleLauncherApps = _.clone(customOrderVisibleLauncherApps);
                }
            };

            var copyForEdit = function() {
                if (!customOrderVisibleLauncherApps.length) {
                    //display all the apps for re-ordering/sorting
                    while (index < allLauncherApps.length) {
                        vm.visibleLauncherApps.push(allLauncherApps[index]);
                        index++;
                    }
                    index = allLauncherApps.length;
                    customOrderVisibleLauncherApps = _.clone(vm.visibleLauncherApps);
                }
            };

            //sort visibleLauncherApps
            var sortApps = function() {
                if (vm.sortType.model === 'asc') {
                    vm.visibleLauncherApps = $filter('orderBy')(vm.visibleLauncherApps, 'name', false);
                } else if (vm.sortType.model === 'desc') {
                    vm.visibleLauncherApps = $filter('orderBy')(vm.visibleLauncherApps, 'name', true);
                } else {
                    resetCustomView();
                }
            };

            vm.changeSortType = function(id, text) {
                vm.sortType.model = id;
                vm.sortType.text = text;
                hznLocalStorage.bookmarkSortType = id;
                //cache original order on first sort order change
                copyForEdit();
                if (vm.sortType.model !== 'custom' || vm.bookmarkOrderSet) {
                    sortApps();
                }
            };

            vm.enableSorting = function() {
                //cache original order
                copyForEdit();
                vm.sortableOptions.disabled = false;
                //to display overlay in header
                appCenterCtrl.sortingDisabled = vm.sortableOptions.disabled;
            };

            vm.cancelSorting = function() {
                vm.savingBookmark = false;
                vm.sortableOptions.disabled = true;
                //to hide overlay in header
                appCenterCtrl.sortingDisabled = vm.sortableOptions.disabled;
                resetCustomView();
            };

            vm.saveCustomView = function() {
                vm.savingBookmark = true;
                BookmarksService.saveCustomView(_.map(vm.visibleLauncherApps, 'appId')).then(function() {
                    HttpProxyService.clearAll();
                    customOrderVisibleLauncherApps = _.clone(vm.visibleLauncherApps);
                    $notify.success('appCenter.nav.arrange.saved');
                    vm.savingBookmark = false;
                    vm.sortableOptions.disabled = true;
                    vm.bookmarkOrderSet = true;
                    appCenterCtrl.sortingDisabled = vm.sortableOptions.disabled;
                }, function() {
                    $notify.error('appCenter.nav.arrange.error');
                    vm.cancelSorting();
                });
            };

            //when re-order is in progress, show warning for saving the data befor
            //navigating to other page
            $scope.$on('$locationChangeStart', function(event, next) {
                if (!vm.sortableOptions.disabled || vm.savingBookmark) {
                    //check if modal already open
                    var modal = angular.element('.modal-container.is-active');
                    if (!modal.length) {
                        ModalService.getCurrentModal().open('app-v2/common/modalDialog/templates/bookmarkWarning.html', {
                            title: $filter('i18n')('app.bookmarking.change.tab.title'),
                            message: $filter('i18n')('app.bookmarking.change.tab.body'),
                            ok: $filter('i18n')('app.bookmarking.change.tab.stay'),
                            cancel: $filter('i18n')('app.bookmarking.change.tab.exit')
                        }).then(function() {
                            vm.sortableOptions.disabled = true;
                            //to hide overlay in header
                            appCenterCtrl.sortingDisabled = vm.sortableOptions.disabled;
                            $window.location = next;
                        });
                    }
                    event.preventDefault();
                }
            });
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('BookmarksService', [
        'Resource',
        'ConfigService',
        '$http',
        '$log',
        '$notify',
        'RequestFactory',
        'UtilService',
        'UserAgent',
        'Localization',
        'OfflineService',
        'ModalService',
        'lodash',
        'AppActionService',
        'HttpProxyService',
        'LocalStorageConstants',
        'ProgressIndicatorService',
        function(
            Resource,
            ConfigService,
            $http,
            $log,
            $notify,
            RequestFactory,
            UtilService,
            UserAgent,
            Localization,
            OfflineService,
            ModalService,
            lodash,
            AppActionService,
            HttpProxyService,
            LocalStorageConstants,
            ProgressIndicatorService) {
            var appsUrl;

            var ALL_APPS_LABEL = {
                name: Localization.getLocalizedString('myapp.nav.allApps'),
                type: 'all',
                isDefault: true
            };

            var selectedCategory = ALL_APPS_LABEL;

            this.setSelectedCategory = function(selCategory) {
                selectedCategory = selCategory;
            };

            this.getSelectedCategory = function() {
                return selectedCategory;
            };

            this.getFirstPage = function(params, noCache) {
                var launcherAppsUrlPromise = ConfigService.getLauncherUrl();
                return launcherAppsUrlPromise.then(function(data) {
                    appsUrl = data;
                    if (noCache) {
                        appsUrl += "?noCache=" + noCache;
                    }
                    var request = HttpProxyService.get(LocalStorageConstants.BOOKMARKS, appsUrl, { headers: {'Accept': 'application/hal+json', 'method': 'GET'}, sync: false, params: UtilService.isEmpty(params) ? null : params });
                    return request.then(function(data) {
                        var returnData = {};
                        returnData.myapps = [];
                        if (data.entitlementResourceList && data.entitlementResourceList._embedded && data.entitlementResourceList._embedded.myapps) {
                            var myApps = data.entitlementResourceList._embedded.myapps;
                            var uniqueApps = _.uniq(myApps, 'appId');
                            returnData.myapps = uniqueApps;
                        }
                        returnData.allEntitlementsLoaded = _.get(data, 'allEntitlementsLoaded', undefined);
                        returnData.deviceStatus = _.get(data, 'deviceInfo.deviceStatus', undefined);
                        returnData.launchPreferences = {};
                        if (data.launchPreferences) {
                            returnData.launchPreferences = data.launchPreferences;
                        }
                        //flag to check if the bookmark is already saved once
                        returnData.bookmarkOrderSet = data.bookmarkOrderSet;
                        return returnData;
                    });
                });
            };

            this.toggleBookmark = function(currentApp, useJQ, successHandler, failureHandler) {
                var getFavoriteUrl = function(favApp) {
                    var favoriteTemplatedUrl = lodash.get(favApp, '_links.favorites.href');
                    var templateText = 'favorite={boolValue}';
                    var replacetext = 'favorite=' + !favApp.favorite;
                    if (favoriteTemplatedUrl) {
                        return favoriteTemplatedUrl.replace(templateText, replacetext);
                    } else {
                        return "";
                    }
                };

                var deviceOnline = OfflineService.isDeviceOnline();

                if (deviceOnline) {
                    var favoriteUrl = getFavoriteUrl(currentApp);
                    currentApp.bookmarking = true;
                    if (favoriteUrl != undefined || favoriteUrl) {
                        this.doToggleBookmark(favoriteUrl, useJQ).then(function() {
                            currentApp.favorite = !currentApp.favorite;
                            currentApp.bookmarking = false;
                            HttpProxyService.updateBookmark();

                            if (successHandler) {
                                successHandler(currentApp);
                            }
                        }, function(error) {
                            currentApp.bookmarking = false;
                            if (error.handled) { //When system is under maintenance
                                return;
                            }
                            $notify.error('error.failToFavoriteApp');
                            if (failureHandler) {
                                failureHandler(error);
                            }
                        });
                    } else {
                        $log.error('Unformatted favorite url');
                    }
                } else {
                    var warningMessage = (currentApp.favorite) ? 'bookmarkStatus.offlineRemoveBookmarkMessage' : 'favoriteStatus.offlineFavoriteMessage';
                    $notify.warning(warningMessage);
                }
            };

            this.doToggleBookmark = function(favoriteUrl, useJQ) {
                var req = RequestFactory(favoriteUrl, {method: 'POST'});
                return $http(req);
            };

            this.markAppLaunched = function(appLaunchedUrl, useJQ) {
                var req = RequestFactory(appLaunchedUrl, {method: 'POST'});
                return $http(req);
            };

            this.getLauncherCategories = function(params) {
                return ConfigService.getLauncherCategoriesUrl().then(function(url) {
                    var request = Resource(url, {
                        method: 'GET',
                        headers: {
                            Accept: 'application/hal+json'
                        },
                        params: UtilService.isEmpty(params) ? null : params
                    });
                    return request.get().thenGet('_embedded').thenGet('categoryResourceList');
                });
            };

            this.setAppVisible = function(app) {
                if (app && app._links.appVisibility) {
                    var req = RequestFactory(app._links.appVisibility.href, {
                        method: 'PUT',
                        headers: {
                            Accept: 'application/hal+json'
                        },
                        params: {"appName": app.name}
                    });
                    return $http(req);
                }
            };
            this.resetDesktop = function(resetUrl) {
                var request = RequestFactory(resetUrl, {
                    method: 'PUT',
                    headers: {
                        Accept: 'application/hal+json'
                    }
                });
                return $http(request);
            };
            this.setWSFedAppPassword = function(app, password) {
                if (app && app._links['set-app-password'] && password && password.trim() != '') {
                    var request = RequestFactory(app._links['set-app-password'].href, {
                        method: 'PUT',
                        headers: {
                            Accept: 'application/hal+json'
                        },
                        params: {"password": password.trim()}
                    });
                    return $http(request);
                }
            };

            this.performResetDesktop = function(app, $event) {
                var deviceOnline = OfflineService.isDeviceOnline();
                if ($event) {
                    $event.preventDefault();
                }
                if (deviceOnline) {
                    app.resetDesktop = app._links['reset-desktop'] != undefined ? app._links['reset-desktop'].href : "";
                    if (app.resetDesktop) {
                        ProgressIndicatorService.showProgressIndicator();
                        AppActionService.resetDesktop(app.resetDesktop).then(function(data) {
                            ProgressIndicatorService.hideProgressIndicator();
                            if (data) {
                                $notify.info('resetDesktop.sucess');
                            } else {
                                $notify.error('error.failedToResetApp');
                            }
                        }).catch(function() {
                            ProgressIndicatorService.hideProgressIndicator();
                            $notify.error('error.failedToResetApp');
                        });
                    } else {
                        $log.error('Unformatted resetDesktop url');
                    }
                } else {
                    $notify.warning('resetDesktopStatus.offlineMessage');
                }
            };

            this.openSetAppPasswordDialog = function(app, $event) {
                var isHubApp = UtilService.isHub();
                var template = isHubApp ? 'app-v2/components/shared/setAppPassword.html' : 'app-v2/common/modalDialog/templates/setAppPassword.html';
                if ($event) {
                    $event.stopPropagation();
                }
                ModalService.getCurrentModal().open(template, { app: app });
            };

            this.saveCustomView = function(data) {
                return ConfigService.getBookmarkReorderUrl().then(function(url) {
                    var request = RequestFactory(url, {
                        method: 'PATCH',
                        headers: {
                            'Accept': 'application/hal+json',
                            'Content-Type': 'application/vnd.vmware.catalog.bookmarks.reorder+json'
                        },
                        data: data
                    });
                    return $http(request);
                });
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.controller('CatalogController', [
                        '$scope',
                        '$rootScope',
                        'CatalogService',
                        'ConfigService',
                        '$timeout',
                        '$notify',
                        'EventsService',
                        'PAGING',
                        'UserAgent',
                        'BootstrapService',
                        'ModalService',
                        'hznLocalStorage',
                        'HttpProxyService',
                        '$filter',
                        'ProgressIndicatorService',
                        '$location',
                        'UtilService',
                        function($scope,
                                 $rootScope,
                                 CatalogService,
                                 ConfigService,
                                 $timeout,
                                 $notify,
                                 EventsService,
                                 PAGING,
                                 UserAgent,
                                 BootstrapService,
                                 ModalService,
                                 hznLocalStorage,
                                 HttpProxyService,
                                 $filter,
                                 ProgressIndicatorService,
                                 $location,
                                 UtilService) {
        hznLocalStorage.last_active_page_v2 = "catalog";
        var vm = this;

        var enrollmentUrl;
        var appCenterCtrl = $scope.appCenterCtrl;
        var allCatalogApps = [];
        var index = 0;
        var loadingUnCachedEntitlements = false;
        vm.excludeThinApps = !UserAgent.isThinAppSortSupportedBrowser();
        vm.featureFlags = workspaceOne.featureFlags;

        function continueToCatalog() {
            HttpProxyService.clearAll();
            //After setting the value of direct enrollment events need to be deleted as they are only valid once.
            for (var i = 0; i < appCenterCtrl.mdmEnrolledEvents.length; i++) {
                EventsService.deleteEvent(appCenterCtrl.mdmEnrolledEvents[i].eventId);
            }
            appCenterCtrl.directEnrollmentEnabled = false;
            BootstrapService.setDirectEnrollmentStatus(false);
            $location.path('/catalog');
        }

        var init = function() {
            vm.loading = true;
            vm.visibleCatalogApps = [];
            vm.emptyFillers = [1, 2, 3, 4, 5, 6, 7, 8];
            vm.appCategories = [];
            vm.appCenterContext = {
                selectedCategory: CatalogService.getSelectedCategory()
            };
            vm.defaultLabels = CatalogService.getDefaultLabels();
            vm.showNoResultsMsg = false;
            vm.showCatalogTooltip = false;
            vm.enrollmentSupported = ConfigService.enrollmentSupported();
            if (vm.enrollmentSupported) {
                ConfigService.getEnrollmentUrl().then(function(url) {
                    enrollmentUrl = url;
                });
            }
            vm.filterConfig = { items: vm.appCategories, defaultItem: vm.appCenterContext.selectedCategory};
            vm.selectAllRecommendedApps = true;
        };

        var loadFirstPageEntitlements = function(context, loadCategories, noCache) {
            // dont show loader for pull to refresh call
            if (!noCache) {
                var cancelPromise = $timeout(function() {
                    startLoading();
                }, 200);
            }
            return CatalogService.getFirstPage(context, noCache, vm.excludeThinApps, BootstrapService.getDirectEnrollmentStatus(), false).then(function(entitlementsResponse) {
                index = 0;
                $timeout.cancel(cancelPromise);
                doneLoading();
                loadingUnCachedEntitlements = false;
                $scope.deviceStatus = _.get(entitlementsResponse, "deviceStatus");
                CatalogService.setDeviceStatus(_.get(entitlementsResponse, "deviceStatus"));

                updateApps(entitlementsResponse.entitlements, context);
                // When there are no recommended app, directly go to the Catalog or Bookmarks page.
                if (BootstrapService.getDirectEnrollmentStatus() && vm.visibleCatalogApps <= 0) {
                    continueToCatalog();
                }

                if (loadCategories) {
                    ConfigService.getAppCategories().then(function(categories) {
                        if (categories) {
                            var recommendedCategoryFound = false;
                            for (var i = categories.length - 1; i >= 0; i--) {
                                if (categories[i].name === 'Recommended') {
                                    categories.splice(i, 1);
                                    recommendedCategoryFound = true;
                                }
                            }
                            if (recommendedCategoryFound) {
                                var label = CatalogService.getRecommendedLabel();
                                if (_.where(vm.defaultLabels, label).length == 0) {
                                    vm.defaultLabels.push(label);
                                }
                            }
                            vm.appCategories = categories;
                            vm.filterConfig.items = vm.defaultLabels.concat(categories);
                        } else {
                            vm.filterConfig.items = vm.defaultLabels;
                        }
                    });
                }
            });
        };

        vm.closeTooltip = function() {
            vm.showCatalogTooltip = false;
            hznLocalStorage.catalogToolTip = true;
        };

        vm.getNextPage = function() {
            //stop pagination when pull to refresh in progress
            if (!loadingUnCachedEntitlements) {
                var endIndex = index + PAGING.PAGE_SIZE;
                while (index < endIndex && index < allCatalogApps.length) {
                    vm.visibleCatalogApps.push(allCatalogApps[index]);
                    index++;
                }
            }
            //count of apps used in masthead
            appCenterCtrl.visibleCatalogApps = vm.visibleCatalogApps;
        };

        var loadFirstPageOnLoad = function() {
            BootstrapService.init().then(loadFirstPageEntitlements(vm.appCenterContext, true, false));
        };

        var updateApps = function(data, context) {
            allCatalogApps = data;
            vm.visibleCatalogApps = [];
            vm.recommendedAppsCount = allCatalogApps.length;
            if (context.selectedCategory.type && context.selectedCategory.type === 'all') {
                appCenterCtrl.hasLaunchableApps = hasLaunchableApps(allCatalogApps);
                appCenterCtrl.showTabsSection = appCenterCtrl.showPeopleTab || (!appCenterCtrl.showPeopleTab && appCenterCtrl.hasLaunchableApps && appCenterCtrl.showBookmarksTab && appCenterCtrl.showCatalogTab);
            }
            vm.showNoResultsMsg = allCatalogApps.length === 0;
            vm.showCatalogTooltip = (!hznLocalStorage.catalogToolTip || false) && UserAgent.isAWJadeMobile() && !appCenterCtrl.isAWJadeDocked && !vm.showNoResultsMsg;
            vm.getNextPage();
            vm.loading = false;
            EventsService.getEvents().then(function(events) {
                var handledApps = [];
                for (var i = 0; i < events.length; i++) {
                    if (events[i] && events[i].action === 'INSTALL') {
                        if (_.contains(handledApps, events[i].eventData.appId)) {
                            EventsService.deleteEvent(events[i].eventId);
                        } else {
                            handledApps.push(events[i].eventData.appId);
                            var toBeInstalledApp = _.find(allCatalogApps, {'appId': events[i].eventData.appId});
                            toBeInstalledApp.eventId = events[i].eventId;
                            CatalogService.activateApp(toBeInstalledApp, $scope.deviceStatus);
                        }
                    }
                }
            });
        };

        vm.filterByLabel = function(category) {
            vm.currentLabel = category;
            vm.visibleCatalogApps = [];
            vm.loading = true;
            CatalogService.setSelectedCategory(category);
            vm.appCenterContext.selectedCategory = CatalogService.getSelectedCategory();
            loadFirstPageEntitlements(vm.appCenterContext, false, false);
            appCenterCtrl.filterCatalogName = category.name;
            appCenterCtrl.categoryFilterOn = false;
        };

        vm.showAllCategories = function() {
            var labels = CatalogService.getDefaultLabels();
            vm.filterByLabel(labels[0]);
        };

        vm.enrollDevice = function() {
            window.location.href = enrollmentUrl;
        };

        function startLoading() {
            vm.isLoading = true;
        }

        function doneLoading() {
            vm.isLoading = false;
        }

        function hasLaunchableApps(apps) {
            var hasLaunchableApps = false;
            var launchableAppTypes = ["VIRTUAL", "WEB"];
            var launchableNativeAppSubTypes = ["THINAPP", "APPV"];
            for (var i = 0; i < apps.length; i++) {
                if (launchableAppTypes.indexOf(apps[i].type) > -1
                    || (apps[i].type === 'NATIVE' && launchableNativeAppSubTypes.indexOf(apps[i].subType) > -1)
                    || apps[i].subType === 'PASSWORDVAULT' || apps[i].subType === 'ANYAPP') {
                    hasLaunchableApps = true;
                    break;
                }
            }
            return hasLaunchableApps;
        }

        var updateBookmarkStatus = function(app) {
            for (var i in vm.visibleCatalogApps) {
                if (vm.visibleCatalogApps[i].appId === app.appId) {
                    vm.visibleCatalogApps[i].favorite = app.favorite;
                    vm.visibleCatalogApps[i].bookmarking = app.bookmarking;
                    break;
                }
            }
            appCenterCtrl.visibleCatalogApps = vm.visibleCatalogApps;
        };

        var updateAppStatus = function(app, status, appStateReason) {
            for (var i in vm.visibleCatalogApps) {
                if (vm.visibleCatalogApps[i].appId === app.appId) {
                    vm.visibleCatalogApps[i].installStatus = status;
                    vm.visibleCatalogApps[i].statusCode = CatalogService.getAppStatusCode(status);
                    if (appStateReason) {
                        vm.visibleCatalogApps[i].appStateReason = appStateReason;
                    }
                    break;
                }
            }
            appCenterCtrl.visibleCatalogApps = vm.visibleCatalogApps;
        };

        $scope.$on('open-modal-dialog', function(event, args) {
            var template = args.dialogtemplate;
            $scope.$modal.open(template, $scope, {params: args.dialogparams});
        });

        $scope.$on('app-bookmarked-from-search', function(event, app) {
            updateBookmarkStatus(app);
        });

        $scope.$on('app-status-change', function(event, args) {
            if (args.app.type === 'NATIVE' && UtilService.isWindowsNativeBridge()) {
                return;
            }
            updateAppStatus(args.app, args.status);
        });

        $scope.$on('app-request-status-change', function(event, args) {
            updateAppStatus(args.app, args.status, args.appStateReason);
        });

        $scope.$on('app-bookmarked', function(event, app) {
            updateBookmarkStatus(app);
        });

        $scope.$on('app-unbookmarked-from-search', function(event, app) {
            updateBookmarkStatus(app);
        });

        vm.clearCache = function() {
            loadingUnCachedEntitlements = true;
            HttpProxyService.clearAll();
            return loadFirstPageEntitlements(vm.appCenterContext, true, true).then(function() {
                return BootstrapService.init();
            });
        };

        $scope.$on('Desktop-Catalog-Refresh', function() {
            vm.clearCache();
        });

        vm.toggleSelectAllRecommendedApps = function() {
            vm.selectAllRecommendedApps = !vm.selectAllRecommendedApps;
            _.each(allCatalogApps, function(currentApp) {
                currentApp.isSelected = vm.selectAllRecommendedApps;
            });
            vm.recommendedAppsCount = _.where(allCatalogApps, { isSelected: true}).length;
        };

        vm.recommendedAppsStatusChanged = function() {
            vm.selectAllRecommendedApps = false;
            vm.recommendedAppsCount = _.where(allCatalogApps, { isSelected: true}).length;
            if (vm.recommendedAppsCount == allCatalogApps.length) {
                vm.selectAllRecommendedApps = true;
            }
        };

        function continueBulkInstall() {
            var acceptedApps = _.where(allCatalogApps, { isSelected: true});
            var rejectedApps = _.where(allCatalogApps, { isSelected: false});
            var acceptedIds = _.pluck(acceptedApps, 'appId');
            var rejectedIds = _.pluck(rejectedApps, 'appId');
            ProgressIndicatorService.showProgressIndicator();
            CatalogService.bulkInstall(acceptedIds, rejectedIds).then(function(resp) {
                ProgressIndicatorService.hideProgressIndicator();
                continueToCatalog();
            }, function(error) {
                ProgressIndicatorService.hideProgressIndicator();
                $notify.error('installStatus.installFailedMessage');
            });
        }

        vm.bulkInstall = function() {
            if (vm.recommendedAppsCount > 0) {
                if (UserAgent.isIOS()) {
                    ModalService.getCurrentModal().open('app-v2/catalog/recommendedAppInstallModal.html', {
                        title: $filter('i18n')('recommendedApps.install.title'),
                        message: $filter('i18n')('recommendedApps.install.confirm.msg'),
                        ok: $filter('i18n')('recommendedApps.install.proceed')
                    }).then(function() {
                        continueBulkInstall();
                    });
                } else if (UserAgent.isAndroid()) { // For Android
                    var dependentAppNames = [];
                    var vpnAppId;
                    var acceptedApps = _.where(allCatalogApps, { isSelected: true});
                    // Find out if there are any apps that need Tunnel.
                    // And save the tunnel appid and the dependent app names.
                    for (var i = 0; i < acceptedApps.length; i++) {
                        var currentApp = acceptedApps[i];
                        if (currentApp.hasOwnProperty('vpnAppId')) {
                            vpnAppId = currentApp.vpnAppId;
                            dependentAppNames.push(currentApp.name);
                        }
                    }
                    // If the the tunnel is needed, then check if the tunnel app is
                    // part of the selected recommended apps list.
                    var selectedTunnelApp;
                    if (vpnAppId) {
                        selectedTunnelApp = _.find(allCatalogApps, function(app) {
                            return app.appId === vpnAppId;
                        });
                    }
                    // If tunnel is needed and if it is not part of the selected list
                    // Show a value prop screen to the user.
                    // Once user click continue on value prop screen
                    // backend will issue a install command for tunnel app.
                    if (!selectedTunnelApp) {
                        ModalService.getCurrentModal().open("app-v2/common/recommendedAppsTunnelModal.html",
                            { modal: ModalService.getCurrentModal(), appNames: dependentAppNames }
                        ).then(function() {
                            continueBulkInstall();
                        });
                    } else {
                        continueBulkInstall();
                    }
                } else {
                    continueBulkInstall();
                }
            }
        };

        vm.skipInstallRecommendedApps = function() {
            var acceptedIds = [];
            var rejectedIds = _.pluck(allCatalogApps, 'appId');
            ProgressIndicatorService.showProgressIndicator();
            CatalogService.bulkInstall(acceptedIds, rejectedIds).then(function(resp) {
                ProgressIndicatorService.hideProgressIndicator();
                continueToCatalog();
            }, function(error) {
                ProgressIndicatorService.hideProgressIndicator();
                continueToCatalog();
            });
        };

        init();
        loadFirstPageOnLoad();
	}]);
})(angular.module("com.vmware.greenbox.appCenter"));

(function(module) {
    'use strict';

    var platformNames = {
        IOS: 'iOS',
        ANDROID: 'Android',
        WINDOWS: 'Windows',
        MAC: 'OS X',
        none: 'Unknown'
    };

    module.controller('CatalogItemController', [
        '$scope',
        'CatalogService',
        'OfflineService',
        'UserAgent',
        'INSTALL_STATUS',
        '$window',
        '$filter',
        '$sce',
        '$element',
        '$timeout',
        'AppLaunchService',
        'BookmarksService',
        'BootstrapService',
        'SearchService',
    function($scope,
             CatalogService,
             OfflineService,
             UserAgent,
             INSTALL_STATUS,
             $window,
             $filter,
             $sce,
             $element,
             $timeout,
             AppLaunchService,
             BookmarksService,
             BootstrapService,
             SearchService) {
        var catalogItemViewModel = this;
        var catalogApp = catalogItemViewModel.app;

        //Defaulting the status if a status has not being passed. Need to decide on if string is passed or enumeration.
        var appStatus = catalogApp.installStatus;

        if (appStatus === "" || appStatus === undefined) {
            appStatus = INSTALL_STATUS.NOT_ACTIVATED.nativeAction;
        } else if (!catalogApp.visible) {
            appStatus = 'HIDDEN';
        } else if (CatalogService.isStatusRequest(catalogApp)) {
            appStatus = 'REQUEST';
        }

        appStatus = CatalogService.getNativeAppStatus(catalogApp.appId) || appStatus;

        $scope.$on('native-app-status-change', function(event, args) {
            if (args.nativeAppMap[catalogApp.appId]) {
                appStatus = args.nativeAppMap[catalogApp.appId];
                catalogApp.installStatus = args.nativeAppMap[catalogApp.appId];
                catalogApp.statusCode = CatalogService.getAppStatusCode(appStatus);
                $scope.$apply();
            }
        });

        var getIconUrl = function(app) {
            return app._links.icon != undefined ? app._links.icon.href : '';
        };
        var getInstallUrl = function(app) {
            return app._links.install.href;
        };

        catalogApp.statusCode = CatalogService.getAppStatusCode(appStatus);
        catalogApp.isLaunchableApp = CatalogService.isLaunchableApp(catalogApp);
        catalogApp.isMdmApp = CatalogService.isMdmApp(catalogApp.type, catalogApp.subType);
        catalogApp.isWebApp = CatalogService.isWebApp(catalogApp.type);
        catalogApp.isThinApp = CatalogService.isThinApp(catalogApp);
        catalogApp.isThinAppPackage = CatalogService.isThinAppPackage(catalogApp);
        catalogApp.isLaunchableThinapp = CatalogService.isLaunchableThinapp(catalogApp);
        catalogApp.isBookmarkableApp = CatalogService.isBookmarkableApp(catalogApp);
        catalogApp.isViewableThinappPackage = CatalogService.isViewableThinappPackage(catalogApp);
        catalogApp.isTunnelRequired = CatalogService.isTunnelRequired(catalogApp);

        catalogItemViewModel.directEnrollmentEnabled = BootstrapService.getDirectEnrollmentStatus();
        //Enable by default when page is loaded.
        catalogApp.isSelected = catalogItemViewModel.directEnrollmentEnabled;

        if (parseInt(catalogApp.statusCode) === 2 && catalogApp.isMdmApp) {
            var startPolling = function(userTimer) {
                CatalogService.pollForChangeStatus(catalogApp, userTimer).then(function(appDetails) {
                    if (catalogApp.approvalRequiredForMdmApp) {
                        catalogApp.appStateReason = appDetails.data.appStateReason;
                    }
                    catalogApp.statusCode = CatalogService.getAppStatusCode(appDetails.data.installStatus);
                    if (appDetails.data.approvalRequiredForMdmApp && appDetails.data.installStatus === 'PROCESSING'
                        && !appDetails.data.appStateReason) {
                        startPolling(true);
                    }
                });
            };

            startPolling(false);
        }
        catalogApp.launch = catalogApp._links.launch != undefined ? catalogApp._links.launch.href : "";
        catalogApp.installUrl = getInstallUrl(catalogApp);
        var iconUrl = getIconUrl(catalogApp);
        catalogApp.backgroundImage = iconUrl || 'none';
        CatalogService.populateTypeNameAndPlatformName(catalogApp);
        CatalogService.populateDisplayValForAppType(catalogApp);

        function goTodetails(appId) {
            location.hash = '#/catalog/details/' + encodeURIComponent(appId);
            if (catalogItemViewModel.modal) {
                catalogItemViewModel.modal.close();
            }
            SearchService.clearSearchQueryAndResults();
        }

        function toggleSelectStatus() {
            catalogApp.isSelected = !catalogApp.isSelected;
            catalogItemViewModel.onSelectRecommendedApp();
        }

        catalogItemViewModel.itemClicked = function(appId) {
            if (catalogItemViewModel.directEnrollmentEnabled) {
                toggleSelectStatus();
            } else {
                goTodetails(appId);
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.directive('catalogItem', function() {
        return {
                restrict: 'A',
                replace: true,
                scope: { app: '=appdata', modal: '=modalobj', isLoading: '=', deviceStatus: '=', onSelectRecommendedApp: '&' },
                templateUrl: 'app-v2/catalog/catalogItem.html',
                controller: 'CatalogItemController',
                controllerAs: 'catalogItemCtrl',
                bindToController: true
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('CatalogService', [
        '$http',
        '$q',
        'RequestFactory',
        'Resource',
        '$sce',
        'ConfigService',
        'INSTALL_STATUS',
        'Localization',
        'OfflineService',
        '$filter',
        'ClientRuntimeService',
        '$notify',
        '$timeout',
        'EventsService',
        'UserAgent',
        'UtilService',
        'BookmarksService',
        'ModalService',
        'PollingService',
        'AppLaunchService',
        'HttpProxyService',
        'hznLocalStorage',
        'LocalStorageConstants',
        '$rootScope',
        'ProgressIndicatorService',
        'DetailsService',
        'BootstrapService',
        'NativeBridgeService',
        function(
            $http,
            $q,
            RequestFactory,
            Resource,
            $sce,
            ConfigService,
            INSTALL_STATUS,
            Localization,
            OfflineService,
            $filter,
            ClientRuntimeService,
            $notify,
            $timeout,
            EventsService,
            UserAgent,
            UtilService,
            BookmarksService,
            ModalService,
            PollingService,
            AppLaunchService,
            HttpProxyService,
            hznLocalStorage,
            LocalStorageConstants,
            $rootScope,
            ProgressIndicatorService,
            DetailsService,
            BootstrapService,
            NativeBridgeService) {
            var ALL_APPS_LABEL = {
                name: Localization.getLocalizedString('myapp.nav.allApps'),
                type: 'all',
                isDefault: true,
                isAppTypeFilter: false,
                isDataDrivenLabelFilter: false
            };
            var WEB_APPS_LABEL = {
                name: Localization.getLocalizedString('myapp.nav.webApps'),
                type: 'Web',
                isDefault: false,
                isAppTypeFilter: true,
                isDataDrivenLabelFilter: false
            };
            var VIRTUAL_APPS_LABEL = {
                name: Localization.getLocalizedString('myapp.nav.virtualApps'),
                type: 'Virtual',
                isDefault: false,
                isAppTypeFilter: true,
                isDataDrivenLabelFilter: false
            };
            var NATIVE_APPS_LABEL = {
                name: Localization.getLocalizedString('myapp.nav.mobileApps'),
                type: 'Native',
                isDefault: false,
                isAppTypeFilter: true,
                isDataDrivenLabelFilter: false
            };
            var RECOMMENDED_APPS_LABEL = {
                name: Localization.getLocalizedString('myapp.nav.recommendedApps'),
                type: 'Recommended',
                isDefault: false,
                isAppTypeFilter: false,
                isDataDrivenLabelFilter: false
            };

            var NEWLY_ENTITLED_APPS_LABEL = {
                name: Localization.getLocalizedString('myapp.nav.newlyEntitledApps'),
                type: 'new',
                isDefault: false,
                isAppTypeFilter: false,
                isDataDrivenLabelFilter: true
            };

            var typeNames = {
                WEB: 'appCenter.type.web',
                VIRTUAL: 'appCenter.type.virtual',
                NATIVE: 'appCenter.type.native',
                NATIVE_PLATFORM: 'appCenter.type.native.platform',
                THINAPP: 'app.details.label.type.THINAPP',
                PROFILE: 'app.details.label.type.PROFILE'
            };
            var platformNames = {
                IOS: 'iOS',
                ANDROID: 'Android',
                WINDOWS: 'Windows',
                MAC: 'OS X',
                none: 'Unknown'
            };

            var EULA_TEMPLATE_URL = '/catalog-portal/services/api/activate/{appId}/acceptEula/{eulaContentId}';
            var selectedCategory = ALL_APPS_LABEL;
            var allCategories = [];
            var deviceStatus;
            var nativeAppStatusMap = {};
            var tunnelAppAlreadyInstalledOrNotManaged = false;
            var tunnelApp = {};
            var playStoreDomain = "play.google.com";
            var isNewAppsLabelEnabled = UtilService.getObjValue(window, 'workspaceOne.featureFlags.NEW_APPS_LABEL', false);
            var isHubApp = UtilService.isHub();
            var catalogService = this;

            if (UserAgent.isMacJade()) {
                NATIVE_APPS_LABEL.name = Localization.getLocalizedString('myapp.nav.macApps');
            } else if (UserAgent.isWindowsJade() && UserAgent.isAWJadeDesktop()) {
                NATIVE_APPS_LABEL.name = Localization.getLocalizedString('myapp.nav.windowsApps');
            }

            function getCategoryName(category) {
                if (category && category.type && category.type === 'all' || !category) {
                    return '';
                } else if (category.type === 'Recommended' || category.type === 'Web' || category.type === 'Native' || category.type === 'Virtual' || category.type === 'NewlyEntitledApps') {
                    return category.type;
                } else {
                    return category.name;
                }
            }

            this.isStatusRequest = function(app) {
                var status = false;
                if (app.approvalRequired && ['NOT_ACTIVATED', 'ACTIVATION_FAILED'].indexOf(app.installStatus) >= 0) {
                    status = true;
                } else if (app.subType === 'THINAPP' && app.perDeviceActivationRequired) {
                    status = true;
                } else if (app.approvalRequiredForMdmApp && !app.appStateReason && app.installStatus === 'NOT_ACTIVATED') {
                    status = true;
                } else if (app.approvalRequiredForMdmApp && app.appStateReason && (app.appStateReason === 'RequestRejected' ||
                    app.appStateReason === 'RequestFailed' || app.appStateReason === 'RequestExpired')) {
                    status = true;
                }
                return status;
            };

            this.setAllCategory = function(categories) {
                allCategories = categories;
            };

            this.getAllCategory = function() {
                return allCategories;
            };

            this.setSelectedCategory = function(selCategory) {
                selectedCategory = selCategory;
            };

            this.getSelectedCategory = function() {
                return selectedCategory;
            };

            this.setDeviceStatus = function(status) {
                deviceStatus = status;
            };

            this.getDeviceStatus = function() {
                return deviceStatus;
            };

            this.setNativeAppStatus = function(apps) {
                var jsonStringify = apps;
                if (_.isString(apps)) {
                    jsonStringify = JSON.parse(apps);
                }

                if (jsonStringify && jsonStringify.length) {
                    jsonStringify.map(function(app) {
                        nativeAppStatusMap[app.appId] = app.status;
                    });
                    $rootScope.$broadcast('native-app-status-change', {nativeAppMap: nativeAppStatusMap});
                }
            };

            this.getNativeAppStatus = function(appId) {
                return nativeAppStatusMap[appId];
            };

            this.getFirstPage = function(appCenterContext, noCache, excludeThinApps, directEnrollmentEnabled, fallBackToServer) {
                return ConfigService.getEntitlementsUrl().then(function(url) {
                    var params = {};
                    var response = {};
                    if (excludeThinApps) {
                        params.excludeThinApps = excludeThinApps;
                    }
                    if (directEnrollmentEnabled) {
                        params.mdmManagedAutoDeploy = true;
                        fallBackToServer = true;
                    }
                    params.q = appCenterContext.searchText;
                    if (appCenterContext.selectedCategory.isAppTypeFilter) {
                        params.appType = getCategoryName(appCenterContext.selectedCategory);
                        params.category = "";
                        params.label = "";
                    } else if (appCenterContext.selectedCategory.isDataDrivenLabelFilter) {
                        params.label = getCategoryName(appCenterContext.selectedCategory);
                        params.category = "";
                        params.appType = "";
                    } else if (appCenterContext.searchText) {
                        params.appType = "";
                        params.category = "";
                        params.label = "";
                    } else {
                        params.category = getCategoryName(appCenterContext.selectedCategory);
                        params.appType = "";
                        params.label = "";
                    }

                    if (UtilService.hideVirtualApps()) {
                        params.displayMode = "phone";
                    }

                    if (params.category || params.appType || params.label) {
                        fallBackToServer = true;
                    }
                    if (noCache) {
                        url += "?noCache=" + noCache;
                    }

                    //sync call
                    var request = HttpProxyService.get(LocalStorageConstants.ENTITLEMENTS, url, {
                        headers: {
                            'Accept': 'application/hal+json',
                            'method': 'GET'
                        }, sync: noCache, params: params
                    }, fallBackToServer);
                    return request.then(function(entitlementsResponse) {
                        response.allEntitlementsLoaded = entitlementsResponse.allEntitlementsLoaded;
                        response.loadFromDbFailed = entitlementsResponse.loadFromDbFailed;
                        var entitlements = UtilService.getObjValue(entitlementsResponse, '_embedded[entitlements]', []);
                        var categories = UtilService.getObjValue(entitlementsResponse, '_embedded[categories]', []);
                        response.entitlements = _.uniq(entitlements, 'appId');
                        response.categories = categories;
                        // Invoke the native bridge function to pass the list of native apps to fetch the live app status
                        if (UtilService.isNativeBridge()) {
                            var nativeApps = entitlements.filter(function(app) {
                                return app.type === 'NATIVE' && app.installStatus !== 'REQUEST';
                            }).map(function(app) {
                                return app.appId;
                            });
                            NativeBridgeService.getAppStatus(nativeApps);
                        }

                        var bookmarks = UtilService.getObjValue(entitlementsResponse, '_embedded[bookmarks]', []);
                        response.bookmarks = _.uniq(bookmarks, 'appId');
                        response.deviceStatus = UtilService.getObjValue(entitlementsResponse, 'deviceInfo.[deviceStatus]', undefined);
                        response.authErrorType = entitlementsResponse.authErrorType;
                        if (isHubApp) {
                            response.bookmarkOrderSet = UtilService.getObjValue(entitlementsResponse, 'bookmarkOrderSet', false);
                        }
                        return response;
                    });
                });
            };

            this.getNewApps = function(noCache, excludeThinApps, fallBackToServer) {
                var response = {};
                return ConfigService.getEntitlementsUrl().then(function(url) {
                    if (UtilService.hideVirtualApps()) {
                        url = url + "?displayMode=phone";
                    }
                    var request = HttpProxyService.get(LocalStorageConstants.NEW_APP,
                        url, {
                            headers: {'Accept': 'application/hal+json', 'method': 'GET'},
                            sync: noCache,
                            params: {label: 'New', excludeThinApps: excludeThinApps}
                        }, fallBackToServer);

                    return request.then(function(entitlementsResponse) {
                        var entitlements = UtilService.getObjValue(entitlementsResponse, '_embedded[entitlements]', []);
                        response.entitlements = _.uniq(entitlements, 'appId');
                        return response;
                    });
                });
            };

            this.getRecommendedApps = function(noCache, excludeThinApps, fallBackToServer) {
                var response = {};
                return ConfigService.getEntitlementsUrl().then(function(url) {
                    if (UtilService.hideVirtualApps()) {
                        url = url + "?displayMode=phone";
                    }
                    var request = HttpProxyService.get(LocalStorageConstants.RECOMMENDED_APPS,
                        url, {
                            headers: {'Accept': 'application/hal+json', 'method': 'GET'},
                            sync: noCache,
                            params: {category: 'Recommended', excludeThinApps: excludeThinApps}
                        }, fallBackToServer);

                    return request.then(function(entitlementsResponse) {
                        var entitlements = UtilService.getObjValue(entitlementsResponse, '_embedded[entitlements]', []);
                        response.entitlements = _.uniq(entitlements, 'appId');
                        return response;
                    });
                });
            };

            catalogService.activate = function(activationUrl, useJQ, thinappDeviceId) {
                var params = {};
                if (thinappDeviceId) {
                    params.thinappDeviceId = thinappDeviceId;
                }
                var req = RequestFactory(activationUrl, {method: 'POST', data: params});
                var defer = $q.defer();
                $http(req).then(function(appActivationResponse) {
                    if (appActivationResponse.data.status === INSTALL_STATUS.FAILED_COMPLIANCE_CHECK.name) {
                        defer.reject(appActivationResponse);
                    } else {
                        defer.resolve(appActivationResponse.data);
                    }
                }, function(error) {
                    defer.reject(error);
                });
                return defer.promise;
            };

            catalogService.getAppsInThinappPackage = function(app) {
                var url = _.get(app, '_links.appsInPackage.href');
                if (url) {
                    var req = RequestFactory(url, {method: 'GET'});
                    return $http(req);
                }
            };

            catalogService.bookmarkAllNewEntitledApps = function(appIds) {
                var baseUrl = ConfigService.getBaseUrl() + '/catalog-portal/services/api/favorites?favorite=true';
                var params = {};
                params.appIds = appIds;

                var req = RequestFactory(baseUrl, {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/hal+json',
                        'Content-Type': 'application/vnd.vmware.catalog.bookmarks.favorite+json'
                    },
                    data: appIds
                });
                return $http(req);
            };

            catalogService.bookmarkAllAppsInThinappPackage = function(app) {
                var getFavoriteUrl = function(favApp) {
                    var favoriteTemplatedUrl = _.get(favApp, '_links.favorites.href');
                    var templateText = 'favorite={boolValue}';
                    var replacetext = 'favorite=true';
                    if (favoriteTemplatedUrl) {
                        return favoriteTemplatedUrl.replace(templateText, replacetext);
                    } else {
                        return "";
                    }
                };
                var defer = $q.defer();
                var favoriteUrl = getFavoriteUrl(app);
                if (!favoriteUrl || favoriteUrl.trim() === '') {
                    return defer.promise;
                }
                var req = RequestFactory(favoriteUrl, {method: 'POST'});
                HttpProxyService.clearAll();
                return $http(req);
            };

            this.getDefaultLabels = function() {
                var appInfo = BootstrapService.getAppTypeInfo();
                var defaultAppLabels = [ALL_APPS_LABEL];
                if (appInfo.citrixResources.entitledCount || appInfo.daasResources.entitledCount || (appInfo.thinapps.entitledCount && !UserAgent.isMobile()) || appInfo.viewResources.entitledCount) {
                    defaultAppLabels.push(VIRTUAL_APPS_LABEL);
                }
                if (appInfo.webapps.entitledCount) {
                    defaultAppLabels.push(WEB_APPS_LABEL);
                }
                if (appInfo.nativeApps.entitledCount) {
                    defaultAppLabels.push(NATIVE_APPS_LABEL);
                }
                return defaultAppLabels;
            };

            this.getRecommendedLabel = function() {
                return RECOMMENDED_APPS_LABEL;
            };

            this.getNewlyEntitledAppsLabel = function() {
                return NEWLY_ENTITLED_APPS_LABEL;
            };

            this.getAllAppsLabel = function() {
                return ALL_APPS_LABEL;
            };

            this.getVirtualAppsLabel = function() {
              return VIRTUAL_APPS_LABEL;
            };

            this.getWebAppsLabel = function() {
              return WEB_APPS_LABEL;
            };

            this.getNativeAppsLabel = function() {
              return NATIVE_APPS_LABEL;
            };

            this.acceptEula = function(appId, eulaId) {
                var eulaAcceptUrl = ConfigService.getBaseUrl() + EULA_TEMPLATE_URL;
                eulaAcceptUrl = eulaAcceptUrl.replace('{appId}', appId);
                eulaAcceptUrl = eulaAcceptUrl.replace('{eulaContentId}', eulaId);

                var eulaRequest = RequestFactory(eulaAcceptUrl, {method: 'POST', params: {}});
                return $http(eulaRequest);
            };

            this.getInstallStatusText = function(installStatus, app) {
                if (app.type === 'NATIVE' && app.subType !== 'THINAPP') {
                    return INSTALL_STATUS[installStatus].nativeAction || INSTALL_STATUS[installStatus].value;
                } else if (this.isMdmWebApp(app.type, app.subType)) {
                    if (app.visible) {
                        return INSTALL_STATUS.ACTIVATED.action;
                    } else {
                        return INSTALL_STATUS.NOT_ACTIVATED.action;
                    }
                } else {
                    return INSTALL_STATUS[installStatus].action || INSTALL_STATUS[installStatus].value;
                }
            };

            this.getAppStatusCode = function(installStatus) {
                return _.get(INSTALL_STATUS[installStatus], "statusCode");
            };

            this.isMdmApp = function(appType, subType) {
                return appType === 'NATIVE' && subType !== 'THINAPP';
            };

            catalogService.isTunnelRequired = function(app) {
                return app.hasOwnProperty('vpnAppId') && UserAgent.isAndroid();
            };

            catalogService.isTunnelRequiredAndNotInstalled = function(app) {
                var deferred = $q.defer();
                if (catalogService.isTunnelRequired(app)) {
                    if (tunnelAppAlreadyInstalledOrNotManaged) {
                        deferred.resolve(false);
                    } else {
                        DetailsService.getAppDetailsResource(app.vpnAppId).get().then(
                            function(data) {
                                tunnelApp = data;
                                //We skip tunnel installation if it is already installed or if is configured as unmanaged app. Only tunnel
                                //app that is MDM managed can be used for achieving SSO in Android.
                                if (data.installStatus === 'ACTIVATED' || (!data.mgmtRequired && app.mgmtRequired)) {
                                    //Tunnel already installed
                                    tunnelAppAlreadyInstalledOrNotManaged = true;
                                    deferred.resolve(false);
                                } else {
                                    deferred.resolve(true);
                                }
                            }, function() {
                                /*If tunnel is required and details call failed we will still
                                 show the tunnel message and to install the app just to on safe side.
                                 If its already installed, MDM would anyways take care of not installing it again*/
                                deferred.resolve(true);
                            }
                        );
                    }
                } else { //Tunnel not required
                    deferred.resolve(false);
                }
                return deferred.promise;
            };

            catalogService.getTunnelApp = function() {
                return tunnelApp;
            };

            this.isOktaApp = function(appType) {
                return appType === 'OKTA';
            };

            this.isMdmWebApp = function(appType, subType) {
                return appType === 'WEB' && subType === 'MDMWEB';
            };

            this.isWebApp = function(appType) {
                return appType === 'WEB';
            };

            this.isVirtualApp = function(appType) {
                return appType === 'VIRTUAL';
            };

            this.isPasswordVaultApp = function(appType, subType) {
                return appType === 'ANYAPP' && subType === 'PASSWORDVAULT';
            };

            this.isAnyApp = function(appType) {
                return appType === "ANYAPP";
            };

            this.isThinApp = function(app) {
                return app.thinapp;
            };

            this.isThinAppPackage = function(app) {
                return app.thinappPackage;
            };

            this.isViewableThinappPackage = function(app) {
                return app.thinappPackage && (app.installStatus === 'ACTIVATED' || (!app.approvalRequired && app.installStatus === 'NOT_ACTIVATED'));
            };

            this.isLaunchableThinapp = function(app) {
                return this.isThinApp(app) && (app.installStatus === 'ACTIVATED' || (!app.approvalRequired && app.installStatus === 'NOT_ACTIVATED'));
            };

            this.isLaunchableNonThinApp = function(app) {
                return ((this.isOktaApp(app.type) || this.isWebApp(app.type) || this.isVirtualApp(app.type) || this.isPasswordVaultApp(app.type, app.subType)) || this.isAnyApp(app.type)) && (app.installStatus === 'ACTIVATED' || (!app.approvalRequired && app.installStatus === 'NOT_ACTIVATED'));
            };

            this.isLaunchableApp = function(app) {
                return this.isLaunchableNonThinApp(app) || (this.isLaunchableThinapp(app) && UserAgent.isThinAppSupportedBrowser());
            };

            this.isBookmarkableApp = function(app) {
                return this.isLaunchableNonThinApp(app) || this.isLaunchableThinapp(app)
                    || (UtilService.isHubNative() && UtilService.isFavoriteEnabled(app) && !this.isThinAppPackage(app));
            };

            this.isCitrixResource = function(appType, subType) {
                return appType === 'VIRTUAL' && (subType === 'XENAPP' || subType === 'XENAPPDELIVERYGROUP');
            };

            this.isHorizonResource = function(appType, subType) {
                return appType === 'VIRTUAL' && (subType === 'VIEWPOOL' || subType === 'VIEWAPP');
            };

            this.isHorizonAirResource = function(appType, subType) {
                return appType === 'VIRTUAL' && (subType === 'DESKTONEDESKTOP' || subType === 'DESKTONEAPPLICATION');
            };

            var handleEula = function(appActivationResponse, app, deferred) {
                var title = $filter('i18n')('termsOfUse');
                var message = $sce.trustAsHtml(appActivationResponse.message);
                var template = isHubApp ? 'app-v2/common/hubEulaModal.html' : 'app-v2/common/eulaModal.html';
                ModalService.getCurrentModal().open(template, {
                        title: title,
                        message: message, modal: ModalService.getCurrentModal()
                    }
                ).then(function() {
                        //User accepted EULA.
                        catalogService.acceptEula(app.appId, appActivationResponse.eulaContentId).then(function(acceptEulaResponse) {
                            app.installAction = INSTALL_STATUS.PROCESSING.value;
                            app.appNeedToActivated = false;
                            app.statusCode = catalogService.getAppStatusCode(INSTALL_STATUS.PROCESSING);
                            /* Once EULA is accepted proceed to normal install app flow. For instance if
                             status is returned as REDIRECT then redirect to app store etc. */
                            handleStatus(acceptEulaResponse.data, app);
                            if (deferred) {
                                deferred.resolve(true);
                            }
                        });
                    },
                    function() {
                        updateStatus(INSTALL_STATUS.NOT_ACTIVATED.name, app);
                    }
                );
            };

            var handleVppAcceptInvite = function(appActivationResponse, vppApp) {
                var title = $filter('i18n')('appCenter.vppInviteTitle');
                var template = isHubApp ? 'app-v2/catalog/hubVppInviteAccept.html' : 'app-v2/catalog/vppInviteAccept.html';
                ModalService.getCurrentModal().open(template,
                    {message: appActivationResponse.message, title: title, modal: ModalService.getCurrentModal()}
                ).then(
                    function() {
                        // User accepted invite
                        vppApp.installAction = INSTALL_STATUS.REDIRECT.value;
                        vppApp.appNeedToActivated = false;
                        vppApp.statusCode = catalogService.getAppStatusCode(INSTALL_STATUS.REDIRECT);
                        ClientRuntimeService.installApp(appActivationResponse.redirectUrl);
                    },
                    function() {
                        vppApp.statusCode = catalogService.getAppStatusCode(INSTALL_STATUS.NOT_ACTIVATED);
                        updateStatus(INSTALL_STATUS.NOT_ACTIVATED.name, vppApp);
                    }
                );
            };

            function installTunnelAppAndContinue(currentApp) {
                var installUrl = _.get(tunnelApp, '_links.install.href');
                updateStatus(INSTALL_STATUS.PROCESSING.name, tunnelApp);
                catalogService.activate(installUrl)
                    .then(function(appActivationResponse) {
                        var deferred = $q.defer();
                        if (appActivationResponse.status === INSTALL_STATUS.REDIRECT.name) {
                            var redirectUrl = appActivationResponse.redirectUrl;
                            /* In case of non Android for work device we show a modal that lays step by step install of
                            VMware Tunnel app first and then the dependant app*/
                            if (redirectUrl.indexOf(playStoreDomain) >= 0) {
                                handleTunnelForNonAndroidForWorkDevice(redirectUrl, currentApp);
                            } else if (UserAgent.isAndroid() && currentApp && currentApp.subType === 'INTERNAL') {
                                redirectUrl = appActivationResponse.redirectUrl + '&appName=' + currentApp.name;
                                ClientRuntimeService.installApp(redirectUrl);
                                deferred.resolve(true);
                            }
                        } else if (appActivationResponse.status === INSTALL_STATUS.ACCEPT_EULA.name) {
                            handleEula(appActivationResponse, tunnelApp, deferred);
                        } else {
                            deferred.resolve(true);
                            notifyNativeAppAndPollForStatus(tunnelApp);
                        }
                        return deferred.promise;
                    })
                    .then(function() {
                        continueWithActivateApp(currentApp);
                    });
            }

            function handleTunnelForNonAndroidForWorkDevice(tunnelUrl, dependentApp) {
                var template = isHubApp ? "app-v2/components/shared/tunnelError.html" : "app-v2/common/tunnelInstallNonAndroidForWorkDeviceModal.html";
                ModalService.getCurrentModal().open(template,
                    {
                        modal: ModalService.getCurrentModal(),
                        catalogService: catalogService,
                        tunnelUrl: tunnelUrl,
                        dependentApp: dependentApp,
                        tunnelAppName: tunnelApp.name
                    }
                );
            }

            catalogService.handleTunnelRedirect = function(tunnelUrl) {
                ClientRuntimeService.installApp(tunnelUrl);
            };

            catalogService.installDependentApp = function(dependentApp) {
                continueWithActivateApp(dependentApp);
            };

            var showMdmAppApprovalMessage = function(app) {
                var title = $filter('i18n')('appCenter.mdmAppRequestConfirmPromptTitle');
                var message = $filter('i18n')('appCenter.mdmAppRequestConfirmPromptMessage');
                var ok = $filter('i18n')('appCenter.action.request');
                var template = isHubApp ? "app-v2/components/shared/appInstallConfirmPrompt.html" : "app-v2/common/appInstallConfirmPrompt.html";
                if (app.appStateReason === 'RequestRejected') {
                    title = $filter('i18n')('appCenter.mdmAppRequestConfirmPromptTitleDenied');
                    message = $filter('i18n')('appCenter.mdmAppRequestConfirmPromptMessageDenied');
                }
                ModalService.getCurrentModal().open(template,
                    {
                        modal: ModalService.getCurrentModal(),
                        title: title,
                        name: app.name,
                        installMessage: message,
                        ok: ok,
                        cancel: $filter('i18n')('button.cancel')
                    }
                ).then(
                    function() {
                        continueWithActivateApp(app);
                    }
                );
            };

            var showConfirmationMessage = function(app, deviceStatus) {
                var title = isHubApp ? $filter('i18n')('hub.app.install.prompt.title') : $filter('i18n')('appCenter.appInstallConfirmPromptTitle');
                var sizeLabel = $filter('i18n')('app.details.label.size');
                var sizeMessage = sizeLabel + ': ';
                if (app.size < 1000000000) {
                    sizeMessage += (app.size / 1000000).toPrecision(3) + $filter('i18n')('app.details.abbrev.megabytes');
                } else {
                    sizeMessage += (app.size / 1000000000).toPrecision(3) + $filter('i18n')('app.details.abbrev.gigabytes');
                }
                var template = isHubApp ? "app-v2/components/shared/appInstallConfirmPrompt.html" : "app-v2/common/appInstallConfirmPrompt.html";
                if (UserAgent.isIOS() && deviceStatus === "MDM_DEVICE_CONTAINER_ENROLLED" && !app.mgmtRequired && app.subType == 'INTERNAL') {
                    template = "app-v2/common/privateAppInstructionsModal.html";
                }

                var confirmationHandler = {
                    cancel: function(event) {
                        event.stopPropagation();
                        ModalService.getCurrentModal().cancel();
                    },
                    close: function(event) {
                        event.stopPropagation();
                        ModalService.getCurrentModal().close(true);
                    }
                };

                ModalService.getCurrentModal().open(template,
                    {
                        modal: ModalService.getCurrentModal(),
                        title: title,
                        name: app.name,
                        size: app.size,
                        sizeMessage: sizeMessage,
                        price: app.price,
                        installMessage: app.installMessage
                    }
                ).then(
                    function() {
                        catalogService.isTunnelRequiredAndNotInstalled(app)
                            .then(function(tunnelRequiredAndNotInstalled) {
                                if (tunnelRequiredAndNotInstalled) {
                                    installTunnelAppAndContinue(app);
                                } else {
                                    continueWithActivateApp(app);
                                }
                            });
                    }
                );
            };

            function handleStatus(appActivationResponse, app) {
                if (appActivationResponse.status === INSTALL_STATUS.REDIRECT_FOR_ENROLL.name) {
                    app.appNeedToActivated = false;
                    app.statusCode = catalogService.getAppStatusCode(appActivationResponse.status);
                    var title = $filter('i18n')('beforeInstallation');
                    var privacyUrl = $sce.trustAsHtml(appActivationResponse.privacyUrl);
                    if (!isHubApp) {
                        ModalService.getCurrentModal().open('app-v2/common/enrollModal.html', {
                                name: app.name,
                                title: title,
                                privacyUrl: privacyUrl,
                                modal: ModalService.getCurrentModal()
                            }
                        ).then(function() {
                                HttpProxyService.clearAll();
                                HttpProxyService.setStepupStatusForOktaAppLaunch(true);
                                EventsService.addEvent('INSTALL', app.appId);
                                ClientRuntimeService.enroll(appActivationResponse.redirectUrl);
                            },
                            function() {
                                updateStatus(INSTALL_STATUS.NOT_ACTIVATED.name, app);
                            }
                        );
                    } else {
                        HttpProxyService.clearAll();
                        EventsService.addHubEventWithUrl('INSTALL', app.appId);
                        notifyNativeAppAndPollForStatus(app);
                        ClientRuntimeService.enroll(appActivationResponse.redirectUrl);
                    }
                } else if (appActivationResponse.status === INSTALL_STATUS.REDIRECT.name) {
                    updateStatus(INSTALL_STATUS.PROCESSING.name, app);
                    var redirectUrl = appActivationResponse.redirectUrl;
                    if (UserAgent.isWindows() && app && app.externalStoreAppId) {
                        appActivationResponse.redirectUrl = '&appId=' + app.externalStoreAppId;
                        redirectUrl = appActivationResponse.redirectUrl;
                    } else if (UserAgent.isAndroid() && app && app.subType === 'INTERNAL') {
                        redirectUrl = appActivationResponse.redirectUrl + '&appName=' + app.name;
                    }
                    ClientRuntimeService.installApp(redirectUrl);
                } else if (appActivationResponse.status === INSTALL_STATUS.ACCEPT_EULA.name) {
                    handleEula(appActivationResponse, app);
                } else if (appActivationResponse.status === INSTALL_STATUS.VPP_ACCEPT.name) {
                    if (appActivationResponse.message) {
                        handleVppAcceptInvite(appActivationResponse, app);
                    }
                } else {
                    app.appNeedToActivated = false;
                    app.installStatus = appActivationResponse.status;
                    app.launch = appActivationResponse.launchUrl;
                    app._links.launch = {
                        href: appActivationResponse.launchUrl
                    };
                    updateStatus(app.installStatus, app);
                    if (catalogService.isMdmApp(app.type, app.subType)) {
                        //if not app approval flow notify progress
                        if (!app.approvalRequiredForMdmApp) {
                            $notify.progress('installMessage.installingOnDevice');
                        }
                        notifyNativeAppAndPollForStatus(app);
                    }
                }
            }

            function appInstallCallback(appId) {
                ClientRuntimeService.installProgress(appId);
            }

            function notifyNativeAppAndPollForStatus(app) {
                function startPolling(userTimer) {
                    catalogService.pollForChangeStatus(app, userTimer).then(function(appDetails) {
                        if (app.approvalRequiredForMdmApp) {
                            app.appStateReason = appDetails.data.appStateReason;
                        }
                        updateStatus(appDetails.data.installStatus, app);
                        if (appDetails.data.approvalRequiredForMdmApp && appDetails.data.installStatus === 'PROCESSING'
                            && !appDetails.data.appStateReason) {
                            startPolling(true);
                        }
                    });
                }

                if (!UtilService.isWindowsNativeBridge() || !UtilService.isMacNativeBridge()) {
                    startPolling(false);
                }
                if (UserAgent.isAWJadeV3() && app) {
                    var appId = '';
                    if (UserAgent.isWindows() && app.externalStoreAppId) {
                        appId = app.externalStoreAppId;
                    } else if (UserAgent.isMacJade() && app.appId) {
                        appId = app.appId;
                    }
                    appInstallCallback(appId);
                }
            }

            function continueWithActivateApp(app) {
                if (app.approvalRequiredForMdmApp) {
                    app.appStateReason = 'PendingApproval';
                }

                if (app.type === 'NATIVE' && UtilService.isNativeBridge() && app.installStatus !== 'REQUEST') {
                    NativeBridgeService.getAppStatus([app.appId]);
                }

                updateStatus(INSTALL_STATUS.PROCESSING.name, app);

                catalogService.activate(_.get(app, '_links.install.href'), true).then(function(appActivationResponse) {
                    handleStatus(appActivationResponse, app);
                }, function(error) {
                    //TODO: We need to better the error handling
                    if (error.handled) { //When system is under maintenance
                        return;
                    }
                    var title = 'appCenter.installFailedTitle';
                    var message;
                    if (error.data && error.data.code === "device.unenrolled") {
                        ModalService.getCurrentModal().open('app-v2/common/modalDialog/templates/mdmError.html').then(function() {
                            HttpProxyService.clearAllAlongWithEnrollmentStatus();
                            ConfigService.doNotRefreshCache = true;
                            ConfigService.getLogoutUrl().then(function(logoutUrl) {
                                delete hznLocalStorage.deviceDetailDelay;
                                ClientRuntimeService.logout(logoutUrl);
                            });
                        });
                    } else {
                        if (error.status === INSTALL_STATUS.FAILED_COMPLIANCE_CHECK.name) {
                            //If compliance check has failed, show the message returned form server.
                            message = error.message;
                        } else {
                            message = $filter('i18n')('installStatus.installFailedMessage', app.name);
                            title = 'appCenter.installFailedTitle';
                        }
                        ModalService.getCurrentModal().alert({
                            title: title,
                            message: message,
                            ok: 'ok'
                        }).then(function() {
                            updateStatus(INSTALL_STATUS.NOT_ACTIVATED.name, app);
                        });
                    }
                });
            }

            function updateStatus(status, currentApp) {
                currentApp.installAction = catalogService.getInstallStatusText(status, currentApp);
                currentApp.appNeedToActivated = status === 'NOT_ACTIVATED' || status === 'UPDATE';
                currentApp.installStatus = status;
                currentApp.statusCode = catalogService.getAppStatusCode(status);
                HttpProxyService.updateActivationStatus(currentApp.appId, status, currentApp.appStateReason);
                if (currentApp.type === "NATIVE" && currentApp.appStateReason) {
                    $rootScope.$broadcast('app-request-status-change', {
                        app: currentApp, status: status,
                        appStateReason: currentApp.appStateReason
                    });
                } else {
                    $rootScope.$broadcast('app-status-change', {app: currentApp, status: status});
                }
            }

            catalogService.activateAndLaunchApp = function(app) {
                if (!catalogService.isLaunchableApp(app)) {
                    return;
                }
                if (!OfflineService.isDeviceOnline()) {
                    $notify.warning('installStatus.offlineInstallMessage');
                    return;
                }
                if (app.installStatus !== 'ACTIVATED') {
                    updateStatus(INSTALL_STATUS.PROCESSING.name, app);
                    ProgressIndicatorService.showProgressIndicator();
                    catalogService.activate(_.get(app, '_links.install.href'), true).then(function(appActivationResponse) {
                        if (appActivationResponse) {
                            handleStatus(appActivationResponse, app);
                            AppLaunchService.launchApp(app);
                            HttpProxyService.updateActivationStatus(app.appId, appActivationResponse.status);
                        } else {
                            $notify.error('error.failedToLaunchApp');
                        }
                        ProgressIndicatorService.hideProgressIndicator();
                    }).catch(function(appActivationResponse) {
                        if (appActivationResponse.status === 429) {
                            $notify.warning('api.server.load.error');
                        } else {
                            $notify.error('error.failedToLaunchApp');
                        }
                        ProgressIndicatorService.hideProgressIndicator();
                    });
                } else if (!app.visible) {
                    updateStatus(INSTALL_STATUS.PROCESSING.name, app);
                    ProgressIndicatorService.showProgressIndicator();
                    BookmarksService.setAppVisible(app).then(function(data) {
                        if (data) {
                            //success
                            app.visible = true;
                            updateStatus(INSTALL_STATUS.ACTIVATED.name, app);
                            AppLaunchService.launchApp(app);
                        } else {
                            updateStatus(INSTALL_STATUS.NOT_ACTIVATED.name, app);
                            $notify.error('error.failToShowApp');
                        }
                        ProgressIndicatorService.hideProgressIndicator();
                    });
                } else {
                    AppLaunchService.launchApp(app);
                }
            };

            catalogService.activateAndViewThinappPackage = function(app) {
                if (!app.thinappPackage) {
                    return;
                }
                if (!OfflineService.isDeviceOnline()) {
                    $notify.warning('installStatus.offlineInstallMessage');
                    return;
                }
                if (app.installStatus !== 'ACTIVATED') {
                    updateStatus(INSTALL_STATUS.PROCESSING.name, app);
                    ProgressIndicatorService.showProgressIndicator();
                    catalogService.activate(_.get(app, '_links.install.href'), true).then(function(appActivationResponse) {
                        if (appActivationResponse) {
                            handleStatus(appActivationResponse, app);
                            catalogService.openThinappsInPackageDialog(app);
                            HttpProxyService.updateActivationStatus(app.appId, appActivationResponse.status);
                        } else {
                            $notify.error('error.failedToLaunchApp');
                        }
                        ProgressIndicatorService.hideProgressIndicator();
                    }).catch(function(appActivationResponse) {
                        if (appActivationResponse.status === 429) {
                            $notify.warning('api.server.load.error');
                        } else {
                            $notify.error('error.failedToLaunchApp');
                        }
                        ProgressIndicatorService.hideProgressIndicator();
                    });
                } else {
                    catalogService.openThinappsInPackageDialog(app);
                }
            };

            catalogService.openThinappsInPackageDialog = function(app) {
                var template = isHubApp ? 'app-v2/catalog/hubThinApps.html' : 'app-v2/catalog/thinapps.html';
                ModalService.getCurrentModal().open(template, {app: app});
            };

            catalogService.openThinappDevicesDialog = function(app) {
                ModalService.getCurrentModal().open('app-v2/catalog/thinappMultiDeviceActivation.html', {app: app});
            };

            catalogService.activateAndBookmarkApp = function(app, useJQ, bookmarkSuccessHandler, bookmarkFailureHandler) {
                if (!UtilService.isHub() && !catalogService.isBookmarkableApp(app)) {
                    return;
                }
                if (!OfflineService.isDeviceOnline()) {
                    $notify.warning('installStatus.offlineInstallMessage');
                    return;
                }
                if (catalogService.isMdmApp(app.type, app.subType)) {
                    BookmarksService.toggleBookmark(app, useJQ, bookmarkSuccessHandler, bookmarkFailureHandler);
                    return;
                }
                if (app.installStatus !== 'ACTIVATED') {
                    updateStatus(INSTALL_STATUS.PROCESSING.name, app);
                    ProgressIndicatorService.showBookmarkingProgressIndicator(app.appId);
                    catalogService.activate(_.get(app, '_links.install.href'), true).then(function(appActivationResponse) {
                        if (appActivationResponse) {
                            handleStatus(appActivationResponse, app);
                            BookmarksService.toggleBookmark(app, useJQ, bookmarkSuccessHandler, bookmarkFailureHandler);
                            HttpProxyService.updateActivationStatus(app.appId, appActivationResponse.status);
                        } else {
                            $notify.error('error.failedToBookmarkApp');
                        }
                        ProgressIndicatorService.hideBookmarkingProgressIndicator(app.appId);
                    }).catch(function() {
                        $notify.error('error.failedToBookmarkApp');
                        ProgressIndicatorService.hideBookmarkingProgressIndicator(app.appId);
                    });
                } else if (!app.visible) {
                    updateStatus(INSTALL_STATUS.PROCESSING.name, app);
                    ProgressIndicatorService.showBookmarkingProgressIndicator(app.appId);
                    BookmarksService.setAppVisible(app).then(function(data) {
                        if (data) {
                            //success
                            app.visible = true;
                            updateStatus(INSTALL_STATUS.ACTIVATED.name, app);
                            BookmarksService.toggleBookmark(app, useJQ, bookmarkSuccessHandler, bookmarkFailureHandler);
                        } else {
                            updateStatus(INSTALL_STATUS.NOT_ACTIVATED.name, app);
                            $notify.error('error.failToShowApp');
                        }
                        ProgressIndicatorService.hideBookmarkingProgressIndicator(app.appId);
                    });
                } else {
                    BookmarksService.toggleBookmark(app, useJQ, bookmarkSuccessHandler, bookmarkFailureHandler);
                }
            };

            function continueToShowConfirmMessage(app, deviceStatus) {
                var isMdmApp = catalogService.isMdmApp(app.type, app.subType);
                if (app.installStatus === 'NOT_ACTIVATED' || app.installStatus === 'ACTIVATION_FAILED' || isMdmApp) {
                    if (app.approvalRequiredForMdmApp) {
                        showMdmAppApprovalMessage(app);
                    } else if (app.installMessage && (!app.mgmtRequired || deviceStatus === "MDM_DEVICE_FULLY_ENROLLED")) {
                        showConfirmationMessage(app, deviceStatus);
                    } else {
                        catalogService.isTunnelRequiredAndNotInstalled(app)
                            .then(function(tunnelRequiredAndNotInstalled) {
                                if (tunnelRequiredAndNotInstalled) {
                                    installTunnelAppAndContinue(app);
                                } else {
                                    continueWithActivateApp(app);
                                }
                            });
                    }
                } else if (!app.visible) {
                    updateStatus(INSTALL_STATUS.PROCESSING.name, app);
                    BookmarksService.setAppVisible(app).then(function(data) {
                        if (data) {
                            //success
                            app.visible = true;
                            updateStatus(INSTALL_STATUS.ACTIVATED.name, app);
                        } else {
                            updateStatus(INSTALL_STATUS.NOT_ACTIVATED.name, app);
                            $notify.error('error.failToShowApp');
                        }
                    });
                }
            }

            catalogService.activateApp = function(app, deviceStatus) {
                if (app.subType === 'THINAPP' && app.perDeviceActivationRequired) {
                    catalogService.openThinappDevicesDialog(app);
                    return;
                }

                if (OfflineService.isDeviceOnline()) {
                    if (app.eventId) {
                        //In case of success and has a event id delete the event
                        EventsService.deleteEvent(app.eventId);
                    }

                    if (deviceStatus === "MDM_DEVICE_FULLY_ENROLLED" || !app.mgmtRequired) {
                        catalogService.isTunnelRequiredAndNotInstalled(app)
                            .then(function(tunnelRequiredAndNotInstalled) {
                                if (tunnelRequiredAndNotInstalled) {
                                    var template = isHubApp ? "app-v2/components/shared/tunnelModal.html" : "app-v2/common/tunnelModal.html";
                                    ModalService.getCurrentModal().open(template,
                                        {modal: ModalService.getCurrentModal(), name: app.name}
                                    ).then(function() {
                                        continueToShowConfirmMessage(app, deviceStatus);
                                    });
                                } else {
                                    continueToShowConfirmMessage(app, deviceStatus);
                                }
                            });
                    } else {
                        continueToShowConfirmMessage(app, deviceStatus);
                    }
                } else {
                    $notify.warning('installStatus.offlineInstallMessage');
                }
            };

            catalogService.populateTypeNameAndPlatformName = function(catalogApp) {
                var platform = 'none';
                catalogApp.typeName = typeNames[catalogApp.type];
                if (catalogApp.subType === 'THINAPP') {
                    catalogApp.typeName = typeNames.THINAPP;
                } else if (catalogApp.type === 'ANYAPP') {
                    catalogApp.typeName = typeNames.WEB;
                } else if (catalogApp.subType === 'PROFILE') {
                    catalogApp.typeName = typeNames.PROFILE;
                } else if (catalogApp.type === 'NATIVE' && catalogApp.subType !== 'THINAPP') {
                    var lowerCaseDeviceType = workspaceOne.deviceType.toLowerCase();
                    if (lowerCaseDeviceType == 'apple') {
                        platform = 'IOS';
                    } else if (lowerCaseDeviceType == 'android') {
                        platform = 'ANDROID';
                    } else if (lowerCaseDeviceType == 'winrt' || lowerCaseDeviceType == 'windowsphone8' ||
                        lowerCaseDeviceType == 'windowsmobile' || lowerCaseDeviceType == 'windowspc' || lowerCaseDeviceType == 'windowsphone') {
                        platform = 'WINDOWS';
                    } else if (lowerCaseDeviceType == 'appleosx') {
                        platform = 'MAC';
                    }
                    if (platform) {
                        catalogApp.typeName = typeNames.NATIVE_PLATFORM;
                        catalogApp.platformName = platformNames[platform];
                    }
                }
            };

            catalogService.populateDisplayValForAppType = function(app) {
                var mdmApp = catalogService.isMdmApp(app.type, app.subType);
                var webApp = catalogService.isWebApp(app.type);
                var anyApp = catalogService.isAnyApp(app.type);
                var citrixResource = catalogService.isCitrixResource(app.type, app.subType);
                var horizonResource = catalogService.isHorizonResource(app.type, app.subType);
                var VpnTunnelRequired = catalogService.isTunnelRequired(app);
                var horizonAirResource = catalogService.isHorizonAirResource(app.type, app.subType);
                var thinApp = app.thinapp;
                var thinAppPackage = app.thinappPackage;
                app.isCitrixResource = citrixResource;
                app.isHorizonResource = horizonResource;
                app.isTunnelRequired = VpnTunnelRequired;
                app.isHorizonAirResource = horizonAirResource;
                app.appTypeDisplayVal = '';
                if (webApp || anyApp) {
                    app.appTypeDisplayVal = $filter('i18n')(app.typeName);
                } else if (citrixResource) {
                    app.appTypeDisplayVal = $filter('i18n')('appCenter.type.citrixResource');
                } else if (horizonResource) {
                    app.appTypeDisplayVal = $filter('i18n')('appCenter.type.HorizonResource');
                } else if (horizonAirResource) {
                    app.appTypeDisplayVal = $filter('i18n')('appCenter.type.HorizonAirResource');
                } else if (thinApp) {
                    app.appTypeDisplayVal = $filter('i18n')('appCenter.type.thinapp');
                } else if (thinAppPackage) {
                    app.appTypeDisplayVal = $filter('i18n')('appCenter.type.appPackage');
                } else if (mdmApp && app.size) {
                    if (app.size < 1000000000) {
                        app.appTypeDisplayVal = $filter('i18n')('app.mobileApp.versionAndMBSize', (app.size / 1000000).toPrecision(3), app.version);
                    } else {
                        app.appTypeDisplayVal = $filter('i18n')('app.mobileApp.versionAndGBSize', (app.size / 1000000000).toPrecision(3), app.version);
                    }
                }
            };

            catalogService.getAppSize = function(size) {
                if (size < 1000000000) {
                    return $filter('i18n')('app.details.appSize', (size / 1000000).toPrecision(3));
                } else {
                    return $filter('i18n')('app.details.appSize', (size / 1000000000).toPrecision(3));
                }
            };

            this.pollForChangeStatus = function(catalogApp, userTimer) {
                return PollingService.start(catalogApp.appId, userTimer);
            };

            catalogService.bulkInstall = function(acceptedIds, rejectedIds) {
                var urlPromise = ConfigService.getAutomatedAppInstallUrl();
                return urlPromise.then(function(bulkInstallUrl) {
                    bulkInstallUrl = bulkInstallUrl.replace('{postDirectEnrollmentActionBoolean}', 'true');
                    var params = {};
                    if (acceptedIds) {
                        params.appIds = acceptedIds;
                    }

                    var req = RequestFactory(bulkInstallUrl, {
                        method: 'POST',
                        headers: {
                            'Accept': 'application/vnd.vmware.catalog.apps-install-confirmation-v1+json',
                            'Content-Type': 'application/vnd.vmware.catalog.apps-install-v1+json'
                        },
                        data: params
                    });
                    var defer = $q.defer();
                    $http(req).then(function(bulkInstallResponse) {
                        defer.resolve(bulkInstallResponse.data);
                    }, function(error) {
                        defer.reject(error);
                    });
                    return defer.promise;
                });
            };

            catalogService.getDefaultLabelsFromEntitlements = function(entitlements) {
                var defaultLabels = [];
                var isVirtualAdded = false,
                    isWebAdded = false,
                    isNativeAdded = false;
                defaultLabels.push(catalogService.getAllAppsLabel());
                _.each(entitlements, function(entitlement) {
                    if (!isVirtualAdded && entitlement.type === "VIRTUAL") {
                        defaultLabels.push(catalogService.getVirtualAppsLabel());
                        isVirtualAdded = true;
                    }
                    if (!isWebAdded && entitlement.type === "WEB") {
                        defaultLabels.push(catalogService.getWebAppsLabel());
                        isWebAdded = true;
                    }
                    if (!isNativeAdded && entitlement.type === "NATIVE" && entitlement.subType !== "THINAPP") {
                        defaultLabels.push(catalogService.getNativeAppsLabel());
                        isNativeAdded = true;
                    }
                });

                return defaultLabels;
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

// (c) 2016 VMware, Inc.  All rights reserved.

(function(module) {
    'use strict';
    module.controller('EntitlementErrorController', ['$scope', 'Localization', 'UtilService', 'UserAgent', 'ClientRuntimeService', function($scope, Localization, UtilService, UserAgent, ClientRuntimeService) {
        var vm = this;
        vm.hideDetail = true;
        vm.isAndroid = UserAgent.isAndroid();
        vm.isAWJade2_0 = UserAgent.isNativeAppVersionIsEqualOrBelow("2.0");
        var deviceStatus = $scope.message.argument;

        if (deviceStatus === 'MDM_DEVICE_BLACKLISTED') {
            vm.detail = Localization.getLocalizedString('appCenter.device.status.blackListed');
        } else if (deviceStatus === 'MDM_DEVICE_NOT_ENROLLED' && !(vm.isAndroid && vm.isAWJade2_0)) {
            vm.detail = Localization.getLocalizedString('appCenter.device.status.notRegistered');
        }

        vm.enroll = function($event, $index) {
            if ($event) {
                $event.preventDefault();
            }
            ClientRuntimeService.register();
            $scope.close($index);
        };
    }]);
})(angular.module("com.vmware.greenbox.appCenter"));


(function(module) {
    'use strict';

    module.constant('INSTALL_STATUS', {
        //Install status enum
        //name: backend enumeration, value: i10n key
        ACTIVATED: { name: 'ACTIVATED', value: 'installStatus.activated',
            action: 'appCenter.action.added', nativeAction: 'appCenter.action.installed', statusCode: '3' },
        NOT_ACTIVATED: { name: 'NOT_ACTIVATED', value: 'installStatus.notActivated',
            action: 'appCenter.action.add', nativeAction: 'appCenter.action.install', statusCode: '1' },
        REQUEST: { name: 'REQUEST', value: 'installStatus.request',
            action: 'appCenter.action.request', nativeAction: 'appCenter.action.request', statusCode: '1' },
        ACTIVATION_IN_PROGRESS: { name: 'ACTIVATION_IN_PROGRESS', value: 'installStatus.processing', statusCode: '2' },
        ACTIVATION_REQUESTED: { name: 'ACTIVATION_REQUESTED', value: 'installStatus.processing', statusCode: '2'},
        ACTIVATION_FAILED: { name: 'ACTIVATION_FAILED', value: 'installStatus.notActivated',
            action: 'appCenter.action.add', nativeAction: 'appCenter.action.install', statusCode: '1' },
        DEACTIVATION_REQUESTED: { name: 'DEACTIVATION_REQUESTED', value: 'installStatus.processing', statusCode: '2'},
        DEACTIVATION_IN_PROGRESS: { name: 'DEACTIVATION_IN_PROGRESS', value: 'installStatus.processing', statusCode: '2'},
        DEACTIVATION_FAILED: { name: 'DEACTIVATION_FAILED', value: 'installStatus.processing', statusCode: '2'},
        DEACTIVATED: { name: 'DEACTIVATED', value: 'installStatus.processing', statusCode: '2'},

        HIDDEN: { name: 'HIDDEN', value: 'installStatus.hidden',
            action: 'appCenter.action.add', nativeAction: 'appCenter.action.add', statusCode: '1' },
        UPDATE: { name: 'UPDATE', value: 'installStatus.update',
            action: 'appCenter.action.add', nativeAction: 'appCenter.action.update', statusCode: '4' },
        PROCESSING: { name: 'PROCESSING', value: 'installStatus.processing', statusCode: '2' },
        REDIRECT: { name: 'REDIRECT_FOR_ACTIVATE', value: 'installStatus.processing', statusCode: '2'},
        FAILED_COMPLIANCE_CHECK: { name: 'FAILED_COMPLIANCE_CHECK', value: 'installStatus.failedComplianceCheck'},
        ADAPTER_INSTALL_FAILED: { name: 'ADAPTER_INSTALL_FAILED', value: 'installStatus.installFailedMessage'},
        ACCEPT_EULA: { name: 'ACCEPT_EULA', value: 'termsOfUse'},
        EULA_ACCEPTED: { name: 'EULA_ACCEPTED'},
        REDIRECT_FOR_ENROLL: { name: 'REDIRECT_FOR_ENROLL', value: 'installStatus.notActivated', statusCode: '2'},
        VPP_ACCEPT: { name: 'VPP_ACCEPT', value: 'appCenter.vppInviteTitle'}
    });
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    //moving it to constants, its easy to mock for test case
    module.constant('POLLING_INTERVALS', {
        TIMEOUT_SECONDS: 4 * 60 * 1000,
        START_POLLING_TIME_INTERVAL: 0,
        DEVICE_REGISTRATION_CHECK_INTERVAL: 3 * 60 * 1000,
        NOTIFICATION_SVC_REALTIME_CONNECTION_CHECK_INTERVAL: 3 * 60 * 1000
    });
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';
    module.controller('ThinappMultiDeviceActivationController', [
        '$scope',
        '$filter',
        '$notify',
        'ThinappMultiDeviceActivationService',
        'CatalogService',
        'ModalService',
        'ProgressIndicatorService',
        function($scope,
                  $filter,
                  $notify,
                  ThinappMultiDeviceActivationService,
                  CatalogService,
                  ModalService,
                  ProgressIndicatorService) {
            var vm = this;
            vm.app = $scope.app;
            vm.deviceReqs = [];

            ProgressIndicatorService.showProgressIndicator();
            ThinappMultiDeviceActivationService.getDeviceReqs(vm.app).then(function(devReqs) {
                vm.deviceReqs = devReqs;
                ProgressIndicatorService.hideProgressIndicator();
            });

            vm.getThinappRequestStatusMsg = function(device) {
                var statusMsg = '';
                if (device.activationState) {
                    var statusKey = 'app.thinappMultiDeviceAct.activationState.' + device.activationState;
                    statusMsg = $filter('i18n')(statusKey);
                    if (device.message) {
                        statusMsg = statusMsg + ': ' + device.message;
                    }
                }
                return statusMsg;
            };

            vm.isRequestable = function(device) {
                return (device.activationState == '' || device.activationState == 'deniedActivation' || device.activationState == 'notActivated');
            };

            vm.requestThinAppOnADevice = function(deviceId) {
                CatalogService.activate(vm.app.installUrl, true, deviceId).then(function(appActivationResponse) {
                    ModalService.getCurrentModal().close();
                }, function(error) {
                    $notify.error('installStatus.installFailedMessage');
                });
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('ThinappMultiDeviceActivationService', [
        '$http',
        'RequestFactory',
        'Resource',
        function($http,
                 RequestFactory,
                 Resource) {
            this.getDeviceReqs = function(app) {
                var request = Resource(app._links['device-activation-requests'].href, { headers: { 'Accept': 'application/hal+json', 'method': 'GET' } });
                return request.get().thenGet('thinappDeviceRequests');
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.controller('ThinappsInPackageController', [
        '$scope',
        '$notify',
        '$filter',
        'ModalService',
        'CatalogService',
        'OfflineService',
        'ProgressIndicatorService',
        'UtilService',
        'TenantCustomizationService',
        '$rootScope',
        function($scope,
                  $notify,
                  $filter,
                  ModalService,
                  CatalogService,
                  OfflineService,
                  ProgressIndicatorService,
                  UtilService,
                  TenantCustomizationService,
                  $rootScope) {
            var vm = this;
            vm.app = $scope.app;
            vm.visibleCatalogApps = [];
            vm.searchString = '';
            vm.emptyCatalogModalFillers = [1, 2, 3, 4];
            vm.instruction = $filter('i18n')('app.thinappsInPackage.action.instruction');
            vm.customizationLoadFromDbFailed = TenantCustomizationService.isLoadFromDbFailed();
            vm.favoritesEnabled = !vm.customizationLoadFromDbFailed;
            var isHubApp = UtilService.isHub();

            ProgressIndicatorService.showProgressIndicator();
            CatalogService.getAppsInThinappPackage(vm.app).then(function(entitlementsResponse) {
                vm.visibleCatalogApps = entitlementsResponse.data._embedded.entitlements;
                ProgressIndicatorService.hideProgressIndicator();
            });

            vm.clearSearch = function() {
                vm.searchString = '';
            };

            vm.bookmarkAll = function() {
                var deviceOnline = OfflineService.isDeviceOnline();

                if (deviceOnline) {
                    var markAllAppsInPackageBookmarking = function(val) {
                        angular.forEach(vm.visibleCatalogApps, function(app) {
                            app.bookmarking = val;
                        });
                    };
                    var setFavStatusForAllAppsInPackage = function(val) {
                        angular.forEach(vm.visibleCatalogApps, function(app) {
                            app.favorite = val;
                            if (isHubApp) {
                                $rootScope.$broadcast('app-bookmarked', app);
                                $notify.success('app.details.label.addedFavorites');
                            }
                        });
                    };
                    markAllAppsInPackageBookmarking(true);
                    CatalogService.bookmarkAllAppsInThinappPackage(vm.app).then(function() {
                        setFavStatusForAllAppsInPackage(true);
                        markAllAppsInPackageBookmarking(false);
                    }, function(error) {
                        markAllAppsInPackageBookmarking(false);
                        if (error.handled) { //When system is under maintenance
                            return;
                        }
                        $notify.error('error.failToFavoriteApp');
                    });
                } else {
                    $notify.warning('favoriteStatus.offlineFavoriteMessage');
                }
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

angular.module('com.vmware.greenbox.appCenter').filter('searchThinappPackageFor', function() {
    // All filters must return a function. The first parameter
    // is the data that is to be filtered, and the second is an
    // argument that may be passed with a colon (searchFor:searchString)

    return function(arr, searchString) {
        if (!searchString || searchString.trim() === '') {
            return arr;
        }

        var result = [];

        searchString = searchString.toLowerCase();

        // Using the forEach helper method to loop through the array
        angular.forEach(arr, function(item) {
            if (item.name.toLowerCase().indexOf(searchString) !== -1) {
                result.push(item);
            }
        });

        return result;
    };
});

// (c) 2016 VMware, Inc.  All rights reserved.

(function(module) {
    'use strict';
    module.controller('appBannerController', ['UserAgent', '$window', 'hznLocalStorage', 'JadeV2Scheme', 'AppDownloadService', function(UserAgent, $window, hznLocalStorage, JadeV2Scheme, AppDownloadService) {
        var vm = this;

        vm.showPromoBanner = false;

        vm.setPromoBannerPreference = function() {
            if (vm.pvsettings) {
                hznLocalStorage.setItem("hidePromoBanner", true);
            } else {
                hznLocalStorage.removeItem("hidePromoBanner");
            }
        };

        vm.showPromoBanner = !hznLocalStorage.hidePromoBanner;

        vm.close = function() {
            vm.showPromoBanner = false;
        };

        vm.openWorkspaceOneApp = function() {
            window.location.href = JadeV2Scheme.JADE_SCHEME;
        };

        vm.downloadApp = function() {
            AppDownloadService.downloadApp();
        };
    }]);
})(angular.module("com.vmware.greenbox.appCenter"));


(function(module) {
    'use strict';
    module.service('AppLauncherForDesktop', [
                        '$timeout',
                        'Localization',
                        'UserAgent',
                        'UtilService',
                        'HorizonResourcesLaunchService',
                        'VirtualAppLaunchService',
                        'XenappLaunchService',
                        'PasswordVaultAppLaunchService',
                        function($timeout,
                                 Localization,
                                 UserAgent,
                                 UtilService,
                                 HorizonResourcesLaunchService,
                                 VirtualAppLaunchService,
                                 XenappLaunchService,
                                 PasswordVaultAppLaunchService) {
                var WINDOW = {
                    w: 500,
                    h: 500,
                    left: (screen.width / 2) - (500 / 2),
                    top: (screen.height / 2) - (500 / 2)
                };

                var virtualAppLaunchWindow = false;

                //Service functions
                this.launch = function(app) {
                    switch (app.subType) {
                        case "THINAPP":
                        case "APPV":
                            _invokeNativeApp(app);
                            break;
                        case "XENAPP":
                        case "XENAPPDELIVERYGROUP":
                            if (VirtualAppLaunchService.isAppLaunchV2Supported(app)) {
                                XenappLaunchService.launchXenApp(app);
                            } else {
                                _invokeNativeApp(app);
                            }
                            break;
                        case "VIEWPOOL":
                        case "VIEWAPP":
                        case "DESKTONEDESKTOP":
                        case "DESKTONEAPPLICATION":
                            HorizonResourcesLaunchService.launchViewApp(app);
                            break;
                        case "PASSWORDVAULT":
                            PasswordVaultAppLaunchService.launchPVApp(app);
                            break;
                        default:
                            _openAppInNewWindow(app);
                    }
                };

                function _invokeNativeApp(app) {
                    function isXenApp(app) {
                        return ["XENAPP", "XENAPPDELIVERYGROUP"].indexOf(app.subType) >= 0;
                    }

                    if (virtualAppLaunchWindow && !virtualAppLaunchWindow.closed) { //checks to see if window is open
                        virtualAppLaunchWindow.close();
                    }
                    if (UserAgent.isIE8OrLower() && isXenApp(app)) {
                        return;
                    }
                    virtualAppLaunchWindow = window.open("about:blank",
                        "AppLaunchWindow",
                        'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' + WINDOW.w + ', height=' + WINDOW.h + ', top=' + WINDOW.top + ', left=' + WINDOW.left + ',modal=yes,alwaysRaised=yes');

                    virtualAppLaunchWindow.focus();
                    virtualAppLaunchWindow.document.write(Localization.getLocalizedString('myapps.launch.msg.launching.application', [app.name]));

                    function constructAppLaunchUrl(app) {
                        if (isXenApp(app)) {
                            if (UserAgent.isNPAPISupportedBrowser()) {
                                return UtilService.appendQueryParams(app.launch, {NPAPISupported: "true"});
                            }
                            return UtilService.appendQueryParams(app.launch, {NPAPISupported: "false"});
                        }
                        return app.launch;
                    }

                    $timeout(function() {
                        virtualAppLaunchWindow.location.href = constructAppLaunchUrl(app);
                    }, 2000);
                }

                function _openAppInNewWindow(app) {
                    var launchWindow = window.open();
                    launchWindow.opener = null;
                    launchWindow.location = app.launch;
                }
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('AppLauncherForJade', [
                        'ConfigService',
                        'UtilService',
                        'UserAgent',
                        '$q',
                        'LaunchUtilityService',
                        'HorizonResourcesLaunchService',
                        'VirtualAppLaunchService',
                        'ProgressIndicatorService',
                        'ModalService',
                        function(ConfigService,
                                 UtilService,
                                 UserAgent,
                                 $q,
                                 LaunchUtilityService,
                                 HorizonResourcesLaunchService,
                                 VirtualAppLaunchService,
                                 ProgressIndicatorService,
                                 ModalService) {
            this.launchUrl = function(app) {
                //AWJade is going to open the application in external browser hence need to obtain OTA

                if (UserAgent.isAWJadeV2() && (VirtualAppLaunchService.isViewApp(app)
                    || VirtualAppLaunchService.isXenApp(app)
                    || VirtualAppLaunchService.isDesktoneApp(app))) {
                    ProgressIndicatorService.showProgressIndicator();
                    app.useNonNPAPIForCitrixLaunch = LaunchUtilityService.isUseNonNPAPIForCitrixLaunch();
                    return VirtualAppLaunchService.getLaunchUrls(app).then(function(launchUrlsResponse) {
                        ProgressIndicatorService.hideProgressIndicator();
                        if (launchUrlsResponse) {
                            return getLaunchUrlForApp(launchUrlsResponse, app);
                        }
                    }, function(error) {
                        ProgressIndicatorService.hideProgressIndicator();
                        if (error && error.data.code === 'appLaunch.passwordNotFound.error') {
                            return VirtualAppLaunchService.showPasswordDialog(app).then(function(launchUrlsResponse) {
                                if (launchUrlsResponse) {
                                    return getLaunchUrlForApp(launchUrlsResponse, app);
                                }
                            });
                        } else {
                            ModalService.getCurrentModal().alert({
                                title: 'requestFailed',
                                message: error.data.message,
                                ok: 'ok'
                            });
                        }
                    });
                } else if (app.subType === "MDMWEB") {
                    return getMdmWebUrl(app);
                } else {
                    return getOtaForUrl(app.launch).then(function(launchUrl) {
                        return getLaunchUrlForResource(app, encodeURIComponent(launchUrl));
                    });
                }
            };

            function getLaunchUrlForApp(launchUrlResponse, app) {
                var deferred = $q.defer();
                if (launchUrlResponse.applyAuthPolicy) {
                    getOtaForUrl(launchUrlResponse.accessPolicyUrl).then(function(otaWrappedLaunchUrl) {
                        var accessPolicyLaunchUrl = encodeURIComponent(otaWrappedLaunchUrl);
                        if (VirtualAppLaunchService.isViewApp(app)
                            || VirtualAppLaunchService.isDesktoneApp(app)) {
                            accessPolicyLaunchUrl += "&appType=1";
                        } else if (VirtualAppLaunchService.isXenApp(app)) {
                            accessPolicyLaunchUrl += "&appType=2";
                        }
                        deferred.resolve(accessPolicyLaunchUrl);
                    });
                } else {
                    if (VirtualAppLaunchService.isViewApp(app)
                        || VirtualAppLaunchService.isDesktoneApp(app)) {
                        var launchUrl = encodeURIComponent(launchUrlResponse.nativeLaunchUrl) + "&appType=1";
                        if (launchUrlResponse.browserLaunchUrl && HorizonResourcesLaunchService.isClientLaunchable(app, 'BROWSER')) {
                            launchUrl = launchUrl + "&fallback=" + encodeURIComponent(launchUrlResponse.browserLaunchUrl);
                        }
                        deferred.resolve(launchUrl);
                    }
                    if (VirtualAppLaunchService.isXenApp(app)) {
                        //In case of ica download URL no OTA flow needed hence directly open in new window
                        launchUrl = getLaunchUrlForResource(app, launchUrlResponse.browserLaunchUrl);
                        deferred.resolve(launchUrl);
                    }
                }
                return deferred.promise;
            }
            function getOtaForUrl(url) {
                return LaunchUtilityService.getOta(url).then(function(ota) {
                    if (url.indexOf('?') >= 0) {
                        return url + "&ota=" + ota;
                    } else {
                        return url + "?ota=" + ota;
                    }
                });
            }

            function getLaunchUrlForResource(app, launchUrl) {
                switch (app.subType) {
                    case "SAML11":
                    case "SAML20":
                    case "WSFED12":
                    case "WEBAPPLINK":
                    case "MDMWEB":
                        var featureFlags = workspaceOne.featureFlags;
                        if (!UserAgent.isWindows() && app.useAirwatchBrowser) {
                            launchUrl += "&openInAWB=true";
                        }
                        break;
                    case "VIEWPOOL":
                    case "VIEWAPP":
                    case "DESKTONEDESKTOP":
                    case "DESKTONEAPPLICATION":
                        var launchableClients = HorizonResourcesLaunchService.getLaunchableClients(app);
                        var supportsBlast = false;
                        if (launchableClients.length > 0) {
                            supportsBlast = (launchableClients.indexOf("BROWSER") > 0);
                        }
                        var fallbackUrl = UtilService.appendQueryToUrl(launchUrl, "p", 'BROWSER');
                        // Use appType=1 for Horizon Client (view or Horizon Air)
                        // And use appType=2 for citrix receiver
                        launchUrl = launchUrl + "&appType=1";

                        if (supportsBlast) {
                            launchUrl = launchUrl + "&fallback=" + fallbackUrl;
                        }
                        break;
                    case "XENAPP":
                    case "XENAPPDELIVERYGROUP":
                        launchUrl = launchUrl + "&appType=2";
                        break;
                    default:
                        break;
                }
                return launchUrl;
            }

            function getMdmWebUrl(app) {
                var deferred = $q.defer();
                deferred.resolve(getLaunchUrlForResource(app, app._links.launch.href));
                return deferred.promise;
            }
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('AppLaunchService', [
        'UtilService',
        'UserAgent',
        'Localization',
        'ClientRuntimeService',
        'hznLocalStorage',
        'ModalService',
        'LaunchUtilityService',
        'ConfigService',
        'HttpProxyService',
        'SignOutService',
        'EventsService',
        function(
            UtilService,
            UserAgent,
            Localization,
            ClientRuntimeService,
            hznLocalStorage,
            ModalService,
            LaunchUtilityService,
            ConfigService,
            HttpProxyService,
            SignOutService,
            EventsService) {
            var appLaunchService = this;
            var isHubApp = UtilService.isHub();

            appLaunchService.launchApp = function(app) {
                if (app.type === 'OKTA') {
                    appLaunchService.launchOktaApp(app);
                } else if (appLaunchService.checkIfNativeClientIsInstalledFor(app)) {
                    ClientRuntimeService.launchApp(app);
                }
            };

            appLaunchService.launchOktaApp = function(app) {
                if (app.type !== 'OKTA') {
                    return;
                }
                if (!appLaunchService.isOktaAppLaunchSupporedWebView()) {
                    ClientRuntimeService.launchApp(app);
                    return;
                }
                // If this is an OKTA app and if the current view is Native app
                // Then check if the device enrollment status changed from container enrolled to MDM Enrolled.
                // If so clear the local storage and proceed to logout.

                // iOS WS1 app when a device goes from unmanged to managed, the deviceID is changes
                // hence for the new device ID the previous values are not correct
                // and there is no way to correlate the 2 device IDs in the UI.
                // Hence storing a different variable for enrollemnt status and mgmt status from the
                // existing one in local storage just for this Okta launch
                var prevEnrollmentStatus = HttpProxyService.getDeviceEnrollmentStatusForOktaAppLaunch();
                var prevDeviceMgmtStatus = HttpProxyService.getDeviceMgmtStatusForOktaAppLaunch();
                var isDeviceSteppedUp = HttpProxyService.getStepupStatusForOktaAppLaunch();
                // If the device is already in MDM managed state then just launch the app
                if (!isDeviceSteppedUp && 'MDM' === prevDeviceMgmtStatus && 'ENROLLED' === prevEnrollmentStatus) {
                    ClientRuntimeService.launchApp(app);
                    return;
                }
                // Query for the device reg details.
                ConfigService.getDeviceRegistrationDetail().then(function(deviceDetails) {
                    if (!deviceDetails) {
                        ClientRuntimeService.launchApp(app);
                        return;
                    }
                    deviceDetails.get().then(function(deviceStatus) {
                        var deviceMgmtDetails = deviceStatus.deviceMgmtDetails;
                        if (!deviceMgmtDetails) {
                            ClientRuntimeService.launchApp(app);
                            return;
                        }
                        var deviceEnrollStatusType = deviceMgmtDetails.deviceEnrollStatusType;
                        var deviceMgmtStatus = deviceMgmtDetails.deviceMgmtType;
                        // store the current Enrollement state and Mgmt state in local storage
                        if (deviceMgmtStatus) {
                            HttpProxyService.setDeviceMgmtStatusForOktaAppLaunch(deviceMgmtStatus);
                        }
                        if (deviceEnrollStatusType) {
                            HttpProxyService.setDeviceEnrollmentStatusForOktaAppLaunch(deviceEnrollStatusType);
                        }
                        // if current state is MDM enrolled
                        if ('MDM' === deviceMgmtStatus && 'ENROLLED' === deviceEnrollStatusType) {
                            // If the previous state empty means this is the first time here
                            // And the device is already managed.
                            // Hence no need to do anything and proceed to the Launch
                            if (isDeviceSteppedUp) { // Means device has gone through adaptive Mgmt or Direct enrollment. Hence state is changed.
                                HttpProxyService.clearAllAlongWithEnrollmentStatus();
                                SignOutService.continueSignOut();
                            } else if (!prevEnrollmentStatus && !prevDeviceMgmtStatus) {
                                if (isHubApp) {
                                    EventsService.addHubEventWithUrl('LAUNCH_APP', app.appId);
                                    SignOutService.continueSignOut();
                                } else {
                                    // this means started with MDM managed device
                                    ClientRuntimeService.launchApp(app);
                                }
                            } else { // Means the device state changed. Hence signout.
                                HttpProxyService.clearAllAlongWithEnrollmentStatus();
                                SignOutService.continueSignOut();
                            }
                        } else {
                            ClientRuntimeService.launchApp(app);
                        }
                    }, function() {
                        ClientRuntimeService.launchApp(app);
                    });
                });
            };

            appLaunchService.isOktaAppLaunchSupporedWebView = function(app) {
                return UserAgent.isNativeAppVersionIsEqualOrAbove('2.1') && UtilService.getQueryParams().deviceUdid && !UserAgent.isAndroid();
            };

            appLaunchService.checkIfNativeClientIsInstalledFor = function(app) {
                if (LaunchUtilityService.isSuppressLaunchDialog() || UserAgent.isAWJade()) {
                    return true;
                }
                switch (app.subType) {
                    case "THINAPP":
                    case "APPV":
                        if (!UserAgent.isHorizonDesktopInstalled()) {
                            appLaunchService.openAppDownloadDialog(app);
                            return false;
                        }
                        break;
                    case "XENAPP":
                    case "XENAPPDELIVERYGROUP":
                        if (!UserAgent.isCitrixReceiverInstalled()) {
                            appLaunchService.openAppDownloadDialog(app);
                            return false;
                        }
                        break;
                }
                return true;
            };

            appLaunchService.openAppDownloadDialog = function(app) {
                var title = Localization.getLocalizedString('myapps.launch.title');
                switch (app.subType) {
                    case 'THINAPP':
                    case 'APPV':
                        var workspaceDownloadUrl = Localization.getLocalizedString('workspaceDownloadUrl');
                        message = Localization.getLocalizedString('horizonDesktopNotDetected', [workspaceDownloadUrl]);
                        break;
                    case 'XENAPP':
                    case "XENAPPDELIVERYGROUP":
                        var citrixReceiverDownloadUrl = Localization.getLocalizedString('citrixReceiverDownloadUrl');
                        var message = Localization.getLocalizedString('xenAppsReceiverNotDetected', [citrixReceiverDownloadUrl]);
                        break;
                }

                var template = isHubApp ? "app-v2/components/shared/clientAppDownloadDialog.html" : "app-v2/common/appLaunch/clientAppDownloadDialog.html";
                ModalService
                    .getCurrentModal()
                    .open(template, {title: title, app: app, message: message})
                    .then(function() {
                        appLaunchService.appInstalled(app);
                    });
            };

            appLaunchService.isAppNew = function(app) {
                return app.displayStatus === 'NEW';
            };

            appLaunchService.appInstalled = function(app) {
                switch (app.subType) {
                    case 'XENAPP':
                    case "XENAPPDELIVERYGROUP":
                        hznLocalStorage[UserAgent.hznCitrixReceiverInstalled] = "1";
                        break;
                    case 'THINAPP':
                        hznLocalStorage[UserAgent.hznHorizonWorkspaceInstalled] = "1";
                        break;
                    case 'APPV':
                        hznLocalStorage[UserAgent.hznHorizonWorkspaceInstalled] = "1";
                        break;
                    default:
                        break;
                }
                ModalService.getCurrentModal().close();
                //try to launch the app
                ClientRuntimeService.launchApp(app);
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

angular.module('com.vmware.greenbox.appCenter')
    .service('HorizonResourcesLaunchService', ['UserAgent',
        'Localization',
        'hznLocalStorage',
        'UtilService',
        '$timeout',
        'ConfigService',
        'ModalService',
        'LaunchUtilityService',
        'VirtualAppLaunchService',
        'HorizonResourcesLaunchUtilService',
        'ProgressIndicatorService',
        function(
            UserAgent,
            Localization,
            hznLocalStorage,
            UtilService,
            $timeout,
            ConfigService,
            ModalService,
            LaunchUtilityService,
            VirtualAppLaunchService,
            HorizonResourcesLaunchUtilService,
            ProgressIndicatorService) {
            'use strict';

            var horizonResourcesLaunchService = this;
            horizonResourcesLaunchService.PERSISTENT_PREFERRED_CLIENT = "HZN_LAUNCH_DESKTOP_PREFERRED_CLIENT";
            horizonResourcesLaunchService.CLIENT_BROWSER = "BROWSER";
            horizonResourcesLaunchService.CLIENT_NATIVE = "NATIVE";

            var isHubApp = UtilService.isHub();

            /**
             * Launch a view desktop.
             *
             * @param view {Object} app
             */

            horizonResourcesLaunchService.launchViewApp = function(viewResource) {
                var launchableClients = horizonResourcesLaunchService.getLaunchableClients(viewResource);
                var preferredClient = horizonResourcesLaunchService.getPreferredClient();

                //if preferredClient client not set, send use the defaultLaunchClient from backend
                var defaultLaunchClient = _.get(viewResource, 'optionalAppInfo.defaultLaunchClient', undefined);
                if (!preferredClient && defaultLaunchClient && defaultLaunchClient !== 'NONE') {
                    preferredClient = defaultLaunchClient;
                }
                //If user has no launch preference and if launch pref popup is disabled in Admin UI,
                //then set the preferred client to Native client.
                // So that we don't display the launch pref popup.
                // In case if the popup is not disabled, if there is no preferred client,
                // user can select the launch option between Client and Browser
                if (LaunchUtilityService.isSuppressLaunchDialog() && launchableClients.length > 1 && !preferredClient) {
                    preferredClient = horizonResourcesLaunchService.CLIENT_NATIVE;
                }
                //No other choices, launch by this client type.
                if (launchableClients.length === 1) {
                    if (launchableClients[0] === horizonResourcesLaunchService.CLIENT_NATIVE) {
                        horizonResourcesLaunchService.launchByViewClient(viewResource);
                    } else if (launchableClients[0] === horizonResourcesLaunchService.CLIENT_BROWSER) {
                        horizonResourcesLaunchService.launchByBrowser(viewResource);
                    }
                    return;
                }

                //If with more than 1 choice, check the preference.
                if (preferredClient === horizonResourcesLaunchService.CLIENT_NATIVE) {
                    horizonResourcesLaunchService.launchByViewClient(viewResource);
                    return;
                }

                if (preferredClient === horizonResourcesLaunchService.CLIENT_BROWSER) {
                    horizonResourcesLaunchService.launchByBrowser(viewResource);
                    return;
                }

                horizonResourcesLaunchService.showLaunchDesktopDialog(viewResource);
            };

            /**
             * Launch by view client
             *
             * @param viewResource  {Object} app
             */
            horizonResourcesLaunchService.launchByViewClient = function(viewResource) {
                if (horizonResourcesLaunchService.isHorizonViewClientInstalled() || LaunchUtilityService.isSuppressLaunchDialog()) {
                    horizonResourcesLaunchService.doLaunchByViewClient(viewResource);
                } else {
                    horizonResourcesLaunchService._showLaunchViewClientDialog(viewResource);
                }
            };

            /**
             * Launch by browser
             *
             * @param view {Object} app
             */
            horizonResourcesLaunchService.launchByBrowser = function(view) {
                VirtualAppLaunchService.launchByLaunchUrl(view, function(app, launchUrlResponse) {
                    VirtualAppLaunchService.launchResourceInBrowser(launchUrlResponse.applyAuthPolicy ? launchUrlResponse.accessPolicyUrl : launchUrlResponse.browserLaunchUrl);
                }, "BROWSER");
            };

            horizonResourcesLaunchService._showLaunchViewClientDialog = function(view) {
                var template = isHubApp ?
                    'app-v2/common/appLaunch/horizonResources/hubLaunchViewClientDialog.html' :
                    'app-v2/common/appLaunch/horizonResources/launchViewClientDialog.html';
                ModalService.getCurrentModal().open(template, {app: view});
            };

            /**
             * Launch with view client without checking if view client is installed.
             *
             * @param view {Object} app
             */
            horizonResourcesLaunchService.doLaunchByViewClient = function(view) {
                VirtualAppLaunchService.launchByLaunchUrl(view, function(app, launchUrls) {
                    horizonResourcesLaunchService.launchResourceInViewClient(launchUrls);
                }, "NATIVE");
            };

            horizonResourcesLaunchService.launchDesktoneApps = function(view) {
                var w = 500;
                var h = 500;
                var $this = this;
                var left = (screen.width / 2) - (w / 2);
                var top = (screen.height / 2) - (h / 2);
                var openAppWindow = window.open('about:blank', "AppLaunchWindow", 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left + ',modal=yes,alwaysRaised=yes');
                if (view.subType === "DESKTONEAPPLICATION" || view.subType === "VIEWAPP") {
                    openAppWindow.document.write(Localization.getLocalizedString('myapps.launch.msg.launching.application', [view.name]));
                } else {
                    openAppWindow.document.write(Localization.getLocalizedString('myapps.launch.msg.launching.desktop', [view.name]));
                }
                $timeout(function() {
                    openAppWindow.location.href = UtilService.appendQueryToUrl(view.launch, "p", $this.CLIENT_NATIVE);
                }, 2000);
            };

            horizonResourcesLaunchService.launchResourceInViewClient = function(urlResponse) {
                ProgressIndicatorService.hideProgressIndicator();
                if (urlResponse.applyAuthPolicy) {
                    VirtualAppLaunchService.launchResourceInBrowser(urlResponse.accessPolicyUrl);
                } else {
                    ConfigService.doNotRefreshCache = true;
                    //TODO: Why not use iframe based launch, try it if it works in all cases and browsers
                    window.location.href = urlResponse.nativeLaunchUrl;
                }
            };

            horizonResourcesLaunchService.isAppLaunchV2Supported = function(app) {
                var appLaunchUrlV2 = _.get(app, '_links.appLaunchUrlsV2.href', undefined);
                return angular.isString(appLaunchUrlV2);
            };

            horizonResourcesLaunchService.getLaunchLink = function(app) {
                return horizonResourcesLaunchService.isAppLaunchV2Supported(app) ? _.get(app, '_links.appLaunchUrlsV2.href', undefined) : _.get(app, '_links.appLaunchUrls.href');
            };

            horizonResourcesLaunchService.isLaunchableInBrowser = function(launchableClients) {
                return launchableClients.indexOf(horizonResourcesLaunchService.CLIENT_BROWSER) > -1;
            };

            horizonResourcesLaunchService.showLaunchDesktopDialog = function(view) {
                var template = isHubApp ?
                    'app-v2/common/appLaunch/horizonResources/hubLaunchDesktopDialog.html' :
                    'app-v2/common/appLaunch/horizonResources/launchDesktopDialog.html';
                ModalService.getCurrentModal().open(template, {app: view});
            };

            /**
             * Calculate the launchable clients supported on current browser.
             *
             * @param view {Object}
             * @private
             */
            horizonResourcesLaunchService.getLaunchableClients = function(view) {
                return HorizonResourcesLaunchUtilService.getLaunchableClients(view);
            };

            /**
             * Get user preferred client.
             *
             * @return {*}
             */
            horizonResourcesLaunchService.getPreferredClient = function() {
                return hznLocalStorage[horizonResourcesLaunchService.PERSISTENT_PREFERRED_CLIENT];
            };

            horizonResourcesLaunchService.setPreferredClient = function(clientType) {
                if (clientType === null) {
                    delete hznLocalStorage[horizonResourcesLaunchService.PERSISTENT_PREFERRED_CLIENT];
                } else {
                    hznLocalStorage[horizonResourcesLaunchService.PERSISTENT_PREFERRED_CLIENT] = clientType;
                }
            };

            horizonResourcesLaunchService.isClientLaunchable = function(view, clientType) {
                return HorizonResourcesLaunchUtilService.isClientLaunchable(view, clientType);
            };

            /**
             * Check if Horizon View client is installed by 1 of the following conditions:
             * * A mobile device on managed mode;
             * * Users confirmed View client was installed,
             *
             * @return boolean
             */
            horizonResourcesLaunchService.isHorizonViewClientInstalled = function() {
                return UserAgent.isHorizonViewClientMarkedAsInstalled();
            };

            horizonResourcesLaunchService.getDownloadLink = function() {
                if (UserAgent.isIOS()) {
                    return 'javascript:window.location="' + Localization.getLocalizedString('viewDownloadUrlIOS') + '";';
                } else if (UserAgent.isAndroid()) {
                    return Localization.getLocalizedString('viewDownloadUrlAndroid');
                } else {
                    return Localization.getLocalizedString('viewDownloadUrl');
                }
            };

            horizonResourcesLaunchService.isViewOptionSupported = function(app, clientType) {
                if (app.subType !== 'VIEWPOOL' && app.subType !== 'VIEWAPP' && app.subType !== 'DESKTONEDESKTOP' && app.subType !== 'DESKTONEAPPLICATION') {
                    return false;
                }
                return horizonResourcesLaunchService.isClientLaunchable(app, clientType);
            };
        }]);

(function(module) {
    'use strict';
    module.controller('ViewDesktopLaunchController', [
        '$scope',
        '$filter',
        '$sce',
        'hznLocalStorage',
        'UserAgent',
        'HorizonResourcesLaunchService',
        'ModalService',
        function($scope,
                  $filter,
                  $sce,
                  hznLocalStorage,
                  UserAgent,
                  HorizonResourcesLaunchService,
                  ModalService) {
            var vm = this;
            vm.byViewClientDescription = $sce.trustAsHtml($filter('i18n')('myapps.launch.view.preferredClient.byViewClient.description', HorizonResourcesLaunchService.getDownloadLink()));
            vm.preferredClient = HorizonResourcesLaunchService.getPreferredClient() || HorizonResourcesLaunchService.CLIENT_NATIVE;

        vm.launchByViewClient = function() {
            hznLocalStorage[UserAgent.hznViewClientInstalled] = "1";
            HorizonResourcesLaunchService.doLaunchByViewClient($scope.app);
                //popdown the dialog
            ModalService.getCurrentModal().close();
        };

        vm.launchByBrowser = function() {
            HorizonResourcesLaunchService.launchByBrowser($scope.app);
                //popdown the dialog
            ModalService.getCurrentModal().close();
            };

        vm.launchByPreference = function() {
            if (this.preferredClient === HorizonResourcesLaunchService.CLIENT_BROWSER) {
                this.launchByBrowser();
            } else {
                vm.launchByViewClient();
            }
            HorizonResourcesLaunchService.setPreferredClient(this.preferredClient);
        };

        vm.isClientPreferred = function(clientType) {
            return HorizonResourcesLaunchService.getPreferredClient() === clientType;
        };

        vm.showInstallViewClientMsg = function() {
            // Show install view client message when users select by Horizon View and View client is not
            // Installed.
            return this.preferredClient === HorizonResourcesLaunchService.CLIENT_NATIVE
                && !HorizonResourcesLaunchService.isHorizonViewClientInstalled();
        };
}]);
})(angular.module('com.vmware.greenbox.appCenter'));

angular.module('com.vmware.greenbox.appCenter')
    .service('HorizonResourcesLaunchUtilService', ['UserAgent',
        function(
            UserAgent) {
            'use strict';

            var horizonResourcesLaunchUtilService = this;
            /**
             * Calculate the launchable clients supported on current browser.
             *
             * @param view {Object}
             * @private
             */
            horizonResourcesLaunchUtilService.getLaunchableClients = function(view) {
                if (!view) {
                    return;
                }
                if (view._launchableClients) {
                    return view._launchableClients;
                }
                var launchableClients = [];
                //For IE9 or earlier, remove BLAST if it is there.
                // Remove BLAST for all mobile browsers except safari and IE (Edge browser)
                if (!UserAgent.isViewHTMLAccessSupportedBrowser()) {
                    view._launchableClients = removeBlastFromLaunchableClients(view);
                } else {
                    if (view.optionalAppInfo.clientTypes) {
                        view._launchableClients = view.optionalAppInfo.clientTypes;
                    }
                    if (view.optionalAppInfo.supportedPoolProtocols) {
                        view._launchableClients = getLaunchableClientsFromSupportedPoolProtocols(view);
                    }
                }
                return view._launchableClients;
            };

            function getLaunchableClientsFromSupportedPoolProtocols(view) {
                var launchableClients = [];
                if (view.optionalAppInfo.supportedPoolProtocols) {
                    for (var i = 0; i < view.optionalAppInfo.supportedPoolProtocols.length; i++) {
                        if (view.optionalAppInfo.supportedPoolProtocols[i] === "PCOIP" || view.optionalAppInfo.supportedPoolProtocols[i] === "NATIVE") {
                            launchableClients.push("NATIVE");
                        }
                        if (view.optionalAppInfo.supportedPoolProtocols[i] === "BLAST" || view.optionalAppInfo.supportedPoolProtocols[i] === "BROWSER") {
                            launchableClients.push("BROWSER");
                        }
                    }
                }
                return launchableClients;
            }

            function removeBlastFromLaunchableClients(view) {
                var launchableClients = [];
                var clients = view.optionalAppInfo.clientTypes;
                if (!clients) {
                    clients = getLaunchableClientsFromSupportedPoolProtocols(view);
                }
                angular.forEach(clients, function(client) {
                    if (client !== 'BROWSER') {
                        this.push(client);
                    }
                }, launchableClients);
                return launchableClients;
            }

            horizonResourcesLaunchUtilService.isClientLaunchable = function(view, clientType) {
                var launchableClients = horizonResourcesLaunchUtilService.getLaunchableClients(view);
                var isLaunchable = false;
                angular.forEach(launchableClients, function(launchableClient) {
                    if (launchableClient == clientType) {
                        isLaunchable = true;
                    }
                });

                return isLaunchable;
            };
        }]);

(function(module) {
    'use strict';
    module.controller('LaunchPasswordController', [
        '$scope',
        'UserAgent',
        'VirtualAppLaunchService',
        'SettingsService',
        'ModalService',
        'ProgressIndicatorService',
        function($scope,
                  UserAgent,
                  VirtualAppLaunchService,
                  SettingsService,
                  ModalService,
                  ProgressIndicatorService) {
        var currentUser = SettingsService.getCurrentUser();
        var vm = this;
        vm.pwd = "";
        vm.userName = "";
        vm.errMsg = "";
        if (currentUser) {
            vm.userName = currentUser.userName;
        }
        var getUrls = function() {
            ProgressIndicatorService.showProgressIndicator();
            VirtualAppLaunchService.getLaunchUrls($scope.app, vm.pwd, _.get($scope, "$modalOptions.preferredClient")).then(function(launchUrls) {
                ProgressIndicatorService.hideProgressIndicator();
                if (launchUrls) {
                    ModalService.getCurrentModal().close(launchUrls);
                }
            }, function(error) {
                ProgressIndicatorService.hideProgressIndicator();
                vm.errMsg = error.data.message;
            });
        };
        vm.getLaunchUrls = function() {
            getUrls();
        };

        vm.handleEnter = function(keyEvent) {
            ProgressIndicatorService.hideProgressIndicator();
            if (keyEvent.which === 13) {
                getUrls();
            }
        };

        vm.handleCancel = function() {
            ProgressIndicatorService.hideProgressIndicator();
            ModalService.getCurrentModal().cancel();
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.service('LaunchUtilityService', [
        'RequestFactory',
        'Resource',
        'ConfigService',
        function(RequestFactory,
                 Resource,
                 ConfigService) {
            var launchUtilityService = this;

            var shouldSuppressLaunchDialog;
            var useNonNPAPIForCitrixLaunch;

            launchUtilityService.setSuppressLaunchDialog = function(shouldSuppressLaunchDialog) {
                this.shouldSuppressLaunchDialog = shouldSuppressLaunchDialog;
            };
            launchUtilityService.isSuppressLaunchDialog = function() {
                return this.shouldSuppressLaunchDialog;
            };

            launchUtilityService.setUseNonNPAPIForCitrixLaunch = function(useNonNPAPIForCitrixLaunch) {
                this.useNonNPAPIForCitrixLaunch = useNonNPAPIForCitrixLaunch;
            };
            launchUtilityService.isUseNonNPAPIForCitrixLaunch = function() {
                return this.useNonNPAPIForCitrixLaunch;
            };

            launchUtilityService.getOta = function(url) {
                return ConfigService.getOtaUrl().then(function(otaUrl) {
                    var req = Resource(otaUrl + '?url=' + url, { method: 'GET', Accept: 'application/json' });
                    return req.get().then(function(otaResponse) {
                        return otaResponse.ota;
                    });
                });
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.controller('InstallPasswordVaultExtensionController', [
                            '$scope',
                            '$filter',
                            '$sce',
                            'hznLocalStorage',
                            'UserAgent',
                            'PasswordVaultAppLaunchService',
                            'PasswordVaultService',
                            'ModalService',
                            function(
                                $scope,
                                $filter,
                                $sce,
                                hznLocalStorage,
                                UserAgent,
                                PasswordVaultAppLaunchService,
                                PasswordVaultService,
                                ModalService) {
        var vm = this;

        vm.extensionDescription = $sce.trustAsHtml($filter('i18n')('myapps.launch.passwordvault.installExtension.description', PasswordVaultService.getPVExtensionDownloadUrl()));

        vm.openApp = function() {
            hznLocalStorage[UserAgent.passwordVaultExtensionInstalled] = "1";
            PasswordVaultAppLaunchService.openApp($scope.app);
            //popdown the dialog
            ModalService.getCurrentModal().close();
        };
     }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.service('PasswordVaultAppLaunchService', [
                                    'ProgressIndicatorService',
                                    'UserAgent',
                                    'ConfigService',
                                    'LaunchUtilityService',
                                    'PasswordVaultService',
                                    'ModalService',
                                    function(
                                        ProgressIndicatorService,
                                        UserAgent,
                                        ConfigService,
                                        LaunchUtilityService,
                                        PasswordVaultService,
                                        ModalService) {
            var pvAppLaunchService = this;
            pvAppLaunchService.checkForPVExtension = UserAgent.isPasswordVaultPluginSupportedBrowser();

            pvAppLaunchService.launchPVApp = function(app) {
                if (pvAppLaunchService.checkForPVExtension && !UserAgent.isPVExtensionMarkedAsInstalled()) {
                    ProgressIndicatorService.showProgressIndicator();
                    PasswordVaultService.pingExtension().then(function(extentionDetected) {
                        ProgressIndicatorService.hideProgressIndicator();
                        if (extentionDetected == true || LaunchUtilityService.isSuppressLaunchDialog()) {
                            pvAppLaunchService.openApp(app);
                        } else if (PasswordVaultService.getPVExtensionDownloadUrl() != '') {
                            showPasswordVaultExtensionDownloadDialog(app);
                        } else {
                            pvAppLaunchService.openApp(app);
                        }
                    });
                } else {
                    pvAppLaunchService.openApp(app);
                }
            };

            pvAppLaunchService.openApp = function(app) {
                openAppInNewWindow(app);
            };

            function showPasswordVaultExtensionDownloadDialog(app) {
                ModalService.getCurrentModal().open('app-v2/common/appLaunch/passwordvault/installPasswordVaultExtensionDialog.html', { app: app });
            }

            function openAppInNewWindow(app) {
                window.open(app.launch);
            }
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

angular.module('com.vmware.greenbox.appCenter')
       .service('VirtualAppLaunchService', ['UserAgent',
                                         'hznLocalStorage',
                                         '$http',
                                         'RequestFactory',
                                         'UtilService',
                                         'ModalService',
                                         'LaunchUtilityService',
                                         'HorizonResourcesLaunchUtilService',
                                         'ProgressIndicatorService',
                                         function(
                                             UserAgent,
                                             hznLocalStorage,
                                             $http,
                                             RequestFactory,
                                             UtilService,
                                             ModalService,
                                             LaunchUtilityService,
                                             HorizonResourcesLaunchUtilService,
                                             ProgressIndicatorService) {
    'use strict';

    this.CLIENT_BROWSER = "BROWSER";
    this.VIEW_APP_TYPES = ["VIEWPOOL", "VIEWAPP"];
    this.XEN_APP_TYPES = ["XENAPP", "XENAPPDELIVERYGROUP"];
    this.DESKTONE_APP_TYPES = ["DESKTONEDESKTOP", "DESKTONEAPPLICATION"];
    this.URL_TEMPLATE_REGEXP = /{\?(.*)}/;

    this.launchByLaunchUrl = function(app, launchHandler, preferredClient) {
        ProgressIndicatorService.showProgressIndicator();
        app.useNonNPAPIForCitrixLaunch = LaunchUtilityService.isUseNonNPAPIForCitrixLaunch();

        // HW-61576 : browser tab is not brought to front while launching 2nd desktop/apps from workspace
        // open/reopen new tab before going into the promise async code
        // otherwise, already open tab will not get focus.
        // this will only work for chrome, because firefox does not allow focusing of tab.
        var appLaunchWindow;
        // HW-72964 - suppress this logic for all other browsers other than chrome
        if (preferredClient === this.CLIENT_BROWSER && UserAgent.isChrome()) {
            appLaunchWindow = window.open('about:blank', 'AppLaunchWindow');
        }
        this.getLaunchUrls(app, undefined, preferredClient).then(function(launchUrls) {
            if (launchUrls) {
                launchHandler.bind(this)(app, launchUrls);
            } else if (appLaunchWindow) {
                appLaunchWindow.close();
            }
        }.bind(this), function(error) {
            ProgressIndicatorService.hideProgressIndicator();
            if (_.get(error, "data.code") === 'appLaunch.passwordNotFound.error') {
                if (appLaunchWindow) {
                    appLaunchWindow.close();
                }
                this.showPasswordDialog(app, preferredClient).then(function(launchUrls) {
                    if (launchUrls) {
                        launchHandler.bind(this)(app, launchUrls);
                    }
                }.bind(this));
            } else {
                if (appLaunchWindow) {
                    appLaunchWindow.close();
                }
                ModalService.getCurrentModal().alert({
                    title: 'requestFailed',
                    message: error.data.message,
                    ok: 'ok'
                });
            }
        }.bind(this));
    };

    this.isAppLaunchV2Supported = function(app) {
        var appLaunchUrlV2 = _.get(app, '_links.appLaunchUrlsV2.href', undefined);
        return angular.isString(appLaunchUrlV2);
    };

    this.getLaunchLink = function(app) {
        return this.isAppLaunchV2Supported(app) ? _.get(app, '_links.appLaunchUrlsV2.href', undefined) : _.get(app, '_links.appLaunchUrls.href');
    };

    this.getLaunchUrls = function(app, pwd, preferredClient) {
        if (app) {
            var isV2 = this.isAppLaunchV2Supported(app);
            var appLaunchUrls = this.getLaunchLink(app);
            var params = {};
            if (pwd) {
                params = {"userPassword": pwd};
            }
            var req = RequestFactory(appLaunchUrls, {
                method: 'PUT',
                headers: {
                    Accept: 'application/hal+json',
                    'Content-Type': 'application/hal+json'
                },
                data: params
            });
            return $http(req).then(isV2 ?
                function(launchUrlResponse) {
                    return transformLaunchUrlResponseV2.bind(this)(app, launchUrlResponse, preferredClient);
                }.bind(this) :
                function(launchUrlResponse) {
                    return transformLauncUrlResponse.bind(this)(app, launchUrlResponse, preferredClient);
                }.bind(this));
        }
    };

     this.launchResourceInBrowser = function(finalLaunchUrl) {
         ProgressIndicatorService.hideProgressIndicator();
         if (UserAgent.isSafari()) {
             //Safari sucks..window.open will not do any thing if it is called from iframe.
             // Every method is tried. But we can cheat Safari to realize the same effect.
             this.doLaunchByBrowserViaLink(finalLaunchUrl, "AppLaunchByBrowserWindow");
         } else {
             this.doLaunchByBrowser(finalLaunchUrl, "AppLaunchByBrowserWindow");
         }
     };

     /**
      * Launch View desktop by browser via a temporary link.  It is useful in 2 ways:
      * ++ For some browser, like Safari, window.open does nothing if it is called from iFrame.
      * ++ window.open is restricted by pop-up blocker, but a link is not
      *
      * @param finalLaunchUrl {String}, the final launch Url
      */
     this.doLaunchByBrowserViaLink = function(finalLaunchUrl, windowName) {
         /*NOTE: this will not work in iOS mobile safari
          iOS safari considers window.open inside a JS callback e.g. Ajax or setTimeout call back as pop-up window
          hence, it blocks it silently
          Workaround is to turn off the popup blocker in iOS for safari
          or use iOS chrome, where it works fine.
          */

         // Force to open new window for every launch, otherwise, mobile safari
         // will silently load the previously opened window instead of switching user to
         // newly created window.

         var a = document.createElement('a');
         a.setAttribute("href", finalLaunchUrl);
         a.setAttribute("target", "_blank");
         //a.setAttribute("id", (Math.random() * 10000)+"");

         var dispatch = document.createEvent("HTMLEvents");
         dispatch.initEvent("click", true, true);
         a.dispatchEvent(dispatch);
     };

     this.doLaunchByBrowser = function(launchUrlOrApp) {
         if (angular.isString(launchUrlOrApp)) {
             window.open(launchUrlOrApp, "AppLaunchWindow");
         } else {
             window.open(UtilService.appendQueryToUrl(launchUrlOrApp.launch, "p", this.CLIENT_BROWSER), "AppLaunchWindow");
         }
     };

    this.isViewApp = function(appOrAppTypeStr) {
        return this.checkAppType(this.VIEW_APP_TYPES, appOrAppTypeStr);
    };

    this.isDesktoneApp = function(appOrAppTypeStr) {
        return this.checkAppType(this.DESKTONE_APP_TYPES, appOrAppTypeStr);
    };

    this.isXenApp = function(appOrAppTypeStr) {
        return this.checkAppType(this.XEN_APP_TYPES, appOrAppTypeStr);
    };

    this.checkAppType = function(appTypeArr, appOrAppTypeStr) {
        var givenAppType = appOrAppTypeStr.subType || appOrAppTypeStr;
        return appTypeArr.map(function(appType) {
            return appType.toLowerCase();
        }).filter(function(appType) {
            return appType === givenAppType.toLowerCase();
        }).length > 0;
     };

    function transformLauncUrlResponse(app, launchUrlResponse) {
        if (launchUrlResponse) {
            return {
                applyAuthPolicy: !!launchUrlResponse.data.launchUrls.ACCESS_POLICY,
                browserLaunchUrl: launchUrlResponse.data.launchUrls.BROWSER,
                nativeLaunchUrl: launchUrlResponse.data.launchUrls.NATIVE,
                accessPolicyUrl: launchUrlResponse.data.launchUrls.ACCESS_POLICY
            };
        }
    }

    function transformLaunchUrlResponseV2(app, launchUrlResponse, preferredClient) {
        if (launchUrlResponse) {
            var resourceType = _.get(launchUrlResponse, 'data.response.resourceType');
            var launchUrls = _.get(launchUrlResponse, 'data.response.launchURLs');
            if (this.isXenApp(resourceType) && angular.isArray(launchUrls)) {
                return transformedResponseForXenApp.bind(this)(app, launchUrls, preferredClient);
            } else if (this.isViewApp(resourceType) && angular.isArray(launchUrls)) {
                return transformedResponseForViewApp.bind(this)(app, launchUrls, preferredClient);
           } else if (this.isDesktoneApp(resourceType) && angular.isArray(launchUrls)) {
                return transformedResponseForViewApp.bind(this)(app, launchUrls, preferredClient);
            }
        }
    }

     function buildAuthPolicyUrl(launchURLs, queryParamConfig) {
         return launchURLs.filter(function(launchURL) {
                 return launchURL.urlHandler === "BROWSER_ANY" &&
                     launchURL.launchContext === "URL_TEMPLATE";
             })
             .map(function(launchURL) {
                 return angular.extend({
                     urlTemplate: launchURL.url,
                     queryParams: launchURL.queryParams
                 }, queryParamConfig);
             }).map(processUrlTemplate.bind(this))[0];
     }

     function processUrlTemplate(urlTemplateCtx) {
         if (!angular.isString(urlTemplateCtx.urlTemplate)) {
             return;
         }
         var processedUrl = urlTemplateCtx.urlTemplate;
         var urlTemplateQueryParams = urlTemplateCtx.urlTemplate.match(this.URL_TEMPLATE_REGEXP);
         if (urlTemplateQueryParams && urlTemplateQueryParams.length > 1) {
             var queryStr = urlTemplateQueryParams[1].split(',')
                 .map(function(queryParam) {
                     var queryParamVal = _.get(urlTemplateCtx, "queryParams." + queryParam);
                     if (queryParamVal) {
                         if (angular.isString(queryParamVal)) {
                             var isUrlTemplate = queryParamVal.match(this.URL_TEMPLATE_REGEXP);
                             if (isUrlTemplate && isUrlTemplate.length > 1) {
                                 queryParamVal = processUrlTemplate.bind(this)({
                                     urlTemplate: queryParamVal,
                                     queryParams: urlTemplateCtx.queryParams,
                                     queryParamConfig: urlTemplateCtx.queryParamConfig
                                 });
                             }
                         }
                         var queryParamMatcher = _.get(urlTemplateCtx, "queryParamConfig." + queryParam + ".queryParamMatcher", undefined);
                         if (queryParamMatcher) {
                             queryParamVal = queryParamMatcher.bind(this)(queryParam, queryParamVal);
                         }
                         return queryParam + '=' + encodeURIComponent(queryParamVal);
                     }
                 }.bind(this))
                 .join("&");

             if (queryStr) {
                 processedUrl = urlTemplateCtx.urlTemplate.replace(this.URL_TEMPLATE_REGEXP, "?" + queryStr);
             }
         }
         return processedUrl;
     }

    function transformedResponseForXenApp(app, launchUrls) {
        var transformedLaunchUrlResponse;
        if (isAccessPolicyUrl(launchUrls)) {
            transformedLaunchUrlResponse = {
                    accessPolicyUrl: buildAuthPolicyUrl.bind(this)(launchUrls, _.set({}, "queryParamConfig.NPAPISupported.queryParamMatcher", function() {
                        if (UserAgent.isNPAPISupportedBrowser() && app.useNonNPAPIForCitrixLaunch) {
                            return "true";
                        } else {
                            return "false";
                        }
                    }))
            };
            if (angular.isString(transformedLaunchUrlResponse.accessPolicyUrl)) {
                transformedLaunchUrlResponse.applyAuthPolicy = true;
            }
            return transformedLaunchUrlResponse;
        } else {
            transformedLaunchUrlResponse = {
                applyAuthPolicy: false,
                browserLaunchUrl: launchUrls.filter(function(launchURL) {
                    return launchURL.urlHandler === "BROWSER_NPAPI_SUPPORTED" &&
                        launchURL.launchContext === "URL_FILE_DOWNLOAD";
                }).map(function(launchURL) {
                    return launchURL.url;
                })[0],
                nativeLaunchUrl: launchUrls.filter(function(launchURL) {
                    return launchURL.urlHandler === "CITRIX_RECEIVER" &&
                        launchURL.launchContext === "URL_FILE_DOWNLOAD";
                }).map(function(launchURL) {
                    return launchURL.url;
                })[0]
            };
            return transformedLaunchUrlResponse;
        }
    }

    function transformedResponseForViewApp(app, launchUrls, preferredClient) {
        var transformedLaunchUrlResponse;
        if (isAccessPolicyUrl(launchUrls)) {
            transformedLaunchUrlResponse = {
                accessPolicyUrl: buildAuthPolicyUrl.bind(this)(launchUrls, _.set({}, "queryParamConfig.clientType.queryParamMatcher", function() {
                    if (HorizonResourcesLaunchUtilService.isClientLaunchable.bind(this)(app, preferredClient)) {
                        return preferredClient;
                    } else {
                        return "NATIVE";
                    }
                }))
            };
            if (angular.isString(transformedLaunchUrlResponse.accessPolicyUrl)) {
                transformedLaunchUrlResponse.applyAuthPolicy = true;
            }
            return transformedLaunchUrlResponse;
        } else {
            transformedLaunchUrlResponse = {
                applyAuthPolicy: false,
                browserLaunchUrl: launchUrls.filter(function(launchURL) {
                    return launchURL.urlHandler === "BROWSER_ANY" &&
                        launchURL.launchContext === "URL_LAUNCHABLE";
                }).map(function(launchURL) {
                    return launchURL.url;
                })[0],
                nativeLaunchUrl: launchUrls.filter(function(launchURL) {
                    return launchURL.urlHandler === "HORIZON_VIEW" &&
                        launchURL.launchContext === "URL_LAUNCHABLE";
                }).map(function(launchURL) {
                    return launchURL.url;
                })[0]
            };
            return transformedLaunchUrlResponse;
        }
    }

    function isAccessPolicyUrl(launchUrls) {
        if (launchUrls && launchUrls.length === 1 && launchUrls[0].launchContext === "URL_TEMPLATE") {
            return true;
        }
    }

    this.showPasswordDialog = function(view, preferredClient) {
        var isHubApp = UtilService.isHub();
        var template = isHubApp ? 'app-v2/components/shared/launchPasswordDialog.html' : 'app-v2/common/appLaunch/launchPasswordDialog.html';
        return ModalService.getCurrentModal().open(template, {app: view, preferredClient: preferredClient});
    };
}]);

angular.module('com.vmware.greenbox.appCenter')
       .service('XenappLaunchService', ['UserAgent',
                                         'UtilService',
                                         'VirtualAppLaunchService',
                                         'ProgressIndicatorService',
                                         function(
                                             UserAgent,
                                             UtilService,
                                             VirtualAppLaunchService,
                                             ProgressIndicatorService) {
    'use strict';

    this.XEN_APP_TYPES = ["XENAPP", "XENAPPDELIVERYGROUP"];
    this.URL_TEMPLATE_REGEXP = /{\?(.*)}/;

    this.launchXenApp = function(xenApp) {
        VirtualAppLaunchService.launchByLaunchUrl(xenApp, function(xenApp, launchUrls) {
            if (launchUrls.applyAuthPolicy) {
                VirtualAppLaunchService.launchResourceInBrowser(launchUrls.accessPolicyUrl);
            } else if (!UserAgent.isAWJade() && UserAgent.isMobile()) {
                VirtualAppLaunchService.launchResourceInBrowser(launchUrls.browserLaunchUrl);
            } else if (UserAgent.isNPAPISupportedBrowser() || !xenApp.useNonNPAPIForCitrixLaunch) {
                UtilService.openURIScheme(launchUrls.browserLaunchUrl);
            } else {
                UtilService.openURIScheme(launchUrls.nativeLaunchUrl);
            }
            ProgressIndicatorService.hideProgressIndicator();
        });
    };
}]);

// (c) 2016 VMware, Inc.  All rights reserved.

(function(module) {
    'use strict';
    module.controller('ChangePasswordController', ['ConfigService', '$scope', '$filter', '$notify', 'SettingsService', 'PasswordPolicyService', 'ClientRuntimeService', 'ProgressIndicatorService', 'UtilService',
        function(ConfigService, $scope, $filter, $notify, SettingsService, PasswordPolicyService, ClientRuntimeService, ProgressIndicatorService, UtilService) {
            var vm = this, regex;

            vm.showPasswordForm = false;
            vm.userInfo = SettingsService.getCurrentUser();
            vm.policies = PasswordPolicyService.getPasswordPolicy() || null;
            vm.errorMessage = "";
            vm.showCurrentPassword = false;
            vm.showNewPassword1 = false;
            vm.showNewPassword2 = false;
            vm.currentInputType = "password";
            vm.newInputType1 = "password";
            vm.newInputType2 = "password";
            vm.isLoading = false;

            function resetForm() {
                vm.currentPassword = "";
                vm.newPassword = "";
                vm.confirmNewPassword = "";
                vm.showErrors = false;
                vm.errorMessage = "";
            }

            function getPasswordPolicy() {
                showLoading();
                ConfigService.getPasswordPolicy().then(function(passwordPolicy) {
                    passwordPolicy.get().then(function(policies) {
                        hideLoading();
                        PasswordPolicyService.setPasswordPolicy(policies);
                        vm.policies = policies;
                        vm.showPasswordForm = true;
                        displayPasswordPolicy();
                    }, function() {
                        hideLoading();
                    });
                });
            }

            function displayPasswordPolicy() {
                var regexString = "", policyString = "", nextNode;
                vm.minLength = 0;
                if (vm.policies.minLen) {
                    nextNode = vm.policies.minLower || vm.policies.minUpper || vm.policies.minDigit || vm.policies.minSpecial;
                    policyString += $filter('i18n')('app.passwordPolicy.minLength', vm.policies.minLen) + (nextNode ? ",&nbsp;" + $filter('i18n')('app.passwordPolicy.leastIncludes') + "&nbsp;" : "");
                }
                if (vm.policies.minLower) {
                    nextNode = vm.policies.minUpper || vm.policies.minDigit || vm.policies.minSpecial;
                    policyString += $filter('i18n')('app.passwordPolicy.minLower', vm.policies.minLower) + (nextNode ? ",&nbsp;" : ".");
                    regexString += "(?=(.*[a-z]){" + vm.policies.minLower + "})";
                }
                if (vm.policies.minUpper) {
                    nextNode = vm.policies.minDigit || vm.policies.minSpecial;
                    policyString += (nextNode ? "" : $filter('i18n')('and') + "&nbsp;") + $filter('i18n')('app.passwordPolicy.minUpper', vm.policies.minUpper) + (nextNode ? ",&nbsp;" : ".");
                    regexString += "(?=(.*[A-Z]){" + vm.policies.minUpper + "})";
                }
                if (vm.policies.minDigit) {
                    nextNode = vm.policies.minSpecial;
                    policyString += (nextNode ? "" : $filter('i18n')('and') + "&nbsp;") + $filter('i18n')('app.passwordPolicy.minDigit', vm.policies.minDigit) + (nextNode ? "&nbsp;" : ".");
                    regexString += "(?=(.*[0-9]){" + vm.policies.minDigit + "})";
                }
                if (vm.policies.minSpecial) {
                    policyString += $filter('i18n')('and') + "&nbsp;" + $filter('i18n')('app.passwordPolicy.minSpecial', vm.policies.minSpecial) + ".";
                }
                if (vm.policies.minLen) {
                    if (vm.policies.minLower || vm.policies.minUpper || vm.policies.minDigit || vm.policies.minSpecial) {
                        regexString += "{" + vm.policies.minLen + ",}";
                    } else {
                        regexString += ".{" + vm.policies.minLen + ",}";
                    }
                }
                vm.policyString = policyString;
                regex = new RegExp(regexString);
            }

            function validateForm() {
                vm.showErrors = false;
                vm.errorMessage = "";
                if (vm.newPassword !== vm.confirmNewPassword) {
                    vm.errorMessage = $filter('i18n')('app.changePassword.error.passwordsNoMatch');
                    return;
                } else {
                    vm.errorMessage = "";
                }
                if (regex && !regex.test(vm.newPassword)) {
                    vm.errorMessage = $filter('i18n')('app.changePassword.error.requirementsNoMatch');
                    return;
                }
                return true;
            }

            function showLoading() {
                if (UtilService.isHubBrowsers()) {
                    vm.isLoading = true;
                } else {
                    ProgressIndicatorService.showProgressIndicator();
                }
            }

            function hideLoading() {
                if (UtilService.isHubBrowsers()) {
                    vm.isLoading = false;
                } else {
                    ProgressIndicatorService.hideProgressIndicator();
                }
            }

            function toggleInputType(bool) {
                if (bool) {
                    return "text";
                } else {
                    return "password";
                }
            }

            vm.nativeClose = function() {
                ClientRuntimeService.closePassword();
            };

            vm.togglePassword = function(value) {
                switch (value) {
                    case "current":
                        vm.showCurrentPassword = !vm.showCurrentPassword;
                        vm.currentInputType = toggleInputType(vm.showCurrentPassword);
                        break;
                    case "new1":
                        vm.showNewPassword1 = !vm.showNewPassword1;
                        vm.newInputType1 = toggleInputType(vm.showNewPassword1);
                        break;
                    case "new2":
                        vm.showNewPassword2 = !vm.showNewPassword2;
                        vm.newInputType2 = toggleInputType(vm.showNewPassword2);
                }
            };

            vm.closePasswordForm = function($event) {
                if ($event) {
                    $event.stopPropagation();
                }
                if ($scope.$modal.close) {
                    $scope.$modal.close(true);
                }
                resetForm();
            };

            vm.changePasswordConfirm = function($event) {
                showLoading();
                if ($event) {
                    $event.stopPropagation();
                }
                if (!validateForm()) {
                    hideLoading();
                    return;
                }
                var passwordChangeRequest = {}, challengesObj = {};
                passwordChangeRequest.oldPassword = vm.currentPassword;
                passwordChangeRequest.newPassword = vm.newPassword;
                passwordChangeRequest.challenges = [];
                challengesObj.type = "CurrentPassword";
                challengesObj.response = vm.currentPassword;
                passwordChangeRequest.challenges.push(challengesObj);
                ConfigService.changePassword(passwordChangeRequest).then(function() {
                    hideLoading();
                    $notify.success('app.changePassword.success');
                    vm.closePasswordForm();
                }, function(response) {
                    hideLoading();
                    if (response.status === 400) {
                        vm.showErrors = true;
                        vm.errorMessages = response.data.errors;
                    }
                });
            };

            if (vm.userInfo.localUser) {
                if (vm.policies) {
                    displayPasswordPolicy();
                    resetForm();
                } else {
                    getPasswordPolicy();
                }
            }
        }
    ]);
})(angular.module("com.vmware.greenbox.appCenter"));


// (c) 2016 VMware, Inc.  All rights reserved.
(function(module) {
    'use strict';
    var JADE_SCHEME = "awjade://";
    var HORIZON_SCHEME = 'vmwhorizon://';
    var V2_HANDLER = 'notify?action=';
    var AW_JADE_V2_BASE_URI = JADE_SCHEME + V2_HANDLER;
    var HORIZON_PREFIX = HORIZON_SCHEME + V2_HANDLER;

    module.constant('JadeV1Scheme', {
        ABOUT: JADE_SCHEME + "about",
        LOGOUT: JADE_SCHEME + "logout?code=0",
        SERVER_LOGOUT: JADE_SCHEME + "logout?code=2",
        APP_LAUNCH: JADE_SCHEME + "redirect?url="
    });

    module.constant('JadeV2Scheme', {
        JADE_SCHEME: JADE_SCHEME,
        ABOUT: AW_JADE_V2_BASE_URI + "ABOUT",
        NOTIFICATION_SETTINGS: AW_JADE_V2_BASE_URI + "NOTIFICATION_SETTINGS",
        LOGOUT_POPUP: AW_JADE_V2_BASE_URI + "LOGOUT&code=0",
        LOGOUT_NO_POPUP: AW_JADE_V2_BASE_URI + "LOGOUT&code=0&popup=none",
        LOGOUT_HUB: AW_JADE_V2_BASE_URI + "LOGOUT&code=3",
        SERVER_LOGOUT: AW_JADE_V2_BASE_URI + "LOGOUT&code=2",
        REFRESH_COOKIE: AW_JADE_V2_BASE_URI + "LOGOUT&code=1",
        APP_LAUNCH: AW_JADE_V2_BASE_URI + "REDIRECT",
        MDM_ENROLL: AW_JADE_V2_BASE_URI + "MDM_ENROLL",
        CONTAINER_ENROLL: AW_JADE_V2_BASE_URI + "CONTAINER_ENROLL",
        MDM_UNENROLL: AW_JADE_V2_BASE_URI + "MDM_UNENROLL",
        OPEN_URL: AW_JADE_V2_BASE_URI + "OPEN",
        INSTALL_APP: AW_JADE_V2_BASE_URI + "INSTALL_APP",
        LAUNCH_NATIVE_NOTIFICATION_TRAY: AW_JADE_V2_BASE_URI + "LAUNCH_NATIVE_NOTIFICATION_TRAY",
        LAUNCH_NATIVE_APP_DETAILS: AW_JADE_V2_BASE_URI + "LAUNCH_NATIVE_APP_DETAILS&appId=",
        MAILTO_SCHEME: 'mailto:',
        TEL_SCHEME: 'tel:',
        SMS_SCHEME: 'sms:',
        GEO_SCHEME: 'geo:',
        ACCOUNT_PAGE: AW_JADE_V2_BASE_URI + 'ACCOUNT_PAGE',
        PASSWORD_CLOSE: AW_JADE_V2_BASE_URI + 'PASSWORD_CLOSE',
        AVATAR_RENDERED: AW_JADE_V2_BASE_URI + 'AVATAR_RENDERED',
        CONTENT_LOADED: AW_JADE_V2_BASE_URI + 'CONTENT_LOADED',
        UCC_REFRESH: AW_JADE_V2_BASE_URI + 'UCC_REFRESH'
    });

    module.constant('HorizonClientScheme', {
        SAAS_LAUNCH: HORIZON_PREFIX + "REDIRECT",
        VIEW_LAUNCH: HORIZON_PREFIX + "LAUNCH_HORIZON",
        XENAPP_LAUNCH: HORIZON_PREFIX + 'LAUNCH_XENAPP',
        ABOUT: HORIZON_PREFIX + "ABOUT",
        LOGOUT: HORIZON_PREFIX + "LOGOUT",
        LOGIN_DONE: HORIZON_PREFIX + "LOGIN_DONE",
        USERINFO: HORIZON_PREFIX + 'USER_INFO',
        GB_API: HORIZON_PREFIX + 'API'
    });
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.constant('Events', {
        MDM_ENROLLED: 'MDM_ENROLLED',
        INSTALL: 'INSTALL'
    });
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.constant('LocalStorageConstants', {
        TIMESTAMP: "timeStamp",
        ENTITLEMENTS: "Entitlements",
        NEW_APP: "new-apps",
        RECOMMENDED_APPS: "recommended-apps",
        BOOTSTRAP: "Bootstrap",
        BOOKMARKS: "Bookmarks",
        PEOPLE_PEER_DETAILS: "people-peer-details",
        PEOPLE_DIRECTS_DETAILS: "people-directs-details",
        ENTITLEMENTS_CATEGORIES: "Entitlements-Categories",
        DEVICE_ENROLLMENT_STATUS: "Device-Enrollment-Status",
        DEVICE_MGMT_STATUS: "Device-Mgmt-Status",
        HUB_BRANDING: 'hub-branding',
        MF_REGISTRATION: 'mf-registration',
        DEVICE_STEPUP_STATUS: "Device-Stepup-Status",
        TIMEOUT: 86400000 //24 hours
    });
})(angular.module('com.vmware.greenbox.appCenter'));

/*
 * contextdialogDirective - Selectively set a context menu for an element, render the context menu at proper position
 * on right click and dismiss the context menu when click/right click event happens at other places.
 *
 * In a repeater, different context menu could be set for different type of model item.
 *
 * @restrict attribute
 *
 * Example:
 * <div contextdialog="{uris:{templateRef1:boolean expression1, templateRef2:boolean expression2} , scope:{app:app}}"
 * templateRef1="/SAAS/horizon/portal/launcher/desktop/launcherContextmenu.html"></div>
 *
 * uris object: templateRef1 specifies the templateUrl that will be shown as context menu.
 * scope object: contains the variables that we want to pass to context menu scope.
 */

(function(module) {
    'use strict';
    module.directive("contextdialog", ['$compile', '$timeout', '$rootScope', "$templateCache", "$http", "UserAgent", "$window", function($compile, $timeout, $rootScope, $templateCache, $http, UserAgent, $window) {
        /**
         * Private method to select context menu element.
         * Define here for not polluting the paradigm to define a directive.
         *
         * @param scope
         * @param attrs
         * @param uris Object that contains URIs of context menu elements.
         * @private
         */
        var templateLoaded = {};
        var closeMenu;
        var contextEvents;
        var _prepareContextdialog = function(scope, attrs, uris) {
            if (!uris) {
                return;
            }

            angular.forEach(uris, function(value, key) {
                if (value) {
                    //If the key is also an attribute in this element, its value templateUrl.
                    //We try the lowercase of the key because the key as an attribute might be lowercased by browser.
                    var templateUrl = attrs[key] || attrs[angular.lowercase(key)];
                    if (templateUrl) {
                        //Load the template for future use.
                        if (!$templateCache.get(templateUrl) && !templateLoaded[templateUrl]) { //Load it if it is not in cache.
                            templateLoaded[templateUrl] = true;
                            $http.get(templateUrl, {cache: $templateCache}).then(function(response) {}, function() {
                                    templateLoaded[templateUrl] = false;
                                });
                        }
                        //Set context menu template id so that we can fetch it later from $templateCache.
                        attrs.$set("contextdialogTmplId", templateUrl);
                    }
                }
            });
        };

        return {
            restrict: 'A',
            controller:
                function() {
                    // $templateCache.get returns a string if the template is defined
                    // from JS or HTML <script>, but it returns an array if it had to make
                    // an http request.  Our code assumes it always returns a string, so
                    // we patch it here to make it so.
                    var stockTCget = $templateCache.get;
                    $templateCache.get = function(cacheId) {
                        var got = stockTCget(cacheId);
                        return angular.isArray(got) ? got[1] : got;
                    };

                    //As $http sends async call, we do not know if a request for a template is sent yet.
                    //We use this hash to mark if the context menu template is being loaded.
                    closeMenu = angular.noop;

                    //for v3.0 new trigger event is "click" not "right-click aka contextmenu"
                    contextEvents = 'click';
                },
            bindToController: true,
            link: function(scope, element, attrs) {
                var target = attrs.contextdialog;

                if (!target) {
                    return;
                }

                var contextdialogOptions = scope.$eval(target);

                //prepare context menu
                _prepareContextdialog(scope, attrs, contextdialogOptions.uris);

                element.on(contextEvents, function(contextmenuEvent) {
                    contextmenuEvent.preventDefault();
                    contextmenuEvent.stopPropagation();

                    scope.$apply(function() {
                        // Close any other context menu before opening a new one
                        // If no context menu is open,it will be a no-op.
                        closeMenu();

                        var transitionpoint = parseInt(attrs.contextdialogtp);

                        // If context menu is registered
                        if (attrs.contextdialogTmplId) {
                            // Show the context menu, show it beneath the dots
                            var contextdialog;
                            // Look for a context menu already on this element
                            if (!attrs.contextdialogId) {
                                var contextdialogScope = scope.$new();
                                angular.extend(contextdialogScope, contextdialogOptions.scope);
                                contextdialog = $compile($templateCache.get(attrs.contextdialogTmplId))(contextdialogScope);
                                contextdialog.attr("id", "hzn" + new Date().getTime());

                                //TODO maybe move the classes onto the attributes to make this directive more extensible
                                element.closest('.bookmark-app-item').addClass('contextmenu-on');

                                // Don't let click and touchstart event bubble up
                                // otherwise the actiions(launch app, see details or removeBookmark functions will not be executed
                                contextdialog.on('click touchstart', function(e) {
                                    e.stopPropagation();
                                });

                                if (UserAgent.isAWJadeMobile() && !UserAgent.isAWJadeDocked() || $window.innerWidth < transitionpoint) {
                                        // Append to the bottom of the global container, otherwise the slide animation can not be achieved
                                        angular.element('.global-container').append(contextdialog);
                                } else {
                                    element.append(contextdialog);
                                }

                                attrs.$set("contextdialogId", "#" + contextdialog.attr("id"));
                            }

                            angular.element($window).on('resize', function() {
                                var viewportSize = $window.innerWidth;
                                // append contextDialog to the .global-container if the

                                if (UserAgent.isAWJadeMobile() && !UserAgent.isAWJadeDocked() || $window.innerWidth < transitionpoint) {
                                    contextdialog.remove();
                                    angular.element('.global-container').append(contextdialog);
                                } else {
                                    angular.element('.global-container').find(".bookmark-contextdialog-container").remove();
                                    element.append(contextdialog);
                                }

                                calculateDirection(element, contextdialog);

                                if (viewportSize < transitionpoint || UserAgent.isAWJadeMobile() && !UserAgent.isAWJadeDocked()) {
                                    contextdialog.removeClass('north northeast northwest south southeast southwest');
                                }
                            });

                            // determine which corner of the element to place the menu at
                            $timeout(function() { //Need to run after current digest cycle to find the right size of the menu
                                var viewportSize = $window.innerWidth;
                                calculateDirection(element, contextdialog);

                               if (viewportSize < transitionpoint || UserAgent.isAWJadeMobile() && !UserAgent.isAWJadeDocked()) {
                                   contextdialog.removeClass('north northeast northwest south southeast southwest');
                               }
                            }, 0, false);

                            // Close the context menu when a click event happen at somewhere else.
                            closeMenu = function(event) {
                                //This code should always sit at the beginning.
                                if (event && (!event.data || !event.data.propagate)) {
                                    event.stopPropagation();
                                }

                                // Unbind the handlers when closing contextdialog.
                                // for iPad iPad Pro the "click" need to use touchstart otherwise the closeMenu does not work
                                $(document).off('click touchstart', closeMenu);
                                contextdialog.off('click', 'a, button', closeMenu);
                                angular.element($window).off('resize');
                                element.closest('.bookmark-app-item').removeClass('contextmenu-on');
                                //also wait for the animation finish to remove the class
                                angular.element('.global-container').removeClass('bookmark-contextdialog-on');

                                //delay the removal until the animation finishes if it is in smaller viewport size
                                // or through ws-shell

                               if ($window.innerWidth < transitionpoint || UserAgent.isAWJadeMobile() && !UserAgent.isAWJadeDocked()) {
                                    $timeout(function() {
                                        contextdialog.remove();
                                    }, 355, false);
                                } else {
                                    contextdialog.remove();
                                }

                                attrs.$set("contextdialogId", ""); // element.removeAttr("contextdialogId") did not work
                                closeMenu = angular.noop;
                            };
                        }
                    });
                });
            }
        };

        function calculateDirection(element, contextdialog) {
            // need to use .content-container instead of .content as content can be exceed viewport size
            // depending on the apps we have
            var pane = element.closest('.content, body'),
                paneCoords = pane.offset(),
                elementCoords = element.offset(),
                dialogWidth = contextdialog.find('.bookmark-contextdialog-content').outerWidth(),
                dialogHeight = contextdialog.find('.bookmark-contextdialog-content').outerHeight(),
                vert = 'south',
                horiz = '',
                dir;

            paneCoords.right = paneCoords.left + pane.outerWidth();
            paneCoords.bottom = paneCoords.top + pane.outerHeight();
            elementCoords.right = elementCoords.left + element.outerWidth();
            elementCoords.bottom = elementCoords.top + element.outerHeight();

            if (elementCoords.top + dialogHeight > paneCoords.bottom &&
                elementCoords.bottom - dialogHeight >= paneCoords.top) {
                // we can't place the menu below, but we can place it above
                vert = 'north';
            }

            if (elementCoords.left + dialogWidth <= paneCoords.right) {
                // place it to the left if we can
                horiz = 'east';
            } else if (elementCoords.right - dialogWidth >= paneCoords.left) {
                // or to the right if we can
                horiz = 'west';
            }

            dir = vert + horiz;

            contextdialog.removeClass('north northeast northwest south southeast southwest')
                .addClass(dir);

            // Clicking any button/link on the contextdialog should close it
            // Not working on the removeBookmark link -- can not figure out
            contextdialog.on('click', 'a, button', closeMenu);

            // Added touchstart for iPad and iPad Pro otherwise if you click outside of
            // the contextDialog box the box will not be dismissed
            $(document).on('click touchstart', {propagate: true}, closeMenu);
            angular.element('.global-container').addClass('bookmark-contextdialog-on');
        }
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    //Java script helper to get hold of device breakpoints used in CSS(page.less).
    module.constant('DEVICE_BREAKPOINT', {
        TABLET_POTRAIT: "720",
        TABLET_LANDSCAPE: "960",
        PHONE_PORTRAIT: 540,
        PHONE_LANDSCAPE: 720
    });

    module.service('DeviceBreakpointService', ['$window', 'DEVICE_BREAKPOINT', function($window, DEVICE_BREAKPOINT) {
        function currentDeviceWidth() {
            return ($window.innerWidth > 0) ? $window.innerWidth : screen.width;
        }
        this.maxPotraitTablet = function() {
            return currentDeviceWidth() < DEVICE_BREAKPOINT.TABLET_POTRAIT;
        };

        this.isPhone = function() {
            var isPhone = false;
            if (window.innerHeight > window.innerWidth) {
                isPhone = window.innerWidth < DEVICE_BREAKPOINT.PHONE_PORTRAIT;
            } else {
                isPhone = window.innerWidth < DEVICE_BREAKPOINT.PHONE_LANDSCAPE;
            }
            return isPhone;
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.controller('DevicesController', ['$scope', '$filter', 'ConfigService',
        function($scope, $filter, ConfigService) {
            var vm = this;

            var Device = {
                OS_WINDOWS: 'windows',
                OS_MAC: 'mac',
                OS_ANDROID: 'android',
                OS_IOS: 'ios',
                OS_IPHONE: 'iphone',
                OS_IPAD: 'ipad',
            };

            vm.devices = [];

            vm.unlinkDevice = function(device, $event) {
                var status = $filter('i18n')("app.devices.unlinkedDevice");
                ConfigService.unlinkDevice(device).then(function() {
                    $event.target.outerHTML = status;
                }, function() {
                    //TODO: error handling
                });
            };

            startLoading();
            ConfigService.getUserDevices().then(function(devices) {
                vm.devices = [];
                if (devices) {
                    for (var i = 0; i < devices.length; i++) {
                        if (devices[i].status === "ACTIVE") {
                            var iconfilename = "";
                            var osName = devices[i].osName.toLowerCase();
                            if (osName.indexOf(Device.OS_ANDROID) >= 0) {
                                iconfilename = "app-v2/svgincludes/illo-android.html";
                            } else if ((osName.indexOf(Device.OS_IOS) >= 0) || (osName.indexOf(Device.OS_IPHONE) >= 0) || (osName.indexOf(Device.OS_IPAD) >= 0)) {
                                iconfilename = "app-v2/svgincludes/illo-ios.html";
                            } else if (osName.indexOf(Device.OS_WINDOWS) >= 0) {
                                iconfilename = "app-v2/svgincludes/illo-windows.html";
                            } else if (osName.indexOf(Device.OS_MAC) >= 0) {
                                iconfilename = "app-v2/svgincludes/illo-macos.html";
                            }
                            devices[i].iconfilename = iconfilename;
                            vm.devices.push(devices[i]);
                        }
                    }
                }
                doneLoading();
            });

            function startLoading() {
                vm.isLoading = true;
            }

            function doneLoading() {
                vm.isLoading = false;
            }
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.directive('catalogItemActions', [
                        '$rootScope',
                        'CatalogService',
                        'BookmarksService',
                        'DetailsService',
                        'TenantCustomizationService',
                        'UtilService',
                        '$notify',
                        'ModalService',
                        '$filter',
                        'NativeBridgeService',
                        'UserAgent',
                        function($rootScope,
                                 CatalogService,
                                 BookmarksService,
                                 DetailsService,
                                 TenantCustomizationService,
                                 UtilService,
                                 $notify,
                                 ModalService,
                                 $filter,
                                 NativeBridgeService,
                                 UserAgent) {
        function postLink(scope, element, attrs) {
        }

        function controller() {
            var catalogItemActionsCtrl = this;

            var customizationSettings = TenantCustomizationService.getCustomizationSettings();
            catalogItemActionsCtrl.hideBookmarksTab = customizationSettings.hideBookmarksTab;
            catalogItemActionsCtrl.hideCatalogTab = customizationSettings.hideCatalogTab;
            catalogItemActionsCtrl.isAWJadeMobile = UserAgent.isAWJadeMobile();

            var currentApp = catalogItemActionsCtrl.app;
            var favoriteModuleEnabled = TenantCustomizationService.isHubFavoritesEnabled();

            catalogItemActionsCtrl.favoriteEnabled = favoriteModuleEnabled && CatalogService.isBookmarkableApp(currentApp);

            catalogItemActionsCtrl.activateBookmarking = false;

            $rootScope.$on('native-app-status-change', function(event, args) {
                if (args.nativeAppMap[currentApp.appId]) {
                    currentApp.installStatus = args.nativeAppMap[currentApp.appId];
                    currentApp.statusCode = CatalogService.getAppStatusCode(args.nativeAppMap[currentApp.appId]);
                }
            });

            $rootScope.$on('activate-app-bookmark', function(event, data) {
                if ((currentApp && data) && (currentApp.appId == data.appId)) {
                    catalogItemActionsCtrl.activateBookmarking = true;
                }
            });

            $rootScope.$on('activate-app-bookmark-end', function(event, data) {
                if ((currentApp && data) && (currentApp.appId == data.appId)) {
                    catalogItemActionsCtrl.activateBookmarking = false;
                }
            });

            $rootScope.$on('new-app-notification-bookmark', function(event, data) {
                if ((currentApp && data) && (currentApp.appId == data.appId)) {
                    currentApp.favorite = data.favorite;
                }
            });

            catalogItemActionsCtrl.launchApp = function(app, $event) {
                //there is cases that app is launched when user says that the launching program are installed in dialog.
                // So we need to check the event here
                if ($event) {
                    $event.preventDefault();
                }
                CatalogService.activateAndLaunchApp(app);
            };

            catalogItemActionsCtrl.viewThinAppPackage = function(app, $event) {
                //there is cases that app is launched when user says that the launching program are installed in dialog.
                // So we need to check the event here
                if ($event) {
                    $event.preventDefault();
                }
                CatalogService.activateAndViewThinappPackage(app);
            };

            catalogItemActionsCtrl.toggleBookmark = function(app, $event) {
                //there is cases that app is launched when user says that the launching program are installed in dialog.
                // So we need to check the event here

                if ($event) {
                    $event.preventDefault();
                }

                if (app.bookmarking) {
                    return;
                }
                //broadcast to update parent controller
                var handler = function(result) {
                    app = result;
                    if (UtilService.isHub() && app.favorite) {
                        $notify.success('app.details.label.addedFavorites');
                    }
                    $rootScope.$broadcast('app-bookmarked', app);
                };

                if (catalogItemActionsCtrl.currentView && catalogItemActionsCtrl.currentView === 'SEARCH') {
                    var isAlreadyBookmarked = app.favorite;
                    handler = function(result) {
                        $rootScope.$broadcast('app-bookmarked-from-search', app);
                    };
                    if (isAlreadyBookmarked) {
                        handler = function(result) {
                            $rootScope.$broadcast('app-unbookmarked-from-search', app);
                        };
                    }
                }

                CatalogService.activateAndBookmarkApp(app, false, handler);
            };

            catalogItemActionsCtrl.activateApp = function() {
                if (UtilService.isWindowsNativeBridge() && catalogItemActionsCtrl.app.type === 'NATIVE') {
                    NativeBridgeService.getAppStatus([catalogItemActionsCtrl.app.appId]);
                }
                CatalogService.activateApp(catalogItemActionsCtrl.app, CatalogService.getDeviceStatus());
            };

            catalogItemActionsCtrl.resetDesktop = function(app, $event) {
                BookmarksService.performResetDesktop(app, $event);
            };

            catalogItemActionsCtrl.openSetAppPasswordDialog = function(app, $event) {
                BookmarksService.openSetAppPasswordDialog(app, $event);
            };
            catalogItemActionsCtrl.openSetPVAppPasswordDialog = function(app, $event) {
                DetailsService.openSetPVAppPasswordDialog(app, $event);
            };

            catalogItemActionsCtrl.showInfo = function(app, $event) {
                var isHubDesktop = UtilService.isHubDesktop();
                var message = isHubDesktop ? $filter('i18n')('hub.app.installing.alert.desktop.message', app.name) :
                    $filter('i18n')('hub.app.installing.alert.mobile.message', app.name);
                if ($event) {
                    $event.preventDefault();
                }
                ModalService.getCurrentModal().open('app-v2/components/shared/alertInstallingPrompt.html', {
                    title: $filter('i18n')('appCenter.action.installing'),
                    name: app.name,
                    message: message
                });
            };
        }

        return {
            restrict: 'A',
            replace: true,
            scope: { app: '=', currentView: '=', showFavorite: '=?', appDetailsPage: '=?' },
            templateUrl: function(element, attrs) {
                var template = 'app-v2/common/directives/catalogItemActionsTemplate.html';
                if (attrs.currentView && attrs.currentView === 'APP_DETAILS') {
                    template = 'app-v2/common/directives/catalogItemActionsAppDetailsTemplate.html';
                }
                if (attrs.currentView && attrs.currentView === 'HUB_APP_LIST') {
                    template = 'app-v2/components/appListItem/appListItemAction.html';
                }
                return template;
            },
            controller: controller,
            link: postLink,
            controllerAs: 'catalogItemActionsCtrl',
            bindToController: true
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('collapsePanel', [function() {
        return {
            restrict: 'E',
            transclude: true,
            scope: {headerlabel: "@", collapsed: "=?", collapsible: "=?"},
            replace: true,
            controller: ["$scope", function($scope) {
                // By default the panel is expanded
                $scope.collapsed = !!$scope.collapsed;
                $scope.collapsible = $scope.collapsible || $scope.collapsible === undefined;
                $scope.toggleCollapsePanel = function() {
                    $scope.collapsed = !$scope.collapsed;
                };
            }],
            templateUrl: function(element, attrs) {
                var template = 'app-v2/common/directives/collapsePanelTemplate.html';
                // If is the collapse panel inside the HUB_CP
                if (attrs.currentview && attrs.currentview == 'HUB_CP') {
                    template = 'app-v2/components/shared/collapsePanelTemplate.html';
                }

                return template;
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('disableCopyPaste', [function() {
        return {
            restrict: 'A',
            link: function(scope, element) {
                element.on('copy paste drop', function(e) {
                    e.preventDefault();
                });
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('dropdownList', function() {
        return {
            restrict: 'A',
            transclude: true,
            replace: false,
            scope: { config: '=?dropdownList', isActive: '=?dropdownControl' },
            controllerAs: '$dropdown',
            bindToController: true,
            controller: ['$scope', '$document', '$timeout', controller],
            link: postLink,
            templateUrl: 'app-v2/common/dropdownList.html'
        };

        // Only if clicked outside the area should dismiss it or when a modal dialog box is activated
        function controller($scope, $document, $timeout) {
            var $dropdown = this;
            //Hide the dropdown by default
            $dropdown.isActive = $dropdown.isActive || false;
            //Click away enabled by default

            if ($dropdown.config === undefined) {
                $dropdown.config = { closeOnClick: true };
            }

            $scope.$watch('$dropdown.isActive', function(value) {
                if ($dropdown.isActive) {
                    $timeout(function() {
                        $document.bind('click', closeDropdown);
                    });
                } else {
                    $timeout(function() {
                        $document.unbind('click', closeDropdown);
                    });
                }
            });

            $dropdown.toggle = function() {
                $dropdown.isActive = !$dropdown.isActive;
            };

            $dropdown.setElement = function(element) {
                $dropdown.element = element;
            };

            //Close dropdown
            var closeDropdown = function(event) {
                var element = $dropdown.element;
                if (event && element && element[0].contains(event.target)) {
                    return;
                }
                $scope.$apply(function() {
                    $dropdown.isActive = false;
                });
            };
        }

        function postLink(scope, element, attrs, $dropdown) {
            $dropdown.setElement(element);
            element.bind('click', function() {
                scope.$apply(function() {
                    $dropdown.toggle();
                });
            });
        }
    });

    module.directive('dropdownPanelBody', function() {
        return {
            restrict: 'A',
            link: postLink,
            require: ['^dropdownList']
        };

        function postLink(scope, element, attrs, controllers) {
            element.addClass('dropdown-panel-body');
            var $dropdown = controllers[0];
            if (!$dropdown.config.closeOnClick) {
            // If user click inside the panel body does not dismiss the dropdown, only if they click outside of the area
                element.bind('click', function(event) {
                    // event.preventDefault will prevent all the clicking such as tabs and radio button for preference default behavior
                    event.stopPropagation();
                });

                element.on('click', 'button', function() {
                    scope.$apply(function() {
                        $dropdown.isActive = false;
                    });
                });
            }
        }
    });
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    module.directive('icon', ['$document', '$timeout', function($document, $timeout) {
        function scale(element, width) {
            element.css('width', '');
            element.css('height', '');
            var backgroundSize = 'auto';
            if (width > element.innerWidth()) {
                backgroundSize = 'contain';
            }
            element.css({
                'background-repeat': 'no-repeat',
                'background-position': 'center',
                'background-size': backgroundSize,
            });
        }

        function link(scope, element, attrs) {
            var icon = element.find('.icon');
            var url = scope.url;
            var img = new Image();

            img.onload = function() {
                scale(element, img.width);
                element.css({'background-image': 'url(' + url + ')'});
            };

            var resize = function() {
                scale(element, img.width);
            };
            $document.on('resize', resize);
            scope.$on('$destroy', function() {
                $document.off('resize', resize);
            });

            img.src = url;
        }

        return {
            restrict: 'A',
            replace: false,
            scope: {
                url: '=',
            },
            link: link,
            template: '<div class="icon" />',
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('imageLoad', function() {
        return {
            link: function(scope, element, attrs) {
                var img = element.children('img');
                img.bind('load', function() {
                    //check if digest cycle
                    if (!scope.$$phase) {
                        scope.$apply(function() {
                            element.css('background-image', 'none');
                        });
                    }
                });

                img.bind('error', function() {
                    //hide broken image tag on error
                    img.css('display', 'none');
                });
            }
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.directive('includeReplace', function() {
        return {
            require: 'ngInclude',
            restrict: 'A', /* optional */
            link: function(scope, el, attrs) {
                el.replaceWith(el.children());
            }
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));


angular.module("com.vmware.greenbox.appCenter").directive("infiniteScroll", function() {
    'use strict';
    return {
        scope: {
            onend: '&'
        },
        link: function(scope, element, attrs) {
            var scrollElm = element[0];
            scrollElm.onscroll = function onScrollEnd() {
                //Onscroll is outside the angular ctx hence need to wrap it within $apply
                var isEndOfScroll = ((scrollElm.scrollHeight - scrollElm.scrollTop) <= scrollElm.clientHeight);
                if (isEndOfScroll) {
                    scope.$apply(function() {
                        //If user scrolls to the end, call the configured ctr method
                        if (isEndOfScroll) {
                            if (scope.onend) {
                                scope.onend();
                            }
                        }
                    });
                }

                // Call the function tied to the onscrolling attribute on directive definition
                // with the scroll position percentage as parameter
                if (attrs.onscrolling) {
                    scope[attrs.onscrolling](scrollElm.scrollTop / scrollElm.scrollHeight);
                }
            };
        }
    };
});

/*
 * lineClampDirective:
 * This directive is intended to be a cross-browser solution to emulate
 * text-overflow: ellipsis support for multiline elements. As of writing this,
 * the only way to do this through CSS is using non-standard webkit or opera
 * vendor properties.
 *
 * Dependencies:
 * lodash
 *
 * Usage:
 * Add the line-clamp attribute to your element and specify the content as well
 * as how many lines to allow before truncating.
 *
 * Example:
 * <p line-clamp content="text string" lines="2"></p>
 *
 * Notes:
 * The directive logic will execute each time the window resize event is triggered, but
 * will not execute if the element has CSS white-space: nowrap.
 * */

(function(module) {
    'use strict';

    var defaultFontSize = '14px',
        defaultFontFamily = 'Open Sans Regular';

    module.directive('lineClamp2', ['$timeout', '$window', "UserAgent", function($timeout, $window, UserAgent) {
        return {
            link: link,
            replace: true,
            restrict: 'A',
            scope: {
                content: '=',
                lines: '='
            },
            template: '<p>{{::content}}</p>'
        };

        function link($scope, element) {
            var w = angular.element($window),
                options = {
                    content: $scope.content.trim(),
                    lines: $scope.lines
                },
                debouncedClamp = _.debounce(function() {
                    clamp(element[0], options);
                }, 100),
                ELLIPSIS = '\u2026';

            w.bind('resize', debouncedClamp);

            $scope.$on('$destroy', function() {
                w.unbind('resize', debouncedClamp);
            });

            // Using $timeout to give it time to bind the value to the template.
            $timeout(debouncedClamp, 0, false);

            function clamp(elt, options) {
                // If nowrap, text is forced to overflow horizontally and we have
                // no way to know where to truncate, so let the webview handle it.
                // if the lines is equal 1 then use css text overlfow ellipsis
                if (window.getComputedStyle(elt).whiteSpace === 'nowrap' || options.lines == 1) {
                    elt.textContent = options.content;
                    return;
                }

                var content = options.content,
                    eltHeight = elt.scrollHeight,
                    maxHeight = getMaxHeight(elt, options.lines),
                    length;

                var wordsArray = [];
                wordsArray = content.split(" ");

                var findLongestWord = function(array) {
                    var longest = array.reduce(function(a, b) {
                        return (a.length > b.length) ? a : b;
                    });
                    return longest;
                };

                var longWordExist = false;
                var longestWord = findLongestWord(wordsArray);
                //use canvas measureText method to get the longest word width
                var canvas = document.createElement('canvas');
                var context = canvas.getContext('2d');

                var cs = window.getComputedStyle(elt);

                var fontFamilies = [],
                    currentFontFamily = '';

                // This will be complicated if the font-size is defined using inherite ornot defined
                // The easiest way to whenever a line-clamp is used, a specific font-size and font-family should be defined
                // otherwise just use the default font and size for this app
                // relative units "em" or "inherit" will be tricky to track and here use the most simplified way
                // This will be a good estimate for this app, font-size will be 14px for most of the text labels

                if (cs.fontFamily !== null || cs.fontFamily !== undefined) {
                    fontFamilies = cs.fontFamily.split(",");
                    currentFontFamily = fontFamilies[0].trim().replace(/"/g, '');
                } else {
                    currentFontFamily = defaultFontFamily;
                }

                var currentFontSize = '';
                if (cs.fontSize !== null || cs.fontSize !== undefined) {
                    currentFontSize = cs.fontSize;
                } else {
                    currentFontSize = defaultFontSize;
                }

                var currentFont = currentFontSize + ' ' + currentFontFamily;

                context.font = currentFont;

                var longestWordWidth = context.measureText(longestWord).width;
                var containerWidth = angular.element(elt).width();
                // Only apply the word wrap if there is a word longer than the container
                if (longestWordWidth > containerWidth) {
                    longWordExist = true;
                }

                //If user agent is Chrome or Safari and there is no word longer than the container let -webkit- handle the multiline ellipsis through css
                if ((UserAgent.isChrome() && longWordExist == false) || (UserAgent.isSafari() && longWordExist == false)) {
                    elt.textContent = options.content;
                    // we have applied -webkit-line-clamp through css first
                    return;
                } else if (longWordExist == true) {
                    // use angular.element(elt).css() is the only way cross-browsers to apply styles
                    // elt.style does not seem to work on Safari
                    // "overflow-wrap: break-word; word-wrap: break-word;" only works well in chrome, safari does not work
                    // apply the word-break only if there is a long word
                    angular.element(elt).css("word-break", "break-all");
                }

                // No truncation needed
                if (eltHeight <= maxHeight) {
                    return;
                }

                // Truncate by character until the height does not exceed maxHeight.
                for (length = content.length; length && elt.scrollHeight > maxHeight; --length) {
                    content = content.substring(0, length);
                    elt.textContent = content.trim() + ELLIPSIS;
                }
            }

            // Get the minimum among explicit values and the calculated
            // value based on lines to clamp.
            function getMaxHeight(elt, lines) {
                var lineHeight = getLineHeight(elt),
                    maxHeight = lines * lineHeight,
                    computedStyle = window.getComputedStyle(elt),
                    cssHeight = parseFloat(computedStyle.height),
                    cssMaxHeight = parseFloat(computedStyle.maxHeight),
                    possibleValues = [maxHeight],
                    errorMargin;

                if (!isNaN(cssHeight)) {
                    possibleValues.push(cssHeight);
                }
                if (!isNaN(cssMaxHeight)) {
                    possibleValues.push(cssMaxHeight);
                }

                // Take the most restrictive (smallest) value as the maxHeight.
                maxHeight = Math.min.apply(Math, possibleValues);

                // Account for font rendering where the actual height of the
                // first line can be greater than the lineHeight value.
                errorMargin = Math.max(lineHeight / 4.0, 1); // 25% is arbitrary but seems to be a be a good baseline.

                return maxHeight + errorMargin;
            }

            // FOR DISCUSSION ONLY I had problem with IE9 without declare a line-height in px, directive does not seem to work
            // I see most of the line-clamp js directives ask for a defined the line-height so this following function might not
            // work accurate anyway, thus I suggest we ask the app developers to specify a line-height

            // If the lineHeight is available as a number use that,
            // else calculate it manually.
            function getLineHeight(elt) {
                var lineHeightCss = window.getComputedStyle(elt).lineHeight,
                    lineHeightValue = parseFloat(lineHeightCss);

                return isNaN(lineHeightValue) ? calculateLineHeight(elt) : lineHeightValue;
            }

            // Calculate the local line height by cloning the element to create
            // a duplicate context, appending a new line and comparing the height
            // difference.
            function calculateLineHeight(elt) {
                var clone = elt.cloneNode(),
                    height1, height2;

                elt.appendChild(clone);

                clone.innerHTML = '<br />';
                height1 = clone.scrollHeight;
                clone.innerHTML = '<br /><br />';
                height2 = clone.scrollHeight;

                elt.removeChild(clone);

                return height2 - height1;
            }
        }
    }]);
})(angular.module("com.vmware.greenbox.appCenter"));

(function(module) {
    'use strict';
    module.directive('notificationCount', [
                        'NotificationCountService',
                        '$rootScope',
                        'NotificationService',
                        'UtilService',
                        'OfflineService',
                        function(NotificationCountService,
                                 $rootScope,
                                 NotificationService,
                                 UtilService,
                                 OfflineService) {
        return {
            restrict: 'A',
            scope: {},
            replace: true,
            controller: function($scope, $element) {
                var inAppNotificationEnabled = UtilService.getObjValue(window, 'workspaceOne.featureFlags.IN_APP_NOTIFICATIONS', false);
                $scope.count = 0;
                var getNotificationCount = function() {
                    NotificationService.getNotifications()
                        .then(function(data) {
                            $scope.count = data.length;
                            $rootScope.$broadcast('new-notification-count-update', data);
                        });
                };

                if (inAppNotificationEnabled) {
                    getNotificationCount();
                }

                var callbackFn = function(message) {
                    if (message) {
                        var msgObj = JSON.parse(message);
                        var counts = _.get(msgObj, 'device_unread_counts', {});
                        var count;
                        var currentDeviceId = workspaceOne.deviceId || 'BROWSER';
                        if (currentDeviceId in counts) {
                            count = _.get(counts, currentDeviceId, 0);
                        } else {
                            count = _.get(counts, '*', 0);
                        }
                        if (count !== undefined) {
                            $scope.$apply(function() {
                                $scope.count = count;
                            });
                        }
                     }
                };
                NotificationCountService.connectToNotificationService(callbackFn);

                $scope.$on('deviceOnlineStatusChanged', function(event, deviceOnline) {
                    if (deviceOnline && OfflineService.isTabVisible()) {
                        NotificationCountService.connectToNotificationService(callbackFn);
                    }
                });

                $scope.$on('tabShown', function(event, deviceOnline) {
                    if (deviceOnline) {
                        getNotificationCount();
                        NotificationCountService.connectToNotificationService(callbackFn);
                    }
                });

                $scope.$on('tabHidden', function(event, deviceOnline) {
                    if (deviceOnline) {
                        NotificationCountService.disconnectToNotificationService();
                    }
                });
            },
            template: '<span><span ng-if="count > 0 && count < 100" class="notification-count">{{count}}</span>' +
                '<span ng-if="count > 99" class="notification-count">99&#43</span></span>'
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    //Adds a class 'touch' when it is touch enabled device
    module.directive('noTouch', function(UserAgent) {
        return {
            restrict: 'A',
            link: function(scope, element, attr) {
                if (!UserAgent.isMobile()) {
                    element.addClass('notouch-');
                }
            }
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    module.directive('parseStyle', ['$interpolate', function($interpolate) {
        return function(scope, elem) {
            var exp = $interpolate(elem.html()),
                watchFunc = function() {
                    return exp(scope);
                };

            scope.$watch(watchFunc, function(html) {
                elem.html(html);
            });
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';
    module.directive('passwordVaultExtension', [
                            '$toast',
                            'PasswordVaultService',
                            'hznLocalStorage',
                            function($toast,
                                      PasswordVaultService,
                                      hznLocalStorage) {
        return {
            restrict: 'A',
            scope: true,
            link: postLink
        };
        function postLink(scope, element, attrs) {
            scope.$on('evt-passwordvault-pingextension', function(event, appsPresent) {
                if (appsPresent) {
                    PasswordVaultService.pingExtension().then(function(extentionDetected) {
                        if (!extentionDetected && PasswordVaultService.getPVExtensionDownloadUrl() != '' && !hznLocalStorage.hidePVBanner) {
                            $toast.toast('', [], 'app-v2/common/passwordVaultBanner.html');
                        }
                    });
                }
            });
        }
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('preventParentScroll', ['UserAgent', function(UserAgent) {
        return {
            restrict: "A",
            link: function(scope, elm, attr) {
                if (UserAgent.isIE() || UserAgent.isFF() || UserAgent.isWindowsJade()) {
                    elm.on('mouseenter', function() {
                        angular.element('#catalog-container').css('overflow-y', 'hidden');
                    });
                    elm.on('mouseleave', function() {
                        angular.element('#catalog-container').css('overflow-y', 'auto');
                    });
                }
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('pullToRefresh', function($compile, $timeout, $q, UserAgent, $filter) {
        return {
            scope: true,
            restrict: 'A',
            transclude: true,
            templateUrl: 'app-v2/common/directives/pullToRefresh.html',
            link: function postLink(scope, ele, attr) {
                if (UserAgent.isMobile()) {
                    var element = ele[0];
                    var scrollEle = document.querySelector(attr.scrollContainer);
                    var disTravelled = 0;
                    var maxDistance = 200;
                    var startPos = 0;
                    var isLoading = false;
                    var isPullRequired = false;
                    var friction = 2;
                    var pullElement = element;
                    var isScrolling;
                    var scrollStopped = true;
                    var loaderContainer = element.querySelector('#pull-to-refresh');
                    var actionIcon = element.querySelector('.action-icon');
                    var spinner = element.querySelector('.pull-spinner');
                    var startX = 0;
                    var distanceX = 0;
                    var xThreshold = 80;
                    pullElement.style.position = 'relative';
                    //set min-height. when there are no apps element height will be 0, HW-67651
                    pullElement.style['min-height'] = '100px';
                    var addClass = function(ele, className) {
                        ele.classList.add(className);
                    };

                    var removeClass = function(ele, className) {
                        ele.classList.remove(className);
                    };

                    addClass(actionIcon, 'pull');

                    var moveContainer = function(distance) {
                        if (!isLoading) {
                            if (distance >= 30 && scrollEle.scrollTop <= 0 && distanceX < xThreshold) {
                                addClass(element, 'set-transition-speed');
                                pullElement.style.transform = pullElement.style.msTransform = pullElement.style.webkitTransform = 'translate3d( 0, ' + parseInt(distance / friction) + 'px, 0 )';
                                if (distance >= 15 && loaderContainer.style.display != 'block') {
                                    loaderContainer.style.display = 'block';
                                    actionIcon.style.display = 'block';
                                }
                            }
                            if (distance === 0) {
                                loaderContainer.style.display = 'none';
                                pullElement.style.transform = pullElement.style.msTransform = pullElement.style.webkitTransform = 'translate3d( 0, 0, 0 )';
                            }
                            if (distance >= maxDistance) {
                                addClass(actionIcon, 'release');
                            }
                        }
                    };

                    var reset = function() {
                        isLoading = false;
                        addClass(element, 'reset-transition-speed');
                        isPullRequired = false;
                        actionIcon.style.display = 'none';
                        spinner.style.display = 'none';
                        disTravelled = 0;
                        distanceX = 0;
                        moveContainer(0);
                        removeClass(actionIcon, 'release');
                    };

                    var makeCall = function() {
                        moveContainer(100);
                        var start = +new Date();
                        isLoading = true;
                        actionIcon.style.display = 'none';
                        spinner.style.display = 'block';
                        $q.when(scope.$eval(attr.pullToRefresh))
                            .then(function() {
                                var elapsed = +new Date() - start;
                                $timeout(function() {
                                    reset();
                                }, elapsed < 400 ? 400 - elapsed : 0);
                            }, function() {
                                reset();
                            });
                    };

                    ele.bind('touchstart', function(e) {
                        var touchObj = e.originalEvent.touches[0];
                        startPos = parseInt(touchObj.clientY);
                        startX = parseInt(touchObj.clientX);
                    });

                    ele.bind('touchmove', function(e) {
                        if (scrollStopped) {
                            var touchObj = e.originalEvent.touches[0];
                            disTravelled = (parseInt(touchObj.clientY) - startPos);
                            distanceX = Math.abs(parseInt(touchObj.clientX) - startX);
                            if (disTravelled > 0 && distanceX < xThreshold) {
                                moveContainer(disTravelled);
                            }
                        }
                    });

                    ele.bind('touchend', function(e) {
                        if (disTravelled >= maxDistance && scrollEle.scrollTop <= 0) {
                            if (!isLoading) {
                                makeCall();
                            }
                        } else {
                            moveContainer(0);
                        }
                    });

                    ele.bind('scroll', function(event) {
                        scrollStopped = false;
                        window.clearTimeout(isScrolling);
                        isScrolling = setTimeout(function() {
                            scrollStopped = true;
                        }, 2000);
                    }, false);
                }
            }
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('resize', ['$window', function($window) {
        return {
            link: link,
            restrict: 'A'
        };

        function link(scope, element, attrs) {
            scope.width = $window.innerWidth;
            function onResize() {
                // uncomment for only fire when $window.innerWidth change
                if (scope.width !== $window.innerWidth) {
                    scope.width = $window.innerWidth;
                    scope.$digest();
                }
            }

            function cleanUp() {
                angular.element($window).off('resize', onResize);
            }

            angular.element($window).on('resize', onResize);
            scope.$on('$destroy', cleanUp);
        }
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('scroll', [function() {
        return {
            restrict: 'A',
            scope: {
                scrolled: '='
            },
            link: function(scope, element, attr) {
                var scrollDistance = 10;
                element.bind("scroll", function() {
                    scope.scrolled = element.scrollTop() > scrollDistance && $('.user-details-loaded-container').height() + scrollDistance < $(element)[0].scrollHeight;
                    scope.$apply();
                });
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('scrollInputBlur', function(UserAgent) {
        return {
            restrict: 'A',
            link: function(scope, element, attr) {
                if (UserAgent.isMobile()) {
                    element.bind("touchstart scroll", function() {
                        $('input').blur();
                    });
                }
            }
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('searchResultsClose', ['UserAgent', '$timeout', '$document', '$window', function(UserAgent, $timeout, $document, $window) {
        return {
            restrict: 'A',
            scope: {
                close: '&?',
                showScrim: '=?'
            },
            link: function(scope, element, attr) {
                if (UserAgent.isMobile()) {
                    element.bind("touchstart scroll", function(event) {
                        if (UserAgent.isAWJade()) {
                            $('input').blur();
                        } else {
                            $timeout(function() {
                                scope.close();
                            });
                        }
                    });
                }

                function closeResults(event) {
                    //Search results should not close in mobile devices as it occupies the entire screen
                    //Skipping iPad pro here by it's resolution as it has desktop view and the search results should close when clicked on the scrim area
                    if ((UserAgent.isMobile() && $window.innerWidth <= 1024)) {
                        return false;
                    } else {
                        $timeout(function() {
                            scope.close();
                        });
                    }
                }

                scope.$watch('showScrim', function() {
                    if (scope.showScrim) {
                        $timeout(function() {
                            $document.bind('click', closeResults);
                        });
                    } else {
                        $timeout(function() {
                            $document.unbind('click', closeResults);
                        });
                    }
                });
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    // String used to prefix all SVG <symbol> #ids
    var symbolPrefix = 'svg-symbol-';

    // SVG <defs> element where dynamically loaded symbols are injected
    var svgDefinitions;

    // SVGs that have been loaded or requested to be loaded
    var svgRequested = {};

    // Template for creating SVG definitions block
    var svgDefsTemplate = '<svg style="display:none"><defs></defs></svg>';

    module.directive('svgSymbol', ['$compile', '$templateRequest', '$log', function($compile, $templateRequest, $log) {
        return {
            restrict: 'A',
            scope: {},
            controller: controller,
            controllerAs: '$symbol',
            bindAsController: true,
            link: postLink,
            replace: true,
            template: '<svg class="svg-symbol"><use xlink:href="{{$symbol.href}}" /></svg>',
            templateNamespace: 'svg'
        };

        function controller($scope) {
            $symbol = this;

            $symbol.loadTemplate = loadTemplate;

            function loadTemplate(url, element) {
                var id = generateSymbolId(url),
                    loaded = svgRequested[id] || document.getElementById(id);

                $symbol.href = '#' + id;

                if (url && !loaded) {
                    // load and compile it asynchronously
                    svgRequested[id] = true;
                    $templateRequest(url)
                    .then(function(svg) {
                        var el = angular.element(svg)[0],
                            ns = el.namespaceURI,
                            children = Array.prototype.slice.call(el.children),
                            viewBox = el.getAttribute('viewBox'),
                            symbol = document.createElementNS(ns, 'symbol');

                        symbol.id = id;
                        symbol.setAttribute('viewBox', viewBox);
                        _.forEach(children, function(child) {
                            symbol.appendChild(child);
                        });

                        injectSymbol(symbol);
                    })
                    .catch(function(reason) {
                        $log.error('Failed to load template: ' + url + ' [' + reason + ']');
                    });
                }
            }
        }

        function postLink(scope, element, attrs, $symbol) {
            var url = attrs.svgSymbol;

            $symbol.loadTemplate(url, element);
        }

        function generateSymbolId(url) {
            var path = url.split('/'),
                last = path.pop(),
                name = last.replace(/[^a-zA-Z0-9-].*$/, '');

            return symbolPrefix + name;
        }

        function injectSymbol(symbol) {
            var defs = svgDefinitions || createDefinitionsElement();

            defs.appendChild(symbol);
        }

        function createDefinitionsElement() {
            var body = document.body,
                svg = angular.element(svgDefsTemplate)[0];

            svgDefinitions = svg.children[0];
            body.appendChild(svg);

            return svgDefinitions;
        }
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('tabs', ['$window', function($window) {
        return {
            restrict: 'E',
            transclude: true,
            scope: {},
            controller: ["$scope", function($scope) {
                var panes = $scope.panes = [];

                $scope.select = function(pane) {
                    angular.forEach(panes, function(pane) {
                        pane.selected = false;
                    });
                    pane.selected = true;
                };

                this.addPane = function(pane) {
                    if (panes.length == 0) {
                        $scope.select(pane);
                    }
                    panes.push(pane);
                };
            }],
            templateUrl: 'app-v2/common/directives/tabsTemplate.html',
            replace: true
        };
        }]);

    module.directive('pane', ['$window', function($window) {
        return {
            require: '^tabs',
            restrict: 'E',
            transclude: true,
            scope: { datalabel: '@', displaycheck: '=?'},
            link: function(scope, element, attrs, tabsCtrl) {
                tabsCtrl.addPane(scope);
            },
            templateUrl: 'app-v2/common/directives/tabsPaneTemplate.html',
            replace: true
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('tooltip', ['$compile', '$templateRequest', '$log', '$filter', function($compile, $templateRequest, $log, $filter) {
        return {
            restrict: 'A',
            controller: function($scope, $element) {
                $scope.showTooltip = false;
                this.showHover = function(show) {
                    $scope.showTooltip = show;
                };
            },
            transclude: true,
            link: function(scope, element, attr, ctrl) {
                var triggerClass = attr.triggerelement,
                    triggerElm = element.closest("." + triggerClass),
                    triggerDelay;

                if (attr.triggerdelay) {
                    triggerDelay = parseInt(attr.triggerdelay);
                } else {
                    triggerDelay = 250;
                }

                triggerElm.bind('mouseover', function() {
                    triggerElm.hover = true;
                    // make sure the hover is intended not accidental slide over
                    _.debounce((function() {
                        scope.$apply(function() {
                            if (triggerElm.hover) {
                                triggerElm.addClass("show-tooltip");
                                scope.tooltiptext = $filter('i18n')(attr.tooltiptext);
                                ctrl.showHover(true);
                            }
                        });
                    }).bind(this), triggerDelay, false)();
                });

                triggerElm.bind('mouseout', function() {
                    triggerElm.hover = false;
                    scope.$apply(function() {
                        triggerElm.removeClass("show-tooltip");
                        ctrl.showHover(false);
                    });
                });

                scope.tooltiptext = $filter('i18n')(attr.tooltiptext);

                if (attr.arrow) {
                    scope.arrowdirection = attr.arrow;
                } else {
                    scope.arrowdirection = "top";
                }
            },
            template: '<div ng-show="showTooltip" class="tooltip {{arrowdirection}}"><p>{{tooltiptext}}</p></div>'
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.constant('GbDefaultColors', {
        'lightTheme': {
            'navigationBarBg': '#ffffff',
            'navigationBarDropShadowColor': 'rgba(0,0,0,0.5)',
            'navigationBarTextIconColor': '#000000',
            'bodyTextIconColor': '#000000',
            'appLabelDotsImage': 'app-v2/graphics-hub/icon-dots-black.svg',
            'listDividerColor': 'rgba(0,0,0, 0.12)',
            'svgPrimaryStroke': '#123e66',
            'svgSecondaryStroke': '#ccd5e1',
            'peopleDetailCurrentUserBg': 'rgba(0, 129, 167, 0.06)',
            'peopleOrgTreeLineColor': '#c1cdd4',
            'searchHiglightColor': '#D8F1FF',
            'notificationCountBgColor': '#073E77'
        },
        'darkTheme': {
            'navigationBarBg': '#393939',
            'navigationBarDropShadowColor': 'rgba(207,207,207,0.5)',
            'navigationBarTextIconColor': '#ffffff',
            'bodyTextIconColor': '#ffffff',
            'appLabelDotsImage': 'app-v2/graphics-hub/icon-dots-white.svg',
            'listDividerColor': 'rgba(255,255,255,0.25)',
            'svgPrimaryStroke': '#f2f2f2',
            'svgSecondaryStroke': '#61717d',
            'peopleDetailCurrentUserBg': 'rgba(255,255,255,0.25)',
            'peopleOrgTreeLineColor': '#c1cdd4',
            'searchHiglightColor': 'rgba(255, 255, 255, 0.25)',
            'notificationCountBgColor': '#073E77'
        }
    });
})(angular.module('com.vmware.greenbox.appCenter'));

// Project Horizon
// (c) 2013-2015 VMware, Inc. All rights reserved.
// VMware Confidential.

(function(module) {
    var activeClass = 'is-active';

    module.directive('modalDialog', [
        '$compile', '$templateRequest', '$log', '$animate', '$timeout', '$q', 'UtilService',
        function($compile, $templateRequest, $log, $animate, $timeout, $q, UtilService) {
            return {
                restrict: 'AE',
                scope: true,
                controller: controller,
                link: postLink,
                controllerAs: '$modal',
                bindToController: true
            };

            function controller($scope, $element) {
                var $modal = this,
                    modals = {}, // all loaded modal templates: {name -> {element, linkFn}, ... }
                    PUSH = 'PUSH',
                    POP = 'POP',
                    MOVE = 'MOVE';
                $scope.stack = []; // pending activation requests: [{name: '...', options: {}], ...]

                $scope.$watchCollection('stack',
                    function(newStack, oldStack) {
                        var delta = findChange(newStack, oldStack),
                            newActivation = delta.newActivation,
                            newRequest = delta.newRequest,
                            oldActivation = delta.oldActivation,
                            oldRequest = delta.oldRequest;

                        switch (delta.change) {
                            case PUSH:
                                if (oldActivation) {
                                    hide(oldActivation.element);
                                }
                                if (newActivation && newRequest) {
                                    activate(newActivation.element, newActivation.linkFn, newRequest.options);
                                }
                                break;
                            case POP:
                                if (oldActivation && oldRequest) {
                                    deactivate(oldActivation.element, oldRequest.options);
                                }
                                if (newActivation) {
                                    show(newActivation.element);
                                }
                                break;
                            default:
                                if (oldActivation && oldRequest) {
                                    deactivate(oldActivation.element, oldRequest.options);
                                }
                                if (newActivation && newRequest) {
                                    activate(newActivation.element, newActivation.linkFn, newRequest.options);
                                }
                        }

                        function findChange(newStack, oldStack) {
                            var delta = {},
                                oldStackLength = oldStack && oldStack.length ? oldStack.length : 0,
                                newStackLength = newStack && newStack.length ? newStack.length : 0,
                                oldName,
                                newName;

                            delta.oldRequest = oldStackLength ? oldStack[oldStackLength - 1] : undefined;
                            delta.newRequest = newStackLength ? newStack[newStackLength - 1] : undefined;
                            oldName = delta.oldRequest && delta.oldRequest.name;
                            newName = delta.newRequest && delta.newRequest.name;
                            delta.oldActivation = oldName && modals[oldName];
                            delta.newActivation = newName && modals[newName];

                            if (newStackLength > oldStackLength) {
                                delta.change = PUSH;
                            } else if (newStackLength < oldStackLength) {
                                delta.change = POP;
                            } else if (newStackLength === oldStackLength) {
                                delta.change = MOVE;
                            }

                            return delta;
                        }
                    });

                // Interface provided to templates and other controllers/directives

                $modal.open = open;
                $modal.close = close;
                $modal.cancel = cancel;
                $modal.register = register;
                $modal.finalize = finalize;

                var isHubApp = UtilService.isHub();

                $modal.confirm = standardModal({
                    templateUrl: isHubApp ? 'app-v2/common/modalDialog/hub-templates/confirm.html' : 'app-v2/common/modalDialog/templates/confirm.html',
                    params: {
                        ok: 'modal.confirm.ok',
                        cancel: 'modal.confirm.cancel'
                    }
                });

                $modal.spinner = standardModal({
                    templateUrl: 'app-v2/common/modalDialog/templates/spinner.html',
                    params: {
                    }
                });

                $modal.alert = standardModal({
                    templateUrl: isHubApp ? 'app-v2/common/modalDialog/hub-templates/alert.html' : 'app-v2/common/modalDialog/templates/alert.html',
                    params: {
                        ok: 'modal.alert.ok'
                    }
                });

                // The modal currently open or requested to open.
                function current() {
                    return $scope.stack.length && $scope.stack[$scope.stack.length - 1] || null;
                }

                // Request a modal be opened.
                function request(name, options, deferred) {
                    $scope.stack.push({name: name, options: options, deferred: deferred});
                }

                // Close the current modal.
                function close(value) {
                    var activation = $scope.stack.pop(),
                        deferred;

                    if (activation) {
                        deferred = activation.deferred;
                    }

                    if (deferred) {
                        deferred.resolve(value);
                    }
                }

                // Cancel the current modal.
                function cancel(reason) {
                    var activation = $scope.stack.pop(),
                        deferred = activation.deferred;

                    if (deferred) {
                        deferred.reject(reason);
                    }
                }

                // Register a modal with the context (allowing reuse).
                function register(name, element, linkFn) {
                    name = name || 0;
                    modals[name] = {element: element, linkFn: linkFn};
                }

                // Open the modal, passing scope parameter bindings.
                //   open( options )
                //   open( url, paramsOrScope [,options] )
                function open(urlOrOptions, paramsOrScope, moreOptions) {
                    var options = angular.isString(urlOrOptions) ?
                        {templateUrl: urlOrOptions, params: paramsOrScope} : urlOrOptions,
                        passScope = paramsOrScope && typeof paramsOrScope.$new === 'function';

                    options = options || {modal: 0};

                    if (passScope) {
                        options.params = {};
                        options.scope = paramsOrScope;
                    }

                    if (moreOptions) {
                        options = angular.extend({}, options, moreOptions);
                    }

                    return load(options);
                }

                // Load the modal template, or find it if already loaded, and request it be opened.
                function load(options) {
                    var url = options.templateUrl,
                        template = url || options.template,
                        name = options.modal || url || 0,
                        existing = modals[name],
                        deferred = $q.defer();

                    function buildModal(html) {
                        var template = angular.element(html);
                        //Do not clear out the current modal if new modal is going to be opened on top of current one.
                        if (options && options.params && !options.params.modalOverAModal) {
                            $element.find('div.modal-container').remove();
                            //this will clear all the modal reference
                            $scope.stack.pop();
                        }
                        //if its used in html tag, append to body
                        if ($element.is('html')) {
                            $element.find('body').append(template);
                        } else {
                            $element.append(template);
                        }
                        $modal.register(name, template, $compile(template));
                        request(name, options, deferred);
                    }

                    if (url) {
                        // otherwise, load and compile it asynchronously
                        $templateRequest(url)
                            .then(buildModal)
                            .catch(function(reason) {
                                $log.error('Failed to load template: ' + url + ' [' + reason + ']');
                            });
                    } else if (template) {
                        buildModal(template);
                    } else {
                        $log.error('No such template: ' + name);
                    }

                    return deferred.promise;
                }

                // Bind parameters to a modal element's scope and display it.
                function activate(element, linkFn, options) {
                    if (!element) {
                        return;
                    }
                    var params = options.params,
                        scope = linkFn ? (options.scope || $scope).$new() : element.scope();

                    angular.forEach(params || {}, function(value, key) {
                        scope[key] = value;
                    });

                    if (linkFn) {
                        scope.$modalOptions = options;
                        linkFn(scope);
                    } else {
                        finalize(element, options);
                    }
                }

                // called by modal's postlink to finish opening the modal
                function finalize(element, options) {
                    invoke(options.onReady);
                    show(element);
                }

                // Hide the modal and clean up the bindings.
                function deactivate(element, options) {
                    if (!element) {
                        return;
                    }
                    var scope = element.scope(),
                        params = options.params;

                    $animate.removeClass(element, activeClass)
                        .then(function() {
                            // wait until animation finishes to remove parameters
                            angular.forEach(params || {}, function(value, key) {
                                delete scope[key];
                            });
                        });
                }

                function show(element) {
                    if (!element) {
                        return;
                    }
                    // in order for modal to animate in (either fadein or slide) in the active class needs to be added after the
                    // modal is appended to the DOM
                    $timeout(function() {
                        $animate.addClass(element, activeClass);
                    }, 10);
                }

                function hide(element) {
                    if (!element) {
                        return;
                    }
                    $animate.removeClass(element, activeClass);
                }

                function invoke(fn) {
                    if (fn) {
                        fn.call($modal);
                    }
                }

                function standardModal(defaultOptions) {
                    return function(messageOrParams, optionalOptions) {
                        var params = angular.isObject(messageOrParams) ?
                            messageOrParams : {message: messageOrParams},
                            options = angular.extend({}, defaultOptions, optionalOptions || {});

                        options.params = angular.extend({}, defaultOptions.params, params);

                        return $modal.open(options);
                    };
                }
            }

            function postLink(scope, element) {
                element.addClass('modal-dialog');
            }
        }]);

    module.directive('modalNew',
        function() {
            return {
                restrict: 'AE',
                require: '^modalDialog',
                scope: false, // an inherited scope is constructed by load()
                transclude: true,
                replace: true,
                link: postLink,
                templateUrl: 'app-v2/common/modalDialog/templates/modal.html'
            };

            function postLink(scope, element, attrs, $modal) {
                var name = attrs['modal-new'],
                    options = scope.$modalOptions;

                if (name) {
                    $modal.register(name, element);
                }

                if (options) {
                    // the modal is being linked as part of an activation
                    $modal.finalize(element, options);
                }

                element.bind("click", function(e) {
                    e.stopPropagation();
                });
            }

            // TODO: listeners for closing the modal on click-away, (ESC) keypress
        });
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.controller('SetAppPasswordController', ['$scope', 'BookmarksService', 'ModalService',
        function($scope, BookmarksService, ModalService) {
            var vm = this;
            vm.app = $scope.$modalOptions.params.app;
            vm.password1 = '';
            vm.password2 = '';

            vm.setAppPassword = function($event) {
                if ($event) {
                    $event.stopPropagation();
                }
                if (!validatePassword()) {
                    return;
                }
                BookmarksService.setWSFedAppPassword(vm.app, vm.password1).then(function(response) {
                    if (angular.isDefined(response) && response.status === 200) {
                        vm.password1 = '';
                        vm.password2 = '';
                        ModalService.getCurrentModal().close();
                        ModalService.getCurrentModal().alert({
                            title: 'requestSuccessful',
                            message: 'app.setAppPassword.msg.success',
                            ok: 'ok'
                        });
                    } else {
                        ModalService.getCurrentModal().alert({
                            title: 'requestFailed',
                            message: 'app.setAppPassword.msg.fail',
                            ok: 'ok'
                        });
                    }
                }, function(error) {
                    if (error.handled) { //When system is under maintenance
                        return;
                    }
                    ModalService.getCurrentModal().alert({
                        title: 'requestFailed',
                        message: 'app.setAppPassword.msg.fail',
                        ok: 'ok'
                    });
                });
            };
            $scope.$watchCollection('[ctrl.password1,ctrl.password2]', function() {
                $scope.appAuthForm.$setValidity("unique", true);
            });
            function validatePassword() {
                var e1 = $scope.ctrl.password1;
                var e2 = $scope.ctrl.password2;
                if (e2 && e1 !== e2) {
                    $scope.appAuthForm.$setValidity("unique", false);
                    return false;
                } else {
                    $scope.appAuthForm.$setValidity("unique", true);
                    return true;
                }
            }
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

/* Modernizr 2.7.1 (Custom Build) | MIT & BSD
 * Build: http://modernizr.com/download/#-fontface-backgroundsize-borderradius-boxshadow-multiplebgs-opacity-rgba-cssgradients-csstransforms-csstransforms3d-csstransitions-draganddrop-inlinesvg-svg-touch-cssclasses-prefixed-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes-load
 */

window.Modernizr = (function( window, document, undefined ) {

    var version = '2.7.1',

        Modernizr = {},

        enableClasses = true,

        docElement = document.documentElement,

        mod = 'modernizr',
        modElem = document.createElement(mod),
        mStyle = modElem.style,

        inputElem  ,


        toString = {}.toString,

        prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),



        omPrefixes = 'Webkit Moz O ms',

        cssomPrefixes = omPrefixes.split(' '),

        domPrefixes = omPrefixes.toLowerCase().split(' '),

        ns = {'svg': 'http://www.w3.org/2000/svg'},

        tests = {},
        inputs = {},
        attrs = {},

        classes = [],

        slice = classes.slice,

        featureName,


        injectElementWithStyles = function( rule, callback, nodes, testnames ) {

            var style, ret, node, docOverflow,
                div = document.createElement('div'),
                body = document.body,
                fakeBody = body || document.createElement('body');

            if ( parseInt(nodes, 10) ) {
                while ( nodes-- ) {
                    node = document.createElement('div');
                    node.id = testnames ? testnames[nodes] : mod + (nodes + 1);
                    div.appendChild(node);
                }
            }

            style = ['&#173;','<style id="s', mod, '">', rule, '</style>'].join('');
            div.id = mod;
            (body ? div : fakeBody).innerHTML += style;
            fakeBody.appendChild(div);
            if ( !body ) {
                fakeBody.style.background = '';
                fakeBody.style.overflow = 'hidden';
                docOverflow = docElement.style.overflow;
                docElement.style.overflow = 'hidden';
                docElement.appendChild(fakeBody);
            }

            ret = callback(div, rule);
            if ( !body ) {
                fakeBody.parentNode.removeChild(fakeBody);
                docElement.style.overflow = docOverflow;
            } else {
                div.parentNode.removeChild(div);
            }

            return !!ret;

        },



        isEventSupported = (function() {

            var TAGNAMES = {
                'select': 'input', 'change': 'input',
                'submit': 'form', 'reset': 'form',
                'error': 'img', 'load': 'img', 'abort': 'img'
            };

            function isEventSupported( eventName, element ) {

                element = element || document.createElement(TAGNAMES[eventName] || 'div');
                eventName = 'on' + eventName;

                var isSupported = eventName in element;

                if ( !isSupported ) {
                    if ( !element.setAttribute ) {
                        element = document.createElement('div');
                    }
                    if ( element.setAttribute && element.removeAttribute ) {
                        element.setAttribute(eventName, '');
                        isSupported = is(element[eventName], 'function');

                        if ( !is(element[eventName], 'undefined') ) {
                            element[eventName] = undefined;
                        }
                        element.removeAttribute(eventName);
                    }
                }

                element = null;
                return isSupported;
            }
            return isEventSupported;
        })(),


        _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;

    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {
        hasOwnProp = function (object, property) {
            return _hasOwnProperty.call(object, property);
        };
    }
    else {
        hasOwnProp = function (object, property) {
            return ((property in object) && is(object.constructor.prototype[property], 'undefined'));
        };
    }


    if (!Function.prototype.bind) {
        Function.prototype.bind = function bind(that) {

            var target = this;

            if (typeof target != "function") {
                throw new TypeError();
            }

            var args = slice.call(arguments, 1),
                bound = function () {

                    if (this instanceof bound) {

                        var F = function(){};
                        F.prototype = target.prototype;
                        var self = new F();

                        var result = target.apply(
                            self,
                            args.concat(slice.call(arguments))
                        );
                        if (Object(result) === result) {
                            return result;
                        }
                        return self;

                    } else {

                        return target.apply(
                            that,
                            args.concat(slice.call(arguments))
                        );

                    }

                };

            return bound;
        };
    }

    function setCss( str ) {
        mStyle.cssText = str;
    }

    function setCssAll( str1, str2 ) {
        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));
    }

    function is( obj, type ) {
        return typeof obj === type;
    }

    function contains( str, substr ) {
        return !!~('' + str).indexOf(substr);
    }

    function testProps( props, prefixed ) {
        for ( var i in props ) {
            var prop = props[i];
            if ( !contains(prop, "-") && mStyle[prop] !== undefined ) {
                return prefixed == 'pfx' ? prop : true;
            }
        }
        return false;
    }

    function testDOMProps( props, obj, elem ) {
        for ( var i in props ) {
            var item = obj[props[i]];
            if ( item !== undefined) {

                if (elem === false) return props[i];

                if (is(item, 'function')){
                    return item.bind(elem || obj);
                }

                return item;
            }
        }
        return false;
    }

    function testPropsAll( prop, prefixed, elem ) {

        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),
            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');

        if(is(prefixed, "string") || is(prefixed, "undefined")) {
            return testProps(props, prefixed);

        } else {
            props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');
            return testDOMProps(props, prefixed, elem);
        }
    }    tests['touch'] = function() {
        var bool;

        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {
            bool = true;
        } else {
            injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {
                bool = node.offsetTop === 9;
            });
        }

        return bool;
    };

    tests['draganddrop'] = function() {
        var div = document.createElement('div');
        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);
    };



    tests['rgba'] = function() {
        setCss('background-color:rgba(150,255,150,.5)');

        return contains(mStyle.backgroundColor, 'rgba');
    };


    tests['multiplebgs'] = function() {
        setCss('background:url(https://),url(https://),red url(https://)');

        return (/(url\s*\(.*?){3}/).test(mStyle.background);
    };    tests['backgroundsize'] = function() {
        return testPropsAll('backgroundSize');
    };    tests['borderradius'] = function() {
        return testPropsAll('borderRadius');
    };

    tests['boxshadow'] = function() {
        return testPropsAll('boxShadow');
    };



    tests['opacity'] = function() {
        setCssAll('opacity:.55');

        return (/^0.55$/).test(mStyle.opacity);
    };

    tests['cssgradients'] = function() {
        var str1 = 'background-image:',
            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',
            str3 = 'linear-gradient(left top,#9f9, white);';

        setCss(
            (str1 + '-webkit- '.split(' ').join(str2 + str1) +
                prefixes.join(str3 + str1)).slice(0, -str1.length)
        );

        return contains(mStyle.backgroundImage, 'gradient');
    };    tests['csstransforms'] = function() {
        return !!testPropsAll('transform');
    };


    tests['csstransforms3d'] = function() {

        var ret = !!testPropsAll('perspective');

        if ( ret && 'webkitPerspective' in docElement.style ) {

            injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {
                ret = node.offsetLeft === 9 && node.offsetHeight === 3;
            });
        }
        return ret;
    };


    tests['csstransitions'] = function() {
        return testPropsAll('transition');
    };



    tests['fontface'] = function() {
        var bool;

        injectElementWithStyles('@font-face {font-family:"font";src:url("https://")}', function( node, rule ) {
            var style = document.getElementById('smodernizr'),
                sheet = style.sheet || style.styleSheet,
                cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';

            bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;
        });

        return bool;
    };

    tests['svg'] = function() {
        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;
    };

    tests['inlinesvg'] = function() {
        var div = document.createElement('div');
        div.innerHTML = '<svg/>';
        return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;
    };    for ( var feature in tests ) {
        if ( hasOwnProp(tests, feature) ) {
            featureName  = feature.toLowerCase();
            Modernizr[featureName] = tests[feature]();

            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);
        }
    }



    Modernizr.addTest = function ( feature, test ) {
        if ( typeof feature == 'object' ) {
            for ( var key in feature ) {
                if ( hasOwnProp( feature, key ) ) {
                    Modernizr.addTest( key, feature[ key ] );
                }
            }
        } else {

            feature = feature.toLowerCase();

            if ( Modernizr[feature] !== undefined ) {
                return Modernizr;
            }

            test = typeof test == 'function' ? test() : test;

            if (typeof enableClasses !== "undefined" && enableClasses) {
                docElement.className += ' ' + (test ? '' : 'no-') + feature;
            }
            Modernizr[feature] = test;

        }

        return Modernizr;
    };


    setCss('');
    modElem = inputElem = null;


    Modernizr._version      = version;

    Modernizr._prefixes     = prefixes;
    Modernizr._domPrefixes  = domPrefixes;
    Modernizr._cssomPrefixes  = cssomPrefixes;


    Modernizr.hasEvent      = isEventSupported;

    Modernizr.testProp      = function(prop){
        return testProps([prop]);
    };

    Modernizr.testAllProps  = testPropsAll;


    Modernizr.testStyles    = injectElementWithStyles;
    Modernizr.prefixed      = function(prop, obj, elem){
        if(!obj) {
            return testPropsAll(prop, 'pfx');
        } else {
            return testPropsAll(prop, obj, elem);
        }
    };


    docElement.className = docElement.className.replace(/(^|\s)no-js(\s|$)/, '$1$2') +

        (enableClasses ? ' js ' + classes.join(' ') : '');

    return Modernizr;

})(this, this.document);
/*yepnope1.5.4|WTFPL*/
(function(a,b,c){function d(a){return"[object Function]"==o.call(a)}function e(a){return"string"==typeof a}function f(){}function g(a){return!a||"loaded"==a||"complete"==a||"uninitialized"==a}function h(){var a=p.shift();q=1,a?a.t?m(function(){("c"==a.t?B.injectCss:B.injectJs)(a.s,0,a.a,a.x,a.e,1)},0):(a(),h()):q=0}function i(a,c,d,e,f,i,j){function k(b){if(!o&&g(l.readyState)&&(u.r=o=1,!q&&h(),l.onload=l.onreadystatechange=null,b)){"img"!=a&&m(function(){t.removeChild(l)},50);for(var d in y[c])y[c].hasOwnProperty(d)&&y[c][d].onload()}}var j=j||B.errorTimeout,l=b.createElement(a),o=0,r=0,u={t:d,s:c,e:f,a:i,x:j};1===y[c]&&(r=1,y[c]=[]),"object"==a?l.data=c:(l.src=c,l.type=a),l.width=l.height="0",l.onerror=l.onload=l.onreadystatechange=function(){k.call(this,r)},p.splice(e,0,u),"img"!=a&&(r||2===y[c]?(t.insertBefore(l,s?null:n),m(k,j)):y[c].push(l))}function j(a,b,c,d,f){return q=0,b=b||"j",e(a)?i("c"==b?v:u,a,b,this.i++,c,d,f):(p.splice(this.i++,0,a),1==p.length&&h()),this}function k(){var a=B;return a.loader={load:j,i:0},a}var l=b.documentElement,m=a.setTimeout,n=b.getElementsByTagName("script")[0],o={}.toString,p=[],q=0,r="MozAppearance"in l.style,s=r&&!!b.createRange().compareNode,t=s?l:n.parentNode,l=a.opera&&"[object Opera]"==o.call(a.opera),l=!!b.attachEvent&&!l,u=r?"object":l?"script":"img",v=l?"script":u,w=Array.isArray||function(a){return"[object Array]"==o.call(a)},x=[],y={},z={timeout:function(a,b){return b.length&&(a.timeout=b[0]),a}},A,B;B=function(a){function b(a){var a=a.split("!"),b=x.length,c=a.pop(),d=a.length,c={url:c,origUrl:c,prefixes:a},e,f,g;for(f=0;f<d;f++)g=a[f].split("="),(e=z[g.shift()])&&(c=e(c,g));for(f=0;f<b;f++)c=x[f](c);return c}function g(a,e,f,g,h){var i=b(a),j=i.autoCallback;i.url.split(".").pop().split("?").shift(),i.bypass||(e&&(e=d(e)?e:e[a]||e[g]||e[a.split("/").pop().split("?")[0]]),i.instead?i.instead(a,e,f,g,h):(y[i.url]?i.noexec=!0:y[i.url]=1,f.load(i.url,i.forceCSS||!i.forceJS&&"css"==i.url.split(".").pop().split("?").shift()?"c":c,i.noexec,i.attrs,i.timeout),(d(e)||d(j))&&f.load(function(){k(),e&&e(i.origUrl,h,g),j&&j(i.origUrl,h,g),y[i.url]=2})))}function h(a,b){function c(a,c){if(a){if(e(a))c||(j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}),g(a,j,b,0,h);else if(Object(a)===a)for(n in m=function(){var b=0,c;for(c in a)a.hasOwnProperty(c)&&b++;return b}(),a)a.hasOwnProperty(n)&&(!c&&!--m&&(d(j)?j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}:j[n]=function(a){return function(){var b=[].slice.call(arguments);a&&a.apply(this,b),l()}}(k[n])),g(a[n],j,b,n,h))}else!c&&l()}var h=!!a.test,i=a.load||a.both,j=a.callback||f,k=j,l=a.complete||f,m,n;c(h?a.yep:a.nope,!!i),i&&c(i)}var i,j,l=this.yepnope.loader;if(e(a))g(a,0,l,0);else if(w(a))for(i=0;i<a.length;i++)j=a[i],e(j)?g(j,0,l,0):w(j)?B(j):Object(j)===j&&h(j,l);else Object(a)===a&&h(a,l)},B.addPrefix=function(a,b){z[a]=b},B.addFilter=function(a){x.push(a)},B.errorTimeout=1e4,null==b.readyState&&b.addEventListener&&(b.readyState="loading",b.addEventListener("DOMContentLoaded",A=function(){b.removeEventListener("DOMContentLoaded",A,0),b.readyState="complete"},0)),a.yepnope=k(),a.yepnope.executeStack=h,a.yepnope.injectJs=function(a,c,d,e,i,j){var k=b.createElement("script"),l,o,e=e||B.errorTimeout;k.src=a;for(o in d)k.setAttribute(o,d[o]);c=j?h:c||f,k.onreadystatechange=k.onload=function(){!l&&g(k.readyState)&&(l=1,c(),k.onload=k.onreadystatechange=null)},m(function(){l||(l=1,c(1))},e),i?k.onload():n.parentNode.insertBefore(k,n)},a.yepnope.injectCss=function(a,c,d,e,g,i){var e=b.createElement("link"),j,c=i?h:c||f;e.href=a,e.rel="stylesheet",e.type="text/css";for(j in d)e.setAttribute(j,d[j]);g||(n.parentNode.insertBefore(e,n),m(c,0))}})(this,document);
Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0));};
;

(function(module) {
    'use strict';

    module.constant('PAGING', {
        PAGE_SIZE: 98 //console shows 7 rows so choose a number divisible by 7
    });
})(angular.module('com.vmware.greenbox.appCenter'));

// (c) 2016 VMware, Inc.  All rights reserved.

(function(module) {
    'use strict';
    module.controller('PasswordVaultBannerController',
        ['$toast',
            'UserAgent',
            'PasswordVaultService',
            'hznLocalStorage',
            'BootstrapService',
            function($toast,
                     $location,
                     PasswordVaultService,
                     hznLocalStorage,
                     BootstrapService) {
                var vm = this;

                vm.storeInstallLink = PasswordVaultService.getPVExtensionDownloadUrl();

                vm.setPVBannerPreference = function() {
                    if (vm.pvsettings) {
                        hznLocalStorage.setItem("hidePVBanner", true);
                    } else {
                        hznLocalStorage.removeItem("hidePVBanner");
                    }
                };

                vm.installPasswordVaultPlugin = function() {
                    $toast.close('app.passwordVault.banner.msg');
                    window.open(vm.storeInstallLink);
                };
            }]);
})(angular.module("com.vmware.greenbox.appCenter"));


angular.module('com.vmware.greenbox.appCenter').factory('RequestFactory', [function() {
    'use strict';

    function RequestFactory(url, config) {
        var ng = angular;
        var request = {};

        if (config && ng.isObject(config)) {
            request = ng.extend(request, config);
        }

        request.url = request.url || url;
        request.method = request.method || "GET";

        return request;
    }

    return RequestFactory;
}]);

(function(module) {
    'use strict';
    module.service('AppActionService', [
        '$http',
        'RequestFactory',
        function(
            $http,
            RequestFactory) {
            var appActionService = this;

            appActionService.resetDesktop = function(resetUrl) {
                var request = RequestFactory(resetUrl, {
                    method: 'PUT',
                    headers: {
                        Accept: 'application/hal+json'
                    }
                });
                return $http(request);
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));


/**
 * This is a utility service used to store and retrieve the client side data
 * persistently in the browser localStorage.
 *
 * In the case of localStorage is not supported, we will fall back to angular
 * cookie service.
 *
 */

angular.module('com.vmware.greenbox.appCenter').factory('hznLocalStorage', ['$cookies', '$window',
    function($cookies, $window) {
        'use strict';

        var hznLocalStorage = {};
        var storage;
        var supported;
        try {
            storage = (typeof $window.localStorage === 'undefined') ? undefined : $window.localStorage;
            supported = (typeof storage !== 'undefined');
            // Might be supported but still have "QUOTA_EXCEEDED_ERR" on Safari so do another test
            if (supported) {
                var test = 'test';
                storage.setItem(test, test);
                storage.removeItem(test);
            }
        } catch (e) {
            supported = false;
        }

        if (supported) {
            hznLocalStorage = storage;
        } else {
            hznLocalStorage = $cookies.getAll();
        }

        return hznLocalStorage;
    }]);

(function(module) {
    'use strict';

    module.service('AppDownloadService', ['UserAgent', '$window', 'ConfigService', 'Resource', 'UtilService',
        function(UserAgent, $window, ConfigService, Resource, UtilService) {
            var appDownloadService = this,
                IOS_APP_STORE_LINK = 'https://itunes.apple.com/us/app/vmware-workspace-one/id1031603080?mt=8',
                ANDROID_APP_STORE_LINK = 'https://play.google.com/store/apps/details?id=com.airwatch.vmworkspace&hl=en',
                HUB_IOS_APP_STORE_LINK = 'https://itunes.apple.com/us/app/intelligent-hub/id338761996',
                HUB_ANDROID_APP_STORE_LINK = 'https://play.google.com/store/apps/details?id=com.airwatch.androidagent';

            function downloadAppForWS1() {
                if (UserAgent.isIOS()) {
                    appDownloadService.appStoreInstallLink = IOS_APP_STORE_LINK;
                } else if (UserAgent.isAndroid()) {
                    appDownloadService.appStoreInstallLink = ANDROID_APP_STORE_LINK;
                } else if (UserAgent.isMac()) {
                    appDownloadService.downloadMacApp();
                }
            }

            function downloadAppForHub() {
                if (UserAgent.isIOS()) {
                    appDownloadService.appStoreInstallLink = HUB_IOS_APP_STORE_LINK;
                } else if (UserAgent.isAndroid()) {
                    appDownloadService.appStoreInstallLink = HUB_ANDROID_APP_STORE_LINK;
                }
            }

            appDownloadService.downloadApp = function() {
                if (!UtilService.isHubBrowsers()) {
                    downloadAppForWS1();
                } else {
                    downloadAppForHub();
                }
                if (appDownloadService.appStoreInstallLink) {
                    return $window.open(appDownloadService.appStoreInstallLink, '_blank');
                }
            };

            appDownloadService.downloadMacApp = function() {
                appDownloadService.checkIfMacAppExists().then(function(data) {
                    var anchor = angular.element('<a/>');
                    anchor.css({display: 'none'}); // Make sure it's not visible
                    angular.element(document.body).append(anchor); // Attach to document

                    anchor.attr({
                        target: '_blank',
                        download: 'workspace.dmg',
                        href: data.downloadUrl
                    })[0].click();

                    anchor.remove();
                });
            };

            appDownloadService.checkIfMacAppExists = function(appVersion) {
                return ConfigService.getMacAppDownloadLink().then(function(url) {
                    url = url.replace('{deviceType}', 'APPLEOSX')
                        .replace('{deviceOem}', 'apple')
                        .replace('{osVersion}', UserAgent.getMacOsVersion())
                        .replace('{appId}', 'com.air-watch.appcenter.mac');
                    //appVersion is optional
                    if (appVersion) {
                        url.replace('{appVersion}', appVersion);
                    } else {
                        url = url.indexOf('&appVersion') ? url.substring(0, url.indexOf('&appVersion')) : url;
                    }
                    return Resource(url, {
                        headers: {
                            'Accept': 'application/hal+json',
                            'method': 'GET'
                        }
                    }).get();
                });
            };
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.service('BootstrapService', [
                        '$rootScope',
                        '$q',
                        'Resource',
                        'UtilService',
                        'ConfigService',
                        'UserAgent',
                        'PasswordVaultService',
                        'LaunchUtilityService',
                        'HttpProxyService',
                        'LocalStorageConstants',
                        '$timeout',
                        'TenantCustomizationService',
                        function(
                            $rootScope,
                            $q,
                            Resource,
                            UtilService,
                            ConfigService,
                            UserAgent,
                            PasswordVaultService,
                            LaunchUtilityService,
                            HttpProxyService,
                            LocalStorageConstants,
                            $timeout,
                            TenantCustomizationService) {
        var bootstrapService = this;
        var excludeThinAppsInLauncher = !UserAgent.isThinAppSortSupportedBrowser();
        var checkForPVapps = UserAgent.isPasswordVaultPluginSupportedBrowser();
        var directEnrollmentEnabled = false;
        var hasInstallEvents = false;
        var initAppCallPromise;
        var bookmarkedAppsCount = 0;
        var appTypeInfo = {};

        bootstrapService.getBootstrapInfo = function(excludeThinAppsInLauncher, clearEntitlementsCache) {
            var params = {};
            params.excludeThinAppsInLauncher = excludeThinAppsInLauncher;
            if (clearEntitlementsCache) {
                params.clearEntitlementsCache = clearEntitlementsCache;
                HttpProxyService.clearAll();
            }
            return ConfigService.getBootstrapUrl().then(function(bootstrapUrl) {
                if (UtilService.hideVirtualApps()) {
                    bootstrapUrl = bootstrapUrl + "?displayMode=phone";
                }
                if (bootstrapUrl) {
                    return HttpProxyService.get(LocalStorageConstants.BOOTSTRAP, bootstrapUrl, {headers: {'Accept': 'application/hal+json', 'method': 'GET'}, params: params});
                }
            });
        };

        bootstrapService.init = function() {
            return bootstrapService.getBootstrapInfo(excludeThinAppsInLauncher).then(function(bootstrapData) {
                var tenantCustomizations = TenantCustomizationService.getCustomizationSettings();
                if (tenantCustomizations) {
                    LaunchUtilityService.setUseNonNPAPIForCitrixLaunch(tenantCustomizations.useNonNPAPIForCitrixLaunch);
                    if (UserAgent.isWindows()) {
                        LaunchUtilityService.setSuppressLaunchDialog(tenantCustomizations.suppressLaunchDialog.WINDOWS);
                    } else if (UserAgent.isMac()) {
                        LaunchUtilityService.setSuppressLaunchDialog(tenantCustomizations.suppressLaunchDialog.MAC);
                    } else if (UserAgent.isMobile()) {
                        LaunchUtilityService.setSuppressLaunchDialog(tenantCustomizations.suppressLaunchDialog.MOBILE);
                    }
                }
                if (bootstrapData && checkForPVapps) {
                    if (bootstrapData.passwordVaultRootResponse) {
                        var downloadUrl = UtilService.getObjValue(bootstrapData, 'passwordVaultRootResponse[body]["_links"]["hw-pwvault-extension"]["href"]', '');
                        PasswordVaultService.setPVExtensionDownloadUrl(downloadUrl);
                    }
                    PasswordVaultService.setHasPvApps((parseInt(bootstrapData.appInfo.pvapps.entitledCount) > 0));
                    $rootScope.$broadcast('evt-passwordvault-pingextension', (parseInt(bootstrapData.appInfo.pvapps.entitledCount) > 0));
                }
            });
        };

        bootstrapService.setDirectEnrollmentStatus = function(enabled) {
            directEnrollmentEnabled = enabled;
        };

        bootstrapService.getDirectEnrollmentStatus = function() {
            return directEnrollmentEnabled;
        };

        bootstrapService.getInitAppCallsPromise = function() {
            return initAppCallPromise;
        };
        bootstrapService.setInitAppCallsPromise = function(promsie) {
            initAppCallPromise = promsie;
        };

        bootstrapService.hasInstallEvents = function() {
            return hasInstallEvents;
        };

        bootstrapService.setInstallEventsStatus = function(installEvents) {
            hasInstallEvents = installEvents;
        };

        bootstrapService.getBookmarkedAppsCount = function() {
            return bookmarkedAppsCount;
        };

        bootstrapService.setBookmarkedAppsCount = function(count) {
            bookmarkedAppsCount = count;
        };

        bootstrapService.getAppTypeInfo = function() {
            return appTypeInfo;
        };

        bootstrapService.setAppTypeInfo = function(appInfo) {
            appTypeInfo = appInfo;
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

	module.service('BrandingService', ['Resource', 'ConfigService', function(Resource, ConfigService) {
        var brandingService = this;

        brandingService.getBranding = function() {
            return ConfigService.getBrandingUrl().then(function(url) {
                return Resource(url, {
                    headers: {'Accept': 'application/vnd.vmware.catalog.branding-details.v1+json', 'method': 'GET'}
                }).get();
            });
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

// (c) 2016 VMware, Inc.  All rights reserved.
(function(module) {
    'use strict';
    module.service('BrowserRuntimeService', ['UtilService', 'ConfigService', 'AppLauncherForDesktop', '$window', '$http', 'RequestFactory',
        function(UtilService, ConfigService, AppLauncherForDesktop, $window) {
            this.logout = function logout(apiLogoutUrl) {
                window.location.href = apiLogoutUrl;
            };

            this.about = function about() {
                location.hash = '#/about';
            };

            this.launchApp = function launchApp(app, $scope) {
                AppLauncherForDesktop.launch(app, $scope);
            };

            this.enroll = function enroll(mdmUrl) {
                $window.location = mdmUrl;
            };

            this.openUrl = function(extUrl) {
                window.open(extUrl);
            };

            this.installApp = function enroll(installAppUrl) {
                $window.location = installAppUrl;
            };

            this.closePassword = function() {
                window.history.back();
            };
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));

// (c) 2016 VMware, Inc.  All rights reserved.
(function(module) {
    'use strict';
    module.service('ClientRuntimeFactory', [
                        'UserAgent',
                        'BrowserRuntimeService',
                        'JadeV2RuntimeService',
                        function(UserAgent,
                                 BrowserRuntimeService,
                                 JadeV2RuntimeService) {
            var clientRuntime = BrowserRuntimeService;

            if (UserAgent.isAWJadeV2()) {
                clientRuntime = JadeV2RuntimeService;
            }
            return {
                get: function() {
                    return clientRuntime;
                }
            };
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));

// (c) 2016 VMware, Inc.  All rights reserved.

/**
 *  Base service that uses the appropriate runtime implementation
 *  e.g. Jadev1, Jadev2, HorizonClient and Browser
 *  This forces all the implementations to define the interfaces
 */

(function(module) {
    // use strict' it depreciates arguments.callee
    module.service('ClientRuntimeService', ['ClientRuntimeFactory',
                                            function(ClientRuntimeFactory) {
            var _clientRuntime = ClientRuntimeFactory.get();

            this.logout = function logout() {
                _invokeImplementation('logout', arguments);
            };

            this.about = function about() {
                _invokeImplementation('about', arguments);
            };

            this.notification = function about() {
                _invokeImplementation('notification', arguments);
            };

            this.launchApp = function launchApp() {
                _invokeImplementation('launchApp', arguments);
            };

            this.enroll = function enroll() {
                _invokeImplementation('enroll', arguments);
            };

            this.unEnroll = function unEnroll() {
                _invokeImplementation('unEnroll', arguments);
            };

            this.register = function register() {
                _invokeImplementation('register', arguments);
            };

            this.openUrl = function openUrl() {
                _invokeImplementation('openUrl', arguments);
            };

            this.installApp = function installApp() {
                _invokeImplementation('installApp', arguments);
            };

            this.installProgress = function installProgress() {
                _invokeImplementation('installProgress', arguments);
            };

            this.showAppInstall = function showAppInstall() {
                _invokeImplementation('showAppInstall', arguments);
            };

            this.openEmail = function openEmail() {
                _invokeImplementation('openEmail', arguments);
            };

            this.openTel = function openTel() {
                _invokeImplementation('openTel', arguments);
            };

            this.openSms = function openSms() {
                _invokeImplementation('openSms', arguments);
            };

            this.openMaps = function openMaps() {
                _invokeImplementation('openMaps', arguments);
            };

            this.accounts = function() {
                _invokeImplementation('accounts', arguments);
            };

            this.closePassword = function() {
                _invokeImplementation('closePassword', arguments);
            };

            this.refreshUCC = function() {
                _invokeImplementation('refreshUCC', arguments);
            };

            this.openNativeAppDetails = function() {
                _invokeImplementation('openNativeAppDetails', arguments);
            };

            function _invokeImplementation(fnName, args) {
                if (_clientRuntime[fnName]) {
                    _clientRuntime[fnName].apply(null, Array.prototype.slice.call(args));
                }
            }
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.service('ConfigService', ['$http', '$q', '$location', 'RequestFactory', 'Resource', 'UtilService', '$cookies', 'HttpProxyService', 'LocalStorageConstants', 'UserAgent',
        function($http, $q, $location, RequestFactory, Resource, UtilService, $cookies, HttpProxyService, LocalStorageConstants, UserAgent) {
            var baseUrl;

            var configService = this;

            var getLink = function(api) {
                return configService.getRootApiResource().get().thenGet('_links').thenGet(api).thenGet('href');
            };

            configService.doNotRefreshCache = false;
            configService.isReloading = false;
            configService.refreshingCookie = false;
            configService.mdmOnly = false;

            configService.getAppCategories = function() {
                var urlPromise = configService.getAppCategoriesUrl();
                return urlPromise.then(function(url) {
                    if (UtilService.hideVirtualApps()) {
                        url = url + "?displayMode=phone";
                    }
                    var request = HttpProxyService.get(LocalStorageConstants.ENTITLEMENTS_CATEGORIES, url, {
                        headers: {
                            'Accept': 'application/hal+json',
                            'method': 'GET'
                        }
                    }, false);
                    return request.then(function(value) {
                        if (value.hasOwnProperty('_embedded')) {
                            return value._embedded.categoryResourceList;
                        }
                    });
                });
            };

            configService.getBaseUrl = function() {
                if (baseUrl) {
                    return baseUrl;
                }
                if (!window.location.origin) {
                    window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port : '');
                }
                return window.location.origin;
            };
            configService.getRootApiResource = function() {
                var tenantCode = UtilService.getQueryParams().tenantCode;
                var apiResourceUrl = configService.getBaseUrl() + '/catalog-portal/services/api';
                if (tenantCode) {
                    apiResourceUrl += '?tenantCode=' + tenantCode;
                }
                return Resource(apiResourceUrl, {
                    cache: true,
                    headers: {'Accept': 'application/hal+json', 'method': 'GET'}
                });
            };
            configService.getEntitlementsUrl = function() {
                return getLink('entitlements');
            };
            configService.getLauncherUrl = function() {
                return getLink('launcher');
            };
            configService.getNotificationUrl = function() {
                return getLink('actioncardNotifications');
            };
            configService.getNotificationBeaconUrl = function() {
                return getLink('actioncardBeacon');
            };
            configService.getAppCategoriesUrl = function() {
                return getLink('categories');
            };
            configService.getLauncherCategoriesUrl = function() {
                return getLink('launcherCategories');
            };
            configService.getBookmarkReorderUrl = function() {
                return getLink('reorderBookmarks');
            };
            configService.enrollmentSupported = function() {
                //Enrollment is supported if the current device is unmanaged.
                // Manged device has deviceUid in the URL
                return window.location.href.indexOf('deviceUdid') < 0;
            };
            configService.getEnrollmentUrl = function() {
                return getLink('enrollDevice');
            };
            configService.getBootstrapUrl = function() {
                return getLink('bootstrap');
            };
            configService.getUserInfoUrl = function() {
                return getLink('user');
            };
            configService.getUserAnnouncementUrl = function() {
                return getLink('userAnnouncement');
            };
            configService.getBrandingUrl = function() {
                return getLink('branding').then(function(brandingUrl) {
                    //TODO: remove when we devMode support
                    return brandingUrl + window.location.search;
                });
            };
            configService.getHubBrandingUrl = function() {
                return getLink('hub-branding').then(function(brandingUrl) {
                    return brandingUrl + window.location.search;
                });
            };
            configService.getRefreshCacheUrl = function() {
                return getLink('refreshCache');
            };

            configService.getAutomatedAppInstallUrl = function() {
                return getLink('automatedAppInstall');
            };
            configService.getOtaUrl = function() {
                return getLink('ota');
            };
            configService.getNativeClientRedirectUrl = function() {
                return getLink('redirect');
            };

            configService.getUserDevicesUrl = function() {
                return getLink('user-devices');
            };
            configService.getEventsUrl = function() {
                return getLink('events');
            };

            configService.getLogoutUrl = function() {
                return getLink('logout');
            };

            configService.getPasswordVaultRootUrl = function() {
                return getLink('passwordVaultRoot');
            };

            configService.getNotificationServiceUrl = function() {
                return getLink('notificationService');
            };

            configService.getUserDevices = function() {
                return getDevices(configService.getUserDevicesUrl());
            };

            configService.getMobileFlowsRegisterUrl = function() {
                return getLink('approvalNotificationsAutoRegistration');
            };

            configService.getMobileFlowsConnectorsUrl = function() {
                return getLink('endUserApprovalConnectors');
            };

            configService.getMobileFlowsConnectorRegistrationUrl = function() {
                return getLink('approvalsConnectorRegistration');
            };

            function getDevices(urlPromise) {
                return urlPromise.then(function(url) {
                    var request = Resource(url, {headers: {'Accept': 'application/hal+json', 'method': 'GET'}});
                    return request.get().thenGet('_embedded').thenGet('userDeviceResourceList');
                });
            }

            configService.unlinkDevice = function(device) {
                if (device && device._links.unlink) {
                    var req = RequestFactory(device._links.unlink.href, {
                        method: 'PUT',
                        headers: {
                            Accept: 'application/hal+json'
                        }
                    });
                    return $http(req);
                }
            };

            configService.refreshCache = function(sync) {
                if (configService.doNotRefreshCache) {
                    configService.doNotRefreshCache = false;
                    return;
                }
                var urlPromise = configService.getRefreshCacheUrl();
                // Added this synchronous option to Address IE11 issue HW-71955.
                // In IE11 async refresh call is never places and hence user is not seeing latest
                // data after browser refresh.
                // Had to hardcode the refresh call URL it is async call to get the refreshapi url from
                // root api response.
                if (sync) {
                    var refreshCacheUrl = configService.getBaseUrl() + '/catalog-portal/services/api/refresh';
                    jQuery.ajax({
                        url: refreshCacheUrl,
                        success: function(a) {
                        },
                        async: false
                    });
                } else {
                    return urlPromise.then(function(url) {
                        var request = Resource(url, {headers: {'Accept': 'application/hal+json', 'method': 'GET'}});
                        return request.get();
                    });
                }
            };

            configService.refreshUserCatalogContextToken = function() {
                return Resource($location.absUrl(), {headers: {'method': 'GET'}, 'sync': true}).get();
            };

            configService.getFeatureFlagsUrl = function() {
                return getLink('toggles');
            };
            configService.featureFlags = function() {
                var urlPromise = configService.getFeatureFlagsUrl();
                return urlPromise.then(function(url) {
                    var request = Resource(url, {
                        cache: true,
                        headers: {'Accept': 'application/hal+json', 'method': 'GET'}
                    });
                    return request.get().thenGet('toggles');
                });
            };

            configService.isFeatureEnabled = function(feature) {
                var featureEnabled = false;
                return configService.featureFlags().then(function(features) {
                    var i;
                    for (i = 0; i < features.length; i++) {
                        if (features[i].featureName === feature) {
                            featureEnabled = features[i].enabled;
                        }
                    }
                    return featureEnabled;
                });
            };
            configService.getAdminConsoleUrl = function() {
                return getLink('adminConsole');
            };

            configService.getAdminConsoleTermsUrl = function() {
                return getLink('adminConsoleTerms');
            };

            configService.getMacAppDownloadLink = function() {
                return getLink('appDownload');
            };

            configService.getDeviceRegistrationDetail = function() {
                return getLink('deviceRegistrationDetails').then(function(url) {
                    //url exists only if MDM
                    if (url) {
                        return Resource(url.replace('{deviceId}', UtilService.getQueryParams().deviceUdid), {
                            headers: {
                                'Accept': 'application/vnd.vmware.catalog.devices-registration-details-v1-hal+json',
                                'method': 'GET'
                            }
                        });
                    }
                });
            };

            configService.getDeviceUnRegistrationUrl = function() {
                return getLink('deviceUnregistration');
            };
            configService.getAuthUri = function() {
                return getLink('authUri').then(function(authUri) {
                    var req = Resource(authUri, {headers: {method: 'GET', Accept: 'application/hal+json'}});
                    return req.get().then(function(res) {
                        return res.authUri;
                    });
                });
            };

            configService.apiAuthenticationVerify = function() {
                return getLink('apiAuthenticationVerify').then(function(apiAuthenticationVerifyUrl) {
                    /*If there was 401 call prior to this, server deletes UCC cookie so appending dummy id if UCC is undefined.
                    This call is used to validate if HZN is still valid or not.*/
                    var uccCookie = $cookies.get("USER_CATALOG_CONTEXT") || "dummy-ucc";
                    var finalPpiAuthenticationVerifyUrl = apiAuthenticationVerifyUrl.replace("{eucToken}", uccCookie);
                    if (UserAgent.isAWJade() && configService.mdmOnly) {
                        finalPpiAuthenticationVerifyUrl = finalPpiAuthenticationVerifyUrl + window.location.search;
                    }
                    return $http({
                        url: finalPpiAuthenticationVerifyUrl,
                        method: "HEAD",
                        headers: {Accept: "application/hal+json"}
                    });
                });
            };

            configService.changePassword = function(requestBody) {
                return getLink('changePassword').then(function(url) {
                    var req = RequestFactory(url, {
                        method: 'PUT',
                        headers: [{"Accept": "application/hal+json"},
                            {"Content-Type": "application/json"}],
                        data: requestBody
                    });
                    return $http(req);
                });
            };

            configService.getPasswordPolicy = function() {
                return getLink('passwordPolicy').then(function(url) {
                    return Resource(url, {
                        headers: {
                            'Content-Type': 'application/vnd.vmware.horizon.manager.tenants.tenant.passwordpolicy+json',
                            'method': 'GET'
                        }
                    });
                });
            };

            configService.getTermsOfUse = function() {
                return getLink('termsOfUse').then(function(url) {
                    var req = Resource(url, {headers: {'Accept': 'application/hal+json', 'method': 'GET'}});
                    return req.get().then(function(resp) {
                        return resp;
                    }, function(errorResp) {
                        return errorResp;
                    });
                });
            };

            configService.getTenantCustomizations = function(flag) {
                var cacheRefresh = flag || false;
                return getLink('tenantCustomizations').then(function(url) {
                    return Resource(url.replace('{refreshCache}', cacheRefresh), {
                        headers: {
                            'Accept': 'application/hal+json',
                            'method': 'GET'
                        }
                    }).get();
                });
            };

            configService.getFeatureCustomization = function(flag) {
                var cacheRefresh = flag || false;
                return getLink('featureCustomizations').then(function(url) {
                    return Resource(url.replace('{refreshCache}', cacheRefresh), {
                        headers: {
                            'Accept': 'application/vnd.vmware.catalog.customizations.feature.endUserUI+json',
                            'method': 'GET'
                        }
                    }).get();
                });
            };

            configService.getCatalogCustomizations = function(flag) {
                var cacheRefresh = flag || false;
                return getLink('catalogCustomizations').then(function(url) {
                    return Resource(url.replace('{refreshCache}', cacheRefresh), {
                        headers: {
                            'Accept': 'application/vnd.vmware.catalog.customizations.catalog.composite+json',
                            'method': 'GET'
                        }
                    }).get();
                });
            };

            configService.getPeopleUrl = function() {
                return getLink('userSearch');
            };

            configService.getUserDetailsUrl = function() {
                return getLink('userDetails');
            };

            configService.getVisitedUsersUrl = function() {
                return getLink('visitedUsers');
            };

            configService.getUserConsoleTermsUrl = function() {
                return getLink('vIDMTermsOfUsePage');
            };

            configService.getTermsOfUseStatus = function() {
                return getLink('termsOfUseUserAcceptanceStatus').then(function(url) {
                    return Resource(url, {
                        headers: {
                            'Accept': 'application/hal+json',
                            'method': 'GET'
                        }
                    }).get();
                });
            };

            configService.mdmOnlyWS1 = function(data) {
                configService.mdmOnly = data;
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('CopyToClipboardService', ['$window', '$document', function($window, $document) {
        function createNode(text, context) {
            var node = $document[0].createElement('textarea');
            node.style.position = 'absolute';
            node.style.fontSize = '12pt';
            node.style.border = '0';
            node.style.padding = '0';
            node.style.margin = '0';
            node.style.left = '-10000px';
            node.style.top = ($window.pageYOffset || $document[0].documentElement.scrollTop) + 'px';
            node.textContent = text;
            return node;
        }

        function copyNode(node) {
            try {
                $document[0].body.style.webkitUserSelect = 'initial';
                var selection = $document[0].getSelection();
                selection.removeAllRanges();
                var range = document.createRange();
                range.selectNodeContents(node);
                selection.addRange(range);
                node.select();
                node.setSelectionRange(0, 999999);

                try {
                    if (!$document[0].execCommand('copy')) {
                        return false;
                    }
                } finally {
                    selection.removeAllRanges();
                }
            } finally {
                $document[0].body.style.webkitUserSelect = '';
            }
            return true;
        }

        function copy(text, context) {
            var left = $window.pageXOffset || $document[0].documentElement.scrollLeft;
            var top = $window.pageYOffset || $document[0].documentElement.scrollTop;
            var node = createNode(text, context);
            $document[0].body.appendChild(node);
            var copied = copyNode(node);

            $window.scrollTo(left, top);
            $document[0].body.removeChild(node);
            return copied;
        }

        return {
            copy: copy
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.service('EventsService', ['Resource', 'ConfigService', '$q',
        function(Resource, ConfigService, $q) {
        var eventsService = this;

        eventsService.getEvents = function() {
            return ConfigService.getEventsUrl().then(function(url) {
                return Resource(url, {
                    headers: {
                        'Accept': 'application/vnd.vmware.catalog.user.event-get-all-v1-hal+json',
                        'method': 'GET'
                    }
                }).get();
            });
        };

        eventsService.addEvent = function(action, appId) {
            return ConfigService.getEventsUrl().then(function(url) {
                return Resource(url, {
                    headers: {
                        'Content-Type': 'application/vnd.vmware.catalog.user.event-create-v1+json',
                        'Accept': 'application/vnd.vmware.catalog.user.event-create-confirmation-v1-hal+json',
                        'method': 'POST'
                    }
                }).postResource('{"action": "' + action + '", "eventData": { "appId" : "' + appId + '"}}');
            });
        };

        eventsService.addHubEventWithUrl = function(action, appId) {
            return ConfigService.getEventsUrl().then(function(url) {
                return Resource(url, {
                    headers: {
                        'Content-Type': 'application/vnd.vmware.catalog.user.event-create-v1+json',
                        'Accept': 'application/vnd.vmware.catalog.user.event-create-confirmation-v1-hal+json',
                        'method': 'POST'
                    }
                }).postResource('{"action": "' + action + '", "eventData": { "appId" : "' + appId + '", "url": "' + location.hash + '"}}');
            });
        };

        eventsService.deleteEvent = function(eventId) {
            return ConfigService.getEventsUrl().then(function(url) {
                return Resource(url + '/' + eventId, {
                    headers: {'method': 'DELETE'}
                }).deleteResource();
            });
        };

        eventsService.deleteAllEvents = function() {
            return ConfigService.getEventsUrl().then(function(url) {
                return Resource(url, {
                    headers: {'method': 'DELETE'}
                }).deleteResource();
            });
        };

        eventsService.getEventsOfType = function(eventType) {
            return eventsService.getEvents()
                .then(function(events) {
                    var defer = $q.defer();
                    var filteredEvents = _.filter(events, function(event) {
                        return event.action == eventType;
                    });
                    defer.resolve(filteredEvents);
                    return defer.promise;
                });
        };

        eventsService.filterEventsByType = function(events, eventType) {
            var filteredEvents = _.filter(events, function(event) {
                return event.action == eventType;
            });
            return filteredEvents;
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

/**
 * This service will handle most of the Horizon actions.
 */
(function(module) {
    'use strict';

    module.service('HorizonService', ['UtilService', 'HorizonClientScheme', 'ConfigService',
        function(UtilService, HorizonClientScheme, ConfigService) {
            var appCenterCtrl = null;

            this.init = function(ctrl) {
                /**
                 * Do horizon initialization, more action will be added here later.
                 * The action will include:
                 * 1. idle session time out
                 * 2. request for broker saml link
                 * 3. more...
                 */
                if (!ctrl) {
                    return;
                }

                appCenterCtrl = ctrl;
                // Init flags for horizon client
                appCenterCtrl.horizon = {
                    // Hide the user menu button
                    showUserInfo: false
                };

                UtilService.openURIScheme(HorizonClientScheme.LOGIN_DONE);
                // Send api links to client
                ConfigService.getRootApiResource().get().thenGet('_links').then(function(API) {
                    var key,
                        APIObj = {};

                    for (key in API) {
                        if (API.hasOwnProperty(key)) {
                            APIObj[key] = API[key].href;
                        }
                    }
                    UtilService.openURIScheme(UtilService.buildScheme(
                        HorizonClientScheme.GB_API, APIObj));
                });
            };

            this.sendUserInfo = function() {
                // Encode the user name because it is possibly non ASCII chars
                var user = appCenterCtrl.user,
                    userInfo = {
                        emailAddress: user.emailAddress,
                        firstName: user.firstName,
                        lastName: user.lastName,
                        userName: user.userName
                    };
                 UtilService.openURIScheme(UtilService.buildScheme(
                     HorizonClientScheme.USERINFO, userInfo));
            };
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('HttpProxyService', [
        'Resource',
        'LocalStorageService',
        '$q',
        'LocalStorageConstants',
        function(Resource,
                 LocalStorageService,
                 $q,
                 LocalStorageConstants) {
            this.localStorageAvailable = LocalStorageService.localStorageAvailable;

            this.get = function(apiName, url, headers, fallBackToServer) {
                var timeOfLastStorage = LocalStorageService.getTimeStampOfLastStorage();
                var timeDiff = Date.now() - timeOfLastStorage;
                if (timeDiff > LocalStorageConstants.TIMEOUT) {
                    //clearAll will clear only entitlements, this is called
                    //on pull-to-refresh on entitlements and should not clear
                    //people data
                    this.clearAll();
                    this.clearPeopleSearch();
                }
                if (this.localStorageAvailable && !fallBackToServer) {
                    if (LocalStorageService.isStored(apiName)) {
                        var defer = $q.defer();
                        defer.resolve(LocalStorageService.getResponse(apiName));
                        return defer.promise;
                    } else {
                        var response = Resource(url, headers).get();
                        response.then(function(responseData) {
                            LocalStorageService.setResponse(apiName, responseData);
                        });
                        return response;
                    }
                } else {
                    var response = Resource(url, headers).get();
                    return response;
                }
            };

            this.clear = function(apiName) {
                LocalStorageService.clear(apiName);
            };

            this.updateBookmark = function() {
                if (this.localStorageAvailable) {
                    LocalStorageService.clearAll();
                }
            };

            this.updateActivationStatus = function(appId, activationStatus, appStateReason) {
                if (this.localStorageAvailable && LocalStorageService.isStored(LocalStorageConstants.ENTITLEMENTS)) {
                    LocalStorageService.updateActivationStatus(appId, activationStatus, appStateReason);
                }
            };

            this.clearBootstrap = function() {
                LocalStorageService.clear(LocalStorageConstants.BOOTSTRAP);
            };

            this.clearEntitlements = function() {
                LocalStorageService.clear(LocalStorageConstants.ENTITLEMENTS);
            };

            this.clearEntitlementsCategories = function() {
                LocalStorageService.clear(LocalStorageConstants.ENTITLEMENTS_CATEGORIES);
            };

            this.clearAll = function() {
                LocalStorageService.clearAll();
            };

            this.clearAllAlongWithEnrollmentStatus = function() {
                LocalStorageService.clearAllAlongWithEnrollmentStatus();
            };

            this.setDeviceEnrollmentStatus = function(status) {
                LocalStorageService.setDeviceEnrollmentStatus(status);
            };

            this.setDeviceMgmtStatus = function(mgmtStatus) {
                LocalStorageService.setDeviceMgmtStatus(mgmtStatus);
            };

            this.setDeviceEnrollmentStatusForOktaAppLaunch = function(status) {
                LocalStorageService.setDeviceEnrollmentStatusNoDeviceId(status);
            };

            this.setDeviceMgmtStatusForOktaAppLaunch = function(mgmtStatus) {
                LocalStorageService.setDeviceMgmtStatusNoDeviceId(mgmtStatus);
            };

            this.clearPeopleSearch = function() {
                LocalStorageService.clearPeopleSearch();
            };

            this.getDeviceEnrollmentStatus = function() {
                return LocalStorageService.getDeviceEnrollmentStatus();
            };

            this.getDeviceMgmtStatus = function() {
                return LocalStorageService.getDeviceMgmtStatus();
            };

            this.getDeviceEnrollmentStatusForOktaAppLaunch = function() {
                return LocalStorageService.getDeviceEnrollmentStatusNoDeviceId();
            };

            this.getDeviceMgmtStatusForOktaAppLaunch = function() {
                return LocalStorageService.getDeviceMgmtStatusNoDeviceId();
            };
            this.setStepupStatusForOktaAppLaunch = function(status) {
                LocalStorageService.setStepupStatusForOktaAppLaunch(status);
            };
            this.getStepupStatusForOktaAppLaunch = function() {
                return LocalStorageService.getStepupStatusForOktaAppLaunch();
            };

            this.getHubBranding = function() {
                return LocalStorageService.getResponse(LocalStorageConstants.HUB_BRANDING);
            };

            this.setHubBranding = function(data) {
                LocalStorageService.setResponse(LocalStorageConstants.HUB_BRANDING, data);
            };

            this.setMFRegistrationFlag = function() {
                LocalStorageService.setResponse(LocalStorageConstants.MF_REGISTRATION, true);
            };

            this.getMFRegistrationFlag = function() {
                var timeOfLastStorage = LocalStorageService.getTimeStampOfLastStorage();
                var timeDiff = Date.now() - timeOfLastStorage;
                if (timeDiff > LocalStorageConstants.TIMEOUT) {
                    return false;
                }
                return LocalStorageService.getResponse(LocalStorageConstants.MF_REGISTRATION);
            };
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.service('HubBrandingService', ['Resource', 'ConfigService', '$q', 'GbDefaultColors', 'UtilService', 'SettingsService', function(Resource, ConfigService, $q, GbDefaultColors, UtilService, SettingsService) {
        var hubBrandingService = this;

        hubBrandingService.getHubBranding = function() {
            return ConfigService.getHubBrandingUrl().then(function(url) {
                return Resource(url, {}).get();
            });
        };

        hubBrandingService.getUpdateValues = function() {
            var deferred = $q.defer();
            hubBrandingService.getHubBranding().then(function(hubBranding) {
                if (hubBranding.customized) {
                    var newBrandingValues = {};
                    newBrandingValues.customized = true;

                    // If customer uploaded their own logo use their logo, otherwise use the default hub logo
                    if (hubBranding.companyLogo) {
                        newBrandingValues.companyLogo = hubBranding.companyLogo;
                    } else {
                        newBrandingValues.companyLogo = 'app-v2/graphics-hub/logo-hub.svg';
                    }

                    var isNavigationBarLightTheme = hubBranding.navigationBar.typeAndIconColor === '#000000',
                        isBodyLightTheme = hubBranding.body.typeAndIconColor === '#000000',
                        bodyBackgroundColor = hubBranding.body.backgroundColor,
                        navigationBarBg = hubBranding.navigationBar.backgroundColor,
                        interactiveColor = hubBranding.body.interactiveColor;

                    // Update the navigationVar values

                    if (isNavigationBarLightTheme) {
                        newBrandingValues.navigationBarTextIconColor = GbDefaultColors.lightTheme.navigationBarTextIconColor;
                        newBrandingValues.navigationBarDropShadowColor = GbDefaultColors.lightTheme.navigationBarDropShadowColor;
                        // Hub Browser Ribbon
                    } else {
                        newBrandingValues.navigationBarTextIconColor = GbDefaultColors.darkTheme.navigationBarTextIconColor;
                        newBrandingValues.navigationBarDropShadowColor = GbDefaultColors.darkTheme.navigationBarDropShadowColor;
                    }
                    newBrandingValues.navigationBarBackgroundColor = hubBranding.navigationBar.backgroundColor;

                    // Update the body values
                    if (isBodyLightTheme) {
                        newBrandingValues.bodyTextIconColor = GbDefaultColors.lightTheme.bodyTextIconColor;
                        newBrandingValues.catgoryBodyColor = '#ffffff';
                        newBrandingValues.listDividerColor = GbDefaultColors.lightTheme.listDividerColor;
                        newBrandingValues.listItemArrow = 'url(app-v2/graphics-hub/icon-right-arrow-light.svg)';
                        newBrandingValues.appLabelBgImage = 'url(app-v2/graphics-hub/icon-dots-black.svg)';
                        newBrandingValues.defaultPrimaryStroke = GbDefaultColors.lightTheme.svgPrimaryStroke;
                        newBrandingValues.defaultSecondaryStroke = GbDefaultColors.lightTheme.svgSecondaryStroke;
                        newBrandingValues.peopleDetailCurrentUserBg = GbDefaultColors.lightTheme.peopleDetailCurrentUserBg;
                        newBrandingValues.searchHighlightColor = GbDefaultColors.lightTheme.searchHiglightColor;
                    } else {
                        newBrandingValues.bodyTextIconColor = GbDefaultColors.darkTheme.bodyTextIconColor;
                        newBrandingValues.catgoryBodyColor = hubBranding.body.backgroundColor;
                        newBrandingValues.listDividerColor = GbDefaultColors.darkTheme.listDividerColor;
                        newBrandingValues.listItemArrow = 'url(app-v2/graphics-hub/icon-right-arrow-dark.svg)';
                        newBrandingValues.appLabelBgImage = 'url(app-v2/graphics-hub/icon-dots-white.svg)';
                        newBrandingValues.defaultPrimaryStroke = GbDefaultColors.darkTheme.svgPrimaryStroke;
                        newBrandingValues.defaultSecondaryStroke = GbDefaultColors.darkTheme.svgSecondaryStroke;
                        newBrandingValues.peopleDetailCurrentUserBg = GbDefaultColors.darkTheme.peopleDetailCurrentUserBg;
                        newBrandingValues.searchHighlightColor = GbDefaultColors.darkTheme.searchHiglightColor;
                    }
                    newBrandingValues.contentBodyColor = bodyBackgroundColor;
                    newBrandingValues.breadcrumbBgColor = bodyBackgroundColor;
                    var breadcrumbBgColor = isBodyLightTheme ? UtilService.shadeColor(bodyBackgroundColor, -10) : UtilService.shadeColor(bodyBackgroundColor, 10);
                    newBrandingValues.breadcrumbBgColor = breadcrumbBgColor;
                    newBrandingValues.interactiveColor = interactiveColor;
                    newBrandingValues.secondaryBg = UtilService.hexToRgbA(interactiveColor, 0.15);
                    newBrandingValues.categoryScrimColorStart = UtilService.hexToRgbA(bodyBackgroundColor, 0);
                    newBrandingValues.categoryScrimColorEnd = UtilService.hexToRgbA(bodyBackgroundColor, 1);
                    newBrandingValues.notificationCardHighlightColor = UtilService.hexToRgbA(interactiveColor, 0.4);
                    var whiteColors = ['#fff', '#ffffff', '#FFF', '#FFFFFF'];
                    if (_.contains(whiteColors, bodyBackgroundColor)) {
                        newBrandingValues.leftnavSelectedColor = 'rgba(220, 220, 220, 1)';
                        newBrandingValues.leftnavHoverColor = 'rgba(0, 0, 0, 0.05)';
                    } else {
                        newBrandingValues.leftnavSelectedColor = 'rgba(255, 255, 255, 1)';
                        newBrandingValues.leftnavHoverColor = 'rgba(255, 255, 255, 0.6)';
                    }

                    // Special treat for empty state stokes if they are the same color as the body background color
                    var defaultPrimaryStroke = isBodyLightTheme ? GbDefaultColors.lightTheme.svgPrimaryStroke : GbDefaultColors.darkTheme.svgPrimaryStroke,
                        defaultSecondaryStroke = isBodyLightTheme ? GbDefaultColors.lightTheme.svgSecondaryStroke : GbDefaultColors.darkTheme.svgSecondaryStroke;

                    if (bodyBackgroundColor == defaultPrimaryStroke || bodyBackgroundColor == defaultSecondaryStroke) {
                        var newPrimaryStroke = isBodyLightTheme ? UtilService.shadeColor(defaultPrimaryStroke, -30) : UtilService.shadeColor(defaultPrimaryStroke, 30),
                            newSecondaryStroke = isBodyLightTheme ? UtilService.shadeColor(defaultSecondaryStroke, -30) : UtilService.shadeColor(defaultSecondaryStroke, 30);
                        newBrandingValues.svgPrimaryStroke = bodyBackgroundColor == defaultPrimaryStroke ? newPrimaryStroke : defaultPrimaryStroke;
                        newBrandingValues.svgSecondaryStroke = bodyBackgroundColor == defaultSecondaryStroke ? newSecondaryStroke : defaultSecondaryStroke;
                    } else {
                        newBrandingValues.svgPrimaryStroke = isBodyLightTheme ? GbDefaultColors.lightTheme.svgPrimaryStroke : GbDefaultColors.darkTheme.svgPrimaryStroke;
                        newBrandingValues.svgSecondaryStroke = isBodyLightTheme ? GbDefaultColors.lightTheme.svgSecondaryStroke : GbDefaultColors.darkTheme.svgSecondaryStroke;
                    }
                    newBrandingValues.svgPrimaryFill = bodyBackgroundColor;
                    newBrandingValues.svgSecondaryFill = bodyBackgroundColor;

                    // People org char tree colors
                    var newTreeLineColor = UtilService.shadeColor(bodyBackgroundColor, -30);
                    newBrandingValues.peopleOrgTreeLineColor = bodyBackgroundColor == GbDefaultColors.lightTheme.peopleOrgTreeLineColor ? newTreeLineColor : GbDefaultColors.lightTheme.peopleOrgTreeLineColor;

                    // Small header button color treatment -- incase the interactive color is the same as the navigation bar
                    if (navigationBarBg == interactiveColor) {
                        var borderColor = hubBranding.navigationBar.typeAndIconColor;
                        // If it light theme, we lighten the color, if it is the dark theme, we darken the color
                        var shadedBorderColor = isNavigationBarLightTheme ? UtilService.shadeColor(borderColor, 50) : UtilService.shadeColor(borderColor, -50);
                        newBrandingValues.detailsActionButtonBorderColor = shadedBorderColor;
                    } else {
                        // If do not define transparent, the css will generate a white border as we added border in the branding stayle tag
                        newBrandingValues.detailsActionButtonBorderColor = 'transparent';
                    }

                    // Notification count color, just in case the navigationVar bg color same as the dark blue count color, use the navigationBar text Icon color
                    if (navigationBarBg == GbDefaultColors.lightTheme.notificationCountBgColor) {
                        newBrandingValues.notificationCountBgColor = hubBranding.navigationBar.typeAndIconColor;
                        newBrandingValues.notificationCountBorderColor = hubBranding.navigationBar.typeAndIconColor;
                        newBrandingValues.notificationCountTextColor = navigationBarBg;
                    }
                    SettingsService.setCurrentBranding(hubBranding);
                    deferred.resolve(newBrandingValues);
                } else {
                    deferred.reject({});
                }
            }, function() {
                deferred.reject({});
            });
            return deferred.promise;
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

// (c) 2016 VMware, Inc.  All rights reserved.

(function(module) {
    'use strict';
    module.service('JadeV2RuntimeService', [
                        'UtilService',
                        'ConfigService',
                        'AppLauncherForJade',
                        'UserAgent',
                        'JadeV2Scheme',
                        '$http',
                        'RequestFactory',
                        'ModalService',
                        function(UtilService,
                                  ConfigService,
                                  AppLauncherForJade,
                                  UserAgent,
                                  JadeV2Scheme,
                                  $http,
                                  RequestFactory,
                                  ModalService) {
            this.logout = function logout(apiLogoutUrl) {
                var logoutRequest = RequestFactory(apiLogoutUrl, {method: 'GET', params: {}});
                $http(logoutRequest).then(function() {
                    if (UserAgent.isNativeAppVersionIsEqualOrBelow("2.0")) {
                        UtilService.openURIScheme(JadeV2Scheme.LOGOUT_POPUP);
                    } else if (UserAgent.isHubApp()) {
                        UtilService.openURIScheme(JadeV2Scheme.LOGOUT_HUB);
                    } else {
                        UtilService.openURIScheme(JadeV2Scheme.LOGOUT_NO_POPUP);
                    }
                });
            };

            this.about = function about() {
                UtilService.openURIScheme(JadeV2Scheme.ABOUT);
            };

            this.notification = function about() {
                UtilService.openURIScheme(JadeV2Scheme.NOTIFICATION_SETTINGS);
            };

            this.launchApp = function launchApp(app) {
                app.launching = false;
                AppLauncherForJade.launchUrl(app).then(function(launchUrl) {
                    if (launchUrl && launchUrl !== '') {
                        if (UserAgent.isWindows()) {
                            UtilService.openURIScheme(JadeV2Scheme.APP_LAUNCH + "&uri=" + launchUrl);
                        } else {
                            UtilService.openURIScheme(JadeV2Scheme.APP_LAUNCH + "&url=" + launchUrl);
                        }
                    }
                });
            };

             this.installApp = function installApp(redirectUrl) {
                 if (redirectUrl && redirectUrl !== '') {
                     if (UserAgent.isWindows()) {
                         UtilService.openURIScheme(JadeV2Scheme.APP_LAUNCH + "&uri=" + redirectUrl);
                     } else {
                         UtilService.openURIScheme(JadeV2Scheme.APP_LAUNCH + "&url=" + encodeURIComponent(redirectUrl));
                     }
                 }
             };

            this.installProgress = function(appId) {
                if (appId && (UserAgent.isWindows() || UserAgent.isMacJade())) {
                    UtilService.openURIScheme(JadeV2Scheme.INSTALL_APP + "&appId=" + appId);
                }
            };

            this.showAppInstall = function() {
                if (UserAgent.isWindowsTabletJade() || UserAgent.isMacJade()) {
                    UtilService.openURIScheme(JadeV2Scheme.LAUNCH_NATIVE_NOTIFICATION_TRAY);
                }
            };

            this.enroll = function enroll(mdmUrl) {
                if (UserAgent.isWindows()) {
                    UtilService.openURIScheme(JadeV2Scheme.MDM_ENROLL + '&uri=' + mdmUrl);
                } else {
                    UtilService.openURIScheme(JadeV2Scheme.MDM_ENROLL + '&url=' + encodeURIComponent(mdmUrl));
                }
            };

            this.unEnroll = function unEnroll(onlyLogout) {
                if (onlyLogout) {
                    logoutWithoutMdm();
                } else if (UtilService.getQueryParams().deviceUdid) {
                    ConfigService.getDeviceUnRegistrationUrl().then(function(url) {
                        var unEnrollRequest = RequestFactory(url.replace('{deviceId}', UtilService.getQueryParams().deviceUdid), {
                            method: 'DELETE',
                            params: {}
                        });
                        $http(unEnrollRequest).then(function() {
                            logoutWithoutMdm();
                        }, function() {
                            showRemoveAccountFailedMessage();
                        });
                    });
                }
            };

            function logoutWithoutMdm() {
                ConfigService.doNotRefreshCache = true;
                ConfigService.getLogoutUrl().then(function(logoutUrl) {
                    var logoutRequest = RequestFactory(logoutUrl, {method: 'GET', params: {}});
                    $http(logoutRequest).then(function() {
                        UtilService.openURIScheme(JadeV2Scheme.MDM_UNENROLL);
                    }, function() {
                        showRemoveAccountFailedMessage();
                    });
                });
            }

            function showRemoveAccountFailedMessage() {
                ModalService.getCurrentModal().alert({
                    title: 'requestFailed',
                    message: 'error.failedToRemoveAccount',
                    ok: 'ok'
                });
            }

            this.register = function register() {
                UtilService.openURIScheme(JadeV2Scheme.CONTAINER_ENROLL);
            };

            this.openUrl = function openUrl(extUrl, type) {
                //openType 1 - internal webview, 2 - AW browser, 3 - external browser
                //default action is internal webview
                //all social urls such as linkedin, slack should always be opened in external browser
                var openType = type || 1;
                if (UserAgent.isWindows()) {
                    UtilService.openURIScheme(JadeV2Scheme.OPEN_URL + "&uri=" + extUrl + "&type=" + openType);
                } else {
                    UtilService.openURIScheme(JadeV2Scheme.OPEN_URL + "&url=" + encodeURIComponent(extUrl) + "&type=" + openType);
                }
            };

            this.openEmail = function openEmail(email) {
                UtilService.openURIScheme(JadeV2Scheme.MAILTO_SCHEME + email);
            };

            this.openTel = function openTel(tel) {
                if (UserAgent.isMobile()) {
                    UtilService.openURIScheme(JadeV2Scheme.TEL_SCHEME + tel);
                }
            };

            this.openSms = function openSms(tel) {
                if (UserAgent.isMobile()) {
                    UtilService.openURIScheme(JadeV2Scheme.SMS_SCHEME + tel);
                }
            };

            this.openMaps = function openMaps(address) {
                if (UserAgent.isMobile()) {
                    UtilService.openURIScheme(JadeV2Scheme.GEO_SCHEME + address);
                }
            };

            this.accounts = function() {
                if (UserAgent.isAWJade()) {
                    UtilService.openURIScheme(JadeV2Scheme.ACCOUNT_PAGE);
                }
            };

            this.closePassword = function() {
                if (UserAgent.isAWJadeMobile()) {
                    UtilService.openURIScheme(JadeV2Scheme.PASSWORD_CLOSE);
                }
            };

            this.refreshUCC = function() {
                if (UserAgent.isAWJadeMobile()) {
                    UtilService.openURIScheme(JadeV2Scheme.UCC_REFRESH);
                }
            };

            this.openNativeAppDetails = function(appId) {
                UtilService.openURIScheme(JadeV2Scheme.LAUNCH_NATIVE_APP_DETAILS + appId);
            };
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';
    module.service('LocalStorageService', ['UtilService', 'LocalStorageConstants',
        function(UtilService,
                 LocalStorageConstants) {
            var localStorageService = this;
            localStorageService.localStorageAvailable = false;
            localStorageService.lsKey = '';
            localStorageService.userName = '';
            localStorageService.deviceId = '';
            localStorageService.deviceEnrollmentStatusKey = '';
            localStorageService.deviceMgmtStatusKey = '';
            localStorageService.deviceEnrollmentStatusKeyNoDeviceID = '';
            localStorageService.deviceMgmtStatusKeyNoDeviceID = '';
            localStorageService.deviceSteupStatusKeyNoDeviceID = '';

            localStorageService.init = function() {
                var test = 'test';
                try {
                    localStorage.setItem(test, test);
                    localStorage.removeItem(test);
                    localStorageService.localStorageAvailable = true;
                } catch (e) {
                    localStorageService.localStorageAvailable = false;
                }

                if (localStorageService.localStorageAvailable) {
                    var deviceID = UtilService.getDeviceID();
                    var userID = UtilService.getUserID();
                    if (deviceID) {
                        localStorageService.lsKey = userID + '~' + deviceID;
                    } else {
                        localStorageService.lsKey = userID;
                    }
                    localStorageService.deviceEnrollmentStatusKey = localStorageService.lsKey + LocalStorageConstants.DEVICE_ENROLLMENT_STATUS;
                    localStorageService.deviceMgmtStatusKey = localStorageService.lsKey + LocalStorageConstants.DEVICE_MGMT_STATUS;
                    localStorageService.deviceEnrollmentStatusKeyNoDeviceID = userID + LocalStorageConstants.DEVICE_ENROLLMENT_STATUS;
                    localStorageService.deviceMgmtStatusKeyNoDeviceID = userID + LocalStorageConstants.DEVICE_MGMT_STATUS;
                    localStorageService.deviceSteupStatusKeyNoDeviceID = userID + LocalStorageConstants.DEVICE_STEPUP_STATUS;
                    if (!localStorage.getItem(localStorageService.lsKey)) {
                        localStorage.setItem(localStorageService.lsKey, JSON.stringify({}));
                    }
                }
            };

            localStorageService.getTimeStampOfLastStorage = function() {
                if (localStorageService.localStorageAvailable) {
                    var lsObj = localStorage.getItem(localStorageService.lsKey);
                    lsObj = JSON.parse(lsObj);
                    if (lsObj.hasOwnProperty(LocalStorageConstants.TIMESTAMP)) {
                        return lsObj[LocalStorageConstants.TIMESTAMP];
                    } else {
                        return 0;
                    }
                }
            };

            localStorageService.setResponse = function(apiName, response) {
                var localStorageObj = JSON.parse(localStorage.getItem(localStorageService.lsKey));
                localStorageObj[apiName] = response;
                localStorageObj[LocalStorageConstants.TIMESTAMP] = Date.now();
                try {
                    localStorage.setItem(localStorageService.lsKey, JSON.stringify(localStorageObj));
                } catch (e) {
                    localStorage.setItem(localStorageService.lsKey, JSON.stringify({}));
                    localStorageService.localStorageAvailable = false;
                }
            };

            localStorageService.getResponse = function(apiName) {
                var lsObj = localStorage.getItem(localStorageService.lsKey);
                lsObj = JSON.parse(lsObj);
                var response = lsObj[apiName];
                return response;
            };

            localStorageService.isStored = function(apiName) {
                if (localStorageService.localStorageAvailable) {
                    var lsObj = localStorage.getItem(localStorageService.lsKey);
                    lsObj = JSON.parse(lsObj);
                    var isLsObjEmpty = jQuery.isEmptyObject(lsObj);
                    if (!isLsObjEmpty) {
                        var isStored = jQuery.isEmptyObject(lsObj[apiName]);
                        return (!isStored);
                    }
                    return false;
                }
                return false;
            };

            localStorageService.getEntitlements = function() {
                var entitlementsObj = localStorageService.getResponse(LocalStorageConstants.ENTITLEMENTS);
                var entitlements = entitlementsObj._embedded.entitlements;
                return entitlements;
            };

            localStorageService.setEntitlements = function(entitlements) {
                var entitlementsObj = localStorageService.getResponse(LocalStorageConstants.ENTITLEMENTS);
                entitlementsObj._embedded.entitlements = entitlements;
                var lsObj = localStorage.getItem(localStorageService.lsKey);
                lsObj = JSON.parse(lsObj);
                lsObj[LocalStorageConstants.ENTITLEMENTS] = entitlementsObj;
                localStorage.setItem(localStorageService.lsKey, JSON.stringify(lsObj));
            };

            localStorageService.updateActivationStatus = function(appId, activationStatus, appStateReason) {
                var entitlements = localStorageService.getEntitlements();
                if (entitlements.length != 0) {
                    var index = entitlements.map(function(e) {
                        return e.appId;
                    }).indexOf(appId);
                    entitlements[index].installStatus = activationStatus;
                    if (appStateReason) {
                        entitlements[index].appStateReason = appStateReason;
                    }
                    localStorageService.setEntitlements(entitlements);
                }
            };

            localStorageService.clear = function(apiName) {
                if (localStorageService.isStored(apiName)) {
                    var lsObj = localStorage.getItem(localStorageService.lsKey);
                    lsObj = JSON.parse(lsObj);
                    delete lsObj[apiName];
                    localStorage.setItem(localStorageService.lsKey, JSON.stringify(lsObj));
                }
            };

            localStorageService.setDeviceEnrollmentStatusNoDeviceId = function(status) {
                localStorage.setItem(localStorageService.deviceEnrollmentStatusKeyNoDeviceID, status);
            };

            localStorageService.setDeviceEnrollmentStatus = function(status) {
                localStorage.setItem(localStorageService.deviceEnrollmentStatusKey, status);
            };

            localStorageService.setDeviceMgmtStatusNoDeviceId = function(status) {
                localStorage.setItem(localStorageService.deviceMgmtStatusKeyNoDeviceID, status);
            };

            localStorageService.setDeviceMgmtStatus = function(status) {
                localStorage.setItem(localStorageService.deviceMgmtStatusKey, status);
            };

            localStorageService.getDeviceEnrollmentStatusNoDeviceId = function() {
                return localStorage.getItem(localStorageService.deviceEnrollmentStatusKeyNoDeviceID);
            };

            localStorageService.getDeviceEnrollmentStatus = function() {
                return localStorage.getItem(localStorageService.deviceEnrollmentStatusKey);
            };

            localStorageService.getDeviceMgmtStatusNoDeviceId = function() {
                return localStorage.getItem(localStorageService.deviceMgmtStatusKeyNoDeviceID);
            };

            localStorageService.getDeviceMgmtStatus = function() {
                return localStorage.getItem(localStorageService.deviceMgmtStatusKey);
            };

            localStorageService.setStepupStatusForOktaAppLaunch = function(status) {
                localStorage.setItem(localStorageService.deviceSteupStatusKeyNoDeviceID, status);
            };

            localStorageService.getStepupStatusForOktaAppLaunch = function() {
                return localStorage.getItem(localStorageService.deviceSteupStatusKeyNoDeviceID);
            };

            localStorageService.clearDeviceEnrollmentStatus = function() {
                localStorage.removeItem(localStorageService.deviceEnrollmentStatusKey);
                localStorage.removeItem(localStorageService.deviceMgmtStatusKey);
                localStorage.removeItem(localStorageService.deviceEnrollmentStatusKeyNoDeviceID);
                localStorage.removeItem(localStorageService.deviceMgmtStatusKeyNoDeviceID);
                localStorage.removeItem(localStorageService.deviceSteupStatusKeyNoDeviceID);
            };

            localStorageService.clearAll = function() {
                localStorageService.clear(LocalStorageConstants.TIMESTAMP);
                localStorageService.clear(LocalStorageConstants.ENTITLEMENTS);
                localStorageService.clear(LocalStorageConstants.ENTITLEMENTS_CATEGORIES);
                localStorageService.clear(LocalStorageConstants.BOOTSTRAP);
                localStorageService.clear(LocalStorageConstants.BOOKMARKS);
                localStorageService.clear(LocalStorageConstants.NEW_APP);
                localStorageService.clear(LocalStorageConstants.RECOMMENDED_APPS);
            };

            localStorageService.clearAllAlongWithEnrollmentStatus = function() {
                localStorageService.clearAll();
                localStorageService.clearDeviceEnrollmentStatus();
            };

            localStorageService.clearPeopleSearch = function() {
                localStorageService.clear(LocalStorageConstants.PEOPLE_DIRECTS_DETAILS);
                localStorageService.clear(LocalStorageConstants.PEOPLE_PEER_DETAILS);
            };

            localStorageService.init();
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('LocationReloadService', ['UserAgent', function(UserAgent) {
        this.reload = function() {
            if (UserAgent.isAWJade()) {
                window.location.search += '&t=' + new Date().getTime();
            } else {
                window.location.reload(true);
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('ModalService', [
        function() {
            var modalService = this;
            var modal;

            modalService.setCurrentModal = function(modal) {
                this.modal = modal;
            };
            modalService.getCurrentModal = function() {
                return this.modal;
            };
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('NativeBridgeService', ['UserAgent', '$injector', '$rootScope', 'UtilService',
        function(UserAgent, $injector, $rootScope, UtilService) {
            var service = this;
            var isNotContainerMode;

            service.registerBridge = function() {
                if (UtilService.isNativeBridge()) {
                    window.setAppStatus = function(apps) {
                        if (apps) {
                            var catalogService = $injector.get('CatalogService');
                            catalogService.setNativeAppStatus(apps);
                        }
                    };
                    window.setAppFavorite = function(app) {
                        if (app) {
                            $rootScope.$broadcast('native-bridge-app-bookmarked', app);
                        }
                    };
                }
            };

            service.getAppStatus = function(apps) {
                if (UtilService.isWindowsNativeBridge()) {
                    window.NativeBridge.getAppStatus(apps);
                } else if (UtilService.isMacNativeBridge()
                    && UtilService.getObjValue(window, 'webkit.messageHandlers.NativeBridge', false)) {
                    window.webkit.messageHandlers.NativeBridge.postMessage(["getAppStatus", apps]);
                }
            };

            service.setContainerMode = function(value) {
                isNotContainerMode = value;
                service.registerBridge();
            };

            service.getContainerMode = function() {
                return isNotContainerMode;
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.service('NotificationCountService', [
        'ConfigService',
        'POLLING_INTERVALS',
        'hznLocalStorage',
        '$timeout',
        '$rootScope',
        function(ConfigService,
                 POLLING_INTERVALS,
                 hznLocalStorage,
                 $timeout,
                 $rootScope) {
            var NOTIFICATION_QUEUE_BEACON_URL = '/user/queue/devicebeacons';
            var NEW_NOTIFICATION_URL = '/user/queue/notifications';
            var NOTIFICATION_REALTIME_URL = '/api/v1/notifications/realtime';
            var sockJsProtocols = ["xhr-streaming", "xhr-polling"];
            var socket;
            var notificationCountService = this;
            var stompClient = null;
            var subscription = [];
            var connectionTimer;

            notificationCountService.connectToNotificationService = function(callback) {
                ConfigService.getNotificationServiceUrl().then(function(url) {
                    connectFun(url, callback);
                });
            };

            notificationCountService.disconnectToNotificationService = function() {
                if (stompClient) {
                    disconnectFunc();
                }
            };

            var unSubscribe = function() {
                if (subscription.length) {
                    for (var i = 0; i < subscription.length; i++) {
                        subscription[i].unsubscribe();
                    }
                }
            };

            var disconnectFunc = function() {
                unSubscribe();
                if (stompClient && stompClient.connected) {
                    stompClient.disconnect();
                }
            };

            var connectFun = function(notificationServiceUrl, callback) {
                if (!notificationServiceUrl) {
                    return;
                }
                if (socket) {
                    socket.close();
                }
                socket = new SockJS(notificationServiceUrl + NOTIFICATION_REALTIME_URL, null, {transports: sockJsProtocols});
                stompClient = webstomp.over(socket);
                if (stompClient && !stompClient.connected) {
                    stompClient.connect({}, function(frame) {
                        if (stompClient.connected) {
                            unSubscribe();
                            subscription[0] = stompClient.subscribe(NOTIFICATION_QUEUE_BEACON_URL, function(beacon) {
                                delete hznLocalStorage.notificationSvcRealtimeConnectionDelay;
                                callback(beacon.body);
                            });

                            subscription[1] = stompClient.subscribe(NEW_NOTIFICATION_URL, function(notification) {
                                notification = JSON.parse(notification.body);
                                var priority = _.get(notification, 'notification_card.importance', -1);
                                if (priority > 0 && priority < 3) {
                                    $rootScope.$broadcast('new-priority-notifications', notification);
                                }
                            });
                        }
                    }, function() {
                        hznLocalStorage.notificationSvcRealtimeConnectionDelay = hznLocalStorage.notificationSvcRealtimeConnectionDelay ? hznLocalStorage.notificationSvcRealtimeConnectionDelay : new Date().getTime() + POLLING_INTERVALS.NOTIFICATION_SVC_REALTIME_CONNECTION_CHECK_INTERVAL; //3 min
                        var delay = hznLocalStorage.notificationSvcRealtimeConnectionDelay - new Date().getTime();
                        if (delay > 0 && socket.readyState !== 0) {
                            if (connectionTimer) {
                                $timeout.cancel(connectionTimer);
                            }
                            connectionTimer = $timeout(function() {
                                connectFun(notificationServiceUrl, callback);
                            }, 5000);
                        } else {
                            delete hznLocalStorage.notificationSvcRealtimeConnectionDelay;
                            if (connectionTimer) {
                                $timeout.cancel(connectionTimer);
                            }
                        }
                    });
                }
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.service('OfflineService', ['$window', '$rootScope', '$document', 'UserAgent', '$timeout', '$document',
        function($window, $rootScope, $document, UserAgent, $timeout) {
        var deviceOnline = $window.navigator.onLine || true;
        var hidden, visibilityChange;
        var connectionTimer;

        function handleVisibilityChange() {
            if (connectionTimer) {
                $timeout.cancel(connectionTimer);
            }

            if (document[hidden]) {
                $rootScope.$broadcast('tabHidden', deviceOnline);
            } else {
                connectionTimer = $timeout(function() {
                    $rootScope.$broadcast('tabShown', deviceOnline);
                }, 2000);
            }
        }

        if (typeof document.hidden !== "undefined") {
            hidden = "hidden";
            visibilityChange = "visibilitychange";
        } else if (typeof document.msHidden !== "undefined") {
            hidden = "msHidden";
            visibilityChange = "msvisibilitychange";
        } else if (typeof document.webkitHidden !== "undefined") {
            hidden = "webkitHidden";
            visibilityChange = "webkitvisibilitychange";
        }

        if (visibilityChange) {
            $document.on(visibilityChange, handleVisibilityChange.bind(this));
        }

        $window.addEventListener('online', function() {
            deviceOnline = true;
            $rootScope.$broadcast('deviceOnlineStatusChanged', deviceOnline);
        });

        $window.addEventListener('offline', function() {
            deviceOnline = false;
            $rootScope.$broadcast('deviceOnlineStatusChanged', deviceOnline);
        });

        this.isDeviceOnline = function() {
            return deviceOnline;
        };

        this.isTabVisible = function() {
            return hidden ? document[hidden] : true;
        };
    }]);
})(angular.module('com.vmware.greenbox.services.offlineService', []));


(function(module) {
    'use strict';

    module.service('PasswordPolicyService', [function() {
        var passwordPolicy;

        var setPasswordPolicy = function(policy) {
            passwordPolicy = policy;
        };

        var getPasswordPolicy = function() {
            return passwordPolicy;
        };

        return {
            setPasswordPolicy: setPasswordPolicy,
            getPasswordPolicy: getPasswordPolicy
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.service('PasswordVaultService', [
                        '$q',
                        '$timeout',
                        'Resource',
                        'ConfigService',
                        'SettingsService',
                        function(
                                $q,
                                $timeout,
                                Resource,
                                ConfigService,
                                SettingsService) {
        var TIME_TO_WAIT = 2000; //wait time before pinging the extension and later on wait till the call back is executed.
        var pvService = this;
        pvService.extensionDetected = false;
        pvService.pvExtensionDownloadUrl = '';

        pvService.hasPvApps = false;

        pvService.setHasPvApps = function(hasPvApps) {
            pvService.hasPvApps = hasPvApps;
        };

        pvService.getHasPvApps = function() {
            return pvService.hasPvApps;
        };

        pvService.setPVExtensionDownloadUrl = function(downloadUrl) {
            pvService.pvExtensionDownloadUrl = downloadUrl;
        };

        pvService.getPVExtensionDownloadUrl = function() {
            return pvService.pvExtensionDownloadUrl;
        };

        pvService.pingExtension = function() {
            var defer = $q.defer();
            if (pvService.getHasPvApps()) {
                ConfigService.getPasswordVaultRootUrl().then(function(pvRootUrl) {
                    if (pvRootUrl) {
                        var branding = SettingsService.getCurrentBranding();

                        // In Some Browsers like IE the CustomEvent is not available.
                        // This is a polyfill for that.
                        (function() {
                            if (typeof window.CustomEvent === "function") {
                                return false;
                            }

                            function CustomEvent(event, params) {
                                params = params || { bubbles: false, cancelable: false, detail: undefined };
                                var evt = document.createEvent('CustomEvent');
                                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
                                return evt;
                            }

                            CustomEvent.prototype = window.Event.prototype;

                            window.CustomEvent = CustomEvent;
                        })();

                        var event = new CustomEvent('ping', {detail: {url: pvRootUrl, name: branding.pageTitle}});
                        event.callback = pingCallback;

                        var pvConduit = document.getElementById("PVConduit");
                        if (pvConduit && !pvService.extensionDetected) {
                            pvConduit.dispatchEvent(event);
                        }
                        $timeout(function() {
                            defer.resolve(pvService.extensionDetected);
                        }, TIME_TO_WAIT);
                    }
                });
            }
            return defer.promise;
        };

        function pingCallback(pvExtensionVersion, linkedWithCurrentvIDM) {
            // pvExtensionVersion - Password Vault Extension Version.
            // linkedWithCurrentvIDM - Boolean value to indicate if the extension is linked to current vIDM.
            // Currently we are not making use of these 2 callback parameters.
            pvService.extensionDetected = true;
        }
}]);
})(angular.module('com.vmware.greenbox.appCenter'));

// (c) 2014 VMware, Inc.  All rights reserved.
angular.module('com.vmware.greenbox.appCenter').factory('PollingService', ['$q', '$http', '$interval', 'POLLING_INTERVALS',
    function($q, $http, $interval, POLLING_INTERVALS) {
        'use strict';
        var currentlyRunningRequest = {};
        var timeOutSeconds = POLLING_INTERVALS.TIMEOUT_SECONDS;
        var startTimes = {};

        function stop(appId) {
            if (currentlyRunningRequest[appId]) {
                $interval.cancel(currentlyRunningRequest[appId].timer);
                delete currentlyRunningRequest[appId];
                delete startTimes[appId];
            }
        }

        function start(appId, userTimer) {
            var pollingTimeInterval = POLLING_INTERVALS.START_POLLING_TIME_INTERVAL; // pooling interval
            var deferred = $q.defer();
            if (userTimer) {
                pollingTimeInterval = _.get(currentlyRunningRequest[appId], 'time', pollingTimeInterval);
            }
            //stop any previous calls
            stop(appId);

            var getData = function() {
                $http.get('/catalog-portal/services/api/apps/' + appId).then(
                    function(data) {
                        var status = _.get(data, 'data.installStatus', '');
                        var appStateReason = _.get(data, 'data.appStateReason', '');
                        var approvalRequiredForMdmApp = _.get(data, 'data.approvalRequiredForMdmApp', '');
                        var intervals = pollingTimeInterval;
                        if (currentlyRunningRequest[appId] && currentlyRunningRequest[appId].time >= 0) {
                            intervals = ++currentlyRunningRequest[appId].time;
                        }
                        if (hasTimedOut()) {
                            stop(appId);
                            deferred.reject('Timed out');
                        } else if ((status === 'ACTIVATED' || status === 'NOT_ACTIVATED' ||
                            (currentlyRunningRequest[appId] && status === 'PROCESSING' && !appStateReason && approvalRequiredForMdmApp))) {
                            deferred.resolve(data);
                        } else {
                            currentlyRunningRequest[appId] = {
                                timer: $interval(getData, incrementer(intervals) * 1000, 1),
                                time: intervals
                            };
                        }
                    }, function(error) {
                        deferred.reject(error);
                    }
                );
            };

            //start pool for appId
            setTimeout(function() {
                if (!startTimes[appId]) {
                    startTimes[appId] = new Date().getTime();
                }
                getData();
            }, incrementer(pollingTimeInterval) * 1000);

            var hasTimedOut = function() {
                var endTime = new Date().getTime();
                return (endTime - startTimes[appId]) > timeOutSeconds;
            };

            return deferred.promise;
        }

        function incrementer(n) {
            return n * 3;
        }

        return {
            start: start,
            stop: stop
        };
    }]);

(function(module) {
    'use strict';

    module.service('ProgressIndicatorService', ['$rootScope',
        function($rootScope) {
            this.showProgressIndicator = function() {
                angular.element(document.querySelector('#global-spinner-container')).css('display', 'block');
                angular.element(document.querySelector('body')).addClass('spinner-overlay');
            };

            this.hideProgressIndicator = function() {
                angular.element(document.querySelector('#global-spinner-container')).css('display', 'none');
                angular.element(document.querySelector('body')).removeClass('spinner-overlay');
            };

            this.showBookmarkingProgressIndicator = function(appId) {
                $rootScope.$broadcast('activate-app-bookmark', {appId: appId});
            };

            this.hideBookmarkingProgressIndicator = function(appId) {
                $rootScope.$broadcast('activate-app-bookmark-end', {appId: appId});
            };
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));


// (c) 2014 VMware, Inc.  All rights reserved.
(function(module) {
    'use strict';
//TODO: Make it a provider
    module.factory('Resource', ['$http', '$q', '$timeout', 'UtilService', function($http, $q, $timeout, UtilService) {
        // short cuts
        var isArray = angular.isArray;
        var extend = angular.extend;
        var forEach = angular.forEach;
        var copy = angular.copy;

        function ResourceFactory(url, config) {
            // Offset from UTC in minutes.  Positive offsets are ahead of GMT.
            var timezoneOffset = -(new Date()).getTimezoneOffset();
            var mockPromise = function(context) {
                if (context.mockData) {
                    var _this = context;
                    return $timeout(
                        function() {
                            return _this.mockData;
                        }, 0);
                }
            };

            var Resource = function(url, config) {
                Resource.prototype.self = url;
                Resource.prototype.config = extend({
                    transformRequest: function(data, getHeaders) {
                        if (UtilService.isFormData(data)) {
                            // If Content-Type added explicitly , browser will not add form-data boundary parameter.
                            // Keep Content-Type undefined so that browser will add automatically with form data boundary.
                            getHeaders()['Content-Type'] = undefined;
                            return data;
                        } else {
                            return angular.isObject(data) && !isFile(data) ? angular.toJson(data) : data;
                        }
                    }
                }, (config || {}));
                Resource.prototype.config.headers = extend({
                    'User-UTC-Offset': timezoneOffset
                }, (config && config.headers ? config.headers : {}));
            };

            //Instance method that performs HTTP GET on given URL
            Resource.prototype = {
                'mock': function(mockData) {
                    this.mockData = mockData;
                    return this;
                },

                'get': function() {
                    var deferred = $q.defer();
                    var getPromise = deferred.promise;
                    var thisResource = this; //The resource object itself
                    var getLink = function(resource, link) {
                        if (resource._links[link]) {
                            return resource._links[link].href;
                        } else {
                            return null;
                        }
                    };
                    var getDefaultParamsForLink = function(resource, link) {
                        if (resource._links[link].params) {
                            return copy(resource._links[link].params);
                        } else {
                            return {};
                        }
                    };
                    var extendedPromise = { // This allows to perform method chaining on promise object instead of passing pyramid of callbacks
                        'thenGetLink': function(link) {
                            var deferredInner = $q.defer();
                            var thenGetLinkPromise = extend(deferredInner.promise, extendedPromise);
                            // This points to promise object returned by get()
                            this.then(function(resource) {
                                deferredInner.resolve(getLink(resource, link));
                            });
                            return thenGetLinkPromise;
                        },
                        // This method will follow the link defined on top level resource
                        'thenFollowLink': function(link, mediaType, params, locale, optional) {
                            var deferredInner = $q.defer();
                            var thenFollowLinkPromise = extend(deferredInner.promise, extendedPromise);
                            // This points to promise object returned by get()
                            this.then(function(resource) {
                                var linkToFollow = getLink(resource, link);
                                // Do the get only if there is the link to follow was valid
                                if (linkToFollow) {
                                    // Get default params from link to follow
                                    var defaultParams = getDefaultParamsForLink(resource, link);
                                    // Use default params only when explicit params have not been specified
                                    var paramsToSend = params || defaultParams || {};
                                    var childRes = new Resource(
                                        linkToFollow, {
                                            'headers': {
                                                'Accept': mediaType
                                            },
                                            'params': UtilService.isEmpty(paramsToSend) ? null : paramsToSend
                                        }
                                    );
                                    if (locale) {
                                        childRes = new Resource(
                                            linkToFollow, {
                                                'headers': {
                                                    'Accept': mediaType,
                                                    'Accept-Language': locale
                                                },
                                                'params': UtilService.isEmpty(paramsToSend) ? null : paramsToSend
                                            });
                                    }

                                    if (optional && optional.contentType) {
                                        childRes.config.headers['Content-Type'] = optional.contentType;
                                    }
                                    if (optional && optional.data) {
                                        childRes.data = optional.data;
                                    }
                                    if (resource.mockData) {
                                        childRes.mock(resource.mockData);
                                    }
                                    childRes.get().then(function(childResource) {
                                        deferredInner.resolve(childResource);
                                    });
                                }
                            });
                            return thenFollowLinkPromise;
                        },
                        //This method will fetch an attribute of top level resource
                        'thenGet': function(attr, defaultObject) {
                            var deferredInner = $q.defer();
                            var thenGetPromise = extend(deferredInner.promise, extendedPromise);
                            //this points to promise object returned by get
                            this.then(function(resource) {
                                if (resource === undefined || resource[attr] === undefined) {
                                    //if link is not present then reject, so API call is not made with empty URL
                                    deferredInner.resolve(defaultObject);
                                } else {
                                  deferredInner.resolve(resource[attr]);
                                }
                            });
                            return thenGetPromise;
                        },
                        // This method loads all the items of top level summary resource
                        // attr points to array of links
                        'thenGetAllItems': function(attr, mediaType) {
                            var deferredInner = $q.defer();
                            //this points to promise object returned by get
                            var _this = this;
                            this.thenGet('items').then(function(links) {
                                if (!angular.isArray(links)) {
                                    deferredInner.resolve([]);
                                    return;
                                }
                                var promises = [];
                                var childResources = [];
                                for (var i = 0; i < links.length; i++) {
                                    var childRes = new Resource(getLink(links[i], attr), {'headers': {'Accept': mediaType}});
                                    if (_this.mockData && isArray(_this.mockData) && _this.mockData.length === links.length) {
                                        childRes.mock(_this.mockData[i]);
                                    } else if (_this.mockData) {
                                        childRes.mock(_this.mockData);
                                    }
                                    promises.push(childRes.get());
                                    promises[i].then(function(childResource) {
                                        childResources.push(childResource);
                                    });
                                }
                                //Wait for all the get to finish before calling promise
                                $q.all(promises).then(function() {
                                    deferredInner.resolve(childResources);
                                });
                            });
                            return deferredInner.promise;
                        }
                    };

                    var successHandler = function(response) {
                        if (isArray(response.data)) {
                            thisResource.array = [];
                            deferred.resolve(extend(thisResource.array, response.data));
                        } else {
                            deferred.resolve(extend(thisResource, response.data));
                        }
                    };

                    var errorHandler = function(data, status, headers, config) {
                        deferred.reject(data);
                    };

                    if (this.mockData) {
                        var _this = this;
                        $timeout(function() {
                            successHandler(_this.mockData);
                        }, 0);
                    } else if (this.data) {
                        $http.post(ensureContext(this.self), this.data, this.config).then(successHandler);
                    } else {
                        $http.get(this.self, this.config).then(successHandler, errorHandler);
                    }

                    return extend(getPromise, extendedPromise);
                },

                //Instance method that looks for url property and creates a new resource out of it.
                //TODO: This would change once we redesign HATEOAS links in our REST resources
                'getResource': function(resourceId, config) {
                    var resourceUrls = this[resourceId + '_url'];
                    if (isArray(resourceUrls)) {
                        var resources = [];
                        forEach(resourceUrls, function(resourceUrl) {
                            resources.push(new Resource(resourceUrl, (config || {})));
                        });
                        return resources;
                    }
                    return new Resource(resourceUrls);
                },

                'postResource': function(data) {
                    return this.mockData ? mockPromise(this) : $http.post(this.self, data, this.config);
                },
                'deleteResource': function() {
                    return this.mockData ? mockPromise(this) : $http['delete'](this.self, this.config);
                },

                'putResource': function(data) {
                    return this.mockData ? mockPromise(this) : $http.put(this.self, data, this.config);
                },
                'patchResource': function(data) {
                    return this.mockData ? mockPromise(this) : $http.patch(this.self, data, this.config);
                }

            };
            return new Resource(url, config);
        }

        return ResourceFactory;
    }]);
})(angular.module('com.vmware.workspace.services.rest', []));

// (c) 2014 VMware, Inc.  All rights reserved.

/*
 * Service that loads the root resource and caches the response within same user session
 */
(function(module) {
    'use strict';

     module.factory('RootResource', ['Resource', '$q', function(Resource, $q) {
         var rootResource = Resource('/jersey/manager/api', {
             cache: true,
             headers: {
                 Accept: 'application/vnd.vmware.horizon.manager.root+json'
             }
         });

         var promise = rootResource.get();

         return {
             get: function() {
                 return promise;
             }
         };
     }]);
})(angular.module('com.vmware.workspace.services.rootResource', []));

(function(module) {
    module.service('ScrollToTopService', function() {
        var scrollToTopService = this;

        scrollToTopService.scroll = function(elementId) {
            var targetElement = $('#' + elementId)[0];
            $(targetElement).animate({ scrollTop: 0 }, "fast");
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.service('SignOutService', [
        'hznLocalStorage',
        'ClientRuntimeService',
        'ConfigService',
        'HttpProxyService',
        'UserAgent',
        function(
            hznLocalStorage,
            ClientRuntimeService,
            ConfigService,
            HttpProxyService,
            UserAgent) {
        var signOutService = this;
            signOutService.continueSignOut = function($event) {
            if ($event) {
                $event.preventDefault();
            }
            if (UserAgent.isHubApp()) {
                HttpProxyService.clearAll();
            } else {
                HttpProxyService.clearAllAlongWithEnrollmentStatus();
            }
            HttpProxyService.clearPeopleSearch();
            ConfigService.doNotRefreshCache = true;
            ConfigService.getLogoutUrl().then(function(logoutUrl) {
                delete hznLocalStorage.deviceDetailDelay;
                ClientRuntimeService.logout(logoutUrl);
            });
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('StateResolveService', ['hznLocalStorage', '$location', 'BootstrapService', 'TenantCustomizationService', 'UtilService',
        function(hznLocalStorage, $location, BootstrapService, TenantCustomizationService, UtilService) {
            var service = this;

            service.canNavigate = function($state) {
                if ($state.current.name !== 'index') {
                    var customizationSettings = TenantCustomizationService.getCustomizationSettings();
                    if (customizationSettings.hideBookmarksTab && $state.next.name === 'bookmarks') {
                        return false;
                    } else if (customizationSettings.hideCatalogTab && $state.next.name === 'catalog') {
                        return false;
                    } else if (customizationSettings.hidePeopleTab && $state.next.name === 'people') {
                        return false;
                    } else if (!customizationSettings.hideBookmarksTab && !customizationSettings.hideCatalogTab && $state.next.name === 'bookmarks' && workspaceOne.hasLaunchableApps === false) {
                        return false;
                    }
                }
                return true;
            };

            service.canHubNavigate = function($state) {
                if ($state.current.name !== 'index') {
                    var customizationSettings = TenantCustomizationService.getCustomizationSettings();
                    if (customizationSettings.hidePeopleTab && $state.next.name === 'people') {
                        return false;
                    }
                }
                return true;
            };

            service.navigateToLastVisitedPage = function() {
                var lastActive = hznLocalStorage.last_active_page_v2;
                var directEnrollmentEnabled = BootstrapService.getDirectEnrollmentStatus();
                var customizationSettings = TenantCustomizationService.getCustomizationSettings();

                function navigateToCatalog() {
                    var deviceWentThroughAdaptiveManagement = BootstrapService.hasInstallEvents();
                    var noBookmarkedApps = BootstrapService.getBookmarkedAppsCount() === 0;

                    return (workspaceOne && workspaceOne.hasLaunchableApps === false) || lastActive === 'catalog' || customizationSettings.hideBookmarksTab || deviceWentThroughAdaptiveManagement || noBookmarkedApps;
                }

                function navigateToBookmark() {
                    return customizationSettings.hideCatalogTab && customizationSettings.hidePeopleTab;
                }

                function navigateToPeople() {
                    return !customizationSettings.hidePeopleTab && lastActive === 'people';
                }

                if (directEnrollmentEnabled) {
                    $location.path('/recommendedApps');
                } else if (navigateToBookmark()) {
                    $location.path('/bookmarks');
                //if nativenavNotEnabled WS1 will call /people directly instead of /index
                //this loop will only get called when checkNativeNavNotEnabled is true
                } else if (navigateToPeople() && UtilService.isNativeNavNotEnabled(customizationSettings)) {
                    $location.path('/people');
                } else if (navigateToCatalog()) {
                    $location.path('/catalog');
                } else {
                    $location.path('/bookmarks');
                }
            };
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.service('TenantCustomizationService', ['UserAgent', 'LaunchUtilityService', function(UserAgent, LaunchUtilityService) {
        var customizationService = this;
        var customizationSettings = {};
        var catalogCustomizationSettings = {};

        customizationService.getCustomizationSettings = function() {
            return customizationSettings;
        };

        customizationService.setCustomizationSettings = function(settings) {
            customizationSettings = settings;
        };

        customizationService.getCatalogCustomizationSettings = function() {
            return catalogCustomizationSettings;
        };

        customizationService.setCatalogCustomizationSettings = function(settings) {
            catalogCustomizationSettings = settings;
        };

        customizationService.isNotificationsEnabled = function() {
            var customizations = customizationService.getCustomizationSettings();
            return _.get(customizations, 'notificationsEnabled', false);
        };

        customizationService.isAppRatingEnabled = function() {
            var customizations = customizationService.getCustomizationSettings();
            return _.get(customizations, 'appRatingEnabled', false);
        };

        customizationService.getCustomizationsOrder = function() {
            var customizations = customizationService.getCatalogCustomizationSettings();
            customizations = _.get(customizations, 'compositeCatalogCustomizations.catalogCustomizations.catalogCustomizationList', []);
            var enabledCustomizations = _.filter(customizations, {'customizationStatus': 'ENABLED'});
            return _.map(enabledCustomizations, 'name');
        };

        customizationService.isHubFavoritesEnabled = function() {
            var enabledCustomizations = customizationService.getCustomizationsOrder();
            return enabledCustomizations.indexOf('Favorites') > -1;
        };

        customizationService.isHubPeopleEnabled = function() {
            var customizations = customizationService.getCustomizationSettings();
            return customizations.hidePeopleTab === false && customizations.hidePeopleTab !== undefined;
        };

        customizationService.isHubFavoritesOnlyView = function() {
            var enabledCustomizations = customizationService.getCustomizationsOrder();
            return enabledCustomizations.length === 1 && enabledCustomizations[0] === 'Favorites';
        };

        customizationService.isHubCategoryEnabled = function() {
            var enabledCustomizations = customizationService.getCustomizationsOrder();
            return enabledCustomizations.indexOf('Categories') > -1;
        };

        customizationService.isLoadFromDbFailed = function() {
            var customizations = customizationService.getCatalogCustomizationSettings();
            return _.get(customizations, 'compositeCatalogCustomizations.catalogCustomizations.loadFromDbFailed', false);
        };

        customizationService.setLaunchOptions = function() {
            var customizationSettings = customizationService.getCustomizationSettings();
            LaunchUtilityService.setUseNonNPAPIForCitrixLaunch(customizationSettings.useNonNPAPIForCitrixLaunch);
            if (UserAgent.isWindows()) {
                LaunchUtilityService.setSuppressLaunchDialog(customizationSettings.suppressLaunchDialog.WINDOWS);
            } else if (UserAgent.isMac()) {
                LaunchUtilityService.setSuppressLaunchDialog(customizationSettings.suppressLaunchDialog.MAC);
            } else if (UserAgent.isMobile()) {
                LaunchUtilityService.setSuppressLaunchDialog(customizationSettings.suppressLaunchDialog.MOBILE);
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.service('UpdateUrlParamsService', ['$location', '$timeout', '$q', function($location, $timeout, $q) {
        var UpdateUrlParamsService = this;

        // Hide and show nativenav are handle by ios and android clients, GB only passes the params
        UpdateUrlParamsService.hideNativenav = function() {
            var deferred = $q.defer();
            $timeout(function() {
                $location.search('nativenav', 'Hide');
                $location.replace();
                deferred.resolve();
            }, 0);
            return deferred.promise;
        };

        UpdateUrlParamsService.showNativenav = function() {
            var deferred = $q.defer();
                $timeout(function() {
                    $location.search('nativenav', null);
                    $location.replace();
                    deferred.resolve();
                }, 0);
            return deferred.promise;
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));


/*
 * This service will detect the browser, browser version and OS.
 */
angular.module('com.vmware.greenbox.appCenter').factory('UserAgent', ['$http', '$rootScope', '$window', '$cookies', 'hznLocalStorage',
    function($http, $rootScope, $window, $cookies, hznLocalStorage) {
        'use strict';

        var browserDetect = {
            navigator: $window.navigator,
            init: function() {
                this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
                this.version = this.searchVersion(browserDetect.navigator.userAgent)
                    || this.searchVersion(browserDetect.navigator.appVersion)
                    || "an unknown version";
                this.OS = this.searchString(this.dataOS) || "an unknown OS";
                this.hznCitrixReceiverInstalled = "hzn_citrix_receiver_installed";
                this.hznHorizonWorkspaceInstalled = "hzn_horizon_workspace_installed";
                this.hznViewClientInstalled = "hzn_view_client_installed";
                this.hznCompletedFTU = "hzn_completed_FTU";
                this.passwordVaultExtensionInstalled = "passwordvault_browser_extension_installed";
                this.awjade = "AWJADE";
                this.horizon = "vmwhorizon";
                this.isHorizonClient = navigator.userAgent.search(this.horizon) !== -1;
                this.NATIVE_APP_VERSION_PATTERN = /awjade\/(\d+)\.(\d+)((\.(\d+))*)/g;
                this.ANDROID_VERSION_PATTERN = /Android (\d+)\.(\d+)((\.(\d+))*)/g;
            },
            searchString: function(data) {
                for (var i = 0; i < data.length; i++) {
                    var dataString = data[i].string;
                    var dataProp = data[i].prop;
                    this.versionSearchString = data[i].versionSearch || data[i].identity;
                    if (dataString) {
                        if (dataString.search(data[i].subString) !== -1) {
                            return data[i].identity;
                        }
                    } else if (dataProp) {
                        return data[i].identity;
                    }
                }
            },
            searchVersion: function(dataString) {
                var index = dataString.indexOf(this.versionSearchString);
                if (index === -1) {
                    return;
                }
                return parseFloat(dataString.substring(index + this.versionSearchString.length + 1));
            },

            getMacOsVersion: function() {
                if (this.isMacBrowser()) {
                    this.MAC_VERSION_PATTERN = new RegExp(/Mac OS X ([\.\_\d]+)/g);
                    var osVersion = this.MAC_VERSION_PATTERN.exec(browserDetect.navigator.userAgent);
                    osVersion = _.get(osVersion, '[1]', undefined);
                    return osVersion ? osVersion.replace(/_/g, '.') : 0;
                }
                return 0;
            },

            isMacBrowser: function() {
                return this.isMac() && this.isBrowser();
            },

            isMac: function() {
                return (this.OS === 'Mac');
            },

            isWindows: function() {
                return (this.OS === 'Windows' || this.isWindowsPhone());
            },

            isIE: function() {
                return (this.browser === 'Explorer');
            },

            isIE8OrLower: function() {
                return this.isIE() && this.version < 9;
            },

            isChrome: function() {
                return (this.browser === 'Chrome');
            },

            isFF: function() {
                return (this.browser === 'Firefox');
            },

            isSafari: function() {
                return (this.browser === 'Safari');
            },

            isWebkit: function() {
                return (this.browser === 'Chrome' || this.browser === 'Safari');
            },

            isGecko: function() {
                return (this.browser === 'Mozilla');
            },

            isAWJade: function(version) {
                //For Windows 10 user agent doesn't contain awjade in it.
                var aWJadeVersion = "awjade";
                if (version) {
                    aWJadeVersion = "awjade/" + version;
                }
                if (!!$cookies.get(this.awjade) && $cookies.get(this.awjade).search(aWJadeVersion) !== -1) {
                    return true;
                }
                if (this.isMobile() || this.isMac()) {
                    return (browserDetect.navigator.userAgent.search(aWJadeVersion) !== -1);
                }
                return false;
            },

            isHubApp: function() {
                var aWJadeVersion = "HubApp";
                return (browserDetect.navigator.userAgent.search(aWJadeVersion) != -1);
            },

            isAWJadeV2: function() {
                return this.isNativeAppVersionIsEqualOrAbove("2.0");
            },

            isAWJadeV3: function() {
                return this.isNativeAppVersionIsEqualOrAbove("3.0");
            },

            isNativeAppVersionBelow: function(version) {
                return this.checkVersion(version, this.isAppVersionLesser, this.isPatchVersionLesser);
            },

            isNativeAppVersionIsEqualOrAbove: function(version) {
                return this.checkVersion(version, this.isAppVersionGreater, this.isPatchVersionGreatOrEqual);
            },

            isNativeAppVersionIsEqualOrBelow: function(version) {
                return this.checkVersion(version, this.isAppVersionLesser, this.isPatchVersionLessOrEqual);
            },

            checkVersion: function(version, compareFunction, finalCompare) {
                if (!version) {
                    return false;
                }
                // Get the Major, Minor, Patch numbers from the given version.
                var givenVersion = this.getAppVersion(version);
                //For Windows 10 user agent doesn't contain awjade in it.
                var ua = '';

                if ($cookies.get(this.awjade)) {
                    ua = $cookies.get(this.awjade);
                } else if (this.isMobile() || this.isMac()) {
                    ua = browserDetect.navigator.userAgent;
                }
                var patternMatchArr = ua.match(this.NATIVE_APP_VERSION_PATTERN);
                if (patternMatchArr != null) {
                    var userAgentAppversion = patternMatchArr[0].split('/')[1]; // Get the version number from the pattern match
                    if (userAgentAppversion) {
                        var appVersion = this.getAppVersion(userAgentAppversion);
                        if (compareFunction(appVersion.majorVersion, givenVersion.majorVersion)) { // If current app major version is lesser than given major version return true.
                            return true;
                        } else if (this.isAppVersionEqual(appVersion.majorVersion, givenVersion.majorVersion)) { // If current app major version is equal to given major version then check minor version.
                            if (compareFunction(appVersion.minorVersion, givenVersion.minorVersion)) { // If current app minor version is lesser than given minor version return true.
                                return true;
                            } else if (this.isAppVersionEqual(appVersion.minorVersion, givenVersion.minorVersion)) { // If current app minor version is equal to given minor version check patch version.
                                return finalCompare(appVersion.patchVersion, givenVersion.patchVersion);
                            }
                        }
                    }
                }
                return false;
            },

            isPatchVersionLessOrEqual: function(appPatchVersion, givenPatchVersion) {
                return appPatchVersion <= givenPatchVersion;
            },

            isPatchVersionGreatOrEqual: function(appPatchVersion, givenPatchVersion) {
                return appPatchVersion >= givenPatchVersion;
            },

            isPatchVersionLesser: function(appPatchVersion, givenPatchVersion) {
                return appPatchVersion < givenPatchVersion;
            },

            isAppVersionLesser: function(appVersion, givenVersion) {
                return appVersion < givenVersion;
            },

            isAppVersionGreater: function(appVersion, givenVersion) {
                if (appVersion > givenVersion) {
                    return true;
                }
                return false;
            },

            isAppVersionEqual: function(appVersion, givenVersion) {
                if (appVersion == givenVersion) {
                    return true;
                }
                return false;
            },

            getAppVersion: function(appVersion) {
                if (!appVersion) {
                    return {'majorVersion': 0, 'minorVersion': 0, 'patchVersion': 0};
                }
                var appVersionArr = appVersion.split('.');
                var appMajorVersion = (appVersionArr[0] && !isNaN(appVersionArr[0])) ? parseInt(appVersionArr[0]) : 0;
                var appMinorVersion = (appVersionArr[1] && !isNaN(appVersionArr[1])) ? parseInt(appVersionArr[1]) : 0;
                var appPatchVersion = (appVersionArr[2] && !isNaN(appVersionArr[2])) ? parseInt(appVersionArr[2]) : 0;
                return {
                    'majorVersion': appMajorVersion,
                    'minorVersion': appMinorVersion,
                    'patchVersion': appPatchVersion
                };
            },

            checkAndroidVersion: function(version, compareFunction, finalCompare) {
                if (!version) {
                    return false;
                }
                // Get the Major, Minor, Patch numbers from the given version.
                var givenVersion = this.getAppVersion(version);
                var ua = browserDetect.navigator.userAgent;

                var patternMatchArr = ua.match(this.ANDROID_VERSION_PATTERN);
                if (patternMatchArr != null) {
                    var androidVersion = patternMatchArr[0].split(' ')[1]; // Get the version number from the pattern match
                    if (androidVersion) {
                        var appVersion = this.getAppVersion(androidVersion);
                        if (compareFunction(appVersion.majorVersion, givenVersion.majorVersion)) { // If current Android major version is lesser than given major version return true.
                            return true;
                        } else if (this.isAppVersionEqual(appVersion.majorVersion, givenVersion.majorVersion)) { // If current Android major version is equal to given major version then check minor version.
                            if (compareFunction(appVersion.minorVersion, givenVersion.minorVersion)) { // If current Android minor version is lesser than given minor version return true.
                                return true;
                            } else if (this.isAppVersionEqual(appVersion.minorVersion, givenVersion.minorVersion)) { // If current Android minor version is equal to given minor version check patch version.
                                return finalCompare(appVersion.patchVersion, givenVersion.patchVersion);
                            }
                        }
                    }
                }
                return false;
            },

            checkMacVersion: function(version, compareFunction, finalCompare) {
                if (!version) {
                    return false;
                }
                var givenVersion = this.getAppVersion(version);
                var appVersion = this.getAppVersion(this.getMacOsVersion());
                if (compareFunction(appVersion.majorVersion, givenVersion.majorVersion)) { // If current Android major version is lesser than given major version return true.
                    return true;
                } else if (this.isAppVersionEqual(appVersion.majorVersion, givenVersion.majorVersion)) { // If current Android major version is equal to given major version then check minor version.
                    if (compareFunction(appVersion.minorVersion, givenVersion.minorVersion)) { // If current Android minor version is lesser than given minor version return true.
                        return true;
                    } else if (this.isAppVersionEqual(appVersion.minorVersion, givenVersion.minorVersion)) { // If current Android minor version is equal to given minor version check patch version.
                        return finalCompare(appVersion.patchVersion, givenVersion.patchVersion);
                    }
                }

                return false;
            },

            isAndroidVersionIsEqualOrAbove: function(version) {
                return this.checkAndroidVersion(version, this.isAppVersionGreater, this.isPatchVersionGreatOrEqual);
            },

            isAndroidVersionIsEqualOrBelow: function(version) {
                return this.checkAndroidVersion(version, this.isAppVersionLesser, this.isPatchVersionLessOrEqual);
            },

            isMacAppDownloadSupported: function(version) {
                return this.isMacBrowser() && this.checkMacVersion(version, this.isAppVersionGreater, this.isPatchVersionGreatOrEqual);
            },

            isHorizon: function() {
                return this.isHorizonClient;
            },

            isBrowser: function() {
                return !this.isAWJade() && !this.isHorizon();
            },

            isDesktopBrowser: function() {
                return this.isBrowser() && !this.isMobile();
            },

            isMobileBrowser: function() {
                return !this.isAWJade() && (this.isMobile() || this.isWin10Browser());
            },

            isMobileNonWindowBrowser: function() {
                return !this.isAWJade() && (this.isIOS() || this.isAndroid());
            },

            isWindowsJade: function() {
                var ua = navigator.userAgent;
                return (this.isAWJade() && (ua.match(/Windows/i)));
            },

            isWindowsTabletJade: function() {
                var ua = navigator.userAgent;
                return (this.isAWJade() && (ua.match(/Windows/i) && !ua.match(/Windows Phone/i)));
            },

            isWindowsTabletBrowser: function() {
                var ua = navigator.userAgent;
                return ((ua.match(/Windows/i) && !ua.match(/Windows Phone/i)));
            },

            isWindowsBrowser: function() {
                var ua = navigator.userAgent;
                return !this.isAWJade() && ua.match(/Windows/i);
            },

            isMacJade: function() {
                return (this.isAWJade() && this.isMac());
            },

            isAWJadeMobile: function() {
                return (this.isAWJade() && this.isMobile());
            },

            isAWJadeDesktop: function() {
                var ua = navigator.userAgent;
                return (this.isAWJade() && (ua.match(/Windows/i) && !ua.match(/Windows Phone/i)) || this.isAWJade() && ua.match(/Mac/i) && !ua.match(/mobile/i));
            },

            isAWJadeDocked: function() {
                var ua = navigator.userAgent;
                return (this.isAWJade() && ua.match(/docked=true/i));
            },

            isAWJadeWithNativenav: function() {
                var ua = navigator.userAgent;
                return (this.isAWJade() && ua.match(/nativenav/i));
            },

            isAWJadeWindowsNativenav: function(version) {
                //For Windows 10 user agent doesn't contain awjade in it.
                var nativenavString = "nativenav";
                var aWJadeVersion = "awjade";
                if (version) {
                    aWJadeVersion = "awjade/" + version;
                }
                if (!!$cookies.get(this.awjade) && ($cookies.get(this.awjade).search(aWJadeVersion) !== -1) && ($cookies.get(this.awjade).search(nativenavString) !== -1)) {
                    return true;
                }
            },

            isNPAPISupportedBrowser: function() {
                return !((this.isWindows() || this.isMac()) && (this.isChrome() || this.isDesktopWindowsEdgeBrowser()));
            },

            // Detect mobile browser and type
            isMobile: function() {
                var ua = navigator.userAgent;
                if (ua.match(/Android/i) ||
                    ua.match(/webOS/i) ||
                    ua.match(/iPhone/i) ||
                    ua.match(/iPad/i) ||
                    ua.match(/iPod/i) ||
                    ua.match(/BlackBerry/i) ||
                    ua.match(/Windows Phone/i)
                ) {
                    return true;
                }
                return false;
            },

            // Detect if device is managed and GB is accessed from weblic
            isWebClip: function() {
                return (!this.isAWJade()) && (location.search.indexOf('deviceUdid') > -1);
            },

            // Detect windows desktop or surfacepro edge browser
            isDesktopWindowsEdgeBrowser: function() {
                var ua = navigator.userAgent;
                return ((!this.isAWJade()) && (ua.match(/Windows NT 10/i)) && (ua.match(/Edge/i)));
            },

            isViewHTMLAccessSupportedBrowser: function() {
                var ua = navigator.userAgent;
                //For IE9 or earlier, remove BLAST if it is there.
                // HTML access is not supported on all mobile browsers except safari and IE (Edge browser)
                if (this.isAnyWindowsPhone()) {
                    return false;
                } else if (this.isAndroid()) {
                    if (this.isAndroidVersionIsEqualOrAbove('7.0.0')) {
                        return true;
                    } else {
                        return false;
                    }
                } else if (this.isBlackBerry()) {
                    return false;
                } else if (this.isIOS() && !this.isSafari()) {
                    return false;
                } else if (this.isIE() && this.version < 10) {
                    return false;
                } else if (this.isWindows10() && this.isSafari()) {
                    return false;
                }
                return true;
            },

            getMobileType: function() {
                var ua = navigator.userAgent;
                if (ua.match(/Windows Phone/i) || ua.match(/Windows NT 10/i)) {
                    return "Windows Phone";
                }
                if (ua.match(/Android/i)) {
                    return "Android";
                }
                if (ua.match(/webOS/i)) {
                    return "webOS";
                }
                if (ua.match(/iPhone/i)) {
                    return "iPhone";
                }
                if (ua.match(/iPad/i)) {
                    return "iPad";
                }
                if (ua.match(/iPod/i)) {
                    return "iPod";
                }
                if (ua.match(/BlackBerry/i)) {
                    return "BlackBerry";
                }
                return null;
            },

            isBlackBerry: function() {
                return this.getMobileType() === "BlackBerry";
            },

            isWindows10: function() {
                var ua = navigator.userAgent;
                return ua.match(/Windows NT 10/i);
            },

            isAnyWindowsPhone: function() {
                var ua = navigator.userAgent;
                return ua.match(/Windows Phone/i);
            },

            isIOS: function() {
                var mob = this.getMobileType();
                return (mob === "iPhone" || mob === "iPad" || mob === "iPod");
            },
            isAtLeastIOS7: function() {
                var ua = navigator.userAgent;
                return this.isIOS() && !(/OS [1-6](.*) like Mac OS X/i.test(ua));
            },

            isIPhone: function() {
                return this.getMobileType() === "iPhone";
            },

            isIPad: function() {
                return this.getMobileType() === "iPad";
            },

            isAndroid: function() {
                return this.getMobileType() === "Android";
            },

            isAndroidPhone: function() {
                if (this.isAndroid()) {
                    var ua = navigator.userAgent;
                    if (ua.match(/mobile/i)) {
                        return true;
                    }
                    return false;
                }
                return false;
            },

            isAndroidTablet: function() {
                if (this.isAndroid()) {
                    return !this.isAndroidPhone();
                }
                return false;
            },

            isWindowsPhone: function() {
                return this.getMobileType() === "Windows Phone";
            },

            //When new os is added e.g windows this method needs to be updated.
            isPhone: function() {
                return this.isIPhone() || this.isAndroidPhone();
            },

            //When new os is added e.g windows this method needs to be updated.
            isTablet: function() {
                return this.isAndroidTablet() || this.isIPad();
            },

            isTouchEnabled: function() {
                return "ontouchstart" in window || (navigator.msMaxTouchPoints > 0) || (navigator.maxTouchPoints > 0);
            },

            getPlatformType: function() {
                var platform = "Unknown";
                if (this.isWindows()) {
                    platform = "Windows";
                } else if (this.isMac()) {
                    platform = "Mac";
                } else if (this.isIphone()) {
                    platform = "iPhone";
                } else if (this.iPad()) {
                    platform = "iPad";
                } else if (this.isAndroid()) {
                    platform = "Android";
                }
                return platform;
            },

            getMobileOSType: function() {
                if (this.isIOS()) {
                    return "IOS";
                } else if (this.isAndroid()) {
                    return "ANDROID";
                } else {
                    return "";
                }
            },
            isReorderEnabled: function() {
                return this.isIPad() || !this.isMobile();
            },

            isThinAppSupportedBrowser: function() {
                return !this.isAWJade() && this.isWindows();
            },

            isThinAppSortSupportedBrowser: function() {
                return this.isAWJadeDesktop() || this.isDesktopBrowser();
            },

            isPasswordVaultPluginSupportedBrowser: function() {
                var ua = navigator.userAgent;
                if (this.isAWJade()) {
                    return false;
                } else if (ua.match(/Windows Phone/i)) {
                    return false;
                } else if (this.isIOS()) {
                    return false;
                } else if (this.isAndroid()) {
                    return false;
                } else if (this.isMobile() && !ua.match(/Windows NT 10/i)) {
                    return false;
                } else if (this.isWindows() && !((ua.match(/Windows NT 10/i)) && (ua.match(/Edge/i))) && ((this.isIE() && this.version > 10) || this.isChrome() || this.isFF())) {
                    return true;
                } else if (this.isMac() && (this.isChrome() || this.isFF() || this.isSafari())) {
                    return true;
                }
                return false;
            },

            isWin10Browser: function() {
                var ua = navigator.userAgent;
                return (!this.isAWJade() && ua.match(/Windows NT 10/i));
            },

            /**
             * Check if plugin is installed
             *
             * @param fingerprint  {Object}
             *        fingerprint.activeXObjectName {string}    Name of ActiveXObject, for IE
             *        fingerprint.pluginNameIdentifier {string} plugin name or a segment of the name to identify the plugin, or
             *                                                  browser other than IE
             */
            isBrowserPluginInstalled: function(fingerprint) {
                if (!fingerprint) {
                    return false;
                }

                // IE
                if (browserDetect.isIE()) {
                    try {
                        //It will throw an exception if the ActiveXObject is not available.
                        new ActiveXObject(fingerprint.activeXObjectName);
                        return true;
                    } catch (e) {
                        return false;
                    }
                } else {
                    for (var i = 0; i < browserDetect.navigator.plugins.length; i++) {
                        var plugin = browserDetect.navigator.plugins[i],
                            pluginName = plugin && plugin.name,
                            pluginDesc = plugin && plugin.description;

                        if ((pluginName && pluginName.indexOf(fingerprint.pluginNameIdentifier) > -1) ||
                            (pluginDesc && pluginDesc.indexOf(fingerprint.pluginNameIdentifier) > -1)) {
                            return true;

                            // TODO: Returning true if plugin found for now
                            // TODO: Use the version number to require a minimum value later
                            // agentVersion = plugin.version;   // Firefox way
                            /*
                             if (agentVersion == null) {
                             // Chrome way
                             var description = plugin.description || "";

                             // Pattern to extract the version info from the description string like this:
                             // "This plugin checks whether VMware Horizon Agent is installed on the computer. (Version: 1.0.0.2)"
                             var pat=/\(Version:\s(.*)\)/gi;

                             var re = new RegExp(pat);
                             var m = re.exec(description);
                             agentVersion = m && m[1];
                             pluginFound = !!agentVersion;
                             }
                             */
                        }
                    }
                }

                return false;
            },
            /**
             * Check if Citrix Receiver is installed
             */
            isCitrixReceiverInstalled: function() {
                var isInstalled = this.isBrowserPluginInstalled({
                    activeXObjectName: "Citrix.ICAClient",
                    pluginNameIdentifier: "Citrix Receiver"
                }) || (hznLocalStorage[this.hznCitrixReceiverInstalled] != null);

                return isInstalled;
            },

            isICOCompatibleIE: function() {
                if (browserDetect.isIE()) {
                    try {
                        //It will throw an exception if the ActiveXObject is not available.
                        var activeX = new ActiveXObject('Citrix.ICAClient');
                        activeX.Launch = true;
                        return activeX.Launch;
                    } catch (e) {
                        return false;
                    }
                }
                return false;
            },

            /**
             * Check if ThinApp is enabled in the current system.
             */
            isHorizonDesktopInstalled: function() {
                return this.isBrowserPluginInstalled({
                    activeXObjectName: "HorizonAgentFinder.HorizonFinder",
                    pluginNameIdentifier: "VMware Horizon Agent Finder"
                }) || !!hznLocalStorage[(this.hznHorizonWorkspaceInstalled)];
            },
            /**
             * Check if users confirmed Horizon View Client was installed in the current system.
             */
            isHorizonViewClientMarkedAsInstalled: function() {
                return !!hznLocalStorage[this.hznViewClientInstalled];
            },
            /**
             * Check if user completed first time slides in the current system.
             */
            hasCompeletedFTU: function(userId) {
                return hznLocalStorage[this.hznCompletedFTU + "_" + userId] != null;
            },

            /**
             * Check if users confirmed Password Vault Browser Extension was installed in the current system.
             */
            isPVExtensionMarkedAsInstalled: function() {
                return !!hznLocalStorage[this.passwordVaultExtensionInstalled];
            },

            dataBrowser: [
                {
                    string: navigator.userAgent,
                    subString: /Chrome|CriOS/i,
                    identity: "Chrome"
                },
                {
                    string: navigator.vendor,
                    subString: "Apple",
                    identity: "Safari",
                    versionSearch: "Version"
                },
                {
                    prop: window.opera,
                    identity: "Opera",
                    versionSearch: "Version"
                },
                {
                    string: navigator.userAgent,
                    subString: "Firefox",
                    identity: "Firefox"
                },
                {		// for newer Netscapes (6+)
                    string: navigator.userAgent,
                    subString: "Netscape",
                    identity: "Netscape"
                },
                {
                    string: navigator.userAgent,
                    subString: "MSIE",
                    identity: "Explorer",
                    versionSearch: "MSIE"
                },
                { //for IE11
                    string: navigator.userAgent,
                    subString: "Trident",
                    identity: "Explorer",
                    versionSearch: "rv"
                },
                {
                    string: navigator.userAgent,
                    subString: "Gecko",
                    identity: "Mozilla",
                    versionSearch: "rv"
                },
                { 		// for older Netscapes (4-)
                    string: navigator.userAgent,
                    subString: "Mozilla",
                    identity: "Netscape",
                    versionSearch: "Mozilla"
                }
            ],
            dataOS: [
                {
                    string: navigator.platform,
                    subString: "Win",
                    identity: "Windows"
                },
                {
                    string: navigator.platform,
                    subString: "Mac",
                    identity: "Mac"
                },
                {
                    string: navigator.userAgent,
                    subString: "iPhone",
                    identity: "iPhone/iPod"
                },
                {
                    string: navigator.platform,
                    subString: "Linux",
                    identity: "Linux"
                }
            ]

        };
        browserDetect.init();
        return browserDetect;
    }
]);

/**
 * Util service
 */
angular.module('com.vmware.greenbox.appCenter').service('UtilService', [
    '$window',
    'UserAgent',
    '$injector',
    'JadeV2Scheme',
    function($window,
             UserAgent,
             $injector,
             JadeV2Scheme) {
        'use strict';

        var PROTOCOL_SEPARATOR = "//";
        var PORT_SEPARATOR = ":";

        /**
         * Append a key/value pair to a Url
         *
         * @param origUrl
         * @param obj {String} or {Object} if String, it acts as the key of the param. If Object, will parameterize the object.
         * @param value  Optional, should be specified if Object is a string.
         * @return {String}
         */
        this.appendQueryToUrl = function(origUrl, obj, value) {
            if (angular.isString(obj)) {
                var tmp = obj;
                obj = {};
                obj[tmp] = value;
            }

            var params = $.param(obj);

            if (!angular.isString(origUrl)) {
                origUrl = "";
            }

            var anchorRE = /#.*$/;
            var anchorMatch = anchorRE.exec(origUrl);
            var anchor = anchorMatch && anchorMatch.length ? anchorMatch[0] : "";
            var noAnchorUrl = origUrl.replace(anchorRE, '');

            var idx = noAnchorUrl.indexOf("?");
            if (idx < 0) {
                return [noAnchorUrl, "?", params, anchor].join('');
            } else if (idx == noAnchorUrl.length - 1) { //? is the last char.
                return [noAnchorUrl, params, anchor].join('');
            } else {
                return [noAnchorUrl, "&", params, anchor].join('');
            }
        };

        /**
         * To check if an object is empty.
         * @param object the object to check.
         * @returns {boolean} true if it is empty, false otherwise.
         */
        this.isEmpty = function(object) {
            for (var key in object) {
                if (object.hasOwnProperty(key)) {
                    return false;
                }
            }
            return true;
        };

        /**
         * Get the difference between two arrays.
         * @param arr1 array that will be compared to second array.
         * @param arr2 array that will be compared against the first array.
         * @returns difference of arrays.
         */
        this.diffArray = function(arr1, arr2) {
            return arr1.filter(function(x) {
                return arr2.indexOf(x) < 0;
            });
        };

        /**
         * converts object to String
         * @param object
         * @returns String
         */
        this.toString = function(object) {
            return Object.prototype.toString.call(object);
        };

        /**
         * Checks if given object is a FormData instance.
         */
        this.isFormData = function(object) {
            return this.toString(object) === '[object FormData]';
        };

        /**
         * Checks if given object is a File instance.
         */
        this.isFile = function(object) {
            return this.toString(object) === '[object File]';
        };

        this.openLinkInIframe = function(link) {
            var appLauncherFrame = document.createElement("IFRAME");
            appLauncherFrame.setAttribute("src", link);
            appLauncherFrame.setAttribute("width", "0");
            appLauncherFrame.setAttribute("height", "0");
            document.documentElement.appendChild(appLauncherFrame);
        };

        this.openURIScheme = function(link) {
            /**
             * Windows 10 Scheme handler works using script notification
             * http://stackoverflow.com/questions/19353069/webview-capture-navigation-to-a-custom-protocol
             * However, this is only for the Jade Win10 Universal client, not for Horizon.
             */
            if (UserAgent.isAWJade() && UserAgent.isWindows()) {
                var ConfigService = $injector.get('ConfigService');
                ConfigService.getNativeClientRedirectUrl().then(function(redirectUrl) {
                    link = redirectUrl + '?nativeClientUri=' + encodeURIComponent(link);
                    window.location.href = link;
                }.bind(this));
            } else {
                this.openLinkInIframe(link);
            }
        };

        this.getServerUrl = function(path, includeQueryStr) {
            var loc = $window.location;
            var serverUrl = loc.protocol + PROTOCOL_SEPARATOR + loc.hostname;

            if (loc.port) {
                serverUrl += PORT_SEPARATOR;
                serverUrl += loc.port;
            }

            if (angular.isString(path)) {
                if (path[0] && path[0] != '/') {
                    serverUrl += '/';
                }
                serverUrl += path;
            }
            if (includeQueryStr) {
                serverUrl += loc.search;
            }
            return serverUrl;
        };

        this.addQueryParams = function(path) {
            var loc = $window.location;
            var serverUrl = path;
            serverUrl += loc.search;
            return serverUrl;
        };

        this.buildScheme = function(schemePrefix, paramsObj) {
            if (!schemePrefix) {
                return;
            }

            if (!angular.isObject(paramsObj)) {
                return schemePrefix;
            }

            var params = [];
            angular.forEach(paramsObj, function(val, key) {
                params.push(key + '=' + encodeURIComponent(val));
            });
            return schemePrefix + '&' + params.join('&');
        };

        this.getQueryParams = function() {
            //MIT license: https://github.com/youbastard/jquery.getQueryParameters/blob/master/LICENSE
            return $window.location.search.replace(/(^\?)/, '').split("&").map(function(n) {
                return n = n.split("="), this[n[0]] = n[1], this;
            }.bind({}))[0];
        };

        this.getObjValue = function(contextObject, refStr, defaultValue) {
            return _.get(contextObject, refStr, defaultValue);
        };

        this.appendQueryParams = function(url, queryParamObj) {
            var result = url;
            var queryParams = [];

            function keyValToQueryParam(key, value) {
                return encodeURIComponent(key) + "=" + encodeURIComponent(value);
            }

            if (angular.isObject(queryParamObj)) {
                angular.forEach(queryParamObj, function(value, key) {
                    if (angular.isString(value)) {
                        queryParams.push(keyValToQueryParam(key, value));
                    } else if (angular.isArray(value)) {
                        queryParams.push(keyValToQueryParam(key, value.filter(angular.isString).map(encodeURIComponent).join(',')));
                    }
                });
            }

            if (queryParams.length > 0) {
                var queryParamStr = queryParams.join("&");
                if (result.indexOf('?') >= 0) {
                    result += "&" + queryParamStr;
                } else {
                    result += "?" + queryParamStr;
                }
            }
            return result;
        };

        this.getUserID = function() {
            return workspaceOne.userId;
        };

        this.getDeviceID = function() {
            return workspaceOne.deviceId;
        };

        this.hexToRgb = function(hex) {
            var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
            return result ? {
                r: parseInt(result[1], 16),
                g: parseInt(result[2], 16),
                b: parseInt(result[3], 16)
            } : null;
        };

        this.threeHexToSixHex = function(hex) {
            var threeHexArray = hex.split(""),
                sixHexArray = [],
                sixHexValue = "";

            for (var i = 1; i < threeHexArray.length; i++) {
                //The first one will be "#"
                sixHexArray.push(threeHexArray[i], threeHexArray[i]);
            }
            sixHexValue = "#" + sixHexArray.join("");

            return sixHexValue;
        };

        // Input the hex value and desired the alpha value, to output the new rgba color
        this.hexToRgbA = function(hex, alpha) {
            var c;
            if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
                c = hex.substring(1).split('');
                if (c.length == 3) {
                    c = [c[0], c[0], c[1], c[1], c[2], c[2]];
                }
                c = '0x' + c.join('');
                return 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',' + alpha + ')';
            }
            throw new Error('Bad Hex');
        };

        // Use this function to shade the interactive color (lighten is pass a position amount e.g. +30; darkend is pass a negative color e.g. -40
        // All the colors are hex colors from the hub-branding starting with a #, could be three or 6 digit
        this.shadeColor = function(hex, amt) {
            if (hex[0] == "#") {
                hex = hex.slice(1);
            }

            var R = parseInt(hex.substring(0, 2), 16),
                G = parseInt(hex.substring(2, 4), 16),
                B = parseInt(hex.substring(4, 6), 16);

            R = R + amt;
            G = G + amt;
            B = B + amt;

            if (R > 255) {
                R = 255;
            } else if (R < 0) {
                R = 0;
            }

            if (G > 255) {
                G = 255;
            } else if (G < 0) {
                G = 0;
            }

            if (B > 255) {
                B = 255;
            } else if (B < 0) {
                B = 0;
            }

            var RR = ((R.toString(16).length == 1) ? "0" + R.toString(16) : R.toString(16));
            var GG = ((G.toString(16).length == 1) ? "0" + G.toString(16) : G.toString(16));
            var BB = ((B.toString(16).length == 1) ? "0" + B.toString(16) : B.toString(16));

            return "#" + RR + GG + BB;
        };

        this.copyEmailSupported = function() {
            // for hub macapp we use the copy email as well
            return (UserAgent.isNativeAppVersionBelow('3.3') && UserAgent.isAWJadeDesktop()) || UserAgent.isDesktopBrowser() || (UserAgent.isHubApp() && UserAgent.isMac());
        };

        this.timeDifference = function(created, now) {
            return now.diff(created, 'minutes');
        };

        this.isNativeNavNotEnabled = function(customizationSettings) {
            var nativenavEnabled = this.getObjValue(customizationSettings, 'nativenavEnabled', false);
            return ((nativenavEnabled && !(UserAgent.isAWJadeWithNativenav()
                || UserAgent.isAWJadeWindowsNativenav())) || !nativenavEnabled);
        };

        this.constructTouRedirectUrl = function(url, logoutUrl, userName) {
            url = url.replace("{acceptDest}", encodeURIComponent(window.location.href));
            logoutUrl += "?unEnroll=true&idp=workspace";
            url = url.replace("{declineDest}", encodeURIComponent(logoutUrl));
            url = url.replace("{deviceUdid}", userName + "-" + this.getQueryParams().deviceUdid);
            return url;
        };

        this.goBack = function() {
            window.history.back();
        };

        this.isHub = function() {
            return this.isHubNative() || this.isHubBrowsers();
        };

        this.isHubDesktop = function() {
            return this.isHubDesktopApp() || (this.isHubBrowsers() && UserAgent.isDesktopBrowser());
        };

        this.isHubMobile = function() {
            return this.isHubMobileApp() || this.isHubMobileBrowsers();
        };

        this.isHubMobileBrowsers = function() {
            return this.getObjValue(window, 'workspaceOne.featureFlags.V2_HUB', false) && UserAgent.isMobileBrowser();
        };

        this.isHubV2NotificationsEnabled = function() {
            return this.getObjValue(window, 'workspaceOne.featureFlags.V2_HUB_NOTIFICATIONS', false);
        };

        this.isHubBrowsers = function() {
            return this.getObjValue(window, 'workspaceOne.featureFlags.V2_HUB', false) && UserAgent.isBrowser()
                && !this.getObjValue(window, 'workspaceOne.isWorkspaceONE');
        };

        this.isHubDesktopApp = function() {
            return UserAgent.isAWJadeDesktop() && UserAgent.isHubApp();
        };

        this.isHubMobileApp = function() {
            return UserAgent.isAWJadeMobile() && UserAgent.isHubApp();
        };

        this.isHubNative = function() {
            return this.isHubDesktopApp() || this.isHubMobileApp();
        };

        this.informAvatarLoaded = function() {
            this.openURIScheme(JadeV2Scheme.AVATAR_RENDERED);
        };

        this.informHubContentLoaded = function() {
            this.openURIScheme(JadeV2Scheme.CONTENT_LOADED);
        };

        this.checkTermsOfUseStatus = function() {
            return UserAgent.isAWJade()
                && !(UserAgent.isAndroid() && !UserAgent.isNativeAppVersionIsEqualOrAbove('3.3'))
                && this.getQueryParams().deviceUdid;
        };

        this.loadTemplateForPlatform = function(mobileTemplate, desktopTemplate, browserTemplate) {
            if (UserAgent.isAWJadeMobile()) {
                return mobileTemplate;
            } else if (UserAgent.isAWJadeDesktop()) {
                return desktopTemplate;
            } else {
                return browserTemplate;
            }
        };

        this.hideVirtualApps = function() {
            var hideVirtualApp = this.getObjValue(workspaceOne.featureFlags, 'HIDE_VIRTUAL_APPS_ON_MOBILE', false);
            var inch = 0.0104166667; // 1 pixel = 0.0104166667 inchs(https://www.unitconverters.net/typography/pixel-x-to-inch.htm)
            var width = Math.round(window.innerWidth) * inch;
            var height = Math.round(window.innerHeight) * inch;
            return (UserAgent.isMobile() && hideVirtualApp && Math.max(width, height) < 9 && this.isHubNative());
        };

        this.isMdmOnlyMode = function() {
            var idpQueryParam = this.getQueryParams().idp || "";
            return idpQueryParam.toLowerCase() === "mdm";
        };

        this.isWindowsNativeBridge = function() {
            var nativeBridgeService = $injector.get('NativeBridgeService');
            return (UserAgent.isWindowsJade() && window && window.hasOwnProperty('NativeBridge')
                && UserAgent.isNativeAppVersionIsEqualOrAbove("3.4") && nativeBridgeService.getContainerMode());
        };

        this.isIOSNativeBridge = function() {
            return (UserAgent.isHubApp() && UserAgent.isIOS() && UserAgent.isNativeAppVersionIsEqualOrAbove("9.1"));
        };

        this.isAndroidNativeBridge = function() {
            return (UserAgent.isHubApp() && UserAgent.isAndroid() && UserAgent.isNativeAppVersionIsEqualOrAbove("9.1"));
        };

        this.isMacNativeBridge = function() {
            return (UserAgent.isMacJade() && window && window.hasOwnProperty('webkit') &&
                UserAgent.isNativeAppVersionIsEqualOrAbove("9.1"));
        };

        this.isNativeBridge = function() {
            return this.isWindowsNativeBridge() || this.isIOSNativeBridge() || this.isAndroidNativeBridge() || this.isMacNativeBridge();
        };

        this.isFavoriteEnabled = function(app) {
            return (app.isMdmApp && this.isFavoriteNativeAppEnabled())
                || !app.isMdmApp;
        };

        this.isFavoriteNativeAppEnabled = function() {
            return this.getObjValue(window, 'workspaceOne.featureFlags.FAVORITE_NATIVE_APPS', false);
        };
    }]);

(function(module) {
    'use strict';

    module.service('ViewportMinAppService', ['$window', 'UserAgent', function($window, UserAgent) {
        var ViewportMinAppService = this;

        ViewportMinAppService.getMinAppNo = function(screenWidth) {
            var PHONE_SMALL_MINAPPNO = 6,
                PHONE_Large_MINAPPNO = 8,
                TABLET_MEDIUM_MINAPPNO = 10,
                TABLET_LARGE_MINAPPNO = 12,
                TABLET_XLARGE_MINAPPNO = 14;

            //This needs to work closely with the gird-mobile.less
            if (screenWidth <= 580) {
                return PHONE_SMALL_MINAPPNO;
            } else if (screenWidth <= 767) {
                return PHONE_Large_MINAPPNO;
            } else if (screenWidth <= 890) {
                return TABLET_MEDIUM_MINAPPNO;
            } else if (screenWidth <= 1023) {
                return TABLET_LARGE_MINAPPNO;
            } else if (screenWidth <= 1280) {
                return TABLET_XLARGE_MINAPPNO;
            } else {
                return TABLET_XLARGE_MINAPPNO;
            }
        };

        // This is for browser get one row app
        ViewportMinAppService.getOneRowMinAppNoBrowser = function(screenWidth) {
            var PHONE_SMALL_MINAPPNO = 3,
                PHONE_Large_MINAPPNO = 4,
                TABLET_SMALL_MINAPPNO = 3,
                TABLET_MEDIUM_MINAPPNO = 4,
                TABLET_LARGE_MINAPPNO = 5,
                DESKTOP_LARGE_MINAPPNO = 6;

            //This needs to work closely with the gird-mobile.less
            if (screenWidth < 580) {
                return PHONE_SMALL_MINAPPNO;
            } else if (screenWidth < 768) {
                return PHONE_Large_MINAPPNO;
            } else if (screenWidth < 840) {
                return TABLET_SMALL_MINAPPNO;
            } else if (screenWidth < 920) {
                return TABLET_MEDIUM_MINAPPNO;
            } else if (screenWidth < 1030) {
                return TABLET_LARGE_MINAPPNO;
            } else {
                return DESKTOP_LARGE_MINAPPNO;
            }
        };

        // Desktopap grid structure is different, below 640 is content cutoff, and need fetch a different set of number at a given viewport
        ViewportMinAppService.getOneRowMinAppNoDesktop = function(screenWidth) {
            var TABLET_SMALL_MINAPPNO = 3,
                TABLET_MEDIUM_MINAPPNO = 4,
                TABLET_LARGE_MINAPPNO = 5,
                DESKTOP_LARGE_MINAPPNO = 6;

            //This needs to work closely with the gird-mobile.less
            if (screenWidth < 640) {
                return TABLET_SMALL_MINAPPNO;
            } else if (screenWidth < 768) {
                return TABLET_SMALL_MINAPPNO;
            } else if (screenWidth < 920) {
                return TABLET_MEDIUM_MINAPPNO;
            } else if (screenWidth < 1030) {
                return TABLET_LARGE_MINAPPNO;
            } else {
                return DESKTOP_LARGE_MINAPPNO;
            }
        };

        ViewportMinAppService.oneRowSectionAppsCount = function(screenWidth) {
            var appCounts = UserAgent.isAWJadeDesktop() ? ViewportMinAppService.getOneRowMinAppNoDesktop(screenWidth) : ViewportMinAppService.getOneRowMinAppNoBrowser(screenWidth);
            return appCounts;
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    //Stops propagation of specified event.
    //Used to fix focus issue in iOS, where user has to touch 2 times to focus an input field on modal
    //Seems like angular touch issue
    //https://github.com/angular-ui/bootstrap/issues/2017

    module.directive('stopEvent', function() {
        return {
            restrict: 'A',
            link: function(scope, element, attr) {
                element.on(attr.stopEvent, function(e) {
                    e.stopPropagation();
                });
            }
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.filter('highlight', function($sce) {
        return function(text, userNameSearchQuery) {
            var splitWords = userNameSearchQuery.split(" ");
            _.each(splitWords, function(phrase) {
                if (phrase) {
                    var regex = new RegExp('(\\b' + phrase + ')', 'gi');
                    if (regex.test(phrase)) {
                        text = text.replace(regex, '<em>$1</em>');
                    } else {
                        text = text.replace(phrase, '<em>' + phrase + '</em>');
                    }
                }
            });
            return $sce.trustAsHtml(text);
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));


/*
 * contextdialogDirective - Selectively set a context menu for an element, render the context menu at proper position
 * on right click and dismiss the context menu when click/right click event happens at other places.
 *
 * In a repeater, different context menu could be set for different type of model item.
 *
 * @restrict attribute
 *
 * Example:
 * <div contextdialog="{uris:{templateRef1:boolean expression1, templateRef2:boolean expression2} , scope:{app:app}}"
 * templateRef1="/SAAS/horizon/portal/launcher/desktop/launcherContextmenu.html"></div>
 *
 * uris object: templateRef1 specifies the templateUrl that will be shown as context menu.
 * scope object: contains the variables that we want to pass to context menu scope.
 */
(function(module) {
    'use strict';
    module.directive("actionsheet", ['$compile', '$timeout', '$rootScope', '$templateCache', '$http', '$location', 'UpdateUrlParamsService', function($compile, $timeout, $rootScope, $templateCache, $http, $location, UpdateUrlParamsService) {
        /**
         * Private method to select context menu element.
         * Define here for not polluting the paradigm to define a directive.
         *
         * @param scope
         * @param attrs
         * @param uris Object that contains URIs of context menu elements.
         * @private
         */

        var templateLoaded = {};
        var closeMenu;
        var contextEvents;
        var _prepareContextdialog = function(scope, attrs, uris) {
            if (!uris) {
                return;
            }

            angular.forEach(uris, function(value, key) {
                if (value) {
                    //If the key is also an attribute in this element, its value templateUrl.
                    //We try the lowercase of the key because the key as an attribute might be lowercased by browser.
                    var templateUrl = attrs[key] || attrs[angular.lowercase(key)];
                    if (templateUrl) {
                        //Load the template for future use.
                        if (!$templateCache.get(templateUrl) && !templateLoaded[templateUrl]) { //Load it if it is not in cache.
                            templateLoaded[templateUrl] = true;
                            $http.get(templateUrl, {cache: $templateCache}).then(function(response) {}, function() {
                                    templateLoaded[templateUrl] = false;
                                });
                        }
                        //Set context menu template id so that we can fetch it later from $templateCache.
                        attrs.$set("contextdialogTmplId", templateUrl);
                    }
                }
            });
        };

        return {
            restrict: 'A',
            controller:
                function() {
                    // $templateCache.get returns a string if the template is defined
                    // from JS or HTML <script>, but it returns an array if it had to make
                    // an http request.  Our code assumes it always returns a string, so
                    // we patch it here to make it so.
                    var stockTCget = $templateCache.get;
                    $templateCache.get = function(cacheId) {
                        var got = stockTCget(cacheId);
                        return angular.isArray(got) ? got[1] : got;
                    };

                    //As $http sends async call, we do not know if a request for a template is sent yet.
                    //We use this hash to mark if the context menu template is being loaded.
                    closeMenu = angular.noop;

                    //for v3.0 new trigger event is "click"
                    contextEvents = 'click';
                },
            bindToController: true,
            link: function(scope, element, attrs) {
                var target = attrs.actionsheet;

                if (!target) {
                    return;
                }

                var contextdialogOptions = scope.$eval(target);

                //prepare context menu
                _prepareContextdialog(scope, attrs, contextdialogOptions.uris);

                element.on(contextEvents, function(contextmenuEvent) {
                    contextmenuEvent.preventDefault();
                    contextmenuEvent.stopPropagation();

                    scope.$apply(function() {
                        // Close any other context menu before opening a new one
                        // If no context menu is open,it will be a no-op.
                        closeMenu();

                        // If context menu is registered
                        if (attrs.contextdialogTmplId) {
                            // Show the context menu, show it beneath the dots
                            var contextdialog;
                            // Look for a context menu already on this element
                            if (!attrs.contextdialogId) {
                                var contextdialogScope = scope.$new();
                                angular.extend(contextdialogScope, contextdialogOptions.scope);
                                contextdialog = $compile($templateCache.get(attrs.contextdialogTmplId))(contextdialogScope);
                                contextdialog.attr("id", "hzn" + new Date().getTime());

                                UpdateUrlParamsService.hideNativenav().then(function() {
                                    angular.element('.global-container').append(contextdialog);
                                    //delaying adding the class after the contextdialog is appended to the DOM to ensure the animation happens
                                    $timeout(function() {
                                        angular.element('.global-container').addClass('actionsheet-on');
                                    }, 25, false);
                                });

                                attrs.$set("contextdialogId", "#" + contextdialog.attr("id"));
                            }

                            // Close the context menu when a click event happen at somewhere else.
                            closeMenu = function(event) {
                                if (event) {
                                    var targetClass = event.target.getAttribute('class');
                                    // When this directive is used, click on links with "nativenav-show" class will invoke the util service
                                    // This is to prevent flickering on notification page and also details page
                                    if (targetClass.indexOf('nativenav-show') !== -1) {
                                        UpdateUrlParamsService.showNativenav();
                                    }
                                }

                                // Unbind the handlers when closing contextdialog.
                                $(document).off('click', closeMenu);
                                contextdialog.off('click', 'a, button', closeMenu);

                                angular.element('.global-container').removeClass('actionsheet-on');

                                //delay the removal until the animation finishes
                                $timeout(function() {
                                    contextdialog.remove();
                                }, 355, false);

                                attrs.$set("contextdialogId", "");
                                closeMenu = angular.noop;
                            };

                            // If the element is wrapped in an <a> or <button> tag click on it will remove the contextdialog
                            // Need special handle of the nativenav hide and show situation
                            // Changed to bind to avoid compication, on caused problem of not dismiss the dialogbox
                            contextdialog.bind('click', 'a, button', closeMenu);
                        }
                    });
                });
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

appCenter.component('appItem', {
    template: '<div ng-include="\'app-v2/components/appItem/\' + appItemCtrl.templateUrl">',
    bindings: {
        app: '<',
        favoriteEnabled: '<'
    },
    controller: 'BookmarksItemController',
    controllerAs: 'appItemCtrl'
});

(function(module) {
    'use strict';
    module.directive("contextdialog", ['$compile', '$timeout', '$rootScope', "$templateCache", "$http", "UserAgent", "$window", function($compile, $timeout, $rootScope, $templateCache, $http, UserAgent, $window) {
        var templateLoaded = {};
        var closeMenu;
        var contextEvents;
        var _prepareContextdialog = function(scope, attrs, uris) {
            if (!uris) {
                return;
            }

            angular.forEach(uris, function(value, key) {
                if (value) {
                    var templateUrl = attrs[key] || attrs[angular.lowercase(key)];
                    if (templateUrl) {
                        //Set context menu template id so that we can fetch it later from $templateCache.
                        attrs.$set("contextdialogTmplId", templateUrl);
                    }
                }
            });
        };

        return {
            restrict: 'A',
            controller:
                function() {
                    var stockTCget = $templateCache.get;
                    $templateCache.get = function(cacheId) {
                        var got = stockTCget(cacheId);
                        return angular.isArray(got) ? got[1] : got;
                    };

                    closeMenu = angular.noop;

                    contextEvents = 'click';
                },
            bindToController: true,
            link: function(scope, element, attrs) {
                var target = attrs.contextdialog;

                if (!target) {
                    return;
                }

                var contextdialogOptions = scope.$eval(target);

                //prepare context menu
                _prepareContextdialog(scope, attrs, contextdialogOptions.uris);

                element.on(contextEvents, function(contextmenuEvent) {
                    contextmenuEvent.preventDefault();
                    contextmenuEvent.stopPropagation();

                    scope.$apply(function() {
                        closeMenu();

                        var transitionpoint = parseInt(attrs.contextdialogtp);

                        // If context menu is registered
                        if (attrs.contextdialogTmplId) {
                            // Show the context menu, show it beneath the dots
                            var contextdialog;
                            // Look for a context menu already on this element
                            if (!attrs.contextdialogId) {
                                var contextdialogScope = scope.$new();

                                angular.extend(contextdialogScope, contextdialogOptions.scope);

                                contextdialog = $compile($templateCache.get(attrs.contextdialogTmplId))(contextdialogScope);
                                contextdialog.attr("id", "hzn" + new Date().getTime());

                                element.closest('.app-label-container').addClass('contextmenu-on');

                                contextdialog.on('click touchstart', function(e) {
                                    e.stopPropagation();
                                });

                                element.append(contextdialog);

                                attrs.$set("contextdialogId", "#" + contextdialog.attr("id"));
                            }

                            angular.element($window).on('resize', function() {
                                var viewportSize = $window.innerWidth;

                                angular.element('.global-container-browser').find(".appitem-contextdialog-container").remove();
                                element.append(contextdialog);

                                calculateDirection(element, contextdialog);
                            });

                            // determine which corner of the element to place the menu at
                            $timeout(function() { //Need to run after current digest cycle to find the right size of the menu
                                calculateDirection(element, contextdialog);
                            }, 0, false);

                            // Close the context menu when a click event happen at somewhere else.
                            closeMenu = function(event) {
                                //This code should always sit at the beginning.
                                if (event && (!event.data || !event.data.propagate)) {
                                    event.stopPropagation();
                                }

                                // Unbind the handlers when closing contextdialog.
                                $(document).off('click touchstart', closeMenu);
                                contextdialog.off('click', 'a, button', closeMenu);
                                angular.element($window).off('resize');
                                element.closest('.app-label-container').removeClass('contextmenu-on');

                                contextdialog.remove();

                                attrs.$set("contextdialogId", ""); // element.removeAttr("contextdialogId") did not work
                                closeMenu = angular.noop;
                            };
                        }
                    });
                });
            }
        };

        function calculateDirection(element, contextdialog) {
            // need to use .content-container instead of .content as content can be exceed viewport size
            // depending on the apps we have
            var pane = element.closest('.content-container-scrollable, body'),
                paneCoords = pane.offset(),
                elementCoords = element.offset(),
                dialogWidth = contextdialog.find('.appitem-contextdialog-actions-list').outerWidth(),
                dialogHeight = contextdialog.find('.appitem-contextdialog-actions-list').outerHeight(),
                vert = 'south',
                horiz = '',
                dir;

            paneCoords.right = paneCoords.left + pane.outerWidth();
            paneCoords.bottom = paneCoords.top + pane.outerHeight();
            elementCoords.right = elementCoords.left + element.outerWidth();
            elementCoords.bottom = elementCoords.top + element.outerHeight();

            if (elementCoords.top + dialogHeight > paneCoords.bottom &&
                elementCoords.bottom - dialogHeight >= paneCoords.top) {
                // we can't place the menu below, but we can place it above
                vert = 'north';
            }

            if (elementCoords.left + dialogWidth <= paneCoords.right) {
                // place it to the left if we can
                horiz = 'east';
            } else if (elementCoords.right - dialogWidth >= paneCoords.left) {
                // or to the right if we can
                horiz = 'west';
            }

            dir = vert + horiz;

            contextdialog.removeClass('north northeast northwest south southeast southwest')
                .addClass(dir);
            // Clicking any button/link on the contextdialog should close it
            // Not working on the removeBookmark link -- can not figure out
            contextdialog.on('click', 'a, button', closeMenu);

            // Added touchstart for iPad and iPad Pro otherwise if you click outside of
            // the contextDialog box the box will not be dismissed
            $(document).on('click touchstart', {propagate: true}, closeMenu);

            // context dialog from modal not closing clicking outside
            // need to add this to make that work
            $('.modal-container').on('click touchstart', closeMenu);
        }
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

appCenter.component('appList', {
    template: '<div ng-include="\'app-v2/components/appList/\' + appListCtrl.templateUrl">',
    controllerAs: 'appListCtrl',
    controller: ['$stateParams', '$state', '$scope', 'AppsService', '$filter', 'CatalogService', 'UserAgent', 'PAGING', '$transitions',
        function($stateParams, $state, $scope, AppsService, $filter, CatalogService, UserAgent, PAGING, $transitions) {
            var vm = this;
            var index = 0;
            vm.visibleApps = [];
            vm.appList = [];
            vm.isLoading = false;
            vm.scrollDisabled = false;

            vm.favoriteEnabled = !AppsService.loadFromDbFailed;
            this.templateUrl = UserAgent.isAWJadeMobile() ? 'appList.html' : 'appListBrowser.html';

            vm.isAWJadeDesktop = UserAgent.isAWJadeDesktop();

            var appListLabels = {
                favorite: $filter('i18n')('hub.apps.favorites'),
                all: $filter('i18n')('myapp.nav.allApps'),
                Web: $filter('i18n')('myapp.nav.webApps'),
                Virtual: $filter('i18n')('myapp.nav.virtualApps'),
                Native: $filter('i18n')('myapp.nav.mobileApps'),
                category: decodeURIComponent($stateParams.category)
            };

            if (UserAgent.isMacJade()) {
                appListLabels.Native = $filter('i18n')('myapp.nav.macApps');
            } else if (UserAgent.isWindowsJade() && UserAgent.isAWJadeDesktop()) {
                appListLabels.Native = $filter('i18n')('myapp.nav.windowsApps');
            }

            vm.appListLabel = appListLabels[$stateParams.type];
            vm.getNextPage = function() {
                if (vm.appList.length) {
                    var endIndex = index + PAGING.PAGE_SIZE;
                    while (index < endIndex && index < vm.appList.length) {
                        vm.visibleApps.push(vm.appList[index]);
                        index++;
                    }
                }
            };
            if ($stateParams.type === 'newApps') {
                vm.appList = AppsService.getNewApps()
                    .then(function(data) {
                        vm.appList = data;
                        vm.getNextPage();
                    });
                vm.appListLabel = $filter('i18n')('hub.apps.newApps');
            } else if ($stateParams.type !== 'category') {
                vm.appList = AppsService.getAppList($stateParams.type);
                vm.getNextPage();
            } else {
                var category = CatalogService.getAllCategory();
                CatalogService.setSelectedCategory(_.find(category, 'name', $stateParams.category));
                vm.isLoading = true;
                AppsService.getAppList($stateParams.type)
                    .then(function(data) {
                        vm.appList = data;
                        vm.isLoading = false;
                        vm.getNextPage();
                    });
            }

            var updateAppStatus = function(app, status) {
                for (var i in vm.appList) {
                    if (vm.appList[i].appId === app.appId) {
                        vm.appList[i].installStatus = status;
                        vm.appList[i].statusCode = CatalogService.getAppStatusCode(status);
                        break;
                    }
                }
            };

            var bookmarkApp = function(app) {
                if ($stateParams.type === 'favorite') {
                    if (app.favorite) {
                        vm.visibleApps.unshift(app);
                    } else {
                        vm.visibleApps = _.reject(vm.visibleApps, function(el) {
                            return el.appId === app.appId;
                        });
                    }
                }
            };

            vm.hubListGoToDetails = function(appId) {
                $state.go('apps.list.details', {
                    appId: appId,
                    params: {
                        param1: 'nativenav=Hide'
                    }
                });
            };

            vm.goToApps = function() {
                $state.go('apps');
            };

            $scope.$on('app-bookmarked', function(event, app) {
                bookmarkApp(app);
            });

            $scope.$on('native-bridge-app-bookmarked', function(event, app) {
                var entitlements = AppsService.getEntitlements();
                var entitlement = _.find(entitlements, {'appId': app.appId});
                entitlement.favorite = app.favorite;
                bookmarkApp(entitlement);
                $scope.$apply();
            });

            $scope.$on('app-status-change', function(event, args) {
                var entitlements = AppsService.getEntitlements();
                _.find(entitlements, {'appId': args.app.appId}).installStatus = args.status;
                AppsService.setEntitlements(entitlements);
                vm.appList = AppsService.getAppList($stateParams.type);
                updateAppStatus(args.app, args.status);
            });

            //IOS - prevent this page to scroll in when foreground page scroll
            $transitions.onStart({to: 'apps.list.**', from: 'apps.list.**'}, function(transition) {
                if (transition.to().name !== 'apps.list') {
                    vm.scrollDisabled = true;
                } else {
                    vm.scrollDisabled = false;
                }
            });
        }]
});

appCenter.component('appListItem', {
    templateUrl: 'app-v2/components/appListItem/appListItem.html',
    bindings: {
        app: '=',
        favoriteEnabled: '<',
        hideVirtualApp: '=?'
    },
    controller: 'CatalogItemController',
    controllerAs: 'appListItemCtrl'
});

appCenter.component('appPromotions', {
    templateUrl: 'app-v2/components/appPromotions/appPromotions.html',
    bindings: {
        promotions: '<',
        applications: '<',
        categories: '<'
    },
    controller: ['$window', '$scope', '$timeout', 'UtilService', 'UserAgent', function($window, $scope, $timeout, UtilService, UserAgent) {
        var vm = this;
        vm.refresh = true;
        var promotionWidth = window.innerWidth < 360 ? 280 : 325;
        vm.promotionWidth = promotionWidth + 'px';
        vm.carouselConfig = {
            loop: true,
            autoWidth: true,
            dots: true,
            margin: 10,
            items: 4,
            onInitialized: initialise
        };

        vm.getAppIcon = function(appId) {
            return this.applications[appId] && this.applications[appId].iconUrl;
        };

        vm.getAppName = function(appId) {
            return this.applications[appId] && this.applications[appId].name;
        };

        $window.addEventListener("orientationchange", function(e) {
            refreshPromotions();
        });

        $window.addEventListener("resize", function() {
            if (UserAgent.isAWJadeMobile()) {
                refreshPromotions();
            }
        });

        function refreshPromotions() {
            $scope.$apply(function() {
                vm.refresh = false;
                $timeout(function() {
                    vm.refresh = true;
                }, 200);
            });
        }

        function initialise(e) {
            var cardWidth = e.target.clientWidth / e.item.count;
            vm.promotionWidth = promotionWidth + 'px';
            var padding = e.item.count === 1 ? 20 : 15;
            if (promotionWidth <= cardWidth) {
                vm.promotionWidth = (cardWidth - padding) + 'px';
                this.destroy();
                angular.element(e.target).addClass('off');
            } else {
                this.refresh();
            }
        }

        vm.isVirtualAppEnabled = function(appId) {
          return UtilService.hideVirtualApps() && this.applications[appId] &&
              appId.indexOf('Virtual') !== -1;
        };
    }],
    controllerAs: 'appPromotionsCtrl'
});


appCenter.component('appPromotions', {
    templateUrl: 'app-v2/components/appPromotions/appPromotionsBrowser.html',
    bindings: {
        promotions: '<',
        applications: '<',
        categories: '<'
    },
    controller: ['$window', '$scope', '$timeout', 'UserAgent', function($window, $scope, $timeout, UserAgent) {
        var vm = this;

        vm.carouselConfig = {
            loop: true,
            autoWidth: true,
            dots: true,
            nav: true,
            center: true,
            margin: 0,
            // For browser the max number of slides on the screen is 3 for any viewport size
            items: 3
        };

        if (this.promotions.length == 1) {
            vm.carouselConfig.mouseDrag = false;
            vm.carouselConfig.nav = false;
            vm.carouselConfig.dots = false;
            vm.carouselConfig.touchDrag = false;
        }

        if (this.promotions.length >= 2) {
            $timeout(function() {
                $('.owl-carousel').find('.owl-nav').removeClass('disabled');
                // This is for clicking on the nav, without the following code the nav dissapears
                $('.owl-carousel').on('changed.owl.carousel', function(event) {
                    $(this).find('.owl-nav').removeClass('disabled');
                });
                // This is for resizing the viewport, without the following code the nav dissapears
                $('.owl-carousel').on('resized.owl.carousel', function(event) {
                    $(this).find('.owl-nav').removeClass('disabled');
                });
            }, 200);
        }

        // Do not show the owl-nav on mobile ios and android per UX mock, windows will show regardless as they have 2in1 (touch and mouse mode)
        vm.isIOSAndroid = UserAgent.isIOS() || UserAgent.isAndroid();

        vm.getAppIcon = function(appId) {
            return this.applications[appId] && this.applications[appId].iconUrl;
        };

        vm.getAppName = function(appId) {
            return this.applications[appId] && this.applications[appId].name;
        };
    }],
    controllerAs: 'appPromotionsBrowserCtrl'
});


appCenter.component('appRating', {
    templateUrl: 'app-v2/components/appRating/appRating.html',
    bindings: {
        ratingData: '=',
        hideVirtualApp: '=?',
        app: '=?'
    },
    controller: ['$http', 'RequestFactory', function($http, RequestFactory) {
        var ctrl = this;

        var ratingMap = {
            like: 1,
            dislike: -1,
            neutral: 0
        };

        ctrl.updateLikeRating = function() {
            var oldRating = {};
            angular.copy(ctrl.ratingData, oldRating);
            if (ctrl.ratingData.rating === ratingMap.dislike) {
                --ctrl.ratingData.dislikes;
            }
            if (ctrl.ratingData.rating !== ratingMap.like) {
                ++ctrl.ratingData.likes;
                ctrl.ratingData.rating = ratingMap.like;
            } else {
                --ctrl.ratingData.likes;
                ctrl.ratingData.rating = ratingMap.neutral;
            }
            updateAppRating(ctrl.ratingData, oldRating);
        };

        ctrl.updateDislikeRating = function() {
            var oldRating = {};
            angular.copy(ctrl.ratingData, oldRating);
            if (ctrl.ratingData.rating === ratingMap.like) {
                --ctrl.ratingData.likes;
            }
            if (ctrl.ratingData.rating !== ratingMap.dislike) {
                ++ctrl.ratingData.dislikes;
                ctrl.ratingData.rating = ratingMap.dislike;
            } else {
                --ctrl.ratingData.dislikes;
                ctrl.ratingData.rating = ratingMap.neutral;
            }
            updateAppRating(ctrl.ratingData, oldRating);
        };

        function updateAppRating(ratingData, oldRating) {
            if (ratingData.url) {
                var url = ratingData.url + "/" + ratingData.rating;
                var req = RequestFactory(url, { method: 'PUT' });
                $http(req).catch(function() {
                    ctrl.ratingData = oldRating;
                });
            }
        }
    }],
    controllerAs: 'appRatingCtrl'
});

(function(module) {
    module.directive('appOrientationDirective', ['$window', 'ViewportMinAppService',
        function($window, ViewportMinAppService) {
            return {
                scope: {
                    minFavoriteCount: '=',
                    maxSectionAppsCount: '=',
                    oneRowSectionAppsCount: '=',
                    minSectionAppsCount: '=',
                    updateDisplayedApps: '&'
                },
                link: function(scope, element, attrs) {
                    $window.addEventListener("orientationchange", function() {
                        scope.$apply(function() {
                            //  portrait if 180 or 0,
                            if (window.orientation === 0 || window.orientation === 180) {
                                scope.minFavoriteCount = ViewportMinAppService.getMinAppNo(screen.width);
                                scope.oneRowSectionAppsCount = ViewportMinAppService.oneRowSectionAppsCount(screen.width);
                                scope.updateDisplayedApps();
                            } else {
                                //landscape is 90 or -90, so use the screen.height there is bug in safari webview, on orientationchange the screen.width does not get updated
                                //https://stackoverflow.com/questions/44484547/screen-width-screen-height-not-updating-after-screen-rotation/44562761
                                scope.minFavoriteCount = ViewportMinAppService.getMinAppNo(screen.height);
                                scope.oneRowSectionAppsCount = ViewportMinAppService.oneRowSectionAppsCount(screen.height);
                                scope.updateDisplayedApps();
                            }
                            // Also update the one-row section
                            scope.maxSectionAppsCount = scope.minFavoriteCount;
                            scope.minSectionAppsCount = scope.minFavoriteCount / 2;
                        });
                    }.bind(this));

                    $window.addEventListener("resize", function() {
                        scope.$apply(function() {
                            scope.oneRowSectionAppsCount = ViewportMinAppService.oneRowSectionAppsCount($window.innerWidth);
                            scope.updateDisplayedApps();
                        });
                    }.bind(this));
                }
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

appCenter.component('apps', {
    template: '<div ng-include="\'app-v2/components/apps/\' + appsCtrl.templateUrl">',
    controllerAs: 'appsCtrl',
    controller: ['$q',
        'UserAgent',
        'ConfigService',
        'CatalogService',
        'HttpProxyService',
        'BootstrapService',
        'AppsService',
        '$scope',
        '$rootScope',
        'UtilService',
        'ViewportMinAppService',
        '$http',
        '$window',
        '$state',
        'TenantCustomizationService',
        'EventsService',
        '$transitions',
        '$filter',
        function($q,
                 UserAgent,
                 ConfigService,
                 CatalogService,
                 HttpProxyService,
                 BootstrapService,
                 AppsService,
                 $scope,
                 $rootScope,
                 UtilService,
                 ViewportMinAppService,
                 $http,
                 $window,
                 $state,
                 TenantCustomizationService,
                 EventsService,
                 $transitions,
                 $filter) {
            var vm = this;
            var newAppsLabelEnabled = UtilService.getObjValue(window, 'workspaceOne.featureFlags.NEW_APPS_LABEL', false);
            var favoriteNativeApps = UtilService.isFavoriteNativeAppEnabled();
            var recommendedCategory = {};
            var bookmarkOrderSet = false;

            this.templateUrl = UtilService.loadTemplateForPlatform('mobile.html', 'desktop.html', 'browser.html');

            vm.favorites = [];
            vm.categories = [];
            vm.appContext = {
                selectedCategory: {}
            };
            vm.appLoading = true;
            vm.excludeThinApps = !UserAgent.isThinAppSortSupportedBrowser();
            vm.emptyFillers = [1, 2, 3, 4, 5, 6, 7, 8];
            vm.favoritesOnlyView = false;
            vm.loadFromDbFailed = false;
            vm.scrollDisabled = false;
            vm.inAppNotificationEnabled = TenantCustomizationService.isNotificationsEnabled();

            // Onload to get the minApp
            vm.minFavoriteCount = ViewportMinAppService.getMinAppNo($window.innerWidth);
            // Max section app should be the same number as the minFavoriteApps, as the minFavoriteApps are two rows, we can add one
            vm.maxSectionAppsCount = vm.minFavoriteCount;
            vm.minSectionAppsCount = vm.minFavoriteCount / 2;

            vm.customizationsOrder = [];
            vm.promotions = [];
            vm.promotionApplication = [];
            vm.promotionCategory = [];
            vm.recommendedApps = [];
            vm.newApps = [];

            // Used for One-Row class for the newApps and recommendedApps module, to toggle the "See All" and "See Less"
            vm.appsModuleOneRow = {'newApps': true, 'recommended': true};
            // Desktopapp and browser grid structure are different at the different breakpoints
            vm.oneRowSectionAppsCount = ViewportMinAppService.oneRowSectionAppsCount($window.innerWidth);

            var isIOSAndroid = UserAgent.isIOS() || UserAgent.isAndroid();

            // Get the tenant customization from TenantCustomizationService for preview-loading
            var previewCustomization = TenantCustomizationService.getCustomizationsOrder();
            vm.previewShowFavorites = previewCustomization.indexOf('Favorites') > -1;
            vm.previewShowPromotions = previewCustomization.indexOf('Promotions') > -1;
            vm.previewShowNewApps = previewCustomization.indexOf('NewApps') > -1;
            vm.previewShowRecommendedApps = previewCustomization.indexOf('Recommended') > -1;
            vm.previewShowAllApps = !vm.previewShowPromotions && !vm.previewShowNewApps && !vm.previewShowRecommendedApps;

            // This can not move to service as the newApps and recommendedApps length needs to get from here
            vm.updateDisplayedApps = function() {
                vm.displayedNewAppsCount = vm.appsModuleOneRow.newApps ? vm.oneRowSectionAppsCount : vm.newApps.length;
                vm.displayedRecommendedAppsCount = vm.appsModuleOneRow.recommended ? vm.oneRowSectionAppsCount : vm.recommendedApps.length;
            };

            //This function will be cleaner after HW-90737 task
            var loadPageEntitlements = function(appContext, loadCategories, loadNewApps, noCache) {
                var appList = {};
                var catalogCustomization = TenantCustomizationService.getCatalogCustomizationSettings();
                vm.customizationsOrder = TenantCustomizationService.getCustomizationsOrder();

                var callQueue = [CatalogService.getFirstPage(vm.appContext, noCache, vm.excludeThinApps, false, false)];
                if (loadCategories && vm.customizationsOrder.indexOf('Categories') > -1) {
                    callQueue.push(ConfigService.getAppCategories());
                }
                if (loadNewApps && vm.customizationsOrder.indexOf('NewApps') > -1) {
                    callQueue.push(CatalogService.getNewApps(noCache, vm.excludeThinApps, false));
                }

                return $q.all(callQueue).then(function(data) {
                    vm.appLoading = false;

                    if (loadNewApps && vm.customizationsOrder.indexOf('NewApps') > -1) {
                        vm.newApps = _.get(data.pop(), 'entitlements', []);
                        vm.displayedNewAppsCount = vm.appsModuleOneRow.newApps ? vm.oneRowSectionAppsCount : vm.newApps.length;
                    }
                    if (loadCategories && vm.customizationsOrder.indexOf('Categories') > -1) {
                        vm.categories = data.pop() || [];
                        CatalogService.setAllCategory(vm.categories);
                    }
                    vm.promotions = getAppPromotions(catalogCustomization);
                    vm.promotionApplication = getPromotionApps(catalogCustomization);
                    vm.promotionCategory = getPromotionCategory(catalogCustomization);
                    appList = data.pop();
                    vm.entitlements = _.get(appList, 'entitlements', []);
                    vm.entitlementsLoadFromDbFailed = _.get(appList, 'loadFromDbFailed', false);
                    vm.noApps = !vm.entitlements.length;
                    vm.customizationLoadFromDbFailed = TenantCustomizationService.isLoadFromDbFailed();
                    vm.favoritesOnlyView = TenantCustomizationService.isHubFavoritesOnlyView();
                    vm.dbLoadFailed = vm.entitlementsLoadFromDbFailed || vm.customizationLoadFromDbFailed;
                    vm.favoritesEnabled = TenantCustomizationService.isHubFavoritesEnabled() && !vm.favoritesOnlyView && !vm.dbLoadFailed;
                    CatalogService.setDeviceStatus(_.get(appList, "deviceStatus"));
                    AppsService.setEntitlements(vm.entitlements);
                    AppsService.loadFromDbFailed = vm.entitlementsLoadFromDbFailed;
                    AppsService.setFavorites(_.get(appList, 'bookmarks', []));

                    bookmarkOrderSet = _.get(appList, 'bookmarkOrderSet', false);

                    vm.favorites = AppsService.getFavorites();
                    vm.defaultLabels = CatalogService.getDefaultLabelsFromEntitlements(vm.entitlements);

                    vm.isFavoritesEditDisabled = isIOSAndroid || vm.favorites.length === 1;

                    recommendedCategory = _.find(vm.categories, {'name': 'Recommended'});
                    if (recommendedCategory && vm.customizationsOrder.indexOf('Recommended') > -1) {
                        CatalogService.getRecommendedApps(noCache, vm.excludeThinApps, false).then(function(response) {
                            vm.recommendedApps = _.get(response, 'entitlements', []);
                            vm.displayedRecommendedAppsCount = vm.appsModuleOneRow.recommended ? vm.oneRowSectionAppsCount : vm.recommendedApps.length;
                        });
                        vm.categories = _.reject(vm.categories, recommendedCategory);
                    }
                    //client can know when a request is fully complete a new callback action should be added, CONTENT_LOADED.
                    //Client will initially use this to create Apteligent user flows.
                    if (UtilService.isHubNative()) {
                        UtilService.informHubContentLoaded();
                    }
                    // Added for hub browser and hub desktopapp
                    var noCustomizedAppModule = function() {
                        return (vm.customizationsOrder.indexOf('NewApps') === -1 && vm.customizationsOrder.indexOf('Promotions') === -1 && vm.customizationsOrder.indexOf('Recommended') === -1);
                    };
                    // If there is still entitlements and vm.customizationLoadFromDbFailed is false we show all apps
                    vm.showAllApps = (vm.entitlements.length && noCustomizedAppModule() && !vm.entitlementsLoadFromDbFailed) || (vm.entitlements.length && vm.customizationLoadFromDbFailed);

                    vm.fullScreenView = vm.noApps || vm.customizationsOrder.indexOf('Categories') === -1;

                    EventsService.getEvents().then(function(data) {
                        AppsService.checkForEvents(vm.entitlements, data);
                    });
                });
            };

            var getPromotionApps = function(data) {
                return _.get(data, 'compositeCatalogCustomizations.customizationEntityDetails.APPLICATION', {});
            };

            var getPromotionCategory = function(data) {
                return _.get(data, 'compositeCatalogCustomizations.customizationEntityDetails.CATEGORY', {});
            };

            var loadFirstPageOnLoad = function() {
                loadPageEntitlements(vm.appContext, true, newAppsLabelEnabled, false);
            };

            var getAppPromotions = function(data) {
                var appPromotions = _.find(_.get(data, 'compositeCatalogCustomizations.catalogCustomizations.catalogCustomizationList', []), {'name': 'Promotions'});
                return _.get(appPromotions, 'customizationValues', undefined) || [];
            };

            vm.clearCache = function() {
                HttpProxyService.clearAll();
                return loadPageEntitlements(vm.appContext, true, newAppsLabelEnabled, true);
            };

            vm.getRecommendedApps = function() {
                CatalogService.setSelectedCategory(recommendedCategory);
                $state.go('apps.list', {
                    type: 'category',
                    category: recommendedCategory.name
                });
            };

            vm.toggleOneRowAppsModule = function(params) {
                if (params === 'newApps') {
                    vm.appsModuleOneRow.newApps = !vm.appsModuleOneRow.newApps;
                    vm.displayedNewAppsCount = vm.appsModuleOneRow.newApps ? vm.oneRowSectionAppsCount : vm.newApps.length;
                }
                if (params === 'recommended') {
                    vm.appsModuleOneRow.recommended = !vm.appsModuleOneRow.recommended;
                    vm.displayedRecommendedAppsCount = vm.appsModuleOneRow.recommended ? vm.oneRowSectionAppsCount : vm.recommendedApps.length;
                }
            };

            // This is for mobile, do not touch
            vm.canBeDisplayed = function(type) {
                if (!vm.entitlements.length || type === 'Categories') {
                    return false;
                } else if (vm.recommendedApps.length && type === 'Recommended') {
                    return true;
                } else if (vm.newApps.length && type === 'NewApps') {
                    return true;
                } else if (vm.favorites.length && type === 'Favorites') {
                    return true;
                } else if (vm.promotions.length && type === 'Promotions') {
                    return true;
                } else {
                    return false;
                }
            };

            // There is one difference from the above function, in browser, for favorites regardless length we display -- either favorite apps or empty state message
            vm.canBeDisplayedBrowser = function(type) {
                if (!vm.entitlements.length || type === 'Categories') {
                    return false;
                } else if (vm.recommendedApps.length && type === 'Recommended') {
                    return true;
                } else if (vm.newApps.length && type === 'NewApps') {
                    return true;
                } else if (type === 'Favorites') {
                    // If no length we show the empty state favorites
                    return true;
                } else if (vm.promotions.length && type === 'Promotions') {
                    return true;
                } else {
                    return false;
                }
            };

            vm.goToAllAppsList = function() {
                $state.go('apps.list', {
                    type: 'all'
                });
            };

            vm.goToFavoriteEditMode = function() {
                // place holder the favorite components for edit mode aka reordering will be implemented later when ux mocks out
                $state.go('apps.favoritesedit');
            };

            $rootScope.$on('favorites-reordering-canceled', function() {
                // In the case of cancel we need to fetch a custom copy of original ordered list from the server
                CatalogService.getFirstPage(vm.appContext, false, vm.excludeThinApps, false, false).then(function(data) {
                    vm.favorites = data.bookmarks;
                    AppsService.setFavorites(vm.favorites);
                });
            });

            vm.canCategoryBeDisplayed = function() {
                return !vm.favoritesOnlyView && vm.customizationsOrder.indexOf('Categories') > -1 && !vm.noApps;
            };

            function sortFavorites() {
                //if bookmarkOrder is not set then sort favorites by name
                if (!bookmarkOrderSet) {
                    vm.favorites = $filter('orderBy')(vm.favorites, 'name', false);
                }
            }

            $scope.$on('app-bookmarked', function(event, app) {
                appBookmarked(app);
            });

            $scope.$on('native-bridge-app-bookmarked', function(event, app) {
                var entitlement = _.find(vm.entitlements, {'appId': app.appId});
                entitlement.favorite = app.favorite;
                appBookmarked(entitlement);
                $scope.$apply();
            });

            function checkForDuplicate(app) {
                var isDuplicate = false;
                vm.favorites.some(function(value) {
                    if (value.appId === app.appId) {
                        isDuplicate = true;
                    }
                });
                return isDuplicate && app.favorite;
            }

            function appBookmarked(app) {
                if (checkForDuplicate(app)) {
                    return;
                }
                // Update the view of the favorites after details page toggle favorite or contextMenu toggle favorite
                if (app.favorite) {
                    if (favoriteNativeApps && bookmarkOrderSet) {
                        vm.favorites.push(app);
                    } else {
                        vm.favorites.unshift(app);
                    }
                } else {
                    vm.favorites = _.reject(vm.favorites, function(el) {
                        return el.appId === app.appId;
                    });
                }

                sortFavorites();

                _.each(vm.entitlements, function(item) {
                    if (item.appId === app.appId) {
                        item.favorite = app.favorite;
                    }
                });

                //update recommended apps
                _.each(vm.recommendedApps, function(item) {
                    if (item.appId === app.appId) {
                        item.favorite = app.favorite;
                    }
                });

                //update new apps
                _.each(vm.newApps, function(item) {
                    if (item.appId === app.appId) {
                        item.favorite = app.favorite;
                    }
                });

                AppsService.setEntitlements(vm.entitlements);
                AppsService.setFavorites(vm.favorites);
                vm.isFavoritesEditDisabled = isIOSAndroid || vm.favorites.length === 1;
            }

            //IOS - prevent this page to scroll in when foreground page scroll
            $transitions.onStart({to: 'apps.**', from: 'apps.**'}, function(transition) {
                toggleScrollDisable(transition.to().name);
            });

            // On page refresh on apps list page, scroll should be hidden
            toggleScrollDisable($state.current.name);

            // For Hub Browser, the search is part of the apps, not a different url
            $rootScope.$on('hub-browser-search-on', function() {
                vm.scrollDisabled = true;
            });

            $rootScope.$on('hub-browser-search-off', function() {
                vm.scrollDisabled = false;
            });

            function toggleScrollDisable(currentState) {
                vm.scrollDisabled = (currentState !== 'apps');
            }

            // To handle android back button on apps page, navigating from notificaitons
            // then click the contextDialog, click the back button, the actionsheet would still be on with nativenav appear flow

            function dismissActionSheetOnBackButton() {
                // Match apps but not apps/details or apps/list
                var hashregex = /apps\//;
                return location.hash.indexOf('nativenav=Hide') === -1 && !hashregex.test(location.hash);
            }

            // This will trigger everytime #/apps is the hash
            if (UserAgent.isAndroid()) {
                window.addEventListener('hashchange', function() {
                    if (dismissActionSheetOnBackButton()) {
                        angular.element(".appitem-contextdialog-scrim").trigger('click');
                    }
                });
            }

            // For desktopapp refresh
            var appsRefresh = function() {
                HttpProxyService.clearAll();
                return loadPageEntitlements(vm.appCenterContext, true, newAppsLabelEnabled, true);
            };

            $rootScope.$on('Desktop-Apps-Refresh', function() {
                appsRefresh();
            });

            loadFirstPageOnLoad();
        }]
});

(function(module) {
    'use strict';

    module.service('AppsService', ['$q', 'CatalogService', 'Resource', 'INSTALL_STATUS', 'UtilService', 'EventsService', 'AppLaunchService',
        function($q, CatalogService, Resource, INSTALL_STATUS, UtilService, EventsService, AppLaunchService) {
        var service = this;
        var entitlements = {};
        var favorites = [];
        var catalogCustomization = {};

        service.loadFromDbFailed = false;

        service.setEntitlements = function(data) {
            entitlements = data;
        };

        service.setFavorites = function(data) {
            favorites = data;
        };

        service.getEntitlements = function() {
            return entitlements;
        };

        service.getCatalogCustomization = function() {
            return catalogCustomization;
        };

        service.setCatalogCustomization = function(data) {
            return catalogCustomization = data;
        };

        service.getFavorites = function() {
            //favorites are set when they are ordered
            if (favorites.length) {
                return favorites;
            }
            return _.filter(entitlements, function(entitlement) {
                return entitlement.favorite && (entitlement.installStatus.toUpperCase() === INSTALL_STATUS.ACTIVATED.name);
            });
        };

        service.getWebApps = function() {
            return _.filter(entitlements, {'type': "WEB"});
        };

        service.getVirtualApps = function() {
            return _.filter(entitlements, {'type': "VIRTUAL"});
        };

        service.getNativeApps = function() {
            return _.filter(entitlements, {'type': "NATIVE"});
        };

        service.getCategoryApps = function() {
            var category = CatalogService.getSelectedCategory();
            if (UtilService.hideVirtualApps()) {
                category._links.self.href = JSON.parse(JSON.stringify(category._links.self.href + "&displayMode=phone"));
            }
            var request = Resource(category._links.self.href, {
                headers: {
                    'Accept': 'application/hal+json',
                    'method': 'GET'
                }
            });
            return request.get().then(function(response) {
                return response._embedded.entitlements;
            });
        };

        service.getNewApps = function() {
            var newAppsAppContext = {
                selectedCategory: CatalogService.getNewlyEntitledAppsLabel()
            };
            return CatalogService.getFirstPage(newAppsAppContext, false, true, false, true).then(function(data) {
                return _.get(data, 'entitlements', []);
            });
        };

        service.getAppList = function(type) {
            switch (type) {
                case 'favorite':
                    return this.getFavorites();
                case 'Web':
                    return this.getWebApps();
                case 'Virtual':
                    return this.getVirtualApps();
                case 'Native':
                    return this.getNativeApps();
                case 'category':
                    return this.getCategoryApps();
                case 'all':
                    return entitlements;
                default:
                    return {};
            }
        };

        service.getFavoritesFromBookmarkService = function() {
            var params = {};
            params.favoriteOnly = true;
            params.excludeThinApps = true;
            // This I am not sure whether to keep it or ignor or deal it in a later patch
            var loadingUnCachedEntitlements = false;

            return BookmarksService.getFirstPage(params, false).then(function(data) {
                return data.myapps;
            });
        };

        service.checkForEvents = function(entitlements, events) {
            var handledApps = [];
            for (var i = 0; i < events.length; i++) {
                if (events[i].action === 'INSTALL' || events[i].action === 'LAUNCH_APP') {
                    if (_.contains(handledApps, events[i].eventData.appId)) {
                        EventsService.deleteEvent(events[i].eventId);
                    } else {
                        handledApps.push(events[i].eventData.appId);
                        var app = _.find(entitlements, {'appId': events[i].eventData.appId});

                        if (events[i].action === 'INSTALL') {
                            app.eventId = events[i].eventId;
                            CatalogService.activateApp(app, CatalogService.getDeviceStatus());
                        }

                        if (events[i].action === 'LAUNCH_APP') {
                            app.launch = app._links.launch !== undefined ? app._links.launch.href : "";
                            EventsService.deleteEvent(events[i].eventId);
                            AppLaunchService.launchApp(app);
                        }

                        //navigate to the page which triggered install
                        if (events[i].eventData.url) {
                            location.hash = events[i].eventData.url;
                        }
                    }
                }
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

appCenter.component('appSearch', {
    template: '<div ng-include="\'app-v2/components/appSearch/\' + appSearchCtrl.templateUrl">',
    controllerAs: 'appSearchCtrl',
    controller: ['UserAgent',
        function(UserAgent) {
            this.templateUrl = UserAgent.isAWJadeMobile() ? 'appSearch.html' : 'appSearchBrowser.html';
        }]
});

appCenter.component('breadcrumb', {
    templateUrl: 'app-v2/components/breadcrumb/breadcrumb.html',
    bindings: {
        hideInstall: '<',
        hideRefresh: '<'
    },
    controllerAs: 'breadcrumbCtrl',
    controller: ['UserAgent', 'SettingsService', 'ConfigService', '$state', '$rootScope', '$filter', 'TenantCustomizationService', '$scope', 'NotificationService', 'UtilService', 'ClientRuntimeService',
        function(UserAgent, SettingsService, ConfigService, $state, $rootScope, $filter, TenantCustomizationService, $scope, NotificationService, UtilService, ClientRuntimeService) {
            var vm = this;
            vm.isDesktopAppRefreshing = false;
            this.userInfo = SettingsService.getCurrentUser() || {};
            var versionCheck = NotificationService.showNativeBell();
            // Initially set the title using the $state.current attribute desktopPageTitle
            vm.desktopPageTitle = $filter('i18n')($state.current.desktopPageTitle);
            vm.$state = $state;

            if (Object.keys(this.userInfo).length) {
                this.userInfo.initials = this.userInfo.firstName[0] + this.userInfo.lastName[0];
            }

            vm.desktopRefresh = function(activeTab) {
                if (!vm.isDesktopAppRefreshing) {
                    vm.isDesktopAppRefreshing = true;
                    ConfigService.refreshCache().then(function() {
                        vm.isDesktopAppRefreshing = false;
                    }, function() {
                        vm.isDesktopAppRefreshing = false;
                    });

                    if (activeTab === 'apps') {
                        $rootScope.$broadcast('Desktop-Apps-Refresh');
                    }
                    if (activeTab === 'people') {
                        $rootScope.$broadcast('Desktop-People-Refresh');
                    }
                }
            };

            vm.showAppInstall = function() {
                ClientRuntimeService.showAppInstall();
            };

            vm.checkNotificationsEnabled = function() {
                vm.inAppNotificationEnabled = TenantCustomizationService.isNotificationsEnabled() && UtilService.isHubV2NotificationsEnabled()
                    && !versionCheck && ($state.current.name === 'apps' || $state.current.name === 'apps.details');
            };

            vm.checkNotificationsEnabled();

            $scope.$on('customizations-loaded', function() {
                vm.checkNotificationsEnabled();
            });
        }]
});

appCenter.component('categoryComponent', {
    template: '<div class="category-template-container" ng-include="\'app-v2/components/category/\' + categoryCtrl.templateUrl">',
    bindings: {
        category: '<',
        defaultLabel: '<'
    },
    controller: ['$state', 'UserAgent', function($state, UserAgent) {
        var vm = this;

        this.templateUrl = UserAgent.isAWJadeMobile() ? 'category.html' : 'categoryBrowser.html';

        vm.getAppsByCategory = function(category) {
            $state.go('apps.list', {
                type: 'category',
                category: category.name
            });
        };
    }],
    controllerAs: 'categoryCtrl'
});

appCenter.component('changePassword', {
    templateUrl: 'app-v2/components/changePassword/changePassword.html',
    controller: 'ChangePasswordController',
    controllerAs: 'cpCtrl'
});

appCenter.component('appDetails', {
    template: '<div ng-include="\'app-v2/components/details/\' + detailsCtrl.templateUrl">',
    controller: 'DetailsController',
    controllerAs: 'detailsCtrl'
});

(function(module) {
    module.directive('launchMessage', function() {
        return {
            restrict: 'A',
            replace: true,
            templateUrl: 'app-v2/components/details/nativeLaunchMessageTemplate.html'
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));

appCenter.component('favorites', {
    templateUrl: 'app-v2/components/favorites/favorites.html',
    controllerAs: 'favoritesCtrl',
    controller: ['$q',
        'BookmarksService',
        'HttpProxyService',
        'BootstrapService',
        'UserAgent',
        '$state',
        '$scope',
        'AppsService',
        'ModalService',
        '$filter',
        '$timeout',
        '$rootScope',
        '$notify',
        function($q,
                 BookmarksService,
                 HttpProxyService,
                 BootstrapService,
                 UserAgent,
                 $state,
                 $scope,
                 AppsService,
                 ModalService,
                 $filter,
                 $timeout,
                 $rootScope,
                 $notify) {
            var vm = this;

            // auto dismiss the editmode after the notify finishes, the current notify time is 3000
            var editModeAutoDismissTime = 3000;
            vm.emptyFillers = [1, 2, 3, 4, 5, 6, 7, 8];
            vm.favoritesBeforeEdit = [];
            // Get the favorites from the appService
            vm.favoritesInEditMode = AppsService.getFavorites();

            vm.sortingButtonEnabled = false;
            // This is a flag if user updated the order but did not click the sort action button
            vm.sortingOrderUpdatedWithoutActions = false;
            vm.sortingWarningMessageShow = false;

            vm.isWindows = UserAgent.isWindows();

            // Clone a copy of the original favorites from the service to use when use cancel the reordering
            var favoritesBeforeEdit = _.clone(vm.favoritesInEditMode);

            // Functions specific to the reordering
            vm.sortableOptions = {
                cursor: "move",
                placeholder: "sort-placeholder",
                forcePlaceholderSize: true,
                forceHelperSize: true,
                opacity: 0.8,
                revert: 100,
                helper: "clone",
                tolerance: "intersect",
                containment: "parent"
            };

            vm.sortingUpdate = function(e, ui) {
                // We are using css z-index to enable the button, if the button is enabled the z-index is jump from -1 (does not do anything)
                // to 50 and color is changed
                vm.sortingButtonEnabled = true;
                // Also update the flag, this will be used if user updated the order but clicked the model close button instead of the tow sort button - cancel or save
                vm.sortingOrderUpdatedWithoutActions = true;
            };

            var resetCustomView = function() {
                vm.favoritesInEditMode = favoritesBeforeEdit;
            };

            vm.cancelSorting = function() {
                vm.savingfavorites = false;
                // Once the button is clicked, disabled it prevent user to click the other button to cause complication
                vm.sortingButtonEnabled = false;
                resetCustomView();
                // Delay about 1000ms to go back to the apps landing page automatically
                $timeout(function() {
                    goToApps();
                    $rootScope.$broadcast('favorites-reordering-canceled');
                }, editModeAutoDismissTime / 3);
            };

            vm.saveCustomView = function() {
                vm.savingfavorites = true;
                vm.sortingOrderUpdatedWithoutActions = false;
                vm.sortingButtonEnabled = false;
                BookmarksService.saveCustomView(_.map(vm.favoritesInEditMode, 'appId')).then(function(data) {
                    HttpProxyService.clearAll();
                    $notify.success('hub.apps.edit.favorites.notify.success');
                    vm.savingfavorites = false;
                    // Delay about 3000ms to go back to the apps landing page automatically -- 3000ms is the onset of the notify message
                    $timeout(function() {
                        goToApps();
                    }, editModeAutoDismissTime);
                }, function() {
                    $notify.error('hub.apps.edit.favorites.notify.error');
                    vm.cancelSorting();
                    // Delay about 500ms to go back to the apps landing page automatically
                    $timeout(function() {
                        goToApps();
                    }, editModeAutoDismissTime);
                });
            };

            vm.exitEditMode = function(event) {
                // If the order is updated do not allow user to exit the editmode without taking actions -cancel or save to avoid complications
                // If server is saving the favorite new order also prevent exit the editmode
                if (vm.sortingOrderUpdatedWithoutActions || vm.savingfavorites) {
                    vm.sortingWarningMessageShow = true;
                    event.preventDefault();
                } else {
                    goToApps();
                }
            };

            var goToApps = function() {
                $state.go('apps');
            };

            // This is to deal with in the edit mode user have update the order but did not take actions (save or cancel)
            $scope.$on('$locationChangeStart', function(event, next, current) {
                if (vm.sortingOrderUpdatedWithoutActions) {
                    vm.sortingWarningMessageShow = true;
                    event.preventDefault();
                }
            });
        }]
});

appCenter.component('masthead', {
    templateUrl: 'app-v2/components/masthead/mobile.html',
    bindings: {
        title: '<',
        subPage: '<',
        disabled: '<',
        searchPath: '<',
        hideAvatar: '<?',
        hideSearch: '<?'
    },
    controllerAs: 'mastheadCtr',
    controller: ['UserAgent', 'SettingsService', 'NotificationService', 'ClientRuntimeService',
        'UtilService', '$state', '$element', 'TenantCustomizationService', 'ConfigService', '$scope',
        function(UserAgent, SettingsService, NotificationService, ClientRuntimeService,
                 UtilService, $state, $element, TenantCustomizationService, ConfigService, $scope) {
            var vm = this;
            vm.userInfo = SettingsService.getCurrentUser() || {};
            vm.isIOS = UserAgent.isIOS();
            vm.isAWJade = UserAgent.isAWJade();
            this.inAppNotificationEnabled = TenantCustomizationService.isNotificationsEnabled();
            var versionCheck = NotificationService.showNativeBell();

            var getNotificationSettings = function() {
                vm.userInfo = SettingsService.getCurrentUser();
                if (Object.keys(vm.userInfo).length) {
                    vm.userInfo.initials = vm.userInfo.firstName[0] + vm.userInfo.lastName[0];
                }
                vm.showNotificationsBell = !versionCheck && ($state.current.name === 'apps' || $state.current.name === 'apps.notificationsDeeplink');
                vm.inAppNotificationEnabled = TenantCustomizationService.isNotificationsEnabled();
            };

            vm.accounts = function() {
                if (UserAgent.isAWJadeMobile()) {
                    ClientRuntimeService.accounts();
                }
            };

            vm.goBack = function() {
                UtilService.goBack();
            };

            vm.openSearch = function(state) {
                if (this.isIOS) {
                    $element.find('.dummy-input').focus();
                }
                $state.go(state);
            };

            getNotificationSettings();

            $scope.$on('customizations-loaded', function() {
                getNotificationSettings();
            });
        }]
});

appCenter.component('newAppsNotificationsList', {
    templateUrl: 'app-v2/components/newAppsNotificationList/newAppsList.html',
    controllerAs: 'newAppsListCtrl',
    controller: 'NewAppsNotificationController'
});

appCenter.component('notificationDetails', {
    templateUrl: 'app-v2/components/notificationDetails/notificationDetails.html',
    bindings: {},
    controller: ['UtilService', 'UserAgent', 'NotificationService', '$state',
        function(UtilService, UserAgent, NotificationService, $state) {
            var notificationsLongCardCtr = this;
            notificationsLongCardCtr.hubBackBtnAction = function() {
                UtilService.goBack();
            };

            if ($state.params.notificationId) {
                notificationsLongCardCtr.cardDetails = NotificationService.getNotificationsById($state.params.notificationId);
            }
        }],
    controllerAs: 'notificationLongCardCtrl'
});

appCenter.component('notificationPreference', {
    templateUrl: 'app-v2/components/notificationPreference/notificationPreference.html',
    controllerAs: 'notificationPreferenceCtrl',
    controller: ['MobileFlowsService', function(MobileFlowsService) {
        var vm = this;
        vm.connectors = [];
        vm.loading = true;

        MobileFlowsService.getConnectors().then(function(connectors) {
            vm.connectors = connectors;
            vm.loading = false;
        }, function() {
            vm.loading = false;
        });

        vm.updatePreference = function(connectorId) {
            var connector = _.find(vm.connectors, {id: connectorId});
            if (connector.status === 'REGISTERED') {
                connector.status = 'IN_PROGRESS';
                MobileFlowsService.enableConnector(connectorId);
            } else if (connector.status === 'UNREGISTERED') {
                MobileFlowsService.disableConnector(connectorId);
            }
        };
    }]
});

(function(module) {
    module.directive('longCardDirective', ['$timeout', '$state', 'UserAgent',
        function($timeout, $state, UserAgent) {
            return {
                transclude: true,
                link: function(scope, element, attrs) {
                    scope.showMoreDetails = false;
                    scope.loaded = false;
                    element.ready(function() {
                        var height;
                        $timeout(function() {
                            height = element[0].offsetHeight;
                            if (scope.notificationCardCtrl && scope.notificationCardCtrl.commentBox) {
                                scope.showMoreDetails = true;
                            } else if (height > 240) {
                                scope.showMoreDetails = true;
                            }
                            scope.loaded = true;
                        });
                    });

                    scope.goToLongCard = function(id) {
                        var state = $state;
                        var url = state.href($state.current.name, $state.params, {}) + '/details/';
                        var nativeNavHide = UserAgent.isAWJadeMobile() ? '?nativenav=Hide' : '';
                        location.hash = url + id + nativeNavHide;
                    };
                },
                templateUrl: 'app-v2/components/notifications-v2/longCardCollapsed.html'
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.service('MobileFlowsService', ['ConfigService', 'Resource', 'HttpProxyService', function(ConfigService, Resource, HttpProxyService) {
        var service = this;

        service.register = function() {
            var registered = HttpProxyService.getMFRegistrationFlag();

            if (!registered) {
                ConfigService.getMobileFlowsRegisterUrl().then(function(url) {
                    var request = Resource(url, {headers: {'method': 'POST'}});
                    return request.postResource().then(function() {
                        HttpProxyService.setMFRegistrationFlag();
                    });
                });
            }
        };

        service.getConnectors = function() {
            return ConfigService.getMobileFlowsConnectorsUrl().then(function(url) {
                var request = Resource(url, {headers: {'method': 'GET'}});
                return request.get().thenGet('connectors');
            });
        };

        service.enableConnector = function(id) {
            return ConfigService.getMobileFlowsConnectorRegistrationUrl().then(function(url) {
                url = url.replace('{connectorId}', id);
                var request = Resource(url, {headers: {'method': 'POST'}});
                return request.postResource();
            });
        };

        service.disableConnector = function(id) {
            return ConfigService.getMobileFlowsConnectorRegistrationUrl().then(function(url) {
                url = url.replace('{connectorId}', id);
                var request = Resource(url, {headers: {'method': 'DELETE'}});
                return request.deleteResource();
            });
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

// (c) 2016 VMware, Inc.  All rights reserved.

(function(module) {
    'use strict';
    module.controller('NotificationCardControllerV2', ['$scope', '$state', '$rootScope', 'UserAgent', '$sce', '$filter', '$notify', 'UtilService', 'Resource', '$http', 'RequestFactory', 'ConfigService', 'ModalService', 'NotificationService', 'ClientRuntimeService', 'hznLocalStorage', function($scope, $state, $rootScope, UserAgent, $sce, $filter, $notify, UtilService, Resource, $http, RequestFactory, ConfigService, ModalService, NotificationService, ClientRuntimeService, hznLocalStorage) {
        var notificationCardCtrl = this;
        var notification = notificationCardCtrl.notification;
        this.templateUrl = notificationCardCtrl.isLongCard ? 'notificationLongCard.html' : 'notificationCard.html';
        notificationCardCtrl.id = notification.id;
        var title = _.get(notification, 'notification_card.header.title', '');
        var subtitle = _.get(notification, 'notification_card.header.subtitle', '');
        if (subtitle) {
            subtitle = subtitle.join(' ');
        }
        var notificationType = _.get(notification, 'notification_card.body.fields[0].type', '');
        var supportedActions = ['WS1_NEW_ENTITLEMENTS', 'OPEN_IN', 'INSTALL_APP', 'DIRECT', 'USER_INPUT'];
        var lastActionId = _.get(notification, 'last_action_id', '');
        this.read_at = _.get(notification, 'read_at', '');
        var priority = _.get(notification, 'notification_card.importance', -1);
        var actions = _.get(notification, 'notification_card.actions', []);
        var readAction = "read" + notificationCardCtrl.id;
        notificationCardCtrl.isAWJadeDesktop = UserAgent.isAWJadeDesktop();
        notificationCardCtrl.isPriority = (priority === 1);
        notificationCardCtrl.isUnactedPriority = (priority === 1 && !lastActionId);
        notificationCardCtrl.notificationWithNoActions = (actions.length === 0);

        notificationCardCtrl.checkIfActionRepeatable = function(actionId) {
            actions.forEach(function(currentValue) {
                var currentActionId = _.get(currentValue, 'id', '');
                if (currentActionId === actionId) {
                    return _.get(currentValue, 'allow_repeated', false);
                }
            });
        };
        notificationCardCtrl.hideVirtualApp = UtilService.hideVirtualApps();

        notificationCardCtrl.getValidActions = function() {
            if (notificationCardCtrl.notificationWithNoActions) {
                var action = {id: readAction};
                actions.push(action);
                return actions;
            }

            if (!lastActionId || notificationCardCtrl.checkIfActionRepeatable(lastActionId)) {
                return actions;
            }
            actions.forEach(function(currentValue, index) {
                var currentActionId = _.get(currentValue, 'id', '');
                if (currentActionId != lastActionId) {
                    actions.splice(index, 1);
                }
            });

            return actions;
        };

        notificationCardCtrl.titleAndSubtitle = title && subtitle;
        notificationCardCtrl.title = title || subtitle;
        notificationCardCtrl.subtitle = subtitle;
        notificationCardCtrl.isNewAppNotification = false;
        notificationCardCtrl.excessIconsMessage = '';
        notificationCardCtrl.actions = notificationCardCtrl.getValidActions(notification);
        notificationCardCtrl.newApps = _.get(notification, 'notification_card.body.fields[0].content', []);
        notificationCardCtrl.image = _.get(notification, 'notification_card.image.href', '');
        notificationCardCtrl.message = $filter('linky')((_.get(notification, 'notification_card.body.description', '')), '_blank');
        notificationCardCtrl.isMobileApp = UserAgent.isAWJadeMobile();

        var isNewNotification = !this.read_at;
        var isDismissed = (this.read_at && !lastActionId);

        notificationCardCtrl.cardEnabled = (isDismissed || isNewNotification);

        notificationCardCtrl.additionalBodySection = false;
        notificationCardCtrl.bodyFieldsSection = false;

        notificationCardCtrl.bodyFields = _.get(notification, 'notification_card.body.fields', []);
        notificationCardCtrl.commentBox = _.find(notificationCardCtrl.bodyFields, {'type': 'COMMENT'});
        if (notificationType !== "WS1_NEW_ENTITLEMENTS" && notificationCardCtrl.bodyFields.length === 1) {
            notificationCardCtrl.bodyFieldsSection = true;
            notificationCardCtrl.cardBodyFieldTitle = _.get(notification, 'notification_card.body.fields[0].title', '');
            notificationCardCtrl.cardBodyFieldDescription = _.get(notification, 'notification_card.body.fields[0].description', '');
            notificationCardCtrl.cardBodyFieldContent = _.get(notification, 'notification_card.body.fields[0].content[0]', {});
        }

        if (notificationType === "WS1_NEW_ENTITLEMENTS") {
            if (notificationCardCtrl.newApps) {
                notificationCardCtrl.isNewAppNotification = true;
                notificationCardCtrl.additionalBodySection = true;
                if (notificationCardCtrl.newApps.length > 4) {
                    var excessIconsNum = notificationCardCtrl.newApps.length - 4;
                    notificationCardCtrl.newApps = notificationCardCtrl.newApps.slice(0, 4);
                    notificationCardCtrl.excessIconsMessage = $filter('i18n')('app.notification.newApps.excessIconsMessage', excessIconsNum);
                }
            }
        }

        var formattedCreatedDate = moment.utc(notification.created_at).format("YYYY-MM-DDTHH:mm:ss");
        var created = moment(formattedCreatedDate, "YYYY-MM-DDTHH:mm:ss");
        var formattedCurrentDate = moment.utc(new Date()).format("YYYY-MM-DDTHH:mm:ss");
        var now = moment(formattedCurrentDate, "YYYY-MM-DDTHH:mm:ss");
        notificationCardCtrl.date = created.from(now);

        this.getLabelClass = function(action) {
            var primary = _.get(action, 'primary', '');
            var allow_repeated = _.get(action, 'allow_repeated', '');
            var buttonClass = '';
            if ((primary === true) || !action.hasOwnProperty('primary')) {
                buttonClass += 'notifications-action-button-primary';
            } else {
                buttonClass += 'notifications-action-button-secondary';
            }

            if (!allow_repeated && lastActionId && (action.id === lastActionId)) {
                buttonClass += ' notification-button-disabled ';
            }

            if (!this.isNotificationActionSupported(action)) {
                buttonClass += ' disabled';
            }

            if (notificationCardCtrl.actions.length === 1 && notificationCardCtrl.actions[0].id === readAction && !lastActionId) {
                buttonClass += 'notifications-action-button-primary';
            }

            if (notificationCardCtrl.actions.length === 1 && notificationCardCtrl.actions[0].id === readAction && lastActionId) {
                buttonClass += ' notification-button-disabled ';
            }

            return buttonClass;
        };

        this.getHubLabelClass = function(action) {
            var allow_repeated = _.get(action, 'allow_repeated', '');
            var hubLabel = '';
            if (!this.isNotificationActionSupported(action) && !(notificationCardCtrl.actions.length === 1 && notificationCardCtrl.actions[0].id === readAction)) {
                hubLabel += ' disabled';
            }
            return hubLabel;
        };

        var acceptUserInput = function(format, inputLabel, inputKey, selectOptions, minLength, maxLength) {
            /*
             Returns a promise to deal with user input, placeholder input data sent back for now
             */
            return Promise.resolve("Test user input");
        };

        var userActionCancel = function() {
            /*
             Handler if user clicks on approve/deny -> text box opens up -> user decides to not type anything and click out. In case nothing needs to happen, we can remove this.
             */
        };

        this.performAction = function(action, isHub) {
            if (notificationCardCtrl.actions.length === 1 && notificationCardCtrl.actions[0].id === readAction) {
                notificationCardCtrl.markAsRead(this.read_at, readAction);
                var completedLabel = $filter('i18n')("hub.notifications.informational.card.read.label");
                notificationCardCtrl.actionCompleted(false, readAction, completedLabel);
                $rootScope.$broadcast('hub-notification-acted-on', {"notificationId": notificationCardCtrl.id});
                return;
            }

            if (this.isNotificationActionSupported(action)) {
                var actionKey = _.get(action, 'action_key', '');
                var requestData = _.get(action, 'request', {});
                var allowRepeated = _.get(action, 'allow_repeated', false);
                var label = _.get(action, 'label', '');
                var completed_label = _.get(action, 'completed_label', label);
                var url = _.get(action, 'url.href', {});
                var type = _.get(action, 'type', '');
                var id = _.get(action, 'id', '');

                var handleMultipleNewApps = function() {
                    if (UserAgent.isAWJadeMobile()) {
                        if (UserAgent.isNativeAppVersionBelow("9.2")) {
                            location.hash = '#/apps/notifications/newApps/' + notification.id + '?nativenav=Hide';
                        } else if (UserAgent.isNativeAppVersionIsEqualOrAbove("9.2")) {
                            $state.go('newApps', {
                                notificationId: notification.id
                            });
                        }
                    } else if (UserAgent.isAWJadeDesktop() || UserAgent.isDesktopBrowser()) {
                        $state.go('notifications.newApps', {
                            notificationId: notification.id
                        });
                    } else if (UserAgent.isMobileBrowser()) {
                        $state.go('newAppsList', {
                            notificationId: notification.id
                        });
                    }
                };

                if (notificationType === "WS1_NEW_ENTITLEMENTS") {
                    if (notificationCardCtrl.newApps.length > 1) {
                        handleMultipleNewApps();
                    } else {
                        var appId = _.get(notification, 'notification_card.body.fields[0].content[0].appId', '');
                        if (isHub) {
                            location.hash = '#/apps/details/' + appId + '?nativenav=Hide';
                        } else {
                            $state.go('catalog.details', {
                                appId: encodeURIComponent(appId)
                            });
                        }
                    }
                } else {
                    switch (actionKey) {
                        case "OPEN_IN" :
                            NotificationService.openInAction(url);
                            break;
                        case "DIRECT" :
                            NotificationService.directAction(url, type, requestData);
                            break;
                        case "USER_INPUT" :
                            var format = _.get(action, 'user_input[0].format', '');
                            var inputLabel = _.get(action, 'user_input[0].label', '');
                            var inputKey = _.get(action, 'user_input[0].id', '');
                            var selectOptions = _.get(action, 'user_input[0].options', {});
                            var minLength = _.get(action, 'user_input[0].min_length', -1);
                            var maxLength = _.get(action, 'user_input[0].max_length', -1);

                            acceptUserInput(format, inputLabel, inputKey, selectOptions, minLength, maxLength).then(function(inputData) {
                                var dataObj = {};
                                if (UtilService.isEmpty(requestData)) {
                                    dataObj[inputKey] = inputData;
                                } else {
                                    dataObj = requestData;
                                    dataObj[inputKey] = inputData;
                                }
                                NotificationService.directAction(url, type, dataObj);
                            }, function() {
                                userActionCancel();
                            });
                            break;
                        case "INSTALL_APP" :
                            NotificationService.installAppAction(url);
                            break;
                        default :
                            break;
                    }
                }

                // If the action is non repeatable, then gray out the action, display the completed label, hide all the other action.
                notificationCardCtrl.markAsRead(this.read_at, id);
                if (!allowRepeated) {
                    notificationCardCtrl.actionCompleted(allowRepeated, id, completed_label);
                }

                $rootScope.$broadcast('hub-notification-acted-on', {"notificationId": notificationCardCtrl.id});
            }
        };

        notificationCardCtrl.actionCompleted = function(allowRepeated, actionId, completedLabel) {
            if (!allowRepeated) {
                notificationCardCtrl.hideOtherActions(actionId);
                notificationCardCtrl.addDisabledClassAndCompletedLabel(actionId, completedLabel);
            }
        };

        notificationCardCtrl.addDisabledClassAndCompletedLabel = function(actionId, completedLabel) {
            var currNotificationAction = angular.element('#' + notificationCardCtrl.id + ' #' + actionId);
            currNotificationAction.addClass("notification-button-disabled");
            currNotificationAction.html(completedLabel);
        };

        /*
         Hides all other actions once a non repeatable action is taken
         */
        notificationCardCtrl.hideOtherActions = function(actionId) {
            notificationCardCtrl.actions.forEach(function(currentValue, index) {
                var currentActionId = _.get(currentValue, 'id', '');
                if (currentActionId != actionId) {
                    notificationCardCtrl.actions.splice(index, 1);
                }
            });
        };

        notificationCardCtrl.getLabel = function(action) {
            var allowRepeated = _.get(action, 'allow_repeated', '');
            var label = _.get(action, 'label', '');
            var completed_label = _.get(action, 'completed_label', '');
            if (!allowRepeated && lastActionId && (action.id === lastActionId)) {
                var completedLabel = completed_label || label;
                return completedLabel;
            }
            return label;
        };

        notificationCardCtrl.getHubLabel = function(action) {
            if (notificationCardCtrl.actions.length === 1 && notificationCardCtrl.actions[0].id === readAction && !lastActionId) {
                var unReadLabel = $filter('i18n')("hub.notifications.informational.card.unread.label");
                return $filter('uppercase')(unReadLabel);
            }

            if (notificationCardCtrl.actions.length === 1 && notificationCardCtrl.actions[0].id === readAction && lastActionId) {
                var readLabel = $filter('i18n')("hub.notifications.informational.card.read.label");
                return $filter('uppercase')(readLabel);
            }

            var allowRepeated = _.get(action, 'allow_repeated', '');
            var label = _.get(action, 'label', '');
            var completed_label = _.get(action, 'completed_label', '');
            if (!allowRepeated && lastActionId && (action.id === lastActionId)) {
                var completedLabel = completed_label || label;
                return $filter('uppercase')(completedLabel);
            }
            return $filter('uppercase')(label);
        };

        // Dynamically assigning a max-width on the desktop notification card action buttons depending on number of actions to prevent truncation of button text.
        var numActions = this.actions.length;
        if (numActions !== 0) {
            var desktopMaxButtonWidth = (100 / numActions) + '%';
            notificationCardCtrl.desktopMaxButtonWidthStyle = {'max-width': desktopMaxButtonWidth};
        } else {
            notificationCardCtrl.desktopMaxButtonWidthStyle = {};
        }

        this.markAsRead = function(read_at, actionId) {
            var url = notification._links.markRead.href;
            NotificationService.archiveNotification(url, actionId);
        };

        this.isNotificationActionSupported = function(action) {
            var actionKey = _.get(action, 'action_key', '');
            return supportedActions.indexOf(actionKey) > -1;
        };
    }]);
})(angular.module("com.vmware.greenbox.appCenter"));

appCenter.component('notificationCardV2', {
    template: '<div ng-include="\'app-v2/components/notifications-v2/\' + notificationCardCtrl.templateUrl">',
    bindings: {
        onArchive: '&',
        notification: '=data',
        isLongCard: "="
    },
    controller: 'NotificationCardControllerV2',
    controllerAs: 'notificationCardCtrl'
});

appCenter.component('notificationsNewAppsV2', {
    template: '<div ng-include="\'app-v2/components/notifications-v2/notifications-new-apps/\' + notificationNewAppsCtrl.templateUrl">',
    controllerAs: 'notificationNewAppsCtrl',
    controller: ['ConfigService', 'EventsService', '$state', 'Resource', 'CatalogService', 'HttpProxyService', '$notify', '$timeout', 'NotificationService',
        function(ConfigService, EventsService, $state, Resource, CatalogService, HttpProxyService, $notify, $timeout, NotificationService) {
            this.templateUrl = 'notificationsNewAppsDesktopModal.html';
            var vm = this;
            var notificationId = $state.params.notificationId;
            var autoDismissTime = 2000;
            vm.emptyFillers = [1, 2, 3, 4, 5, 6, 7, 8];
            vm.isLoading = false;
            vm.newApps = [];

            ConfigService.getEntitlementsUrl().then(function(url) {
                vm.isLoading = true;
                NotificationService.getNotificationNewApps(url, notificationId).then(function(newAppEntitlementsResponse) {
                    vm.newApps = newAppEntitlementsResponse._embedded.entitlements;
                    vm.isLoading = false;
                }, function() {
                    vm.isLoading = false;
                });
            });

            vm.goToAppDetails = function(appId) {
                $state.go('apps.details', {
                    appId: appId
                });
            };

            vm.bookmarkAll = function() {
                var appIds = _.pluck(vm.newApps, 'appId');

                CatalogService.bookmarkAllNewEntitledApps(appIds).then(function() {
                    HttpProxyService.updateBookmark();
                    $notify.success('app.notification.bookmark.all.success');
                    ConfigService.refreshCache();
                    $timeout(function() {
                        vm.goToNotifications();
                    }, autoDismissTime);
                }, function(error) {
                    $notify.error('app.notification.bookmark.all.error');
                });
            };

            vm.goToNotifications = function() {
                $state.go('notifications');
            };
        }]
});

appCenter.component('notificationsV2', {
    template: '<div ng-include="\'app-v2/components/notifications-v2/\' + notificationCtrl.templateUrl">',
    controllerAs: 'notificationCtrl',
    controller: ['NotificationService', 'UserAgent', 'hznLocalStorage', 'UpdateUrlParamsService', '$timeout', '$scope', '$state', 'ModalService', '$filter', '$notify', '$rootScope', 'UtilService',
        function(NotificationService, UserAgent, hznLocalStorage, UpdateUrlParamsService, $timeout, $scope, $state, ModalService, $filter, $notify, $rootScope, UtilService) {
            var vm = this;
            vm.filter = $state.params.filter;
            vm.isIOS = UserAgent.isIOS();
            vm.isAndroid = UserAgent.isAndroid();
            vm.notifications = [];
            vm.parsedNotification = {};
            vm.isMobile = UserAgent.isAWJadeMobile();
            vm.showFirstTimeMessage = false;
            vm.showNoNotificationsMessage = false;
            vm.showContextDialog = false;
            vm.isAWJadeTablet = UserAgent.isTablet();
            vm.isAWJadeDesktop = UserAgent.isAWJadeDesktop();
            vm.showCloseButton = !NotificationService.showNativeBell();
            vm.notificationId = vm.filter !== 'pending' && vm.filter !== 'completed' && vm.filter !== 'all' && vm.filter;
            vm.filterText = '';
            if (vm.notificationId) {
                vm.filter = 'all';
            }
            vm.filterText = vm.filter.substring(0, 1).toUpperCase() + vm.filter.substring(1);

            vm.toggleContextDialog = function() {
                vm.showContextDialog = !vm.showContextDialog;
            };
            this.templateUrl = UtilService.loadTemplateForPlatform('notificationsMobile.html', 'notificationsBrowser.html', 'notificationsBrowser.html');

            $rootScope.$on('hub-notification-acted-on', function(event, data) {
                if (vm.filter === 'pending') {
                    vm.removeFromView(data);
                    vm.parsedNotification = NotificationService.parseNotification(vm.notifications, false);
                }
            });

            vm.removeFromView = function(notification) {
                var notificationIndex = vm.notifications.findIndex(function(element) {
                    return element.id === notification.notificationId;
                });
                vm.notifications.splice(notificationIndex, 1);
            };

            this.leftNavLinks = NotificationService.filters;

            vm.notificationInSection = function(arr, notificationId) {
                var notificationIndex = arr.findIndex(function(element) {
                    return element.id === notificationId;
                });

                if (notificationIndex !== -1) {
                    arr.splice(notificationIndex, 1);
                    return true;
                }
                return false;
            };

            vm.filterNotifications = function(arr, filter) {
                var result = [];
                arr.forEach(function(element) {
                    var lastActionId = _.get(element, 'last_action_id', '');
                    var actions = _.get(element, 'notification_card.actions', []);
                    var priority = _.get(element, 'notification_card.importance', -1);
                    var read_at = _.get(element, 'read_at', '');

                    if (!read_at && (priority !== 1)) {
                        var url = element._links.markRead.href;
                        NotificationService.archiveNotification(url);
                    }

                    if (filter === 'pending') {
                        if (!lastActionId) {
                            result.push(element);
                        }
                    } else if (filter === 'completed') {
                        if (lastActionId) {
                            result.push(element);
                        }
                    } else {
                        result.push(element);
                    }
                });
                return result;
            };

            vm.clearFilter = function() {
                var state = ((UserAgent.isAWJadeMobile() && UserAgent.isNativeAppVersionIsEqualOrAbove("9.2")) || UserAgent.isBrowser()) ? 'notifications' : 'apps.notifications';
                $state.go(state, {
                    filter: ''
                });
            };

            vm.getNotifications = function() {
                vm.isLoading = true;
                vm.notifications = [];

                NotificationService.getNotifications('emptyReadState').then(function(notifications) {
                    if (!notifications.length) {
                        vm.showFirstTimeMessage = true;
                    }

                    vm.notifications = vm.filterNotifications(notifications, vm.filter);
                    NotificationService.setNotifications(notifications);
                    if (vm.notifications.length) {
                        var completedFilter = (vm.filter === 'completed');
                        vm.parsedNotification = NotificationService.parseNotification(vm.notifications, completedFilter);
                    } else {
                        vm.showNoNotificationsMessage = true;
                    }

                    /*
                    We use a timeout of 800 ms here to wait for the cards to load. Without it they can't be found
                    in the DOM as the cards are directives which dynamically rendered in an ng-repeat loop.
                    */
                    vm.isLoading = false;
                    $timeout(function() {
                        if (vm.notificationId) {
                            var notificationElement = angular.element('#' + vm.notificationId);
                            if (notificationElement) {
                                notificationElement[0].scrollIntoView(true);
                                notificationElement[0].classList.add("notification-highlight");
                            }
                        }
                    }, 800);
                }, function() {
                    vm.isLoading = false;
                    vm.showNoNotificationsMessage = true;
                });
            };

            vm.goBack = function() {
                // Only go back to apps needs to show the nativenav
                UpdateUrlParamsService.showNativenav().then(function() {
                    $state.go('apps');
                });
            };

            if (!NotificationService.showNativeBell() && UserAgent.isAWJadeMobile()) {
                UpdateUrlParamsService.hideNativenav().then(function() {
                    vm.getNotifications();
                });
            } else {
                vm.getNotifications();
            }
        }]
});

appCenter.component('notificationDialog', {
    template: '<div ng-include="\'app-v2/components/notifications-v2/notificationsV2ContextDialog.html\'">',
    controllerAs: 'notificationDialogCtrl',
    controller: 'NotificationV2ContextDialogController'
});


// (c) 2016 VMware, Inc.  All rights reserved.

(function(module) {
    'use strict';
    module.controller('NotificationV2ContextDialogController', ['$scope', '$state', '$rootScope', 'UserAgent', '$sce', '$filter', '$notify', 'UtilService', 'Resource', '$http', 'RequestFactory', 'ConfigService', 'ModalService', 'NotificationService', 'ClientRuntimeService', 'hznLocalStorage', function($scope, $state, $rootScope, UserAgent, $sce, $filter, $notify, UtilService, Resource, $http, RequestFactory, ConfigService, ModalService, NotificationService, ClientRuntimeService, hznLocalStorage) {
        var vm = this;
        vm.isIOS = UserAgent.isIOS();
        vm.isAndroid = UserAgent.isAndroid();
        vm.filter = $state.params.filter;

        // If Hub Mobile App version above 9.2 or Hub Browser, the notifications routes are not nested under apps
        var state = ((UserAgent.isAWJadeMobile() && UserAgent.isNativeAppVersionIsEqualOrAbove("9.2")) || UserAgent.isBrowser()) ? 'notifications' : 'apps.notifications';
        vm.filtersList = NotificationService.filters;

        vm.goToFilter = function(filterName) {
            $state.go(state, {
                filter: filterName
            });
        };
    }]);
})(angular.module("com.vmware.greenbox.appCenter"));

(function(module) {
    'use strict';
    module.controller('SnackBarNotificationsController', ['$scope', '$state', 'NotificationService', 'UserAgent',
        function($scope, $state, NotificationService, UserAgent) {
            var vm = this;
            vm.title = _.get($scope, 'message.argument.notification_card.header.title', '');
            vm.subTitle = _.get($scope, 'message.argument.notification_card.header.subtitle[0]', '');
            vm.description = _.get($scope, 'message.argument.notification_card.body.description', '');
            vm.notificationId = _.get($scope, 'message.argument.id', '');
            vm.notificationLength = _.get($scope, 'message.argument', '');
            vm.isAWJadeMobile = UserAgent.isAWJadeMobile();
            var showGBCount = NotificationService.showNativeBell() || !vm.isAWJadeMobile;

            vm.goToNotification = function(notificationId) {
                var path = showGBCount ? 'notifications' : 'apps.notifications';
                if (notificationId) {
                    $state.go(path, {filter: notificationId});
                } else {
                    $state.go(path);
                }

                NotificationService.clearSnackNotifications();
            };
        }]);
})(angular.module("com.vmware.greenbox.appCenter"));


appCenter.component('hubNotificationCard', {
    templateUrl: 'app-v2/components/notifications/hubNotificationCardMobile.html',
    bindings: {
        onArchive: '&',
        notification: '=data'
    },
    controller: 'NotificationCardController',
    controllerAs: 'notificationCardCtrl'
});

appCenter.component('notifications', {
    templateUrl: 'app-v2/components/notifications/notifications.html',
    controller: 'NotificationController',
    controllerAs: 'notificationCtrl'
});

appCenter.component('notificationsLeftNav', {
    templateUrl: 'app-v2/components/notificationsLeftNav/notificationsLeftNav.html',
    bindings: {
        links: "<",
        headerLabel: "<"
    },
    controllerAs: 'notificationsLeftNav',
    controller: ['$stateParams', '$filter',
        function($stateParams, $filter) {
            var vm = this;
        }]
});

appCenter.component('people', {
    template: '<div ng-include="\'app-v2/components/people/\' + peopleCtrl.templateUrl">',
    controller: 'PeopleController',
    controllerAs: 'peopleCtrl'
});

appCenter.component('peopleDetail', {
    template: '<div ng-include="\'app-v2/components/people/\' + userDetailsCtrl.templateUrl">',
    controller: 'UserDetailsController',
    controllerAs: 'userDetailsCtrl'
});

appCenter.component('peopleItem', {
    templateUrl: 'app-v2/components/people/peopleItem.html',
    bindings: {
        user: '<',
        category: '<',
    },
    controller: ['$state', '$timeout', 'UserAgent', 'UtilService', function($state, $timeout, UserAgent, UtilService) {
        this.userDetails = function(user) {
            $state.go('people.details', {
                userId: encodeURIComponent(user.id)
            });
        };
    }],
    controllerAs: 'peopleItemCtrl'
});

appCenter.component('peopleSearch', {
    template: '<div ng-include="\'app-v2/components/peopleSearch/\' + peopleSearchCtrl.templateUrl">',
    controllerAs: 'peopleSearchCtrl',
    controller: ['UserAgent',
        function(UserAgent) {
            this.templateUrl = UserAgent.isAWJadeMobile() ? 'peopleSearch.html' : 'peopleSearchBrowser.html';
        }]
});

(function(module) {
    'use strict';

    module.controller('PeopleSearchController',
        ['PeopleService',
            '$timeout',
            '$scope',
            '$element',
            'PeopleSearchService',
            'UserAgent',
            '$rootScope',
            '$state',
            'UtilService',
            'ClientRuntimeService',
            function(PeopleService,
                     $timeout,
                     $scope,
                     $element,
                     PeopleSearchService,
                     UserAgent,
                     $rootScope,
                     $state,
                     UtilService,
                     ClientRuntimeService) {
                var vm = this;
                vm.innerControl = vm.control || {};
                var MIN_SEARCH_CHARS = 3;
                vm.recentVisitedUser = [];
                vm.isLoading = false;
                vm.showScrim = false;

                var getFirstPageTimeout;

                function init() {
                    vm.users = [];

                    vm.query = {
                        name: ''
                    };

                    var searchObj = PeopleSearchService.getSearchQueryAndResults();

                    if (searchObj && searchObj.query) {
                        vm.query.name = searchObj.query;
                    }

                    if (searchObj && searchObj.result) {
                        vm.users = searchObj.result;
                    }
                }

                vm.onSearch = function() {
                    var query = vm.query.name;
                    vm.noResults = false;
                    vm.reqChars = false;
                    vm.showScrim = true;

                    vm.recentVisitedUser = PeopleSearchService.getRecentVisitedUser();

                    if ((query.length > 0 && query.length < MIN_SEARCH_CHARS) || (query.length === 0 && vm.recentVisitedUser.length === 0)) {
                        vm.reqChars = true;
                        vm.users = [];
                    } else if (query.length === 0 && vm.recentVisitedUser.length > 0) {
                        // Needs to empty the users array to prevent users list and recent list shown together
                        vm.users = [];
                    }

                    if (query.length >= MIN_SEARCH_CHARS) {
                        vm.reqChars = false;
                        vm.recentVisitedUser = [];
                        vm.isLoading = true;

                        if (getFirstPageTimeout) {
                            $timeout.cancel(getFirstPageTimeout);
                        }
                        getFirstPageTimeout = $timeout(function() {
                            PeopleService.getFirstPage({searchText: query}, false).then(function(response) {
                                if (response.users) {
                                    vm.users = PeopleService.getUsers(response.users);
                                }
                                vm.noResults = response.totalResults === 0;
                                vm.isLoading = false;
                            }, function(err) {
                                vm.isLoading = false;
                                // Ideally should give out some kind of message to user to inform them there is error fetch data from the server
                            });
                        }, 500);
                    } else if (getFirstPageTimeout) {
                        $timeout.cancel(getFirstPageTimeout);
                        // When user started a search (query.name exceeds 3 characters, then using the back key to erase the query, need to reset the isLoading to false
                        vm.isLoading = false;
                    }

                    // for hub mobile browser/desktopapp, needs to disable scroll on the content-container while search is on
                    $rootScope.$broadcast('hub-browser-people-search-on');
                };

                $scope.$watch('ctrl.isActive', function(isActive) {
                    if (isActive) {
                        vm.users = [];
                        vm.onSearch();
                        $element.find('input').focus();
                    }
                });

                vm.innerControl.clearSearch = function() {
                    closeSearch();
                };

                vm.clearText = function() {
                    vm.query.name = '';
                    vm.users = [];
                    vm.onSearch();
                };

                vm.clearSearch = function() {
                    vm.reqChars = false;
                    vm.showScrim = false;
                    vm.users = [];
                    vm.query.name = '';
                    vm.recentVisitedUser = PeopleSearchService.getRecentVisitedUser();
                    vm.recentVisitedUser = [];
                };

                vm.userDetails = function(user) {
                    PeopleSearchService.clearSearchQueryAndResults();
                    closeSearch();
                    $state.go('people.details', {
                        userId: encodeURIComponent(user.id)
                    });
                };

                vm.closeOnBlur = function() {
                    $rootScope.$emit('people-search-field-on', false);
                    closeSearch();
                };

                function closeSearch() {
                    vm.clearSearch();
                    $element.find('input').blur();
                    // for hub mobile browser/desktopapp, needs to disable scroll on the content-container while search is on
                    $rootScope.$broadcast('hub-browser-people-search-off');
                }

                //navigating to other page, close search if open
                $rootScope.$on('$stateChangeStart', function() {
                    closeSearch();
                });

                vm.goBack = function() {
                    UtilService.goBack();
                };

                init();
            }]);
})(angular.module('com.vmware.greenbox.appCenter'));

appCenter.component('ribbon', {
    templateUrl: 'app-v2/components/ribbon/ribbon.html',
    controllerAs: 'ribbonCtrl',
    controller: ['UserAgent',
        'SettingsService',
        'ClientRuntimeService',
        'UtilService',
        'ModalService',
        'SignOutService',
        'ConfigService',
        '$filter',
        '$state',
        '$transitions',
        'TenantCustomizationService',
        '$scope',
        function(UserAgent,
                 SettingsService,
                 ClientRuntimeService,
                 UtilService,
                 ModalService,
                 SignOutService,
                 ConfigService,
                 $filter,
                 $state,
                 $transitions,
                 TenantCustomizationService,
                 $scope) {
            var vm = this;
            vm.userInfo = SettingsService.getCurrentUser() || {};
            vm.isAWJade = UserAgent.isAWJade();
            var browserPageTitles = {
                'apps': $filter('i18n')('hub.nav.label.apps'),
                'apps.details': $filter('i18n')('hub.nav.label.apps'),
                'apps.list': $filter('i18n')('hub.nav.label.apps'),
                'apps.list.details': $filter('i18n')('hub.nav.label.apps'),
                'people': $filter('i18n')('hub.nav.label.people'),
                'people.details': $filter('i18n')('hub.nav.label.people'),
                'notifications': $filter('i18n')('hub.nav.label.notification'),
                'notifications.details': $filter('i18n')('hub.nav.label.notification'),
                'notifications.filter-details': $filter('i18n')('hub.nav.label.notification'),
                'notifications.newApps': $filter('i18n')('hub.nav.label.notification'),
                'newAppsList': $filter('i18n')('myapps.mobilepagetitle.notification.newapps'),
                'settings': $filter('i18n')('hub.nav.label.settings')
            };
            vm.isSettingsLoaded = false;
            vm.showContextDialog = false;
            vm.showNotificationsFilters = false;
            vm.filter = '';

            vm.toggleContextDialog = function() {
                vm.showContextDialog = !vm.showContextDialog;
            };

            var getSettings = function() {
                vm.userInfo = SettingsService.getCurrentUser();
                if (vm.userInfo.firstName || vm.userInfo.lastName) {
                    vm.userInfo.initials = vm.userInfo.firstName[0] + vm.userInfo.lastName[0];
                }
                vm.showPeopleTab = TenantCustomizationService.isHubPeopleEnabled();
                var v2HubNotifications = UtilService.isHubV2NotificationsEnabled();
                var inAppNotificationEnabled = TenantCustomizationService.isNotificationsEnabled();
                vm.showNotifications = inAppNotificationEnabled && v2HubNotifications;
            };

            // Initially set the title using the $state.current attribute browserPageTitle
            vm.browserPageTitle = $filter('i18n')($state.current.browserPageTitle);
            // Changing state does not reload the controller, needs to use $transitions to update the title again

            $transitions.onStart({to: '**', from: '**'}, function(transition) {
                var nextRouteName = transition.to().name;
                vm.browserPageTitle = browserPageTitles[nextRouteName];
                if (nextRouteName === 'notifications' && UserAgent.isMobileBrowser()) {
                    vm.showNotificationsFilters = true;
                    vm.filter = transition.params('to').filter;
                } else {
                    vm.showNotificationsFilters = false;
                }
                vm.isSettingsLoaded = (nextRouteName === 'settings');
            });

            getSettings();

            $scope.$on('customizations-loaded', function() {
                getSettings();
            });

            vm.adminConsole = function($event) {
                if ($event) {
                    $event.preventDefault();
                }
                ConfigService.getAdminConsoleUrl().then(function(url) {
                    window.open(url);
                });
            };

            vm.hubSignOut = function($event) {
                SignOutService.continueSignOut($event);
            };

            // Default page of setting is account
            vm.goToSettings = function($event) {
                $state.go('settings');
            };
        }]
});

appCenter.component('settingList', {
    templateUrl: 'app-v2/components/settingList/settingList.html',
    bindings: {
        page: '<'
    },
    controllerAs: 'settingListCtrl',
    controller: ['$stateParams', '$filter',
        function($stateParams, $filter) {
            var vm = this;

            var settingNavLabels = {
                account: $filter('i18n')('hub.nav.label.settings.account'),
                devices: $filter('i18n')('hub.nav.label.settings.devices'),
                whatsnew: $filter('i18n')('hub.nav.label.settings.whatsnew'),
                about: $filter('i18n')('hub.nav.label.settings.about'),
                preferences: $filter('i18n')('hub.nav.label.settings.preferences'),
            };

            vm.settingsNavName = settingNavLabels[vm.page.pageId];
        }]
});

appCenter.component('settings', {
    templateUrl: 'app-v2/components/settings/settings.html',
    controllerAs: 'hubSettingsCtrl',
    controller: ['SettingsService', 'UserAgent', '$filter', 'AppDownloadService', 'ModalService', 'UtilService', '$scope',
        function(SettingsService, UserAgent, $filter, AppDownloadService, ModalService, UtilService, $scope) {
            var vm = this;

            var updateUserDetails = function() {
                vm.user = SettingsService.getCurrentUser();
                if (vm.user.firstName || vm.user.lastName) {
                    vm.user.initials = vm.user.firstName[0] + vm.user.lastName[0];
                }
                vm.isPasswordChangeEnabled = vm.user.changePasswordAllowed && !UtilService.isMdmOnlyMode();
            };

            //download app
            var isIOS = UserAgent.isIOS() && UserAgent.isBrowser();
            var isAndroid = UserAgent.isAndroid() && UserAgent.isBrowser();

            if (isIOS) {
                vm.downloadTitle = $filter('i18n')('hub.download.ios');
                vm.downloadSubtitle = $filter('i18n')('hub.download.subtitle.mobile');
            } else if (isAndroid) {
                vm.downloadTitle = $filter('i18n')('hub.download.android');
                vm.downloadSubtitle = $filter('i18n')('hub.download.subtitle.mobile');
            }

            vm.downloadApp = function() {
                AppDownloadService.downloadApp();
            };

            vm.openChangePassword = function() {
                ModalService.getCurrentModal().open('app-v2/settings/hubBrowserChangePassword.html');
            };

            updateUserDetails();

            $scope.$on('user-details-loaded', function() {
                updateUserDetails();
            });
        }]
});

appCenter.component('preferencesHubBrowser', {
    templateUrl: 'app-v2/components/settingSubpage/partials/preferences.html',
    controllerAs: 'preferencesCtrl',
    controller: 'PreferencesController'
});

appCenter.component('settingSubpage', {
    template: '<div ng-include="\'app-v2/components/settingSubpage/partials/\' + settingSubpageCtrl.templateUrl">',
    controllerAs: 'settingSubpageCtrl',
    controller: ['$stateParams',
                 '$state',
                 '$filter',
                 'SettingsService',
                 'ConfigService',
                 'UserAgent',
                 'ClientRuntimeService',
                 'ModalService',
        function($stateParams,
                 $state,
                 $filter,
                 SettingsService,
                 ConfigService,
                 UserAgent,
                 ClientRuntimeService,
                 ModalService) {
            var vm = this;
            vm.user = {};

            this.templateUrl = $stateParams.pageId + '.html';

            var settingNavLabels = {
                account: $filter('i18n')('hub.nav.label.settings.account'),
                devices: $filter('i18n')('hub.nav.label.settings.devices'),
                whatsnew: $filter('i18n')('hub.nav.label.settings.whatsnew'),
                about: $filter('i18n')('hub.nav.label.settings.about'),
                preferences: $filter('i18n')('hub.nav.label.settings.preferences'),
            };

            this.breadcrumbName = settingNavLabels[$stateParams.pageId];

            this.goToSettingsDefaultPage = function() {
                if (window.innerWidth > 768) {
                    $state.go('settings.page', {
                        pageId: 'account'
                    });
                } else {
                    // In mobile go to settings page, which only has settings nav
                    $state.go('settings');
                }
            };

            vm.user = SettingsService.getCurrentUser();
        }]
});

(function(module) {
    module.directive("owlCarousel", function() {
        return {
            restrict: 'E',
            transclude: false,
            link: function(scope) {
                scope.initCarousel = function(element) {
                    var defaultOptions = {};
                    var startY = 0;
                    var endY = 0;
                    var customOptions = scope.$eval($(element).attr('data-options'));
                    for (var key in customOptions) {
                        defaultOptions[key] = customOptions[key];
                    }
                    var curOwl = $(element).data('owlCarousel');
                    if (!angular.isDefined(curOwl)) {
                        var owl = $(element);
                        owl.owlCarousel(defaultOptions);
                        //prevent page scroll on carousel
                        owl.on('touchstart', function(e) {
                            var touchObj = e.originalEvent.touches[0];
                            startY = parseInt(touchObj.clientY);
                        });

                        owl.on('touchmove', function(e) {
                            var touchObj = e.originalEvent.touches[0];
                            endY = parseInt(touchObj.clientY);
                            if (e.cancelable && (startY - endY) < 10) {
                                e.preventDefault();
                            }
                        });

                        owl.on('touchend', function(e) {
                            startY = endY = 0;
                        });
                    }
                };
            }
        };
    }).directive('owlCarouselItem', ['$timeout',
        function($timeout) {
            return {
                restrict: 'A',
                transclude: false,
                link: function(scope, element) {
                    if (scope.$last) {
                        $timeout(function() {
                            scope.initCarousel(element.parent());
                        });
                    }
                }
            };
        }
    ]);
})(angular.module('com.vmware.greenbox.appCenter'));

appCenter.component('detailCloseButton', {
    template: '<div ng-include="\'app-v2/components/shared/\' + spinnerCtrl.templateUrl">',
    bindings: {
        overlay: '<',
    },
    controller: ['UserAgent', function(UserAgent) {
        this.templateUrl = UserAgent.isAndroid() ? 'detailCloseButtonAndroid.html' : 'detailCloseButtonIOS.html';
    }],
    controllerAs: 'spinnerCtrl'
});

/*
 * lineClampDirective:
 * This directive is intended to be a cross-browser solution to emulate
 * text-overflow: ellipsis support for multiline elements. As of writing this,
 * the only way to do this through CSS is using non-standard webkit or opera
 * vendor properties.
 *
 * Dependencies:
 * lodash
 *
 * Usage:
 * Add the line-clamp attribute to your element and specify the content as well
 * as how many lines to allow before truncating.
 *
 * Example:
 * <p line-clamp content="text string" lines="2"></p>
 *
 * Notes:
 * The directive logic will execute each time the window resize event is triggered, but
 * will not execute if the element has CSS white-space: nowrap.
 * */

(function(module) {
    'use strict';
    // For iOS i use Arial which is more reliable, 'San Francisco' or 'Helvetica Neue' are the default ios fonts, however I do not have lower versions of iphones
    // The difference is trivial
    var defaultFontSize = '12px',
        iOSDefaultFontFamily = 'SF NS Text',
        androidDefaultFontFamily = 'Roboto',
        // canvas
        defaultFontWeight = 'bold';

    module.directive('lineClamp3', ['$timeout', '$window', "UserAgent", function($timeout, $window, UserAgent) {
        return {
            link: link,
            replace: true,
            restrict: 'A',
            scope: {
                content: '=',
                lines: '='
            },
            template: '<p>{{::content}}</p>'
        };
        function link($scope, element) {
            var w = angular.element($window),
                options = {
                    content: $scope.content.trim(),
                    lines: $scope.lines
                },
                debouncedClamp = _.debounce(function() {
                    clamp(element[0], options);
                }, 100),
                ELLIPSIS = '\u2026';

            w.bind('resize', debouncedClamp);

            $scope.$on('$destroy', function() {
                w.unbind('resize', debouncedClamp);
            });

            // Using $timeout to give it time to bind the value to the template.
            $timeout(debouncedClamp, 0, false);

            function clamp(elt, options) {
                // If nowrap, text is forced to overflow horizontally and we have
                // no way to know where to truncate, so let the webview handle it.
                // if the lines is equal 1 then use css text overlfow ellipsis
                if (window.getComputedStyle(elt).whiteSpace === 'nowrap' || options.lines == 1) {
                    elt.textContent = options.content;
                    return;
                }

                var content = options.content,
                    eltHeight = elt.scrollHeight,
                    maxHeight = getMaxHeight(elt, options.lines),
                    length;

                var wordsArray = [];
                wordsArray = content.split(" ");

                var findLongestWord = function(array) {
                    var longest = array.reduce(function(a, b) {
                        return (a.length > b.length) ? a : b;
                    });
                    return longest;
                };

                var longWordExist = false,
                    longestWord = findLongestWord(wordsArray);

                function getTextWidth(text, font) {
                    var canvas = document.createElement("canvas");
                    var context = canvas.getContext("2d");
                    context.font = font;
                    var metrics = context.measureText(text);
                    return metrics.width;
                }

                var cs = window.getComputedStyle(elt),
                    currentFontSize = '',
                    currentFontFamily = '',
                    currentFont = '',
                    longestWordWidth,
                    containerWidth = angular.element(elt).width();

                // For hub app only two fonts were used, one is SF another is android, no need to use css to get the font
                currentFontFamily = UserAgent.isAndroid() ? androidDefaultFontFamily : iOSDefaultFontFamily;
                currentFontSize = (cs.fontSize !== null || cs.fontSize !== undefined) ? cs.fontSize : defaultFontSize;
                currentFont = defaultFontWeight + ' ' + currentFontSize + ' ' + currentFontFamily;

                longestWordWidth = getTextWidth(longestWord, currentFont);

                // Only apply the word wrap if there is a word longer than the container
                if (longestWordWidth > containerWidth) {
                    longWordExist = true;
                }

                //In hub app we use webkit and there is no word longer than the container let -webkit- handle the multiline ellipsis through css
                if (!longWordExist) {
                    elt.textContent = options.content;
                    return;
                } else {
                    // apply the word-break only if there is a long word
                    angular.element(elt).css("word-break", "break-all");
                }

                // No truncation needed
                if (eltHeight <= maxHeight) {
                    return;
                }

                // Truncate by character until the height does not exceed maxHeight.
                for (length = content.length; length && elt.scrollHeight > maxHeight; --length) {
                    content = content.substring(0, length);
                    elt.textContent = content.trim() + ELLIPSIS;
                }
            }

            // Get the minimum among explicit values and the calculated
            // value based on lines to clamp.
            function getMaxHeight(elt, lines) {
                var lineHeight = getLineHeight(elt),
                    maxHeight = lines * lineHeight,
                    computedStyle = window.getComputedStyle(elt),
                    cssHeight = parseFloat(computedStyle.height),
                    cssMaxHeight = parseFloat(computedStyle.maxHeight),
                    possibleValues = [maxHeight],
                    errorMargin;

                if (!isNaN(cssHeight)) {
                    possibleValues.push(cssHeight);
                }
                if (!isNaN(cssMaxHeight)) {
                    possibleValues.push(cssMaxHeight);
                }

                // Take the most restrictive (smallest) value as the maxHeight.
                maxHeight = Math.min.apply(Math, possibleValues);

                // Account for font rendering where the actual height of the
                // first line can be greater than the lineHeight value.
                errorMargin = Math.max(lineHeight / 4.0, 1); // 25% is arbitrary but seems to be a be a good baseline.
                return maxHeight + errorMargin;
            }

            // If the lineHeight is available as a number use that, otherwise calculate it -- heightly recommend to define a line-height through css
            // We had seen issue with IE9 before
            function getLineHeight(elt) {
                var lineHeightCss = window.getComputedStyle(elt).lineHeight,
                    lineHeightValue = parseFloat(lineHeightCss);
                return isNaN(lineHeightValue) ? calculateLineHeight(elt) : lineHeightValue;
            }

            // Calculate the local line height by cloning the element to create
            // a duplicate context, appending a new line and comparing the height
            // difference.
            function calculateLineHeight(elt) {
                var clone = elt.cloneNode(),
                    height1, height2;

                elt.appendChild(clone);

                clone.innerHTML = '<br />';
                height1 = clone.scrollHeight;
                clone.innerHTML = '<br /><br />';
                height2 = clone.scrollHeight;

                elt.removeChild(clone);

                return height2 - height1;
            }
        }
    }]);
})(angular.module("com.vmware.greenbox.appCenter"));

(function(module) {
    module.directive('pullToRefresh', function($compile, $timeout, $q, UserAgent, $filter) {
        return {
            scope: true,
            restrict: 'A',
            transclude: true,
            templateUrl: 'app-v2/components/shared/pullToRefresh.html',
            link: function postLink(scope, ele, attr) {
                if (UserAgent.isMobile()) {
                    var element = ele[0];
                    var scrollEle = document.querySelector(attr.scrollContainer);
                    var distanceY = 0;
                    var maxDistance = 200;
                    var startY = 0;
                    var isLoading = false;
                    var isPullRequired = false;
                    var friction = 2;
                    var pullElement = element;
                    var isScrolling;
                    var scrollStopped = true;
                    var loaderContainer = element.querySelector('#pull-to-refresh');
                    var actionIcon = element.querySelector('.action-icon');
                    var spinner = element.querySelector('.pull-spinner');
                    var startX = 0;
                    var distanceX = 0;
                    var xThreshold = 80;
                    pullElement.style.position = 'relative';
                    //set min-height. when there are no apps element height will be 0, HW-67651
                    pullElement.style['min-height'] = '100px';
                    var addClass = function(ele, className) {
                        ele.classList.add(className);
                    };

                    var removeClass = function(ele, className) {
                        ele.classList.remove(className);
                    };

                    addClass(actionIcon, 'pull');

                    var moveContainer = function(distance) {
                        if (!isLoading) {
                            if (distance >= 30 && scrollEle.scrollTop <= 0 && distanceX < xThreshold) {
                                addClass(element, 'set-transition-speed');
                                pullElement.style.transform = pullElement.style.msTransform = pullElement.style.webkitTransform = 'translate3d( 0, ' + parseInt(distance / friction) + 'px, 0 )';
                                if (distance >= 15 && loaderContainer.style.display != 'block') {
                                    loaderContainer.style.display = 'block';
                                    actionIcon.style.display = 'block';
                                }
                            }
                            if (distance === 0) {
                                loaderContainer.style.display = 'none';
                                pullElement.style.transform = pullElement.style.msTransform = pullElement.style.webkitTransform = 'translate3d( 0, 0, 0 )';
                            }
                            if (distance >= maxDistance) {
                                addClass(actionIcon, 'release');
                            }
                        }
                    };

                    var reset = function() {
                        isLoading = false;
                        addClass(element, 'reset-transition-speed');
                        isPullRequired = false;
                        actionIcon.style.display = 'none';
                        spinner.style.display = 'none';
                        distanceY = 0;
                        distanceX = 0;
                        moveContainer(0);
                        removeClass(actionIcon, 'release');
                    };

                    var makeCall = function() {
                        moveContainer(100);
                        var start = +new Date();
                        isLoading = true;
                        actionIcon.style.display = 'none';
                        spinner.style.display = 'block';
                        $q.when(scope.$eval(attr.pullToRefresh))
                            .then(function() {
                                var elapsed = +new Date() - start;
                                $timeout(function() {
                                    reset();
                                }, elapsed < 400 ? 400 - elapsed : 0);
                            }, function() {
                                reset();
                            });
                    };

                    ele.bind('touchstart', function(e) {
                        var touchObj = e.originalEvent.touches[0];
                        startY = parseInt(touchObj.clientY);
                        startX = parseInt(touchObj.clientX);
                        //prevent pull action when you scroll is greater than 0
                        if (scrollEle.scrollTop > 0) {
                            scrollStopped = false;
                            window.clearTimeout(isScrolling);
                        } else {
                            scrollStopped = true;
                        }
                    });

                    ele.bind('touchmove', function(e) {
                        //set a timeout for pull to not start immediately when reaching 0
                        if (scrollEle.scrollTop === 0 && !scrollStopped) {
                            isScrolling = setTimeout(function() {
                                scrollStopped = true;
                                window.clearTimeout(isScrolling);
                            }, 500);
                        }

                        if (scrollStopped) {
                            var touchObj = e.originalEvent.touches[0];
                            distanceY = (parseInt(touchObj.clientY) - startY);
                            distanceX = Math.abs(parseInt(touchObj.clientX) - startX);

                            if (distanceY > 0 && distanceX < xThreshold) {
                                moveContainer(distanceY);
                            }
                        }

                        //prevent scroll only when the scrollTop is 0 and distanceY is positive
                        if (scrollEle.scrollTop === 0 && distanceY > 0) {
                            e.preventDefault();
                        }
                    });

                    ele.bind('touchend', function(e) {
                        if (distanceY >= maxDistance && scrollEle.scrollTop <= 0) {
                            if (!isLoading) {
                                makeCall();
                            }
                        } else {
                            moveContainer(0);
                        }
                    });
                }
            }
        };
    });
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('scrollCheck', ['$window', function($window) {
        return {
            restrict: 'A',
            link: function(scope, element, attr) {
                var scrollDistance, // This is where the container scroll pass the apptile icon or people avatar
                    currentView = attr.currentview,
                    elemClass = attr.elemclass;

                // Check viewport size, if it is < 375 return small app-tile
                scope.width = $window.innerWidth;
                // No need to do resize as this the a readonly once when the app is loaded, Hub app lock orientation to portrait for phones
                if (currentView == "details-apps") {
                    if (scope.width < 375) {
                        // 86 is defined in css for viewport smaller than 375 app tile size
                        scrollDistance = 86;
                    } else {
                        scrollDistance = 110;
                    }
                }

                if (currentView == "details-people") {
                    scrollDistance = 150;
                }

                element.bind("scroll", function() {
                    if (element.scrollTop() > scrollDistance) {
                        angular.element(elemClass).addClass('scrolled');
                    } else {
                        angular.element(elemClass).removeClass('scrolled');
                    }
                });
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

appCenter.component('spinnerLoading', {
    template: '<div ng-include="\'app-v2/components/shared/\' + spinnerCtrl.templateUrl">',
    bindings: {
        overlay: '<',
    },
    controller: ['UserAgent', function(UserAgent) {
        this.templateUrl = UserAgent.isAndroid() ? 'spinnerAndroid.html' : 'spinnerIOS.html';
    }],
    controllerAs: 'spinnerCtrl'
});

appCenter.component('subpageBackButton', {
    template: '<div ng-include="\'app-v2/components/shared/\' + spinnerCtrl.templateUrl">',
    bindings: {
        overlay: '<',
    },
    controller: ['UserAgent', function(UserAgent) {
        this.templateUrl = UserAgent.isAndroid() ? 'subpageBackButtonAndroid.html' : 'subpageBackButtonIOS.html';
    }],
    controllerAs: 'spinnerCtrl'
});

(function(module) {
    module.directive('timeStampCheck', [function() {
        return {
            restrict: 'AE',
            link: function(scope, element, attr) {
                if (moment(attr.timeStampCheck, moment.ISO_8601).isValid()) {
                    var date = moment.utc(attr.timeStampCheck).format("LLL");
                    element.text(date);
                } else {
                    element.html(attr.timeStampCheck);
                }
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    var properties = ['name', 'appType', 'subType', 'installStatus', 'installMessage', 'rating', 'version', 'size', 'type', 'price', 'loadFromDbFailed'];

    var appInstallEndpoint = '/catalog-portal/services/api/activate/';

	module.controller('DetailsController', [
                            '$scope',
                            'DetailsService',
                            'CatalogService',
                            'INSTALL_STATUS',
                            '$filter',
                            '$location',
                            '$sce',
                            'UserAgent',
                            'JadeV1Scheme',
                            'JadeV2Scheme',
                            'ModalService',
                            'BookmarksService',
                            '$state',
                            '$notify',
                            'ClientRuntimeService',
                            'UtilService',
                            'UpdateUrlParamsService',
                            'hznLocalStorage',
                            '$interval',
                            'TenantCustomizationService',
        function($scope,
                  DetailsService,
                  CatalogService,
                  INSTALL_STATUS,
                  $filter,
                  $location,
                  $sce,
                  UserAgent,
                  JadeV1Scheme,
                  JadeV2Scheme,
                  ModalService,
                  BookmarksService,
                  $state,
                  $notify,
                  ClientRuntimeService,
                  UtilService,
                  UpdateUrlParamsService,
                  hznLocalStorage,
                  $interval,
                  TenantCustomizationService) {
            var vm = this,
                appId = $state.params.appId,
                resource = DetailsService.getAppDetailsResource(appId),
                isMdmWebApp = false;

            vm.isHubUiEnabled = UtilService.isHub();
            vm.isAppRatingsEnabled = vm.isHubUiEnabled && TenantCustomizationService.isAppRatingEnabled();
            vm.isHubAppFavoritesEnabled = TenantCustomizationService.isHubFavoritesEnabled() && !TenantCustomizationService.isHubFavoritesOnlyView();
            vm.newAppsTab = $state.current.activeTab === "newApps";
            vm.isHideVirtualAppEnabled = UtilService.hideVirtualApps();

            this.templateUrl = UserAgent.isAWJadeMobile() ? 'details.html' : 'detailsBrowser.html';

            this.isAWJadeDesktop = UserAgent.isAWJadeDesktop();

            startLoading();
            UpdateUrlParamsService.hideNativenav();
            resource.get().then(function(data) {
                appDetails(data);
            });

            var viewDownloadLink = $filter('i18n')('viewDownloadUrl');
            if (UserAgent.isIOS()) {
                viewDownloadLink = $filter('i18n')('viewDownloadUrlIOS');
            } else if (UserAgent.isAndroid()) {
                viewDownloadLink = $filter('i18n')('viewDownloadUrlAndroid');
            }
            var xenreceiverDownloadLink = $filter('i18n')('citrixReceiverDownloadUrl');
            if (UserAgent.isAWJadeV2()) {
                if (UserAgent.isWindows()) {
                    viewDownloadLink = JadeV2Scheme.APP_LAUNCH + "&uri=" + viewDownloadLink;
                    xenreceiverDownloadLink = JadeV2Scheme.APP_LAUNCH + "&uri=" + xenreceiverDownloadLink;
                } else {
                    viewDownloadLink = JadeV2Scheme.APP_LAUNCH + "&url=" + viewDownloadLink;
                    xenreceiverDownloadLink = JadeV2Scheme.APP_LAUNCH + "&url=" + xenreceiverDownloadLink;
                }
            }

            if (UserAgent.isIE8OrLower()) {
                vm.xenAppTooltip = $filter('i18n')('app.details.xenapp.msg.IE8OrLower');
                vm.xenAppDeliveryGroupTooltip = $filter('i18n')('app.details.xenappsDeliveryGroup.requirement');
            } else {
                vm.xenAppTooltip = $sce.trustAsHtml($filter('i18n')('app.details.xenapp.requirement', "<a target='_blank' href='" + xenreceiverDownloadLink + "'>", "</a>"));
                vm.xenAppDeliveryGroupTooltip = $sce.trustAsHtml($filter('i18n')('app.details.xenappsDeliveryGroup.requirement', "<a target='_blank' href='" + xenreceiverDownloadLink + "'>", "</a>"));
            }
            vm.viewDesktopTooltip = $sce.trustAsHtml($filter('i18n')('app.details.viewDesktop.requirement', "<a target='_blank' href='" + viewDownloadLink + "'>", "</a>"));
            vm.viewAppTooltip = $sce.trustAsHtml($filter('i18n')('app.details.viewapp.requirement', "<a target='_blank' href='" + viewDownloadLink + "'>", "</a>"));
            vm.desktoneTooltip = $sce.trustAsHtml($filter('i18n')('app.details.desktoneDesktop.requirement', "<a target='_blank' href='" + viewDownloadLink + "'>", "</a>"));
            vm.daasAppTooltip = $sce.trustAsHtml($filter('i18n')('app.details.desktoneApp.requirement', "<a target='_blank' href='" + viewDownloadLink + "'>", "</a>"));

            vm.appId = appId;

            function appDetails(data) {
                var appStatus = data.installStatus;

                if (!appStatus) {
                    appStatus = INSTALL_STATUS.NOT_ACTIVATED.nativeAction;
                } else if (!data.visible) {
                    appStatus = 'HIDDEN';
                } else if (CatalogService.isStatusRequest(data)) {
                    appStatus = 'REQUEST';
                }

                appStatus = CatalogService.getNativeAppStatus(data.appId) || appStatus;
                $scope.$on('native-app-status-change', function(event, args) {
                    if (args.nativeAppMap[data.appId]) {
                        appStatus = args.nativeAppMap[data.appId];
                        data.installStatus = args.nativeAppMap[data.appId];
                        data.statusCode = CatalogService.getAppStatusCode(appStatus);
                        $scope.$apply();
                    }
                });

                data.statusCode = CatalogService.getAppStatusCode(appStatus);
                data.isWebApp = CatalogService.isWebApp(data.type);
                data.isMdmApp = CatalogService.isMdmApp(data.type, data.subType);
                data.isLaunchableApp = CatalogService.isLaunchableApp(data);
                data.isPasswordVaultApp = CatalogService.isPasswordVaultApp(data.type, data.subType);
                data.isThinApp = CatalogService.isThinApp(data);
                data.isThinAppPackage = CatalogService.isThinAppPackage(data);
                data.isLaunchableThinapp = CatalogService.isLaunchableThinapp(data);
                data.isBookmarkableApp = CatalogService.isBookmarkableApp(data);
                data.isViewableThinappPackage = CatalogService.isViewableThinappPackage(data);
                data.isTunnelRequired = CatalogService.isTunnelRequired(data);
                data.isWorkspaceServiceRequired = data.isMdmApp && data.mgmtRequired && data.statusCode === '1';

                CatalogService.populateTypeNameAndPlatformName(data);
                CatalogService.populateDisplayValForAppType(data);
                data.launch = _.get(data, '_links.launch.href', '');
                data.resetDesktop = _.get(data, '_links.reset-desktop.href', '');
                if (data.pvAppCredentials) {
                    data.showPvAppCredentialsLink = true;
                    if (!data.pvAppCredentials.userNameEditable && !data.pvAppCredentials.passwordEditable) {
                        data.showPvAppCredentialsLink = false;
                    }
                }
                data.pvappCredentials = _.get(data, '_links.pvappCredentials.href', '');
                vm.app = data;

               if (isMdmWebApp && !data.installStatus) {
                    data.installStatus = INSTALL_STATUS.ACTIVATED.name;
                    data.visible = true;
                }
                _.extend(vm, _.pick(data, properties));
                vm.descriptionHTML = data.description;
                vm.shortDescriptionHTML = data.description ? data.description.substring(0, data.description.indexOf('.') + 1) : 'none';
                vm.iconStyle = data._links.icon ? data._links.icon.href : 'none';
                vm.reviews = data.reviews || [];
                vm.categories = data.categories || [];
                vm.screenshots = data._links.screenshots || [];
                vm.mgmtRequired = data.mgmtRequired;
                vm.fromCache = data.fromCache;
                vm.perDeviceActivationRequired = data.perDeviceActivationRequired;
                vm.isAppRatingsEnabled = vm.isAppRatingsEnabled && !data.loadFromDbFailed;
                var appStatus = data.installStatus;
                if (!appStatus) {
                    appStatus = INSTALL_STATUS.NOT_ACTIVATED.nativeAction;
                } else if (!data.visible) {
                    appStatus = 'HIDDEN';
                } else if ((data.approvalRequired && ['NOT_ACTIVATED', 'ACTIVATION_FAILED'].indexOf(data.installStatus) >= 0) || (data.subType === 'THINAPP' && data.perDeviceActivationRequired)) {
                    appStatus = 'REQUEST';
                }
                if (vm.isAppRatingsEnabled) {
                    vm.appRatingData = {
                        url: data._links.appRating ? data._links.appRating.href : "",
                        likes: data.appRatingStats && data.appRatingStats.likes,
                        dislikes: data.appRatingStats && data.appRatingStats.dislikes,
                        rating: data.currentUserAppRating
                    };
                }
                if (vm.isHubUiEnabled) {
                    vm.creatorName = data.creator || "";
                    vm.supportEmail = data.supportEmail || "";
                    vm.supportPhone = data.supportPhone || "";
                }
                //opening mail client is supported in awjade version 3.3 and above. this is similar to opening email in people search page.
                vm.isAppFeedbackSupported = vm.isHubUiEnabled && vm.supportEmail;
                vm.appSize = data.size ? CatalogService.getAppSize(data.size) : "";
                vm.installAction = CatalogService.getInstallStatusText(appStatus, data);
                vm.appNeedToActivated = data.installStatus === 'NOT_ACTIVATED' || data.installStatus === 'ACTIVATION_FAILED' || data.installStatus === 'UPDATE'
                    || (data.installStatus !== 'NOT_ACTIVATED' && !data.visible) || (data.subType === 'THINAPP' && data.perDeviceActivationRequired);
                vm.installUrl = appInstallEndpoint + appId;
                vm.backgroundImage = '';

                if (data._links.icon != undefined) {
                    vm.backgroundImage = 'url(' + data._links.icon.href + ')';
                }
                vm._links = data._links;
                vm.hasAppRequirements = data.subType === 'THINAPP' || data.subType === 'XENAPP' || data.subType === 'XENAPPDELIVERYGROUP' || data.subType === 'VIEWPOOL' || data.subType === 'VIEWAPP' || data.subType === 'DESKTONEDESKTOP' || data.subType === 'DESKTONEAPPLICATION';
                vm.showRequirement = vm.hasAppRequirements && !UserAgent.isHorizon();
                vm.appSubType = $filter('i18n')('app.details.label.type.' + data.subType);

                if (vm.fromCache && vm.app.isMdmApp) {
                    vm.showMissingInfoMsg = true;
                }

                doneLoading();

                vm.showNativeLaunchMessage = !hznLocalStorage.nativeLaunchMessage && UtilService.isHubNative() && data.isMdmApp && data.installStatus === "ACTIVATED";
                if (vm.showNativeLaunchMessage) {
                    var interval = $interval(function() {
                        vm.showNativeLaunchMessage = false;
                        $interval.cancel(interval);
                    }, 2000);
                    hznLocalStorage.nativeLaunchMessage = true;
                }
            }

            vm.backBtnAction = function() {
                window.history.back();
            };

            // Hub specific functions
            vm.hubBackBtnAction = function() {
                var prevStateWithInNotifications = function() {
                    return ['apps.newApps', 'apps.archivedNotifications', 'apps.notifications'].indexOf($state.prev.name) > -1;
                };

                if (prevStateWithInNotifications()) {
                    UtilService.goBack();
                } else {
                    UpdateUrlParamsService.showNativenav().then(function() {
                        UtilService.goBack();
                    });
                }
            };

            vm.openZoomedImageCarousel = function(index) {
                ModalService.getCurrentModal().open('app-v2/details/zoomedImageCarousel.html', {screenshots: vm.screenshots, modal: ModalService.getCurrentModal(), carouselIndex: index });
            };

            vm.hubOpenZoomedImageCarousel = function(index) {
                ModalService.getCurrentModal().open('app-v2/components/details/zoomedImageCarousel.html', {screenshots: vm.screenshots, modal: ModalService.getCurrentModal(), carouselIndex: index });
            };

            vm.resetDesktop = function(app, $event) {
                BookmarksService.performResetDesktop(app, $event);
            };

            vm.openSetAppPasswordDialog = function(app, $event) {
                BookmarksService.openSetAppPasswordDialog(app, $event);
            };

            vm.openEmail = function() {
                var mail = vm.supportEmail + "?subject=" + $filter('i18n')('app.details.label.feedbackSubject', vm.app.name);
                ClientRuntimeService.openEmail(mail);
            };

            function startLoading() {
                vm.isLoading = true;
            }

            function doneLoading() {
                vm.isLoading = false;
            }
            $scope.$on('open-modal-dialog', function(event, args) {
                var template = args.dialogtemplate;
                $scope.$modal.open(template, $scope, {params: args.dialogparams});
            });
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    var appDetailsEndpoint = '/catalog-portal/services/api/apps/';

    module.service('DetailsService', ['Resource', 'ConfigService', 'ModalService',
        function(Resource, ConfigService, ModalService) {
            var service = this;

            service.getAppDetailsResource = function(appId) {
                var apiResourceUrl = ConfigService.getBaseUrl() + appDetailsEndpoint + appId;
                return Resource(apiResourceUrl, { headers: { Accept: 'application/hal+json' } });
            };

            service.openSetPVAppPasswordDialog = function(app, $event) {
                if ($event) {
                    $event.stopPropagation();
                }
                ModalService.getCurrentModal().open('app-v2/details/passwordVaultAppCredentials.html', { app: app });
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.controller('PasswordVaultAppCredentialsController', ['$scope', 'PasswordVaultAppCredentialsService', 'ModalService',
        function($scope, PasswordVaultAppCredentialsService, ModalService) {
            var vm = this;
            vm.app = $scope.$modalOptions.params.app;

            vm.username = vm.app.pvAppCredentials.userName;
            vm.usernameCredentialName = vm.app.pvAppCredentials.userNameCredentialName;
            vm.password = vm.app.pvAppCredentials.password;
            vm.passwordCredentialName = vm.app.pvAppCredentials.passwordCredentialName;
            vm.showUserName = vm.app.pvAppCredentials.userNameEditable;
            vm.showPassword = vm.app.pvAppCredentials.passwordEditable;

            function validatePassword() {
                var e1 = $scope.ctrl.username;
                var e2 = $scope.ctrl.password;
                if (vm.showUserName && (!e1 || e1.trim() === '')) {
                    $scope.appAuthForm.$setValidity("username", false);
                    return false;
                } else if (vm.showPassword && (!e2 || e2.trim() === '')) {
                    $scope.appAuthForm.$setValidity("password", false);
                    return false;
                } else {
                    $scope.appAuthForm.$setValidity("username", true);
                    $scope.appAuthForm.$setValidity("password", true);
                    return true;
                }
            }

            vm.toggleShowClearTextPassword = function() {
                var passwordField = document.getElementById('password');
                var value = passwordField.value;

                if (passwordField.type == 'password') {
                    passwordField.type = 'text';
                } else {
                    passwordField.type = 'password';
                }
                passwordField.value = value;
            };

            vm.copyPasswordToClipboard = function() {
                if (document.queryCommandSupported('copy')) {
                    var passwordField = document.getElementById('password');
                    passwordField.type = 'text';
                    passwordField.select();

                    try {
                        var successful = document.execCommand('copy');
                        passwordField.type = 'password';
                    } catch (err) {
                        passwordField.type = 'password';
                    }
                }
            };
            vm.setPVAppCredentials = function($event) {
                if ($event) {
                    $event.stopPropagation();
                }
                if (!validatePassword()) {
                    return;
                }
                var params = {};
                if (vm.showUserName) {
                    params.userNameCredentialName = vm.usernameCredentialName;
                    params.userName = vm.username.trim();
                }
                if (vm.showPassword) {
                    params.passwordCredentialName = vm.passwordCredentialName;
                    params.password = vm.password.trim();
                }

                PasswordVaultAppCredentialsService.setPVAppCredentials(vm.app.pvappCredentials, params).then(function(response) {
                    if (angular.isDefined(response) && response.status === 200) {
                        ModalService.getCurrentModal().close();
                        ModalService.getCurrentModal().alert({
                            title: 'requestSuccessful',
                            message: 'pvapp.setAppPassword.msg.success',
                            ok: 'ok'
                        });
                    } else {
                        ModalService.getCurrentModal().alert({
                            title: 'requestFailed',
                            message: 'pvapp.setAppPassword.msg.fail',
                            ok: 'ok'
                        });
                    }
                }, function(error) {
                    if (error.handled) { //When system is under maintenance
                        return;
                    }
                    ModalService.getCurrentModal().alert({
                        title: 'requestFailed',
                        message: 'pvapp.setAppPassword.msg.fail',
                        ok: 'ok'
                    });
                });
            };
            PasswordVaultAppCredentialsService.getPVAppCredentials(vm.app.pvappCredentials).then(function(resp) {
                vm.usernameCredentialName = resp.data.userNameCredentialName;
                vm.username = resp.data.userName;
                vm.passwordCredentialName = resp.data.passwordCredentialName;
                vm.password = resp.data.password;
                vm.showUserName = resp.data.userNameEditable;
                vm.showPassword = resp.data.passwordEditable;
            });
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('PasswordVaultAppCredentialsService', [
        '$http',
        'RequestFactory',
        function(
            $http,
            RequestFactory) {
            this.getPVAppCredentials = function(url) {
                var request = RequestFactory(url, {
                    method: 'GET',
                    headers: {
                        Accept: 'application/hal+json'
                    }
                });
                return $http(request);
            };

            this.setPVAppCredentials = function(url, params) {
                    var req = RequestFactory(url, {
                        method: 'PUT',
                        headers: {
                            Accept: 'application/hal+json'
                        },
                        params: params
                    });
                    return $http(req);
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

var appCenter = angular.module("com.vmware.greenbox.appCenter", [
    'ngCookies',
    'ngSanitize',
    'greenbox.appcenter.templates',
    'ui.router',
    'com.vmware.greenbox.l10n',
    'com.vmware.workspace.services.localization',
    'com.vmware.workspace.components.notify',
    'com.vmware.workspace.components.modal',
    'com.vmware.workspace.services.rest',
    'com.vmware.greenbox.services.offlineService',
    'angular-gestures',
    'angular-carousel',
    'ui.sortable']);

(function(module) {
    'use strict';

    module.controller('HubController', [
        '$q',
        'Localization',
        'UserAgent',
        'SettingsService',
        'HttpProxyService',
        'ConfigService',
        'UtilService',
        'BootstrapService',
        'TenantCustomizationService',
        'HubBrandingService',
        'ModalService',
        '$scope',
        'CatalogService',
        'NativeBridgeService',
        'MobileFlowsService',
        '$rootScope',
        'NotificationService',
        function(
            $q,
            Localization,
            UserAgent,
            SettingsService,
            HttpProxyService,
            ConfigService,
            UtilService,
            BootstrapService,
            TenantCustomizationService,
            HubBrandingService,
            ModalService,
            $scope,
            CatalogService,
            NativeBridgeService,
            MobileFlowsService,
            $rootScope,
            NotificationService) {
            NativeBridgeService.registerBridge();
            var vm = this;
            var initAppCallsDefer = $q.defer();
            var initAppCallsPromise = initAppCallsDefer.promise;
            var v2Notifications = _.get(window, 'workspaceOne.featureFlags.V2_HUB_NOTIFICATIONS', false);
            BootstrapService.setInitAppCallsPromise(initAppCallsPromise);
            vm.pageTitle = Localization.getLocalizedString('hub');
            vm.appsLoaded = false;
            vm.toggles = UtilService.getObjValue(window, 'workspaceOne.featureFlags', {});
            vm.user = {};
            vm.isIOS = UserAgent.isIOS();
            vm.isAndroid = UserAgent.isAndroid();
            vm.isAWJade = UserAgent.isAWJade();
            vm.isMacJade = UserAgent.isMacJade();
            vm.appLoaded = false;
            // Notify Native app at least default Avatar is rendered
            // this is to address https://jira-euc.eng.vmware.com/jira/browse/HW-90914
            // If GB UI loads this controller means GB UI already loaded the default Avatar
            // and hence informing the native app.
            // Incase if something goes wrong, there is a way to bail the user out.
            // If Native app did not receive this callback, that means
            // GB did not receive a request to load UI or something else must happened
            // Native app can listen to this callback and if it did not receive this callback,
            // Native app will render the gear icon to bailout the user.
            if (UtilService.isHubNative()) {
                UtilService.informAvatarLoaded();
            }
            ModalService.setCurrentModal($scope.$modal);

            //If the page load is because of clicking on refresh button
            if (window.performance && window.performance.navigation.type === 1) {
                HttpProxyService.clearAll();
                HttpProxyService.clearPeopleSearch();
                ConfigService.refreshCache(true);
            }

            if (_.get(window, 'workspaceOne.featureFlags.HUB_MOBILE_FLOWS_INTEGRATION', false)) {
                MobileFlowsService.register();
            }

            $q.all([SettingsService.getUserInfo(), ConfigService.getFeatureCustomization(false),
                ConfigService.getCatalogCustomizations(false)]).then(function(data) {
                var userInfo = data[0] || {};
                var customizationSettings = data[1] || {};
                var catalogCustomizationSettings = data[2] || {};
                var properties = ['userName', 'firstName', 'lastName', 'emailAddress', 'numOfManagedDevices',
                    'phoneNumber', 'adminUser', 'internalUserType', 'changePasswordAllowed', 'localUser', 'imageURL', 'title', 'employeeNumber', 'businessUnit'];
                var mdmOnlyWS1 = UtilService.isMdmOnlyMode();
                _.extend(vm.user, _.pick(userInfo, properties));
                SettingsService.setCurrentUser(vm.user);
                if (!mdmOnlyWS1) {
                    checkTermsOfUse(vm.user.userName);
                }
                ConfigService.mdmOnlyWS1(mdmOnlyWS1);
                SettingsService.setCurrentUser(vm.user);
                vm.passwordChangeEnabled = vm.user.changePasswordAllowed && !mdmOnlyWS1;
                vm.appLoaded = true;
                TenantCustomizationService.setCustomizationSettings(customizationSettings);
                TenantCustomizationService.setCatalogCustomizationSettings(catalogCustomizationSettings);
                TenantCustomizationService.setLaunchOptions();
                initAppCallsDefer.resolve();
                $rootScope.$broadcast('customizations-loaded');
            }, function(error) {
                if (!vm.isAWJade && _.get(error, "data.code", undefined) === "admin.terms.not.accepted") {
                    ConfigService.getAdminConsoleTermsUrl().then(function(url) {
                        window.location = url;
                    });
                }
            });

            //this will reduce the initial ribbon branding flicker
            var cachedBranding = HttpProxyService.getHubBranding();
            _.extend(vm, cachedBranding);

            HubBrandingService.getUpdateValues(vm).then(function(customBranding) {
                HttpProxyService.setHubBranding(customBranding);
                _.extend(vm, customBranding);
            }, function() {
                HttpProxyService.setHubBranding({});
                _.extend(vm, {
                    customized: false
                });
            });

            function checkTermsOfUse(userName) {
                //Terms of use will not be checked in Android less than 3.3 versions because native client should add document.referer header to display vIDM TOU page
                if (UtilService.checkTermsOfUseStatus()) {
                    ConfigService.getTermsOfUseStatus().then(function(response) {
                        if (!_.get(response, 'termsOfUseAcceptanceStatus.accepted', true)) {
                            $q.all([ConfigService.getUserConsoleTermsUrl(), ConfigService.getLogoutUrl()])
                                .then(function(promisesData) {
                                    window.location = UtilService.constructTouRedirectUrl(promisesData[0], promisesData[1], userName);
                                });
                        }
                    });
                }
            }

            if (v2Notifications) {
                NotificationService.checkForPriorityNotifications();
            }
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "موافق",
        "and": "و",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "تثبيت",
        "app.banner.open": "فتح",
        "app.promotion.banner.donotshowagain": "عدم العرض مرة أخرى. احصل عليه لاحقًا في الإعدادات - نبذة",
        "app.promotion.banner.open": "فتح في تطبيق",
        "app.promotion.banner.download": "تنزيل تطبيق",
        "app.promotion.banner.message": "احصل على تجربة أفضل في التطبيق.",
        "horizonDesktopNotDetected": "يجب تثبيت VMware Identity Manager Desktop على هذا الكمبيوتر لتتمكن من فتح هذا التطبيق. <a target='_blank' href='{0}'>قم بتثبيت VMware Identity Manager Desktop</a> إذا لم تقم بذلك بالفعل.",
        "viewAppsTooltip": "يتطلب هذا التطبيق المستضاف على Horizon تثبيت {0} Horizon Client{1} 3.0 أو إصدار أحدث على جهاز الكمبيوتر لديك.",
        "desktoneDesktopTooltip": "يتطلب Horizon Cloud لسطح المكتب تثبيت {0} Horizon Client {1} على جهاز الكمبيوتر لديك.",
        "desktoneApplicationTooltip": "يتطلب تطبيق Horizon Cloud تثبيت {0} Horizon Client {1} على جهاز الكمبيوتر لديك.",
        "xenAppsReceiverNotDetected": "يجب تثبيت Citrix Receiver على هذا الكمبيوتر لتتمكن من فتح هذا التطبيق. <a target='_blank' href='{0}'>قم بتثبيت Citrix Receiver</a> إذا لم تقم بذلك بالفعل.",
        "button.save": "حفظ",
        "button.update": "تحديث",
        "button.openHorizonView": "فتح Horizon Client",
        "myapps.launch.openApp": "فتح {0}",
        "button.openApp": "فتح التطبيق",
        "button.clear": "مسح",
        "button.close": "إغلاق",
        "button.cancel": "إلغاء",
        "button.download": "تنزيل",
        "myapps.launch.title.launch": "بدء التشغيل",
        "myapps.launch.title": "بدء تشغيل التطبيق",
        "myapps.launch.view.openWith": "فتح باستخدام",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "المتصفح",
        "myapps.launch.view.preferredClient.isDefault": "(الافتراضي)",
        "myapps.launch.view.selectPreferredLaunchClient": "حدد كيف تريد بدء تشغيل تطبيقات وبرامج Horizon لسطح المكتب",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "تطبيقات Horizon التي يتم التحكم فيها عن بُعد",
        "myapps.launch.view.selectPreferredLaunchClientText": "فتح تطبيقات Horizon التي يتم التحكم فيها عن بُعد في Horizon Client سيمنحك تجربة أفضل من المتصفح.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "كيف ترغب ببدء تشغيل تطبيقات Horizon التي يتم التحكم فيها عن بُعد؟",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "اختر طريقة بدء التشغيل الافتراضية...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "يحدد هذا طريقة بدء التشغيل الافتراضية عندما تختار فتح تطبيق Horizon لسطح مكتب من جهازك. إذا اخترتَ Horizon Client كتطبيق افتراضي، فيجب أن يكون Horizon Client مثبتًا. <a target='_blank' href='{0}'>قم بتثبيت Horizon Client</a> إذا لم تقم بذلك بالفعل.",
        "myapps.launch.view.unknownClientType": "نوع عميل غير معروف لفتح Horizon Client.",
        "myapps.launch.view.openWithView": "فتح باستخدام Horizon Client",
        "myapps.launch.view.openWithBrowser": "فتح باستخدام المتصفح",

        "myapps.launch.view.preferredClient.byBrowser.description": "بتحديد المتصفح، سيتم فتح سطح المكتب أو التطبيق لديك في نافذة متصفح جديدة.",
        "myapps.launch.view.preferredClient.byViewClient.description": "يتطلب هذا العنصر وجود Horizon Client 3.0 أو الأحدث. <a target='_blank' href='{0}'>قم بتثبيت Horizon Client</a> إذا لم تقم بذلك بالفعل.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "يمكنك دائمًا تغيير هذا الإعداد في التفضيلات.",
        "myapps.launch.view.preferredClient.saveSuccess": "نجح حفظ التفضيل المحدد.",
        "myapps.launch.msg.launching.desktop": "جارٍ بدء تشغيل سطح المكتب <b>{0}</b> .....",
        "myapps.launch.msg.launching.application": "جارٍ بدء تشغيل التطبيق <b>{0}</b> .....",
        "myapps.noAppsMsg": "لم تقم بإضافة أي تطبيقات. يمكنك الانتقال إلى {0} لإضافة التطبيقات",
        "myapps.noFavAppsMsg": "لم تقم بإضافة إشارات مرجعية لأي تطبيقات",
        "myapps.welcomeMsg": "مرحبًا، {0}. فيما يلي التطبيقات الخاصة بك!",
        "myapps.bookmarks.empty.message": "قم بإضافة إشارة مرجعية للتطبيقات المستخدمة بشكل متكرر للوصول إليها بسرعة.",
        "myapps.bookmarks.empty.hidecatalog.message": "لا يوجد لديك تطبيقات حاليًا للاستخدام.",
        "myapps.bookmarks.empty.addbookmarks": "إضافة إشارات مرجعية",
        "myapps.bookmarks.organize.title": "تنظيم الإشارات المرجعية",
        "myapps.bookmarks.organize.addbookmarks": "إضافة إشارات مرجعية",
        "myapps.bookmarks.organize.batchremove": "إزالة",

        "myapps.mobilepagetitle.apps": "التطبيقات",
        "myapps.mobilepagetitle.details": "التفاصيل",
        "myapps.mobilepagetitle.support": "الدعم",
        "myapps.mobilepagetitle.settings": "الإعدادات",
        "myapps.mobilepagetitle.recommendedapps": "موصى به من أجلك",
        "myapps.mobilepagetitle.notification": "إشعارات",
        "myapps.mobilepagetitle.archived": "تمت الأرشفة",
        "myapps.mobilepagetitle.notification.newapps": "تطبيقات جديدة",

        "myapps.dialog.openApp": "فتح",
        "myapps.dialog.openAppWithViewClient": "فتح في Client",
        "myapps.dialog.openAppWithBrowser": "فتح في المتصفح",

        "myapps.launch.passwordvault.installExtension.description": "يمكن أن يستخدم هذا التطبيق ملحق المتصفح Password Vault. <a target='_blank' href='{0}'>قم بتثبيت الملحق</a> إذا لم تقم بذلك بالفعل.",

        "deviceStatus.networkLost": "فُقد الاتصال. جارٍ محاولة إعادة الاتصال ...",
        "deviceStatus.networkRestored": "تمت استعادة الاتصال بالشبكة",
        "api.session.expired.retry": "انتهت صلاحية جلسة العمل، جارٍ محاولة التجديد...",
        "api.entitlements.reload": "تحديث عرضك لتحديث التطبيقات في الكتالوج الخاص بك.",
        "api.security.header.invalid.relogin": "فشل التحقق من صحة رأس الأمان، جارٍ تسجيل الخروج..",
        "api.server.load.error": "نحن نواجه حملاً أثقل من المعتاد. الرجاء معاودة المحاولة في وقت لاحق.",
        "api.updateApps": "جارٍ تحديث القائمة...",
        "api.error": "حدث خطأ ما. يرجى المحاولة مرة أخرى.",
        "installation.error": "التطبيقات الأصلية غير متاحة مؤقتًا",
        "service.under.maintenance.error": "Workspace ONE في وضع الصيانة مؤقتًا. يُمكنك بدء تشغيل تطبيقاتك، ومع ذلك قد لا تعمل بعض الميزات",
        "api.timeout": "انتهت مهلة الاتصال، أعد المحاولة",
        "favoriteStatus.favorite": "المفضّلة",
        "favoriteStatus.unfavorite": "إزالة من المفضلة",
        "favoriteStatus.offlineFavoriteMessage": "لا تتوفر إمكانية إضافة إشارة مرجعية لتطبيق أثناء عدم الاتصال، يرجى إعادة الاتصال والمحاولة مرة أخرى",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "لا تتوفر إزالة الإشارات المرجعية من التطبيقات أثناء عدم الاتصال، يرجى إعادة الاتصال والمحاولة مرة أخرى",
        "error.failToFavoriteApp": "فشل تحديث حالة الإشارة المرجعية",
        "error.failedToResetApp": "فشلت إعادة تعيين التطبيق",
        "error.failToHideApp": "فشلت إزالة التطبيق",
        "error.failToShowApp": "فشلت إضافة التطبيق إلى المشغِّل",
        "error.failedToBookmarkApp": "فشل إضافة إشارة مرجعية لتطبيق",
        "error.failedToLaunchApp": "فشل فتح التطبيق",
        "error.failedToRemoveAccount": "فشل إزالة الحساب، يُرجى المحاولة مرة أخرى لاحقًا",
        "installStatus.enrollDevice": "يتطلب استخدم {0} تنشيط Workspace Services لحماية بيانات الشركة",
        "installStatus.enrollDevice.learnMore": "معرفة المزيد",
        "installStatus.offlineInstallMessage": "طلبات التثبيت غير متاحة أثناء عدم الاتصال، يرجى إعادة الاتصال والمحاولة مرة أخرى",
        "installStatus.activated": "تم التنشيط",
        "installStatus.notActivated": "لم يتم التنشيط",
        "installStatus.request": "طلب",
        "installStatus.update": "تحديث",
        "installStatus.processing": "تتم المعالجة",
        "installStatus.installFailedMessage": "حدث خطأ ما أثناء تثبيت التطبيق {0}. يرجى المحاولة مرة أخرى. إذا استمرت هذه المشكلة، فاتصل بمسؤول تكنولوجيا المعلومات الخاص بك",
        "installStatus.unenrolledDevice": "لم يعد هذا التطبيق متاحًا لك. اضغط على موافق لتحديث القائمة.",
        "installMessage.continueInstall": "كنت تحاول من قبل تثبيت هذا التطبيق. ",
        "installMessage.proceedToInstall": "انقر فوق متابعة.",
        "installMessage.installingOnDevice": "جارٍ التثبيت على الجهاز...",

        "app.mobileApp.versionAndMBSize": "{0}ميجابايت | الإصدار{1}",
        "app.mobileApp.versionAndGBSize": "{0}جيجابايت | الإصدار{1}",
        "app.adaptivemanagement.ws1servicestitle": "تمكين Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "هذا مطلوب قبل إمكانية تثبيت التطبيق. ستتلقى تلقائيًا:",
        "app.adaptivemanagement.valueproposition1": "التثبيت المباشر لكل موارد الشركة.",
        "app.adaptivemanagement.valueproposition2": "الوصول المؤمّن إلى شبكة الشركة.",
        "app.adaptivemanagement.valueproposition3": "التطبيقات والمحتويات التي تمت مزامنتها على كل أجهزتك.",
        "app.adaptivemanagement.valueproposition4": "تجربة تطبيقات محسّنة ستجعلك أكثر إنتاجية.",
        "app.adaptivemanagement.privacylink": "خصوصيتك",

        "app.tunnel.continue": "متابعة",
        "app.tunnel.text.line1": "يلزم الحصول على تطبيق VMware Tunnel للتمكن من الوصول",
        "app.tunnel.text.line2": "سيتم تنزيل تطبيق Tunnel تلقائيًا جنبًا إلى جنب مع التطبيق الخاص بك.",
        "app.tunnel.header": "يلزم توفر VMware Tunnel",
        "app.tunnel.message": "لاستخدام هذا التطبيق، يجب تثبيت VMware Tunnel وتشغيله.",
        "recommendedApps.tunnel.text.line1": "يلزم الحصول على تطبيق VMware Tunnel للتمكن من الوصول",
        "recommendedApps.tunnel.text.line2": "سيتم تنزيل تطبيق Tunnel تلقائيًا جنبًا إلى جنب مع التطبيق الخاص بك.",
        "app.tunnel.installHelpText": "إذا لم يبدأ تثبيت التطبيقات تلقائيًا، فيُرجى اتباع هذه الخطوات لتمكين التطبيق",
        "app.tunnel.installStep1": "الخطوة 1: تثبيت تطبيق {0}",
        "app.tunnel.installStep2": "الخطوة 2: تثبيت تطبيق {0}",

        "requestFailed": "فشل الطلب",
        "changeOccurred": "حدث تغيير",
        "requestSuccessful": "نجاح الطلب",
        "accept": "قبول",
        "decline": "رفض",
        "termsOfUse": "شروط الاستخدام",
        "beforeInstallation": "قبل التثبيت",
        "resetDesktopStatus.offlineMessage": "إعادة تعيين سطح المكتب غير متوفر أثناء عدم الاتصال، يرجى إعادة الاتصال والمحاولة مرة أخرى",
        "resetDesktop.sucess": "نجاح إعادة تعيين سطح المكتب",
        "appCenter.someAppsMissingMessage": "تعذر تحميل كل التطبيقات في الوقت الحالي",
        "appCenter.register.device": "تحتاج بعض المعلومات المتعلقة بجهازك للتحديث. اضغط على تحديث للمتابعة مع Workspace ONE.",
        "appCenter.mdm.device.error": "لم يعد بإمكانك الوصول إلى Workspace ONE.",
        "appCenter.mdm.device.error.contact": "اتصل بالمسؤول للحصول على تفاصيل حسابك.",
        "appCenter.mdm.device.poll.error": "يتعذر علينا إكمال إنشاء مساحة العمل الخاصة بك في الوقت الحالي. حاول مرة أخرى أو اتصل بالمسؤول لديك.",
        "appCenter.device.status.notRegistered": "الجهاز غير مسجل",
        "appCenter.device.status.blackListed": "هذا الجهاز موضوع في قائمة الحظر",
        "appCenter.device.status.deviceInputError": "هذا الجهاز غير صالح! يرجى الاتصال بمسؤول تكنولوجيا المعلومات لديك",
        "appCenter.device.status.unknownError": "حدث خطأ غير معروف",

        "appCenter.device.register": "تسجيل الجهاز",
        "appCenter.device.moreDetails": "المزيد من التفاصيل",
        "appCenter.device.unEnrollWarningTitle": "هل ترغب في إزالة حسابك؟",
        "appCenter.device.mdmUnEnrollMessage": "ستؤدي إزالة حسابك إلى تعطيل الوصول إلى موارد الشركة وقد تؤدي إلى إزالة تطبيقات العمل الموجودة على هذا الجهاز.",
        "appCenter.device.getDeviceEnrollmentStatus": "الحصول على معلومات إضافية",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "هل أنت متأكد من أنك تريد المتابعة؟",
        "appCenter.device.remove": "إزالة",
        "appCenter.device.keep": "الاحتفاظ",
        "appCenter.device.disableWorkspaceMessage": "ستؤدي إزالة حسابك إلى إلغاء الوصول الممنوح لك عبر تطبيق Workspace ONE. ستظل التطبيقات التي قمت بتنزيلها على منصتك مُثبتة، لكن قد يتم قطع الوصول إليها. هل ترغب في المتابعة؟",
        "appCenter.noAppsMsg": "لا تتوفر تطبيقات حاليًا",
        "appCenter.vppInviteTitle": "تسجيل التوزيع المدار",
        "appCenter.appInstallConfirmPromptTitle": "تأكيد التثبيت",
        "appCenter.mdmAppRequestConfirmPromptTitle": "الموافقة مطلوبة",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "لطلبك الذي تم رفضه سابقًا",
        "appCenter.mdmAppRequestConfirmPromptMessage": "يجب أن تتم الموافقة على التطبيق الذي تحاول الوصول إليه من قِبل المسؤول",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "لقد طلبت هذا التطبيق وتم رفض طلبك، هل تريد بالتأكيد إعادة طلبه مرة أخرى",
        "appCenter.acceptInvite": "قبول الدعوة",
        "appCenter.install": "تثبيت",
        "appCenter.proceed": "تمكين Workspace Services",
        "appCenter.cancel": "إلغاء",
        "appCenter.confirm": "تأكيد",
        "appCenter.searchApps": "البحث عن التطبيقات.",
        "appCenter.welcomeMsg": "يمكنك تثبيت التطبيقات الجديدة في أي مكان وعلى أي جهاز!",
        "appCenter.done": "تم",
        "appCenter.nav.privacyPage": "صفحة الخصوصية",
        "appCenter.nav.catalog": "الكتالوج",
        "appCenter.nav.myApps": "تطبيقاتي",
        "appCenter.nav.favorites": "المفضلات",
        "appCenter.nav.categories": "الفئات",
        "appCenter.nav.filterby": "تصفية حسب",
        "appCenter.nav.show": "إظهار",
        "appCenter.nav.settings": "الإعدادات",
        "appCenter.nav.sortBy": "فرز حسب",
        "appCenter.nav.sortBy.alpha": "فرز حسب A-Z",
        "appCenter.nav.sortBy.inverseAlpha": "فرز حسب Z-A",
        "appCenter.nav.sortBy.customView": "عرض مخصص",
        "appCenter.nav.arrange": "ترتيب",
        "appCenter.nav.arrange.saved": "تم حفظ العرض المخصص!",
        "appCenter.nav.arrange.tooltip": "متاح فقط على نظام التشغيل windows.",
        "appCenter.nav.arrange.saving": "جارٍ الحفظ...",
        "appCenter.nav.arrange.error": "تعذر حفظ العرض المخصص",
        "appCenter.nav.filter": "عامل التصفية",
        "appCenter.installFailedTitle": "مشكلة في تثبيت التطبيق",
        "appCenter.uccConflict": "لقد حدث خطأ أثناء الجلسة الحالية. يُرجى إعادة تسجيل الدخول.",

        "appCenter.search.placeholder": "البحث",
        "appCenter.search.noResults": "لم يتم العثور على نتائج.",

        "appCenter.action.open": "فتح",
        "appCenter.action.install": "تثبيت",
        "appCenter.action.installing": "يتم التثبيت",
        "appCenter.action.installed": "تم التثبيت",
        "appCenter.action.reinstall": "إعادة تثبيت",
        "appCenter.action.add": "إضافة",
        "appCenter.action.added": "تمت الإضافة",
        "appCenter.action.processing": "تتم المعالجة",
        "appCenter.action.update": "تحديث",
        "appCenter.action.request": "طلب",
        "appCenter.action.pending": "قيد الانتظار",
        "appCenter.action.view": "عرض",
        "appCenter.action.favorite": "المفضّلة",
        "appCenter.action.unfavorite": "إزالة من المفضلة",

        "appCenter.internalApp.installtionModalTitle": "خطوات تثبيت التطبيق",
        "appCenter.internalApp.installationStepTitle": "لفتح هذا التطبيق، اتبع هذه الخطوات بعد التثبيت",
        "appCenter.internalApp.step1": "تشغيل الإعدادات من شاشة iOS الرئيسية لديك",
        "appCenter.internalApp.step2": "انقر فوق \"عام \"",
        "appCenter.internalApp.step3": "انقر فوق ملفات التعريف وإدارة الأجهزة",
        "appCenter.internalApp.step4": "انقر فوق اسم مطوّر التطبيق الموجود أسفل تطبيق Enterprise",
        "appCenter.internalApp.step5": "التحقق من التطبيق أو الثقة به",
        "appCenter.internalApp.watchTutorial": "شاهد البرنامج التعليمي خطوة بخطوة",

        "appCenter.type.web": "موقع الويب",
        "appCenter.type.native": "تطبيق أصلي",
        "appCenter.type.native.platform": "تطبيق {0}",
        "appCenter.type.virtual": "تطبيق افتراضي",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "حزمة التطبيق",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "الفئات",
        "myapp.nav.favorites": "المفضلات",
        "myapp.nav.allApps": "كل التطبيقات",
        "myapp.nav.recommendedApps": "مستحسن",
        "myapp.nav.newlyEntitledApps": "الجديد",
        "myapp.nav.webApps": "مواقع الويب",
        "myapp.nav.mobileApps": "تطبيقات المحمول",
        "myapp.nav.macApps": "تطبيقات Mac",
        "myapp.nav.windowsApps": "تطبيقات Windows",
        "myapp.nav.virtualApps": "افتراضي",
        "myapp.label.new": "الجديد",
        "myapp.nav.filterby": "تصفية حسب",
        "myapp.nav.mobile.filter.pagetitle": "تصفية حسب الفئات",
        "appCenter.nav.browseBy": "تصفح بواسطة",

        "appCenter.catalog.empty": "يبدو أنك لم تقم بتعيين أي تطبيقات حتى الآن. يجب أن يحدث ذلك عما قريب، لذلك تحقق مرة أخرى قريبًا.",

        "userInfo.adminConsole": "وحدة تحكم الإدارة",
        "userInfo.settings": "الإعدادات",
        "userInfo.notifications": "إشعارات",
        "userInfo.support": "الدعم",
        "userInfo.preferences": "التفضيلات",
        "userInfo.about": "حول",
        "userInfo.devices": "الأجهزة",
        "userInfo.settings.promo.title": "تنزيل تطبيق Workspace ONE",
        "userInfo.settings.promo.message": "يمنحك Workspace ONE تجربة أفضل. هل ترغب في تجربته الآن.",

        "userInfo.tips": "تلميحات التطبيق",
        "userInfo.tips.description": "احصل على مساعدة حول كيفية استخدام التطبيق.",

        "userInfo.tips.bookmarks": "كيف تستخدم الإشارات المرجعية؟",
        "userInfo.tips.catalog": "كيف تستخدم الكتالوج؟",
        "userInfo.tips.people": "جديد: كيف تستخدم الأشخاص؟",
        "userInfo.tips.notification": "جديد: كيف تستخدم الإشعارات؟",

        "userInfo.tips.catalog.desktop1": "انقر فوق \"فتح\" لبدء تشغيل موقع في المتصفح؛ استخدم {0} لإضافة إشارة مرجعية إليه.",
        "userInfo.tips.catalog.desktop2": "انقر فوق رمز التطبيق أو اسمه للاطلاع على المزيد من التفاصيل.",
        "userInfo.tips.catalog.mobile1": "استخدم {0} لفتح موقع ويب بالمتصفح؛ واستخدم {1} لإضافة إشارة مرجعية إليه.",
        "userInfo.tips.catalog.mobile2": "استخدم {0} لتثبيت تطبيق أصلي على جهازك. يعني {1} حاجتك لتسجيل جهازك لاستخدام هذه التطبيقات.",
        "userInfo.tips.catalog.mobile3": "انقر فوق رمز التطبيق أو اسمه لمعرفة مزيد من التفاصيل.",

        "userInfo.tips.bookmarks.desktop1": "انقر فوق العنوان لبدء تشغيل موقع الويب في المتصفح لديك.",
        "userInfo.tips.bookmarks.desktop2": "قم بالمرور فوق الإطار لمشاهدة المزيد من الإجراءات من قائمة '...'.",

        "userInfo.tips.bookmarks.mobile": "انقر فوق اللوحة لبدء تشغيل موقع ويب في المتصفح لديك. اضغط مع الاستمرار للحصول على مزيد من الإجراءات.",

        "userInfo.tips.catalog.download.phone": "انقر فوق رمز {0} لتثبيت تطبيق أصلي على جهازك. يعني رمز {1} أنك تحتاج إلى تسجيل جهازك لاستخدام هذه التطبيقات.",
        "userInfo.tips.catalog.bookmark.launch.phone": "انقر فوق رمز {0} لفتح موقع ويب في المتصفح. انقر فوق رمز {1} لإضافته كإشارة مرجعية. انقر فوق رمز التطبيق أو اسمه للحصول على مزيد من التفاصيل",

        "userInfo.tips.catalog.download.tablet": "قم بتنزيل التطبيقات بالنقر فوق زر التنزيل، للحصول على مزيد من التفاصيل انقر فقط على التطبيق",
        "userInfo.tips.catalog.bookmark.launch.tablet": "يمكنك بدء تشغيل التطبيقات بالنقر فوق زر بدء التشغيل، أضف إشارة مرجعية إلى التطبيقات بالنقر فوق زر الإشارات المرجعية",

        "userInfo.tips.people.mobile": "انقر فوق {0} للانتقال من أي ملف تعريف والعودة إلى الصفحة الرئيسية المنتقل إليها الخاصة بالبحث عن الأشخاص.",
        "userInfo.tips.notification.mobile": "انقر فوق {0} للوصول إلى إشعاراتك. سوف تبقى شارة الإشعارات نشطة حتى إذا قمت باستبعاد كل الإشعارات أو قمت بتنفيذها.",

        "userInfo.tips.title": "تلميحات التطبيق",
        "userInfo.tips.intro": "احصل على مساعدة حول كيفية استخدام التطبيق.",
        "userInfo.tips.desktop": "أجهزة الكمبيوتر المكتبية",
        "userInfo.tips.reordering.title": "تخصيص الإشارات المرجعية الخاصة بك!",
        "userInfo.tips.reordering.text1": "1. انتقل إلى قائمة \"عرض مخصص\" باستخدام القائمة المنسدلة في الجهة اليمنى العلوية.",
        "userInfo.tips.reordering.text2": "2. اختر \"ترتيب\". ",
        "userInfo.tips.reordering.text3": "3. اسحب وأفلت لإعادة ترتيب إشاراتك المرجعية. بمجرد أن تنتهي، انقر فوق \"حفظ\".",
        "userInfo.tips.mobile": "أجهزة المحمول",

        "userInfo.removeAccount": "إزالة الحساب",
        "userInfo.account": "الحساب",
        "userInfo.profile": "ملف التعريف",
        "userInfo.profile.name": "الاسم:",
        "userInfo.profile.email": "البريد الإلكتروني:",
        "userInfo.profile.username": "اسم المستخدم:",
        "userInfo.profile.picture": "صورة ملف التعريف",
        "userInfo.profile.password": "كلمة المرور",
        "userInfo.profile.passwordchange": "تغيير",
        "userInfo.profile.passwordprompt": "قم بإدارة كلمة المرور الخاصة بك لنظام الشركة.",
        "userInfo.password": "كلمة المرور",
        "userInfo.termsofuse": "شروط الاستخدام",
        "userInfo.signout": "تسجيل الخروج",
        "userInfo.tryAgain": "إعادة المحاولة",
        "userInfo.managedevicesettings": "إدارة إعدادات الجهاز",
        "userInfo.notification": "إرسال الإعلامات",
        "userInfo.passcode": "رمز المرور أو معرف اللمس",

        "appCenter.support.selfservice": "الخدمة الذاتية",
        "appCenter.support.managedevices": "الأجهزة",
        "appCenter.support.managedevicestext": "عرض معلومات جهازك.",
        "appCenter.support.managepassword": "تغيير كلمة المرور",
        "appCenter.support.managepasswordtext": "تغيير كلمة المرور الخاصة بحساب شركتك",
        "appCenter.support.gethelp": "الحصول على مساعدة",
        "appCenter.support.appstips": "التطبيقات والتلميحات",
        "appCenter.support.appstipstext": "اطّلع على تلميحات أدوات المساعدة في هذا التطبيق",
        "appCenter.support.sendReportTitle": "إرسال تقرير",
        "appCenter.support.sendReportDetails": "معرفة كيفية إرسال تشخيصات التطبيقات.",
        "appCenter.support.helpdesk": "مكتب المساعدة",
        "appCenter.support.contacthelpdesk": "الاتصال بمكتب المساعدة",
        "appCenter.reportProblems.ios.sendLogInstruction": "عند حدوث خطأ، قم بهز جهازك لإرسال تشخيصات التطبيقات أو تقديم ملاحظاتك بسهولة.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "يمكنك تشغيل هذه الميزة/إيقاف تشغيلها في إعدادات الجهاز.",

        // App Details Page
        "app.details.link.back": "العودة",
        "app.details.nav.details": "التفاصيل",
        "app.details.nav.reviews": "المراجعات",
        "app.details.label.description": "الوصف",
        "app.details.label.noDescription": "لا يتوفر وصف",
        "app.details.label.seeFullDetails": "عرض التفاصيل",
        "app.details.label.removeBookmark": "إزالة",
        "app.details.label.resetDektop": "إعادة تعيين",
        "app.details.label.information": "معلومات",
        "app.details.label.category": "الفئات",
        "app.details.label.version": "الإصدار",
        "app.details.label.type": "النوع",
        "app.details.label.type.SAML11": "تطبيق ويب",
        "app.details.label.type.SAML20": "تطبيق ويب",
        "app.details.label.type.WEBAPPLINK": "تطبيق ويب",
        "app.details.label.type.MDMWEB": "تطبيق ويب",
        "app.details.label.type.WSFED12": "تطبيق ويب",
        "app.details.label.type.XENAPP": "تطبيق Xen",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix لسطح المكتب",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "ملف التعريف",
        "app.details.label.type.VIEWPOOL": "Horizon لسطح المكتب",
        "app.details.label.type.VIEWAPP": "تطبيق Horizon",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud لسطح المكتب",
        "app.details.label.type.DESKTONEAPPLICATION": "تطبيق Horizon Cloud",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "تطبيق ويب",
        "app.details.label.type.PUBLIC": "تطبيق عام",
        "app.details.label.type.INTERNAL": "داخلي",
        "app.details.label.size": "الحجم",
        "app.details.label.price": "السعر",
        "app.details.label.screenshots": "لقطات الشاشة",
        "app.details.label.showMore": "إظهار أكثر",
        "app.details.label.showLess": "إظهار أقل",
        "app.details.label.setAppPassword": "تعيين كلمة المرور",
        "app.details.label.sendFeedback": "إرسال التعليقات",
        "app.details.label.feedbackSubject": "تعليقات خاصة بالتطبيق {0}",
        "app.details.label.support": "الدعم",
        "app.details.label.developer": "المطور",
        "app.details.label.email": "البريد الإلكتروني",
        "app.details.label.phone": "الهاتف",
        "app.details.appSize": "{0} ميغابايت",
        "app.details.label.launchMessage": "يمكن تشغيل كل تطبيقات الهاتف المحمول من الشاشة الرئيسية الخاصة بك.",

        "app.details.label.requirement": "المتطلبات:",
        "app.details.label.packageName": "اسم الحزمة:",
        "app.details.thinapp.requirement": "هذا التطبيق يعمل فقط على جهاز كمبيوتر يعمل بنظام التشغيل Windows مثبت عليه Identity Manager Desktop.",
        "app.details.viewDesktop.requirement": "يتطلب تطبيق Horizon لسطح المكتب هذا تثبيت {0} Horizon Client{1} 3.0 أو أحدث على جهاز الكمبيوتر لديك.",
        "app.details.viewapp.requirement": "يتطلب هذا التطبيق المستضاف على Horizon تثبيت {0} Horizon Client{1} 3.0 أو إصدار أحدث على جهاز الكمبيوتر لديك.",
        "app.details.xenapp.requirement": "يتطلب هذا التطبيق تثبيت {0}Citrix Receiver{1}.",
        "app.details.xenapp.msg.IE8OrLower": "يتطلب هذا التطبيق تثبيت Citrix Receiver. ملاحظة: لا يمكن فتح هذا التطبيق في Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "يتطلب Citrix لسطح المكتب هذا تثبيت {0}Citrix Receiver{1}.",
        "app.details.desktoneDesktop.requirement": "يتطلب Horizon Cloud لسطح المكتب تثبيت {0} Horizon Client {1} على جهاز الكمبيوتر لديك.",
        "app.details.desktoneApp.requirement": "يتطلب تطبيق Horizon Cloud تثبيت {0} Horizon Client {1} على جهاز الكمبيوتر لديك.",
        "app.details.abbrev.megabytes": "ميغابايت",
        "app.details.abbrev.gigabytes": "جيجابايت",
        "app.details.noData": "لا تتوفر معلومات",
        "app.details.noScreenshots": "لا تتوفر لقطات شاشة",
        "app.details.noDescription": "سيتوفر الوصف قريبًا.",
        "app.details.needsDeviceEnrollment": "يتطلب تسجيل الجهاز",
        "app.details.label.addToHomeScreen": "إضافة إلى الشاشة الرئيسية",
        "app.details.action.open": "فتح",
        "app.details.action.bookmark": "الإشارة المرجعية",
        "app.details.action.bookmarked": "تمت إضافة إشارة مرجعية",
        "app.details.action.launch": "بدء التشغيل",
        "app.details.action.setPassword": "تعيين كلمة مرور",
        "app.details.action.pvAppCredentials": "بيانات الاعتماد",
        "app.details.info.msg.missingInfo": "بعض المعلومات مفقودة. حاول مرة أخرى لاحقًا لمشاهدة التفاصيل بالكامل.",
        "app.details.wsrequired.msg": "Workspace Services مطلوبة.",
        "app.details.label.addedFavorites": "تمت الإضافة إلى المفضلات",

        "app.rating.label": "تصنيف المستخدم",

        "app.settings.label.settings": "الإعدادات",
        "app.settings.link.back": "العودة",
        "app.settings.managedDevices": "الأجهزة المدارة",
        "app.nav.tab.bookmark": "الإشارات المرجعية",
        "app.nav.tab.catalog": "الكتالوج",
        "app.nav.tab.people": "الأشخاص",
        "app.nav.tab.support": "الدعم",
        "app.nav.tab.apps": "التطبيقات",
        "app.nav.tab.settings": "الإعدادات",
        "app.about.heading": "حول Workspace ONE",
        "app.about.copyright": "حقوق النشر © لعام 2013-2019 لشركة VMware, Inc. جميع الحقوق محفوظة. هذا المنتج محمي بموجب قوانين الملكية الفكرية وحقوق الطبع والنشر في الولايات المتحدة وغيرها من البلدان وكذلك بموجب المعاهدات الدولية. تحمل منتجات VMware براءة اختراع واحدة أو أكثر.",
        "app.about.button.label.privacyPolicy": "سياسة الخصوصية",
        "app.about.button.label.patents": "براءة الاختراع",
        "app.about.button.label.licenseAgreement": "اتفاقية الترخيص",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents",
        "app.about.licenseAgreementLink": "http://www.vmware.com/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "الأجهزة",
        "app.devices.tableColumn.deviceName": "اسم الجهاز",
        "app.devices.tableColumn.userDeviceId": "معرف الجهاز",
        "app.devices.tableColumn.lastLoginTime": "وقت آخر تسجيل دخول",
        "app.devices.unlinkDevice": "إلغاء الارتباط",
        "app.devices.unlinkedDevice": "تم إلغاء الارتباط",
        "app.devices.emptyDeviceListMessage": "ليس لديك جهاز مرتبط بحسابك.",

        "app.thinappMultiDeviceAct.heading": "سيضاف هذا التطبيق إلى الأجهزة المعتمدة. لاستخدام \"{0}\" على الأجهزة الإضافية، ابحث أدناه عن اسم الجهاز ثم انقر فوق الزر Request (طلب).",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "اسم الجهاز",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "الحالة",
        "app.thinappMultiDeviceAct.button.request": "طلب",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "مرفوض",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "قيد الانتظار",
        "app.thinappMultiDeviceAct.activationState.activated": "مقبول",
        "app.thinappMultiDeviceAct.activationState.notActivated": "لم يتم التنشيط",

        "app.thinappsInPackage.button.done": "تم",
        "app.thinappsInPackage.button.bookmarkAll": "إضافة إشارة مرجعية للكل",
        "app.thinappsInPackage.info": "حزمة التطبيق",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} من التطبيقات",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "تم العثور على {0} من الحالات المطابقة.",
        "app.thinappsInPackage.action.instruction": "اختر رمز الإشارة المرجعية لإضافة إشارة مرجعية لتطبيق أو اختر زرًا لإضافة إشارة مرجعية لكل التطبيقات.",
        "app.thinappsInPackage.search.placeholder": "البحث في الحزمة",

        "app.setAppPassword.heading": "تعيين كلمة مرور",
        "app.setAppPassword.instruction": "استخدم النموذج أدناه لتعيين كلمة مرور لهذا التطبيق. يجب أن تتكون كلمة المرور من ثلاثة أحرف على الأقل في الطول.",
        "app.setAppPassword.label.password": "كلمة المرور",
        "app.setAppPassword.label.confirmPassword": "تأكيد كلمة المرور",
        "app.setAppPassword.label.generate": "إنشاء كلمة المرور",
        "app.setAppPassword.error.passwordsNoMatch": "كلمات المرور غير متطابقة.",
        "app.setAppPassword.msg.success": "تم تعيين كلمة مرور التطبيق الخاص بك بنجاح.",
        "app.setAppPassword.msg.fail": "حدث خطأ ما أثناء محاولة إعادة تعيين كلمة المرور الخاصة بك. يرجى المحاولة مرة أخرى.",

        "pvapp.setAppPassword.heading": "تعيين بيانات الاعتماد المحفوظة لـ {0}",
        "pvapp.setAppPassword.instruction": "استخدم النموذج أدناه لتعيين بيانات الاعتماد المحفوظة لهذا التطبيق.",
        "pvapp.setAppPassword.label.username": "اسم المستخدم",
        "pvapp.setAppPassword.label.password": "كلمة المرور",
        "pvapp.setAppPassword.error.userNameEmpty": "اسم المستخدم فارغ.",
        "pvapp.setAppPassword.error.passwordEmpty": "كلمة المرور فارغة.",
        "pvapp.setAppPassword.msg.success": "تم تعيين بيانات اعتماد التطبيق الخاص بك بنجاح.",
        "pvapp.setAppPassword.msg.fail": "حدث خطأ ما أثناء محاولة تعيين بيانات اعتماد التطبيق الخاص بك. يرجى المحاولة مرة أخرى.",

        "app.launchPassword.heading": "طلب كلمة المرور",
        "app.launchPassword.view.instruction": "نحتاج إلى كلمة المرور الخاصة بك لتسجيل الدخول إلى مورد نظام التشغيل windows ‏هذا {0}.",
        "app.launchPassword.label.userName": "المستخدم",
        "app.launchPassword.label.password": "كلمة المرور",
        "app.launchPassword.button.label.signin": "تسجيل الدخول",

        "app.changePassword.title": "تغيير كلمة المرور",
        "app.changePassword.enterCurrentPassword": "إدخال كلمة المرور الحالية",
        "app.changePassword.enterNewPassword": "إدخال كلمة المرور الجديدة",
        "app.changePassword.confirmNewPassword": "تأكيد كلمة المرور الجديدة",
        "app.changePassword.error.passwordsNoMatch": "كلمات المرور الجديدة غير متطابقة.",
        "app.changePassword.error.requirementsNoMatch": "لا تفي كلمة المرور الجديدة بالمتطلبات.",
        "app.changePassword.success": "تم حفظ كلمة المرور الجديدة!",
        "app.changePassword.label.email": "البريد الإلكتروني",
        "app.changePassword.label.phone": "الهاتف",

        "app.passwordPolicy.passwordRequirements": "متطلبات كلمة المرور",
        "app.passwordPolicy.label.currentpassword": "كلمة المرور الحالية",
        "app.passwordPolicy.label.newpassword": "كلمة المرور الجديدة",
        "app.passwordPolicy.label.confirmpassword": "تأكيد كلمة المرور الجديدة",
        "app.passwordPolicy.minLength": "{0} من الأرقام كحد أدنى",
        "app.passwordPolicy.leastIncludes": "تتضمن على الأقل:",
        "app.passwordPolicy.minLower": "{0} حرف",
        "app.passwordPolicy.minUpper": "{0} حرف كبير",
        "app.passwordPolicy.minDigit": "{0} رقم",
        "app.passwordPolicy.minSpecial": "{0} رمز خاص",

        "app.coachmarks.bookmarkTitle": "كيفية استخدام الإشارات المرجعية",
        "app.coachmarks.bookmarkMessage": "اضغط لبدء تشغيل مواقع الويب، اضغط مع الاستمرار لاكتشاف المزيد.",
        "app.coachmarks.catalogTitle": "كيفية استخدام الكتالوج",
        "app.coachmarks.catalogMessage": "قم بتثبيت التطبيقات أو تحديثها أو أضفها إلى الإشارات المرجعية أو افتحها مباشرة من هنا.",
        "app.coachmarks.buttonText": "لقد فعلتها!",

        "app.logout.confirm.msg": "سوف ينهي تسجيل الخروج من تطبيق Workspace ONE جلسة العمل الحالية الخاصة بك. ستظل أي تطبيقات تم تنزيلها من الكتالوج على الجهاز، ولكن لن تكون هناك تطبيقات جديدة متاحة حتى تقوم بتسجيل الدخول مرة أخرى.",
        "app.logout.title": "تحذير",

        "app.passwordVault.banner.msg": "لديك تطبيقات يمكنها أن تستخدم ملحق Workspace One.",
        "app.passwordVault.banner.button.install": "تثبيت",
        "app.passwordVault.banner.setPreference": "يمكنك الحصول عليه لاحقًا في الإعدادات - التفضيلات.",
        "app.passwordVault.banner.donotshowagain": "عدم عرض هذا مجددًا",
        "app.passwordVault.banner.button.later": "لاحقًا",
        "app.passwordVault.banner.button.get": "الحصول على",
        "app.passwordVault.preference.title": "ملحق Workspace ONE",
        "app.passwordVault.preference.instruction": "لديك تطبيقات يمكنها أن تستخدم ملحق Workspace One.",
        "app.passwordVault.preference.getextension": "الحصول على الملحق.",
        "app.bookmarking.change.tab.title": "هل لا تزال ترتب الإشارات المرجعية لديك؟",
        "app.bookmarking.change.tab.body": "التغييرات التي أجريتها لن يتم حفظها. هل تريد الاستمرار في ترتيب الإشارات المرجعية لديك؟",
        "app.bookmarking.touch.disabled": "يمكنك إعادة ترتيب التطبيقات عند استخدام لوحة التتبع أو الماوس.",
        "app.bookmarking.change.tab.exit": "لا، خروج",
        "app.bookmarking.change.tab.stay": "نعم، ابق هنا",
        "app.virtual.disabled": "تم التعطيل من قِبل المسؤول",
        "app.virtual.unavailable": "هذا التطبيق غير متوفر على هذا الجهاز",
        "app.virtual.not.available": "غير متوفر",

        "app.notification.type.NEW_ENTITLEMENTS": "تحقق منها",
        "app.notification.type.PASSWORD_EXPIRING": "تحديث كلمة المرور",
        "app.notification.action.delete": "حذف",
        "notification.new.entitlements.heading": "استحقاقات جديدة",
        "notification.new.entitlements.message": "لديك {0} من الاستحقاقات جديدة تم تعيينها",
        "app.notification.delete.header": "هل تريد حذف هذا الإشعار؟",
        "app.notification.delete.msg": "هل تريد بالتأكيد حذف هذا الإشعار؟ يمكنك اختيار أرشفة، إذا كنت تريد أرشفته لاحقًا. ",
        "app.notification.delete.text": "حذف",
        "app.notification.keep.text": "الاحتفاظ",
        "app.notification.restore.text": "استعادة",
        "app.notification.delete.toast.msg": "تم حذف هذا الإشعار.",
        "app.notification.empty": "تم اللحاق بكم جميعًا!",
        "app.notification.more.actions": "مزيد من الإجراءات",
        "app.notification.archive.all": "أرشفة الكل",

        "app.notification.bookmark.all.error": "عذرًا، لم نكن قادرين على وضع علامات مرجعية لكل تطبيقاتك الجديدة",
        "app.notification.bookmark.all.success": "تمت إضافة كل التطبيقات الجديدة إلى المفضلات",
        "app.notification.delete.all": "حذف الكل",
        "app.notification.see.archived": "عرض ما تمت أرشفته",
        "app.notification.see.all": "عرض كل الإشعارات",
        "app.notification.newApps.title": "لقد حصلت على تطبيقات جديدة!",
        "app.notification.newApps.excessIconsMessage": "+ {0} المزيد",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "عرض التفاصيل",
        "app.tooltip.clicktolaunch": "انقر لبدء التشغيل",

        "recommendedApps.install.proceed": "متابعة",
        "recommendedApps.install.title": "ثبيت التطبيقات الموصى بها",
        "recommendedApps.install.confirm.msg": "ستحصل على مطالبات لمتابعة تثبيت التطبيقات الخاصة بك.",
        "recommendedApps.text1": "تستخدم هذه التطبيقات بصورة شائعة من قِبل زملائك.",
        "recommendedApps.text2": "يمكنك تثبيتها الآن أو العثور عليها لاحقًا في الكتالوج الخاص بك.",
        "recommendedApps.selectAll": "تحديد الكل",
        "recommendedApps.apps": "التطبيقات",
        "recommendedApps.install": "تثبيت",
        "recommendedApps.skip": "تخطي",

        "app.desktopapp.settings.title.account": "الحساب",
        "app.desktopapp.settings.title.devices": "الأجهزة",
        "app.desktopapp.settings.title.preferences": "التفضيلات",

        "appCenter.peopleSearch.placeholder": "البحث عن الأشخاص",
        "app.tooltip.copyEmail": "نسخ البريد الإلكتروني",
        "app.peopleSearch.emailCopied": "تم نسخ البريد الإلكتروني",
        "appCenter.peopleSearch.noResults": "لم يتم العثور على نتائج",
        "appCenter.peopleSearch.tryNewSearch": "جرب بحثًا جديدًا.",
        "appCenter.peopleSearch.atLeastThreeChars": "أدخل 3 حروف أو أكثر أعلاه لإجراء البحث.",
        "appCenter.searchPeople": "ابحث عن الأشخاص.",
        "myapps.mobilepagetitle.people": "الأشخاص",
        "app.people.labels.team": "فريقي",
        "app.people.labels.recent": "الأخيرة",
        "app.people.labels.manager": "المدير",
        "app.people.labels.peers": "النظراء",
        "app.people.labels.directReports": "التقارير المباشرة",
        "app.people.labels.profile": "ملف التعريف",
        "app.people.labels.org": "المؤسسة",
        "app.people.labels.workEmail": "البريد الإلكتروني الخاص بالعمل",
        "app.people.labels.workPhone": "الهاتف الخاص بالعمل",
        "app.people.labels.alternateNumber": "هاتف بديل",
        "app.people.labels.mobile": "المحمول",
        "app.people.labels.address": "العنوان",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "المديرون",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "رقم الموظف",
        "app.people.labels.skills": "المهارات",
        "app.people.labels.businessUnit": "وحدة العمل",
        "app.people.labels.costCenter": "مركز التكلفة",
        "app.people.labels.physicalDeliveryOfficeName": "موقع المكتب",

        "hub.apps": "التطبيقات",
        "hub.notifications": "إشعارات",
        "hub.notifications.welcome": "مرحبًا!",
        "hub.notifications.first.time.message": "تظهر الإشعارات هنا فور بدء استخدام Hub.",
        "hub.notifications.new.apps.favorite.all": "تحديد الكل كمفضلة",
        "hub.notifications.congratulations": "تهانينا!",
        "hub.notifications.empty.description1": "لا توجد إشعارات جديدة.",
        "hub.notifications.empty.description2": "استمتع بالمساحة الإضافية.",
        "hub.v2.notifications.empty.description": "لقد اطلعت على كل الإشعارات الخاصة بك",
        "hub.v2.notifications.first.time.description": "تظهر الإشعارات هنا فور بدء استخدام Hub.",
        "hub.notifications.empty.description.archived": "لا توجد إشعارات مؤرشفة.",
        "hub.notifications.priority": "الأولوية",
        "hub.notifications.today": "اليوم",
        "hub.notifications.yesterday": "الأمس",
        "hub.notifications.lastWeek": "الأسبوع الماضي",
        "hub.notifications.lastMonth": "الشهر الماضي",
        "hub.notifications.older": "الأقدم",
        "hub.notifications.archived.label": "تمت الأرشفة",
        "hub.notifications.action.success": "نجاح!",
        "hub.notifications.action.failure": "عذرًا، يبدو أن هناك خطأً في تنفيذ هذا الإجراء",
        "hub.notifications.moreDetails": "المزيد من التفاصيل",
        "hub.notifications.dialog.action.completed": "اكتمل",
        "hub.notifications.dialog.action.needed": "قيد الانتظار",
        "hub.notifications.dialog.action.all.notifications": "كل الإشعارات",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "البحث عن التطبيقات",
        "hub.apps.favorites": "المفضلات",
        "hub.apps.newApps": "الجديد",
        "hub.apps.recommended": "مستحسن",
        "hub.apps.categories": "الفئات",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "رائع، توجد مساحة كبيرة هنا.",
        "hub.apps.no.apps.msg2": "اتصل بالمسؤول للحصول على تطبيقات العمل.",
        "hub.apps.search.in.category": "{0} النتائج في الفئة:",
        "hub.apps.search.in.app": "{0} النتائج في \"اسم التطبيق\" و\"الوصف\"",
        "hub.apps.search.header": "النتائج الإجمالية",
        "hub.apps.search.no.result.header": "لا توجد نتائج.",
        "hub.apps.search.no.result.msg": "حاول مرة أخرى باستخدام مصطلح مختلف.",
        "hub.apps.searchpeople.no.result.msg": "حاول مرة أخرى باستخدام اسم مختلف.",
        "hub.apps.type.web": "الويب",
        "hub.apps.type.Virtual": "الويب",
        "hub.apps.type.application": "التطبيق",
        "hub.apps.type.anyApp": "أي تطبيق",
        "hub.people": "الأشخاص",
        "hub.people.search.text": "البحث عن الأشخاص",
        "hub.people.labels.mypeers": "نظرائي",
        "hub.people.labels.directreports": "التقارير المباشرة",
        "hub.people.labels.manager": "المدير الخاص بي",
        "hub.people.labels.organization": "المؤسسة",
        "hub.people.search.result": "النتائج",
        "hub.app.install.prompt.title": "هل ترغب في التثبيت",

        "hub.actionsheet.label.viewDetails": "عرض التفاصيل",
        "hub.actionsheet.label.removeFavorites": "إزالة من المفضلات",
        "hub.actionsheet.label.addFavorites": "إضافة إلى المفضلات",
        "hub.password.done": "تم",

        "hub.placeholder.changepassword.username": "اسم المستخدم",
        "hub.placeholder.changepassword.password": "كلمة المرور",
        "hub.placeholder.changepassword.confirmpassword": "تأكيد كلمة المرور",

        "hub.tunnel.text.line1": "يلزم الحصول على تطبيق Tunnel للتمكن من الوصول ",
        "hub.tunnel.text.line2": "سيتم تنزيل تطبيق Tunnel تلقائيًا إلى جانب التطبيق الخاص بك.",

        "hub.promotions.banner.category.title": "الأخبار المهمة في الفئة",
        "hub.promotions.banner.category.open": "فتح",
        "hub.promotions.banner.app.get": "الحصول على",
        "hub.promotions.banner.disabled": "تم التعطيل من قِبل المسؤول",
        "hub.require.app.management": "إدارة",
        "hub.app.installing.alert.mobile.message": "جارٍ تثبيت التطبيق {0}، لذا يُرجى التحقق من التحديثات على شاشة هاتفك الرئيسية.",
        "hub.app.installing.alert.desktop.message": "جارٍ تثبيت التطبيق {0}، لذا يُرجى التحقق من التحديثات على السطح المكتب الخاص بمشغّل التطبيق.",

        "hub.nav.label.apps": "التطبيقات",
        "hub.nav.label.people": "الأشخاص",
        "hub.nav.label.notification": "إشعارات",
        "hub.nav.label.settings": "الإعدادات",
        "hub.nav.label.account": "الحساب",
        "hub.nav.label.signout": "تسجيل الخروج",
        "hub.userInfo.adminConsole": "وحدة تحكم الإدارة",
        "hub.userInfo.signout": "تسجيل الخروج",
        "hub.userInfo.settings": "الإعدادات",
        "hub.userInfo.account": "الحساب",
        "hub.userInfo.devices": "الأجهزة",
        "hub.userInfo.whatsnew": "ما هو الجديد؟",
        "hub.userInfo.about": "ما هي الأمور المتعلقة؟",
        "hub.download.ios": "Hub الخاص بنظام التشغيل iOS",
        "hub.download.android": "Hub الخاص بنظام التشغيل Android",
        "hub.download.mac": "Hub الخاص بنظام التشغيل Mac",
        "hub.download.windows": "Hub الخاص بنظام التشغيل Windows",
        "hub.download.subtitle.mobile": "احصل على إمكانية الوصول إلى الإشعارات والصفحة الرئيسية والمزيد من الأشياء في مكان واحد.",
        "hub.download.subtitle.desktop": "احصل على إشعارات سطح المكتب وبدء التشغيل من الإرساء الخاص بك.",
        "hub.preferences.title": "التفضيلات",
        "hub.preferences.horizon.subtitle": "تطبيقات Horizon التي يتم التحكم فيها عن بُعد",
        "hub.preferences.launch.question": "كيف ترغب ببدء تشغيل تطبيقات Horizon التي يتم التحكم فيها عن بُعد؟",
        "hub.about.title": "حول VMware Intelligent Hub",
        "hub.apps.allApps": "كل التطبيقات",
        "hub.apps.configure.favorites.msg": "إضافة تطبيقاتك المفضلة هنا للوصول بشكل أسرع",
        "hub.apps.configure.favorites": "تكوين",
        "hub.apps.edit.favorites": "تحرير",

        "hub.contextDialog.label.removeFavorites": "إزالة من المفضلات",
        "hub.contextDialog.label.addFavorites": "إضافة إلى المفضلات",
        "hub.contextDialog.label.viewDetails": "عرض التفاصيل",
        "hub.apps.edit.favorites.header": "وضع تحرير المفضلات",
        "hub.apps.edit.favorites.prompt": "اسحب وأفلت لإعادة الترتيب.",
        "hub.apps.edit.favorites.save": "حفظ",
        "hub.apps.edit.favorites.cancel": "إلغاء التغييرات",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "لقد قمت بتحديث الترتيب، يُرجى إلغاء العملية أو حفظها قبل الخروج",
        "hub.apps.edit.favorites.savecustomordering": "جارٍ حفظ الترتيب المخصص، يُرجى عدم الانتقال إلى مكان آخر لتجنب فقدان النتائج",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "خاصية إعادة الترتيب غير متاحة على شاشات اللمس.",
        "hub.apps.edit.favorites.notify.success": "تم حفظ إعادة ترتيب المفضلات!",
        "hub.apps.edit.favorites.notify.error": "لقد حدث خطأ، لا يُمكن حفظ إعادة الترتيب، لذا حاول لاحقًا",

        "hub.nav.label.settings.settings": "الإعدادات",
        "hub.nav.label.settings.account": "الحساب",
        "hub.nav.label.settings.about": "حول",
        "hub.nav.label.settings.devices": "الأجهزة",
        "hub.nav.label.settings.preferences": "التفضيلات",
        "hub.nav.label.settings.whatsnew": "ما هو الجديد؟",

        "hub.apps.detail.back": "الرجوع إلى التطبيقات",
        "hub.people.detail.back": "الرجوع إلى الأشخاص",
        "hub.people.notifications.back": "الرجوع إلى الإشعارات",

        "hub.nav.label.notifications.filter": "عامل التصفية",
        "hub.nav.label.notifications.all.notifications": "كل الإشعارات",
        "hub.nav.label.notifications.action.needed": "قيد الانتظار",
        "hub.nav.label.notifications.completed": "اكتمل",
        "hub.long.card.description": "الوصف",
        "hub.long.card.Comment": "التعليق",
        "hub.long.card.Comment.placeholder": "إضافة تعليق",

        "hub.appLaunch.open": "فتح",
        "hub.appLaunch.cancel": "إلغاء"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "a",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Instalovat",
        "app.banner.open": "Otevřít",
        "app.promotion.banner.donotshowagain": "Toto již příště nezobrazovat. Informace si později můžete zobrazit v Nastavení – O programu.",
        "app.promotion.banner.open": "Otevřít v aplikaci",
        "app.promotion.banner.download": "Stáhnout aplikaci",
        "app.promotion.banner.message": "Získejte lepší prostředí aplikace.",
        "horizonDesktopNotDetected": "Chcete-li tuto aplikaci otevřít, musí být v počítači nainstalován VMware Identity Manager Desktop. <a target='_blank' href='{0}'>Nainstalujte VMware Identity Manager Desktop</a>, pokud jste tak ještě neučinili.",
        "viewAppsTooltip": "Aplikace hostovaná ve službě Horizon vyžaduje, aby byla v počítači nainstalována verze {0}Horizon Client{1} 3.0 nebo novější.",
        "desktoneDesktopTooltip": "Desktop aplikace Horizon Cloud vyžaduje, aby byla v počítači nainstalována aplikace {0}Horizon Client{1}.",
        "desktoneApplicationTooltip": "Aplikace Horizon Cloud vyžaduje, aby byla v počítači nainstalována aplikace {0}Horizon Client{1}.",
        "xenAppsReceiverNotDetected": "Chcete-li aplikaci otevřít, musí být v počítači nainstalován Citrix Receiver. <a target='_blank' href='{0}'>Nainstalujte Citrix Receiver</a>, pokud jste tak ještě neučinili.",
        "button.save": "Uložit",
        "button.update": "Aktualizovat",
        "button.openHorizonView": "Otevřít Horizon Client",
        "myapps.launch.openApp": "Otevřít {0}",
        "button.openApp": "Otevřít aplikaci",
        "button.clear": "Vymazat",
        "button.close": "Zavřít",
        "button.cancel": "Zrušit",
        "button.download": "Stáhnout",
        "myapps.launch.title.launch": "Spustit",
        "myapps.launch.title": "Spustit aplikaci",
        "myapps.launch.view.openWith": "Otevřít pomocí",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Prohlížeč",
        "myapps.launch.view.preferredClient.isDefault": "(výchozí)",
        "myapps.launch.view.selectPreferredLaunchClient": "Zvolte způsob spuštění desktopů a aplikací Horizon.",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Vzdálené aplikace Horizon",
        "myapps.launch.view.selectPreferredLaunchClientText": "Ve vzdálených aplikacích Horizon otevřených v programu Horizon Client je ovládání lepší než v prohlížeči.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Jak chcete vzdálené aplikace Horizon spustit?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "ZVOLTE VÝCHOZÍ SPUŠTĚNÍ",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Tímto se nastaví výchozí chování při spouštění, pokud v zařízení zvolíte otevírání přes desktop Horizon. Pokud vyberete jako své výchozí nastavení Horizon Client, je třeba mít nainstalován Horizon Client. <a target='_blank' href='{0}'>Nainstalujte Horizon Client</a>, pokud jste tak ještě neučinili.",
        "myapps.launch.view.unknownClientType": "Neznámý druh klienta pro otevírání Horizon Client.",
        "myapps.launch.view.openWithView": "Otevřít pomocí Horizon Client",
        "myapps.launch.view.openWithBrowser": "Otevřít pomocí prohlížeče",

        "myapps.launch.view.preferredClient.byBrowser.description": "Volbou prohlížeče se desktop nebo aplikace otevře v novém okně prohlížeče.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Tato položka vyžaduje Horizon Client 3.0 nebo novější. <a target='_blank' href='{0}'>Nainstalujte Horizon Client</a>, pokud jste tak ještě neučinili.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Nastavení lze kdykoli změnit v předvolbách.",
        "myapps.launch.view.preferredClient.saveSuccess": "Vybraná předvolba byla úspěšně uložena.",
        "myapps.launch.msg.launching.desktop": "Spouštění desktopu <b>{0}</b>…",
        "myapps.launch.msg.launching.application": "Spouštění aplikace <b>{0}</b>…",
        "myapps.noAppsMsg": "Nepřidali jste žádné aplikace. Chcete-li přidat aplikace, přejděte na {0}.",
        "myapps.noFavAppsMsg": "Nepřidali jste žádné aplikace do záložek",
        "myapps.welcomeMsg": "Dobrý den {0}, tady máte své aplikace.",
        "myapps.bookmarks.empty.message": "Vytvořte si záložky pro rychlý přístup k často používaným aplikacím.",
        "myapps.bookmarks.empty.hidecatalog.message": "Momentálně nemáte k dispozici žádné aplikace.",
        "myapps.bookmarks.empty.addbookmarks": "Přidat záložky",
        "myapps.bookmarks.organize.title": "Organizovat záložky",
        "myapps.bookmarks.organize.addbookmarks": "Přidat záložky",
        "myapps.bookmarks.organize.batchremove": "Odebrat",

        "myapps.mobilepagetitle.apps": "Aplikace",
        "myapps.mobilepagetitle.details": "Podrobnosti",
        "myapps.mobilepagetitle.support": "Podpora",
        "myapps.mobilepagetitle.settings": "Nastavení",
        "myapps.mobilepagetitle.recommendedapps": "Doporučujeme vám",
        "myapps.mobilepagetitle.notification": "Oznámení",
        "myapps.mobilepagetitle.archived": "Archivováno",
        "myapps.mobilepagetitle.notification.newapps": "Nové aplikace",

        "myapps.dialog.openApp": "Otevřít",
        "myapps.dialog.openAppWithViewClient": "Ot. v klientu",
        "myapps.dialog.openAppWithBrowser": "Ot. v prohlížeči",

        "myapps.launch.passwordvault.installExtension.description": "Tato aplikace může využívat rozšíření prohlížeče Password Vault. <a target='_blank' href='{0}'>Rozšíření nainstalujte</a>, pokud jste tak ještě neučinili.",

        "deviceStatus.networkLost": "Připojení bylo přerušeno. Probíhá pokus o opětovné připojení…",
        "deviceStatus.networkRestored": "Síťové připojení bylo obnoveno.",
        "api.session.expired.retry": "Relace vypršela, zkoušíme ji obnovit.",
        "api.entitlements.reload": "Zobrazení se obnovuje, aby se aktualizovaly aplikace ve vašem katalogu.",
        "api.security.header.invalid.relogin": "Ověření hlavičky zabezpečení se nezdařilo, probíhá odhlašování…",
        "api.server.load.error": "Zatížení je vyšší než obvykle. Zkuste to znovu později.",
        "api.updateApps": "Aktualizuji seznam...",
        "api.error": "Došlo k chybě. Zkuste to znovu.",
        "installation.error": "Nativní aplikace jsou dočasně nedostupné",
        "service.under.maintenance.error": "Workspace ONE je dočasně v režimu údržby. Aplikace lze spustit, ale některé části nemusí být funkční.",
        "api.timeout": "Připojení vypršelo. Zkuste znovu.",
        "favoriteStatus.favorite": "Oblíbený",
        "favoriteStatus.unfavorite": "Odeb. z oblíb.",
        "favoriteStatus.offlineFavoriteMessage": "Přidávání aplikací do záložek není možné provádět v režimu offline. Připojte se a zkuste to znovu.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "Odebrání záložky z aplikace není možné v režimu offline. Připojte se a zkuste to znovu.",
        "error.failToFavoriteApp": "Nepodařilo se aktualizovat stav záložky.",
        "error.failedToResetApp": "Nepodařilo se resetovat aplikaci.",
        "error.failToHideApp": "Nepodařilo se odstranit aplikaci.",
        "error.failToShowApp": "Nepodařilo se přidat aplikaci do spouštěče Launcher.",
        "error.failedToBookmarkApp": "Nepodařilo se přidat aplikaci do záložek.",
        "error.failedToLaunchApp": "Nepodařilo se otevřít aplikaci.",
        "error.failedToRemoveAccount": "Nepodařilo se odstranit účet, zkuste to znovu později",
        "installStatus.enrollDevice": "Chcete-li použít {0}, je třeba aktivovat Workspace Services za účelem ochrany podnikových dat.",
        "installStatus.enrollDevice.learnMore": "Další informace",
        "installStatus.offlineInstallMessage": "Označování aplikace za oblíbenou není možné provádět v režimu offline. Prosím připojte se a zkuste znovu.",
        "installStatus.activated": "Aktivováno",
        "installStatus.notActivated": "Není aktivováno",
        "installStatus.request": "Požadavek",
        "installStatus.update": "Aktualizovat",
        "installStatus.processing": "Zpracovávám",
        "installStatus.installFailedMessage": "Během pokusu o instalaci aplikace {0} došlo k chybě. Zkuste to znovu. Pokud potíže přetrvají, obraťte se na svého správce IT.",
        "installStatus.unenrolledDevice": "Aplikace vám již není k dispozici. Stiskněte OK, čímž se seznam zaktualizuje.",
        "installMessage.continueInstall": "již jste se pokoušeli aplikaci instalovat. ",
        "installMessage.proceedToInstall": "Klikněte a pokračujte.",
        "installMessage.installingOnDevice": "Instalace v zařízení…",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Povolit Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "To je vyžadováno předtím, než je možné aplikaci nainstalovat. Automaticky získáte tyto funkce:",
        "app.adaptivemanagement.valueproposition1": "Přímá instalace všech podnikových prostředků.",
        "app.adaptivemanagement.valueproposition2": "Zabezpečený přístup k síti podniku.",
        "app.adaptivemanagement.valueproposition3": "Synchronizace aplikací a obsahu všech vašich zařízení.",
        "app.adaptivemanagement.valueproposition4": "Lepší ovládání aplikace pro produktivnější práci.",
        "app.adaptivemanagement.privacylink": "Vaše soukromí",

        "app.tunnel.continue": "Pokračovat",
        "app.tunnel.text.line1": "K přístupu je potřeba aplikace VMware Tunnel",
        "app.tunnel.text.line2": "Aplikace Tunnel se spolu s vaší aplikací automaticky stáhne.",
        "app.tunnel.header": "Vyžaduje aplikaci VMware Tunnel",
        "app.tunnel.message": "Chcete-li tuto aplikaci použít, je třeba nainstalovat a spustit aplikaci VMware Tunnel.",
        "recommendedApps.tunnel.text.line1": "K přístupu je potřeba aplikace VMware Tunnel",
        "recommendedApps.tunnel.text.line2": "Aplikace Tunnel se spolu s vaší aplikací automaticky stáhne.",
        "app.tunnel.installHelpText": "Pokud se instalace aplikací nespustí automaticky, aplikaci povolte dle uvedeného postupu",
        "app.tunnel.installStep1": "Krok 1: Instalace aplikace {0}",
        "app.tunnel.installStep2": "Krok 2: Instalace aplikace {0}",

        "requestFailed": "Požadavek se nezdařil.",
        "changeOccurred": "Došlo ke změně.",
        "requestSuccessful": "Požadavek proběhl úspěšně.",
        "accept": "Přijmout",
        "decline": "Odmítnout",
        "termsOfUse": "Podmínky použití",
        "beforeInstallation": "Než nainstalujete",
        "resetDesktopStatus.offlineMessage": "Resetování desktopu není možné provádět v režimu offline. Prosím připojte se a zkuste to znovu.",
        "resetDesktop.sucess": "Desktop byl úspěšně resetován.",
        "appCenter.someAppsMissingMessage": "Momentálně není možné načíst všechny aplikace.",
        "appCenter.register.device": "Některé informace o vašem zařízení je nutné upravit. Než budete pracovat s aplikací Workspace ONE, tyto informace upravte.",
        "appCenter.mdm.device.error": "K aplikaci Workspace ONE již nemáte přístup.",
        "appCenter.mdm.device.error.contact": "S žádostí o informace k vašemu účtu se obraťte na správce.",
        "appCenter.mdm.device.poll.error": "Nyní nejsme schopni dokončit tvorbu vašeho pracovního prostoru. Zkuste to znovu nebo se obraťte na administrátora.",
        "appCenter.device.status.notRegistered": "Zařízení není registrováno.",
        "appCenter.device.status.blackListed": "Zařízení je na blacklistu.",
        "appCenter.device.status.deviceInputError": "Zařízení není platné. Obraťte se na svého administrátora IT.",
        "appCenter.device.status.unknownError": "Došlo k neznámé chybě.",

        "appCenter.device.register": "Registrovat zařízení",
        "appCenter.device.moreDetails": "Více podrobností",
        "appCenter.device.unEnrollWarningTitle": "Chcete odebrat svůj účet?",
        "appCenter.device.mdmUnEnrollMessage": "Odebráním účtu ztratíte přístup k prostředkům společnosti a může dojít k odstranění pracovních aplikací v tomto zařízení.",
        "appCenter.device.getDeviceEnrollmentStatus": "Získávání dalších informací",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Opravdu chcete pokračovat?",
        "appCenter.device.remove": "Odebrat",
        "appCenter.device.keep": "Zachovat",
        "appCenter.device.disableWorkspaceMessage": "Odebráním účtu zrušíte přístup získaný prostřednictvím aplikace Workspace ONE. Aplikace stažené do springboardu zůstanou nainstalované, ale nebudete k nim mít přístup. Chcete pokračovat?",
        "appCenter.noAppsMsg": "Momentálně nejsou k dispozici žádné aplikace.",
        "appCenter.vppInviteTitle": "Registrace spravované distribuce",
        "appCenter.appInstallConfirmPromptTitle": "Potvrdit instalaci",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Souhlas nutný pro",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Váš požadavek by dříve zamítnut.",
        "appCenter.mdmAppRequestConfirmPromptMessage": "Aplikace, kterou chcete použít, musí být schválena vaším administrátorem.",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Požádali jste o tuto aplikaci a váš požadavek byl zamítnut. Opravdu chcete požádat znovu?",
        "appCenter.acceptInvite": "Přijmout pozvánku",
        "appCenter.install": "Instalovat",
        "appCenter.proceed": "Povolit Workspace Services",
        "appCenter.cancel": "Zrušit",
        "appCenter.confirm": "Potvrdit",
        "appCenter.searchApps": "Vyhledat aplikace.",
        "appCenter.welcomeMsg": "Instalujte nové aplikace kdekoli a na jakémkoli zařízení",
        "appCenter.done": "Hotovo",
        "appCenter.nav.privacyPage": "Stránka Ochrana osobních údajů",
        "appCenter.nav.catalog": "Katalog",
        "appCenter.nav.myApps": "Moje aplikace",
        "appCenter.nav.favorites": "Oblíbené",
        "appCenter.nav.categories": "Kategorie",
        "appCenter.nav.filterby": "Druh filtrování",
        "appCenter.nav.show": "Ukázat",
        "appCenter.nav.settings": "Nastavení",
        "appCenter.nav.sortBy": "Druh třídění",
        "appCenter.nav.sortBy.alpha": "Seřadit podle A-Z",
        "appCenter.nav.sortBy.inverseAlpha": "Seřadit podle Z-A",
        "appCenter.nav.sortBy.customView": "Vlastní zobrazení",
        "appCenter.nav.arrange": "Uspořádat",
        "appCenter.nav.arrange.saved": "Vlastní zobrazení bylo uloženo!",
        "appCenter.nav.arrange.tooltip": "K dispozici pouze ve Windows.",
        "appCenter.nav.arrange.saving": "Ukládání...",
        "appCenter.nav.arrange.error": "Vlastní zobrazení nelze uložit",
        "appCenter.nav.filter": "Filtr",
        "appCenter.installFailedTitle": "Potíže s instalací aplikace",
        "appCenter.uccConflict": "V aktuální relaci došlo k chybě. Přihlaste se znovu.",

        "appCenter.search.placeholder": "Hledat",
        "appCenter.search.noResults": "Nebyly nalezeny žádné výsledky.",

        "appCenter.action.open": "Otevřít",
        "appCenter.action.install": "Instalovat",
        "appCenter.action.installing": "Probíhá instalace",
        "appCenter.action.installed": "Nainstalováno",
        "appCenter.action.reinstall": "Přeinstalovat",
        "appCenter.action.add": "Přidat",
        "appCenter.action.added": "Přidáno",
        "appCenter.action.processing": "Zpracovávám",
        "appCenter.action.update": "Aktualizovat",
        "appCenter.action.request": "Požadavek",
        "appCenter.action.pending": "Vyřizuje se",
        "appCenter.action.view": "Zobrazit",
        "appCenter.action.favorite": "Oblíbený",
        "appCenter.action.unfavorite": "Odeb. z oblíb.",

        "appCenter.internalApp.installtionModalTitle": "Kroky instalace aplikace",
        "appCenter.internalApp.installationStepTitle": "Chcete-li tuto aplikaci otevřít, postupujte podle pokynů k instalaci.",
        "appCenter.internalApp.step1": "Otevřete nastavení z úvodní obrazovky systému iOS",
        "appCenter.internalApp.step2": "Klepněte na možnost Obecné.",
        "appCenter.internalApp.step3": "Klepněte na Profily a správa zařízení",
        "appCenter.internalApp.step4": "Klepněte na jméno vývojáře aplikace v aplikaci Enterprise.",
        "appCenter.internalApp.step5": "Aplikaci ověřte, nebo ji důvěřujte.",
        "appCenter.internalApp.watchTutorial": "Podívejte se na průvodce krok za krokem.",

        "appCenter.type.web": "Webová stránka",
        "appCenter.type.native": "Nativní aplikace",
        "appCenter.type.native.platform": "Aplikace {0}",
        "appCenter.type.virtual": "Virtuální aplikace",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "Balíček aplikací",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Kategorie",
        "myapp.nav.favorites": "Oblíbené",
        "myapp.nav.allApps": "Všechny aplikace",
        "myapp.nav.recommendedApps": "Doporučené",
        "myapp.nav.newlyEntitledApps": "Nová",
        "myapp.nav.webApps": "Webové stránky",
        "myapp.nav.mobileApps": "Mobilní aplikace",
        "myapp.nav.macApps": "Aplikace pro Mac",
        "myapp.nav.windowsApps": "Aplikace pro Windows",
        "myapp.nav.virtualApps": "Virtuální",
        "myapp.label.new": "Nová",
        "myapp.nav.filterby": "Druh filtrování",
        "myapp.nav.mobile.filter.pagetitle": "Filtrovat podle kategorií",
        "appCenter.nav.browseBy": "Procházet dle",

        "appCenter.catalog.empty": "Vypadá to, že vám zatím nebyly přiřazeny žádné aplikace. Zanedlouho se tu objeví, tak se vraťte brzy.",

        "userInfo.adminConsole": "Administrační konzola",
        "userInfo.settings": "Nastavení",
        "userInfo.notifications": "Oznámení",
        "userInfo.support": "Podpora",
        "userInfo.preferences": "Předvolby",
        "userInfo.about": "O aplikaci",
        "userInfo.devices": "Zařízení",
        "userInfo.settings.promo.title": "Stáhnout aplikaci Workspace ONE",
        "userInfo.settings.promo.message": "Workspace ONE vám pomůže využít aplikaci naplno. Chcete jej nyní vyzkoušet?",

        "userInfo.tips": "Tipy k aplikaci",
        "userInfo.tips.description": "Zde můžete získávat rady k použití aplikace.",

        "userInfo.tips.bookmarks": "Jak používat funkci Záložky?",
        "userInfo.tips.catalog": "Jak používat funkci Katalog?",
        "userInfo.tips.people": "Novinka: Jak používat funkci Lidé?",
        "userInfo.tips.notification": "Novinka: Jak používat funkci Oznámení?",

        "userInfo.tips.catalog.desktop1": "Kliknutím na tlačítko Otevřít otevřete v prohlížeči webovou stránku. Pomocí možnosti {0} ji můžete označit záložkou.",
        "userInfo.tips.catalog.desktop2": "Kliknutím na ikonu nebo název aplikace zjistíte více informací.",
        "userInfo.tips.catalog.mobile1": "Pomocí možnosti {0} můžete v prohlížeči otevřít webovou stránku a pomocí možnosti {1} ji můžete označit záložkou.",
        "userInfo.tips.catalog.mobile2": "Pomocí možnosti {0} můžete do zařízení nainstalovat nativní aplikaci. {1} znamená, že před použitím těchto aplikací nemusíte své zařízení registrovat.",
        "userInfo.tips.catalog.mobile3": "Klepnutím na ikonu nebo název aplikace zjistíte více informací.",

        "userInfo.tips.bookmarks.desktop1": "Kliknutím na dlaždici otevřete webovou stránku v prohlížeči.",
        "userInfo.tips.bookmarks.desktop2": "Po umístění ukazatele na dlaždici zobrazíte v nabídce „...“ další akce.",

        "userInfo.tips.bookmarks.mobile": "Klepnutím na dlaždici spusťte webovou stránku ve vašem prohlížeči. Pro další akce stiskněte a podržte.",

        "userInfo.tips.catalog.download.phone": "Klepnutím na ikonu {0} nainstalujte do zařízení nativní aplikaci. Ikona {1} znamená, že pro používání těchto aplikací je nutné vaše zařízení zaregistrovat.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Klepnutím na ikonu {0} otevřete webovou stránku v prohlížeči. Klepnutím na ikonu {1} tuto stránku označíte záložkou. Klepnutím na ikonu nebo název aplikace zobrazíte další podrobnosti.",

        "userInfo.tips.catalog.download.tablet": "Stáhněte si aplikace kliknutím na tlačítko pro stažení, další informace získáte pouhým kliknutím na aplikaci",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Spusťte aplikace kliknutím na tlačítko spuštění, aplikace označte záložkou kliknutím na tlačítko záložek",

        "userInfo.tips.people.mobile": "Kliknutím na tlačítko {0} se z libovolného profilu vrátíte na hlavní stránku hledání lidí.",
        "userInfo.tips.notification.mobile": "Kliknutím na tlačítko {0} otevřete oznámení. Ukazatel oznámení zůstane aktivní, dokud všechna oznámení nezrušíte nebo nevyřešíte.",

        "userInfo.tips.title": "Tipy k aplikaci",
        "userInfo.tips.intro": "Zde můžete získávat rady k použití aplikace.",
        "userInfo.tips.desktop": "Stolní počítač",
        "userInfo.tips.reordering.title": "Přizpůsobte si záložky.",
        "userInfo.tips.reordering.text1": "1. Pomocí rozevírací nabídky vpravo nahoře přejděte k možnosti Vlastní zobrazení.",
        "userInfo.tips.reordering.text2": "2. Zvolte možnost Uspořádat. ",
        "userInfo.tips.reordering.text3": "3. Přetažením změňte uspořádání záložek. Po skončení klikněte na tlačítko Uložit.",
        "userInfo.tips.mobile": "Mobilní zařízení",

        "userInfo.removeAccount": "Odebrat účet",
        "userInfo.account": "Účet",
        "userInfo.profile": "Profil",
        "userInfo.profile.name": "Název:",
        "userInfo.profile.email": "E-mail:",
        "userInfo.profile.username": "Uživatelské jméno:",
        "userInfo.profile.picture": "Profilový obrázek",
        "userInfo.profile.password": "Heslo",
        "userInfo.profile.passwordchange": "Změnit",
        "userInfo.profile.passwordprompt": "Spravujte heslo pro podnikový systém.",
        "userInfo.password": "Heslo",
        "userInfo.termsofuse": "Podmínky použití",
        "userInfo.signout": "Odhlásit se",
        "userInfo.tryAgain": "Zkusit znovu",
        "userInfo.managedevicesettings": "Spravovat nastavení zařízení",
        "userInfo.notification": "Push oznámení",
        "userInfo.passcode": "Touch ID nebo heslo",

        "appCenter.support.selfservice": "Samoobsluha",
        "appCenter.support.managedevices": "Zařízení",
        "appCenter.support.managedevicestext": "Zobrazit informace o zařízení.",
        "appCenter.support.managepassword": "Změňte heslo",
        "appCenter.support.managepasswordtext": "Změna hesla podnikového účtu",
        "appCenter.support.gethelp": "Získat nápovědu",
        "appCenter.support.appstips": "Aplikace a tipy",
        "appCenter.support.appstipstext": "Zobrazení tipů nápovědy v této aplikaci",
        "appCenter.support.sendReportTitle": "Odeslat zprávu",
        "appCenter.support.sendReportDetails": "Zjistit, jak odeslat diagnostiku aplikace.",
        "appCenter.support.helpdesk": "Helpdesk",
        "appCenter.support.contacthelpdesk": "Kontaktovat helpdesk",
        "appCenter.reportProblems.ios.sendLogInstruction": "Když dojde k chybě, zatřeste zařízením. Tím se odešle diagnostika aplikace nebo zpětná vazba.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Tuto možnost lze zapnout a vypnout v nastavení zařízení.",

        // App Details Page
        "app.details.link.back": "Zpět",
        "app.details.nav.details": "Podrobnosti",
        "app.details.nav.reviews": "Hodnocení",
        "app.details.label.description": "Popis",
        "app.details.label.noDescription": "Popis není k dispozici",
        "app.details.label.seeFullDetails": "Zobrazit detaily",
        "app.details.label.removeBookmark": "Odebrat",
        "app.details.label.resetDektop": "Resetovat",
        "app.details.label.information": "Informace",
        "app.details.label.category": "Kategorie",
        "app.details.label.version": "Verze",
        "app.details.label.type": "Typ",
        "app.details.label.type.SAML11": "Webová aplikace",
        "app.details.label.type.SAML20": "Webová aplikace",
        "app.details.label.type.WEBAPPLINK": "Webová aplikace",
        "app.details.label.type.MDMWEB": "Webová aplikace",
        "app.details.label.type.WSFED12": "Webová aplikace",
        "app.details.label.type.XENAPP": "Xen aplikace",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix Desktop",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Profil",
        "app.details.label.type.VIEWPOOL": "Desktop Horizon",
        "app.details.label.type.VIEWAPP": "Aplikace Horizon",
        "app.details.label.type.DESKTONEDESKTOP": "Desktop Horizon Cloud",
        "app.details.label.type.DESKTONEAPPLICATION": "Aplikace Horizon Cloud",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Webová aplikace",
        "app.details.label.type.PUBLIC": "Veřejná aplikace",
        "app.details.label.type.INTERNAL": "Interní",
        "app.details.label.size": "Velikost",
        "app.details.label.price": "Cena",
        "app.details.label.screenshots": "Snímky obrazovky",
        "app.details.label.showMore": "Zobrazit více",
        "app.details.label.showLess": "Zobrazit méně",
        "app.details.label.setAppPassword": "Nast. heslo apl.",
        "app.details.label.sendFeedback": "Odeslat zpětnou vazbu",
        "app.details.label.feedbackSubject": "Zpětná vazba pro aplikaci {0}",
        "app.details.label.support": "Podpora",
        "app.details.label.developer": "Vývojář",
        "app.details.label.email": "E-mail",
        "app.details.label.phone": "Telefon",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "Všechny mobilní aplikace lze spouštět z vaší domovské obrazovky.",

        "app.details.label.requirement": "Požadavek:",
        "app.details.label.packageName": "Název balíčku:",
        "app.details.thinapp.requirement": "Aplikace je funkční pouze v počítači s Windows s nainstalovaným správcem Identity Manager Desktop.",
        "app.details.viewDesktop.requirement": "Desktop Horizon vyžaduje, aby byl v počítači nainstalován klient {0}Horizon Client{1} 3.0 nebo novější.",
        "app.details.viewapp.requirement": "Aplikace hostovaná ve službě Horizon vyžaduje, aby byla v počítači nainstalována verze {0}Horizon Client{1} 3.0 nebo novější.",
        "app.details.xenapp.requirement": "Aplikace vyžaduje, aby byl nainstalován přijímač {0}Citrix Receiver{1}.",
        "app.details.xenapp.msg.IE8OrLower": "Aplikace vyžaduje Citrix Receiver. Poznámka: aplikaci nelze otevřít v prohlížeči Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "Citrix desktop vyžaduje, aby byl nainstalován přijímač {0}Citrix Receiver{1}.",
        "app.details.desktoneDesktop.requirement": "Desktop aplikace Horizon Cloud vyžaduje, aby byla v počítači nainstalována aplikace {0}Horizon Client{1}.",
        "app.details.desktoneApp.requirement": "Aplikace Horizon Cloud vyžaduje, aby byla v počítači nainstalována aplikace {0}Horizon Client{1}.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "K dispozici nejsou žádné informace.",
        "app.details.noScreenshots": "K dispozici nejsou žádné snímky obrazovky.",
        "app.details.noDescription": "Popis bude přidán brzy.",
        "app.details.needsDeviceEnrollment": "Požaduje registraci zařízení",
        "app.details.label.addToHomeScreen": "Přidat na úvodní obrazovku",
        "app.details.action.open": "Otevřít",
        "app.details.action.bookmark": "Vytvořit záložku",
        "app.details.action.bookmarked": "Přidáno do záložek",
        "app.details.action.launch": "Spustit",
        "app.details.action.setPassword": "Nastavit heslo",
        "app.details.action.pvAppCredentials": "Přihlašovací údaje",
        "app.details.info.msg.missingInfo": "Některé informace chybí. Aby bylo možné zobrazit veškeré údaje, zkuste to později znovu.",
        "app.details.wsrequired.msg": "Jsou vyžadovány služby Workspace Services.",
        "app.details.label.addedFavorites": "Přidáno do oblíbených",

        "app.rating.label": "Uživatelské hodnocení",

        "app.settings.label.settings": "Nastavení",
        "app.settings.link.back": "Zpět",
        "app.settings.managedDevices": "Spravovaná zařízení",
        "app.nav.tab.bookmark": "Záložky",
        "app.nav.tab.catalog": "Katalog",
        "app.nav.tab.people": "Lidé",
        "app.nav.tab.support": "Podpora",
        "app.nav.tab.apps": "Aplikace",
        "app.nav.tab.settings": "Nastavení",
        "app.about.heading": "O aplikaci Workspace ONE",
        "app.about.copyright": "Copyright © 2013–2019 VMware, Inc. Všechna práva vyhrazena. Produkt je chráněn autorskými právy a zákony na ochranu duševního vlastnictví, které platí v USA či dalších zemích, a dále mezinárodními dohodami. Produkty VMware jsou chráněny jedním nebo více patenty.",
        "app.about.button.label.privacyPolicy": "Zásady ochrany osobních údajů",
        "app.about.button.label.patents": "Patent",
        "app.about.button.label.licenseAgreement": "Licenční dohoda",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/cz/go/patents",
        "app.about.licenseAgreementLink": "http://www.vmware.com/cz/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/cz/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Zařízení",
        "app.devices.tableColumn.deviceName": "Název zařízení",
        "app.devices.tableColumn.userDeviceId": "ID zařízení",
        "app.devices.tableColumn.lastLoginTime": "Čas posledního přihlášení",
        "app.devices.unlinkDevice": "Zrušit propojení",
        "app.devices.unlinkedDevice": "Propojení bylo zrušeno.",
        "app.devices.emptyDeviceListMessage": "S tímto účtem nemáte propojené žádné zařízení.",

        "app.thinappMultiDeviceAct.heading": "Tato aplikace bude přidána ke schváleným zařízením. Chcete-li použít \"{0}\" na dalších zařízeních, níže najděte název zařízení a klikněte na tlačítko Požadavek.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Název zařízení",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Stav",
        "app.thinappMultiDeviceAct.button.request": "Požadavek",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Zamítnuto",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "Vyřizuje se",
        "app.thinappMultiDeviceAct.activationState.activated": "Schváleno",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Není aktivováno",

        "app.thinappsInPackage.button.done": "Hotovo",
        "app.thinappsInPackage.button.bookmarkAll": "Přidat do záložek vše",
        "app.thinappsInPackage.info": "Balíček aplikací",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} aplikací",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} nalezených shod.",
        "app.thinappsInPackage.action.instruction": "Pro označení jednotlivé aplikace záložkou zvolte ikonu záložky nebo pro označení záložkou všech aplikací zvolte tlačítko.",
        "app.thinappsInPackage.search.placeholder": "Vyhledat v balíčku",

        "app.setAppPassword.heading": "Nastavit heslo",
        "app.setAppPassword.instruction": "V níže uvedeném formuláři nastavte heslo aplikace. Heslo musí obsahovat nejméně tři znaky.",
        "app.setAppPassword.label.password": "Heslo",
        "app.setAppPassword.label.confirmPassword": "Potvrdit heslo",
        "app.setAppPassword.label.generate": "Generovat heslo",
        "app.setAppPassword.error.passwordsNoMatch": "Hesla se neshodují.",
        "app.setAppPassword.msg.success": "Heslo aplikace bylo úspěšně nastaveno.",
        "app.setAppPassword.msg.fail": "Došlo k chybě během nastavování hesla. Zkuste to znovu.",

        "pvapp.setAppPassword.heading": "Nastavit uložené přihlašovací údaje pro {0}",
        "pvapp.setAppPassword.instruction": "Pomocí následujícího formuláře nastavte uložené přihlašovací údaje pro tuto aplikaci.",
        "pvapp.setAppPassword.label.username": "Uživatelské jméno",
        "pvapp.setAppPassword.label.password": "Heslo",
        "pvapp.setAppPassword.error.userNameEmpty": "Pole Uživatelské jméno je prázdné.",
        "pvapp.setAppPassword.error.passwordEmpty": "Pole Heslo je prázdné.",
        "pvapp.setAppPassword.msg.success": "Přihlašovací údaje aplikace byly úspěšně nastaveny.",
        "pvapp.setAppPassword.msg.fail": "Během pokusu o nastavení přihlašovacích údajů aplikace došlo k chybě. Zkuste to znovu.",

        "app.launchPassword.heading": "Požadavek hesla",
        "app.launchPassword.view.instruction": "K přihlášení do zdroje Windows {0} je nutné heslo.",
        "app.launchPassword.label.userName": "Uživatel",
        "app.launchPassword.label.password": "Heslo",
        "app.launchPassword.button.label.signin": "Přihlásit",

        "app.changePassword.title": "Změňte heslo",
        "app.changePassword.enterCurrentPassword": "Zadejte současné heslo",
        "app.changePassword.enterNewPassword": "Zadejte nové heslo",
        "app.changePassword.confirmNewPassword": "Potvrďte nové heslo",
        "app.changePassword.error.passwordsNoMatch": "Nová hesla si neodpovídají.",
        "app.changePassword.error.requirementsNoMatch": "Nové heslo nesplňuje požadavky.",
        "app.changePassword.success": "Nové heslo bylo uloženo.",
        "app.changePassword.label.email": "E-mail",
        "app.changePassword.label.phone": "Telefon",

        "app.passwordPolicy.passwordRequirements": "Požadavky týkající se hesla",
        "app.passwordPolicy.label.currentpassword": "Současné heslo",
        "app.passwordPolicy.label.newpassword": "Nové heslo",
        "app.passwordPolicy.label.confirmpassword": "Potvrďte nové heslo",
        "app.passwordPolicy.minLength": "Minimálně {0} znaků",
        "app.passwordPolicy.leastIncludes": "obsahuje alespoň:",
        "app.passwordPolicy.minLower": "{0} písmeno",
        "app.passwordPolicy.minUpper": "{0} velké písmeno",
        "app.passwordPolicy.minDigit": "{0} číslo",
        "app.passwordPolicy.minSpecial": "{0} speciální znak",

        "app.coachmarks.bookmarkTitle": "Jak používat záložky",
        "app.coachmarks.bookmarkMessage": "Klepnutím otevřete webové stránky; stisknutím a podržením zobrazíte další informace.",
        "app.coachmarks.catalogTitle": "Jak používat funkci Katalog",
        "app.coachmarks.catalogMessage": "Odsud můžete instalovat či aktualizovat aplikace, přidávat je do záložek nebo je přímo otevírat.",
        "app.coachmarks.buttonText": "Rozumím!",

        "app.logout.confirm.msg": "Odhlášením z rozšíření Workspace ONE ukončíte aktuální relaci. Všechny aplikace stažené z katalogu zůstanou v zařízení, ale do opětovného přihlášení nebudou žádné nové k dispozici.",
        "app.logout.title": "UPOZORNĚNÍ",

        "app.passwordVault.banner.msg": "Máte aplikace, které mohou využít rozšíření Workspace ONE.",
        "app.passwordVault.banner.button.install": "Instalovat",
        "app.passwordVault.banner.setPreference": "Můžete si ji později získat v části Nastavení - Předvolby.",
        "app.passwordVault.banner.donotshowagain": "Znovu již nezobrazovat",
        "app.passwordVault.banner.button.later": "Později",
        "app.passwordVault.banner.button.get": "Získat",
        "app.passwordVault.preference.title": "Rozšíření platformy Workspace ONE",
        "app.passwordVault.preference.instruction": "Máte aplikace, které mohou využít rozšíření Workspace ONE.",
        "app.passwordVault.preference.getextension": "Získat rozšíření.",
        "app.bookmarking.change.tab.title": "Stále uspořádávat vaše záložky?",
        "app.bookmarking.change.tab.body": "Změny, které jste provedli, nebudou uloženy. Chcete zachovat uspořádání záložek?",
        "app.bookmarking.touch.disabled": "Pořadí aplikací můžete změnit pomocí trackpadu nebo myši.",
        "app.bookmarking.change.tab.exit": "Ne, opustit",
        "app.bookmarking.change.tab.stay": "Ano, zůstat zde",
        "app.virtual.disabled": "Vypnuto administrátorem",
        "app.virtual.unavailable": "Aplikace v tomto zařízení není k dispozici",
        "app.virtual.not.available": "Není k dispozici",

        "app.notification.type.NEW_ENTITLEMENTS": "Podívejte se na ně",
        "app.notification.type.PASSWORD_EXPIRING": "Změnit heslo",
        "app.notification.action.delete": "Odstranit",
        "notification.new.entitlements.heading": "Nová oprávnění",
        "notification.new.entitlements.message": "Máte přiřazena nová oprávnění ({0})",
        "app.notification.delete.header": "Odstranit toto oznámení?",
        "app.notification.delete.msg": "Opravdu chcete toto oznámení odstranit? Pokud jej budete chtít archivovat později, můžete zvolit možnost Archivovat. ",
        "app.notification.delete.text": "Odstranit",
        "app.notification.keep.text": "Zachovat",
        "app.notification.restore.text": "Obnovit",
        "app.notification.delete.toast.msg": "Oznámení bylo odstraněno.",
        "app.notification.empty": "Vše je v pořádku!",
        "app.notification.more.actions": "Další akce",
        "app.notification.archive.all": "Archivovat vše",

        "app.notification.bookmark.all.error": "Je nám líto, ale nepodařilo se nám označit záložkou všechny nové aplikace",
        "app.notification.bookmark.all.success": "Všechny nové aplikace byly přidány do oblíbených.",
        "app.notification.delete.all": "Odstranit vše",
        "app.notification.see.archived": "Zobrazit archivované",
        "app.notification.see.all": "Zobrazit všechna oznámení",
        "app.notification.newApps.title": "Máte nové aplikace.",
        "app.notification.newApps.excessIconsMessage": "+ další v počtu {0}",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Zobrazit podrobnosti",
        "app.tooltip.clicktolaunch": "Pro spuštění klikněte",

        "recommendedApps.install.proceed": "Pokračovat",
        "recommendedApps.install.title": "Instalovat doporučené aplikace",
        "recommendedApps.install.confirm.msg": "Na pokračování instalace vašich aplikací budete upozorněni.",
        "recommendedApps.text1": "Tyto aplikace jsou běžně používány vašimi kolegy.",
        "recommendedApps.text2": "Můžete je nyní nainstalovat, případně je můžete později vyhledat v katalogu.",
        "recommendedApps.selectAll": "Vybrat vše",
        "recommendedApps.apps": "aplikace",
        "recommendedApps.install": "Instalovat",
        "recommendedApps.skip": "Přeskočit",

        "app.desktopapp.settings.title.account": "Účet",
        "app.desktopapp.settings.title.devices": "Zařízení",
        "app.desktopapp.settings.title.preferences": "Předvolby",

        "appCenter.peopleSearch.placeholder": "Hledat osoby",
        "app.tooltip.copyEmail": "Zkopírovat e-mail",
        "app.peopleSearch.emailCopied": "E-mail byl zkopírován",
        "appCenter.peopleSearch.noResults": "Nebyly nalezeny žádné výsledky",
        "appCenter.peopleSearch.tryNewSearch": "Zkuste nové hledání.",
        "appCenter.peopleSearch.atLeastThreeChars": "Chcete-li hledat, zadejte nejméně 3 znaky.",
        "appCenter.searchPeople": "Hledejte osoby.",
        "myapps.mobilepagetitle.people": "Lidé",
        "app.people.labels.team": "Můj tým",
        "app.people.labels.recent": "Poslední",
        "app.people.labels.manager": "Manažer",
        "app.people.labels.peers": "Kolegové",
        "app.people.labels.directReports": "Přímí podřízení",
        "app.people.labels.profile": "Profil",
        "app.people.labels.org": "Organizace",
        "app.people.labels.workEmail": "Pracovní e-mail",
        "app.people.labels.workPhone": "Pracovní telefon",
        "app.people.labels.alternateNumber": "Alternativní telefon",
        "app.people.labels.mobile": "Mobilní telefon",
        "app.people.labels.address": "Adresa",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Manažeři",
        "app.people.labels.skypeForBusiness": "Skype pro firmy",
        "app.people.labels.employeeNumber": "Číslo zaměstnance",
        "app.people.labels.skills": "Dovednosti",
        "app.people.labels.businessUnit": "Organizační jednotka",
        "app.people.labels.costCenter": "Nákladové středisko",
        "app.people.labels.physicalDeliveryOfficeName": "Umístění kanceláře",

        "hub.apps": "Aplikace",
        "hub.notifications": "Oznámení",
        "hub.notifications.welcome": "Vítáme vás.",
        "hub.notifications.first.time.message": "Jakmile začnete centrum Hub používat, budou se zde zobrazovat oznámení.",
        "hub.notifications.new.apps.favorite.all": "Všechny oblíbené",
        "hub.notifications.congratulations": "Blahopřejeme!",
        "hub.notifications.empty.description1": "Nejsou zde žádná nová oznámení.",
        "hub.notifications.empty.description2": "Máte k dispozici prostor navíc.",
        "hub.v2.notifications.empty.description": "Všechna oznámení máte přečtená",
        "hub.v2.notifications.first.time.description": "Jakmile začnete centrum Hub používat, budou se zde zobrazovat oznámení.",
        "hub.notifications.empty.description.archived": "Nebyla archivována žádná oznámení.",
        "hub.notifications.priority": "Priorita",
        "hub.notifications.today": "Dnes",
        "hub.notifications.yesterday": "Včera",
        "hub.notifications.lastWeek": "Za poslední týden",
        "hub.notifications.lastMonth": "Za poslední měsíc",
        "hub.notifications.older": "Starší",
        "hub.notifications.archived.label": "Archivováno",
        "hub.notifications.action.success": "Hotovo!",
        "hub.notifications.action.failure": "Vypadá to, že při provádění této akce došlo k chybě",
        "hub.notifications.moreDetails": "Více podrobností",
        "hub.notifications.dialog.action.completed": "Dokončeno",
        "hub.notifications.dialog.action.needed": "Vyřizuje se",
        "hub.notifications.dialog.action.all.notifications": "Všechna oznámení",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Hledat aplikace",
        "hub.apps.favorites": "Oblíbené",
        "hub.apps.newApps": "Nová",
        "hub.apps.recommended": "Doporučené",
        "hub.apps.categories": "Kategorie",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Tady je ale hodně místa.",
        "hub.apps.no.apps.msg2": "Chcete-li získat pracovní aplikace, obraťte se na administrátora.",
        "hub.apps.search.in.category": "{0} výsl. v kategorii:",
        "hub.apps.search.in.app": "{0} výsl. v názvu aplikace a popisu",
        "hub.apps.search.header": "Celkem výsledků",
        "hub.apps.search.no.result.header": "Žádné výsledky.",
        "hub.apps.search.no.result.msg": "Zkuste to znovu s jiným pojmem.",
        "hub.apps.searchpeople.no.result.msg": "Zkuste to znovu s jiným názvem.",
        "hub.apps.type.web": "Webové",
        "hub.apps.type.Virtual": "Webové",
        "hub.apps.type.application": "Aplikace",
        "hub.apps.type.anyApp": "AnyApp",
        "hub.people": "Lidé",
        "hub.people.search.text": "Hledat osoby",
        "hub.people.labels.mypeers": "Mí kolegové",
        "hub.people.labels.directreports": "Přímí podřízení",
        "hub.people.labels.manager": "Můj správce",
        "hub.people.labels.organization": "Organizace",
        "hub.people.search.result": "Výsledky",
        "hub.app.install.prompt.title": "Chcete nainstalovat",

        "hub.actionsheet.label.viewDetails": "Zobrazit detaily",
        "hub.actionsheet.label.removeFavorites": "Odstranit z oblíbených",
        "hub.actionsheet.label.addFavorites": "Přidat do oblíbených",
        "hub.password.done": "Hotovo",

        "hub.placeholder.changepassword.username": "Uživatelské jméno",
        "hub.placeholder.changepassword.password": "Heslo",
        "hub.placeholder.changepassword.confirmpassword": "Potvrdit heslo",

        "hub.tunnel.text.line1": "Aplikace Tunnel je povinná pro přístup ",
        "hub.tunnel.text.line2": "Aplikace Tunnel se stáhne automaticky spolu s vaší aplikací.",

        "hub.promotions.banner.category.title": "Přehled kategorií",
        "hub.promotions.banner.category.open": "Otevřít",
        "hub.promotions.banner.app.get": "Získat",
        "hub.promotions.banner.disabled": "Vypnuto administrátorem",
        "hub.require.app.management": "Spravované",
        "hub.app.installing.alert.mobile.message": "Probíhá instalace aplikace {0}. Na domovské obrazovce telefonu najdete nové informace.",
        "hub.app.installing.alert.desktop.message": "Probíhá instalace aplikace {0}. Na výchozí obrazovce aplikace pro stolní počítače najdete nové informace.",

        "hub.nav.label.apps": "Aplikace",
        "hub.nav.label.people": "Lidé",
        "hub.nav.label.notification": "Oznámení",
        "hub.nav.label.settings": "Nastavení",
        "hub.nav.label.account": "Účet",
        "hub.nav.label.signout": "Odhlásit se",
        "hub.userInfo.adminConsole": "Administrační konzola",
        "hub.userInfo.signout": "Odhlásit se",
        "hub.userInfo.settings": "Nastavení",
        "hub.userInfo.account": "Účet",
        "hub.userInfo.devices": "Zařízení",
        "hub.userInfo.whatsnew": "Novinky",
        "hub.userInfo.about": "O čem to je",
        "hub.download.ios": "Centrum Hub pro systém iOS",
        "hub.download.android": "Centrum Hub pro systém Android",
        "hub.download.mac": "Centrum Hub pro počítače Mac",
        "hub.download.windows": "Centrum Hub pro systém Windows",
        "hub.download.subtitle.mobile": "Získejte z jednoho místa přístup k oznámením, domovské stránce a dalším datům.",
        "hub.download.subtitle.desktop": "Získejte z docku přístup k oznámením a spouštějte z něj aplikace.",
        "hub.preferences.title": "Předvolby",
        "hub.preferences.horizon.subtitle": "Vzdálené aplikace Horizon",
        "hub.preferences.launch.question": "Jak chcete spouštět vzdálené aplikace Horizon?",
        "hub.about.title": "O aplikaci VMware Intelligent Hub",
        "hub.apps.allApps": "Všechny aplikace",
        "hub.apps.configure.favorites.msg": "Sem si můžete přidat oblíbené aplikace pro rychlejší přístup",
        "hub.apps.configure.favorites": "Konfigurovat",
        "hub.apps.edit.favorites": "Upravit",

        "hub.contextDialog.label.removeFavorites": "Odstranit z oblíbených",
        "hub.contextDialog.label.addFavorites": "Přidat do oblíbených",
        "hub.contextDialog.label.viewDetails": "Zobrazit detaily",
        "hub.apps.edit.favorites.header": "Režim úpravy oblíbených",
        "hub.apps.edit.favorites.prompt": "Změnu pořadí lze provést přetažením.",
        "hub.apps.edit.favorites.save": "Uložit",
        "hub.apps.edit.favorites.cancel": "Zrušit změny",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Pořadí bylo změněno. Než odejdete, je třeba změnu zrušit nebo uložit.",
        "hub.apps.edit.favorites.savecustomordering": "Vlastní pořadí se ukládá. Pokud o změny nechcete přijít, neodcházejte.",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Na dotykových obrazovkách není změna uspořádání k dispozici.",
        "hub.apps.edit.favorites.notify.success": "Změna pořadí oblíbených byla uložena.",
        "hub.apps.edit.favorites.notify.error": "Kvůli chybě se změnu pořadí nepodařilo uložit. Zkuste to znovu.",

        "hub.nav.label.settings.settings": "Nastavení",
        "hub.nav.label.settings.account": "Účet",
        "hub.nav.label.settings.about": "O aplikaci",
        "hub.nav.label.settings.devices": "Zařízení",
        "hub.nav.label.settings.preferences": "Předvolby",
        "hub.nav.label.settings.whatsnew": "Novinky",

        "hub.apps.detail.back": "Zpět k aplikacím",
        "hub.people.detail.back": "Zpět k aplikaci People",
        "hub.people.notifications.back": "Zpět na oznámení",

        "hub.nav.label.notifications.filter": "Filtr",
        "hub.nav.label.notifications.all.notifications": "Všechna oznámení",
        "hub.nav.label.notifications.action.needed": "Vyřizuje se",
        "hub.nav.label.notifications.completed": "Dokončeno",
        "hub.long.card.description": "Popis",
        "hub.long.card.Comment": "Komentář",
        "hub.long.card.Comment.placeholder": "Přidat komentář",

        "hub.appLaunch.open": "Otevřít",
        "hub.appLaunch.cancel": "Zrušit"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "og",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Installer",
        "app.banner.open": "Åbn",
        "app.promotion.banner.donotshowagain": "Vis ikke dette igen. Du kan hente det senere under Indstillinger - Om.",
        "app.promotion.banner.open": "Åbn i app",
        "app.promotion.banner.download": "Download app",
        "app.promotion.banner.message": "Få en bedre oplevelse i appen.",
        "horizonDesktopNotDetected": "VMware Identity Manager Desktop skal være installeret på denne computer for at åbne denne app. <a target='_blank' href='{0}'> Installer VMware Identity Manager Desktop</a>, hvis du ikke allerede har gjort det.",
        "viewAppsTooltip": "Denne Horizon Hosted-app kræver, at {0} Horizon Client{1} 3.0 eller nyere er installeret på din computer.",
        "desktoneDesktopTooltip": "Denne Horizon Cloud-desktop kræver, at {0} Horizon Client {1} er installeret på computeren.",
        "desktoneApplicationTooltip": "Denne Horizon Cloud-app kræver, at {0} Horizon Client {1} er installeret på computeren.",
        "xenAppsReceiverNotDetected": "Citrix Receiver skal være installeret på denne computer for at åbne denne app. <a target='_blank' href='{0}'>Installer Citrix Receiver</a>, hvis du ikke allerede har gjort det.",
        "button.save": "Gem",
        "button.update": "Opdater",
        "button.openHorizonView": "Åbn Horizon Client",
        "myapps.launch.openApp": "Åbn {0}",
        "button.openApp": "Åbn app",
        "button.clear": "Ryd",
        "button.close": "Luk",
        "button.cancel": "Annuller",
        "button.download": "Download",
        "myapps.launch.title.launch": "Start",
        "myapps.launch.title": "Start app",
        "myapps.launch.view.openWith": "Åbn med",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Browser",
        "myapps.launch.view.preferredClient.isDefault": "(standard)",
        "myapps.launch.view.selectPreferredLaunchClient": "Vælg, hvordan du vil starte Horizon-desktops og -apps",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Horizon Remote-apps",
        "myapps.launch.view.selectPreferredLaunchClientText": "Hvis du åbner Horizon Remote-apps i Horizon Client, får du en bedre oplevelse end med browseren.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Hvordan vil du åbne Horizon Remote-apps?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "VÆLG EN STANDARDINDSTILLING FOR START...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Dette bestemmer standardfunktionsmåden for start, når du vælger at åbne en Horizon-desktop fra din enhed. Hvis du vælger Horizon Client som standardindstilling, skal du have Horizon Client installeret. <a target='_blank' href='{0}'>Installer Horizon Client</a>, hvis du ikke allerede har gjort det.",
        "myapps.launch.view.unknownClientType": "Ukendt klienttype til åbning af Horizon Client.",
        "myapps.launch.view.openWithView": "Åbn med Horizon Client",
        "myapps.launch.view.openWithBrowser": "Åbn via Browser",

        "myapps.launch.view.preferredClient.byBrowser.description": "Hvis du vælger browseren, åbnes din desktop eller app i et nyt browservindue.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Dette element kræver Horizon Client 3.0 eller nyere. <a target='_blank' href='{0}'>Installer Horizon Client</a>, hvis du ikke allerede har gjort det.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Du kan altid ændre denne indstilling under Præferencer.",
        "myapps.launch.view.preferredClient.saveSuccess": "Den valgte indstilling er blevet gemt.",
        "myapps.launch.msg.launching.desktop": "Starter Desktop <b>{0}</b>...",
        "myapps.launch.msg.launching.application": "Starter appen <b>{0}</b>...",
        "myapps.noAppsMsg": "Du har ikke tilføjet nogen apps. Du kan navigere til {0} for at tilføje apps",
        "myapps.noFavAppsMsg": "Du har ikke tilføjet bogmærker til nogen apps",
        "myapps.welcomeMsg": "Hej {0}. Her er dine apps!",
        "myapps.bookmarks.empty.message": "Tilføj bogmærke til apps, du bruger hyppigt, for at få hurtig adgang.",
        "myapps.bookmarks.empty.hidecatalog.message": "På nuværende tidspunkt har du ikke nogen apps, der er klar til brug.",
        "myapps.bookmarks.empty.addbookmarks": "Tilføj bogmærker",
        "myapps.bookmarks.organize.title": "Organiser dine bogmærker",
        "myapps.bookmarks.organize.addbookmarks": "Tilføj bogmærker",
        "myapps.bookmarks.organize.batchremove": "Fjern",

        "myapps.mobilepagetitle.apps": "Apps",
        "myapps.mobilepagetitle.details": "Detaljer",
        "myapps.mobilepagetitle.support": "Support",
        "myapps.mobilepagetitle.settings": "Indstillinger",
        "myapps.mobilepagetitle.recommendedapps": "Anbefalet til dig",
        "myapps.mobilepagetitle.notification": "Notifikationer",
        "myapps.mobilepagetitle.archived": "Arkiveret",
        "myapps.mobilepagetitle.notification.newapps": "Nye apps",

        "myapps.dialog.openApp": "Åbn",
        "myapps.dialog.openAppWithViewClient": "Åbn i Client",
        "myapps.dialog.openAppWithBrowser": "Åbn i Browser",

        "myapps.launch.passwordvault.installExtension.description": "Denne app kan udnytte Password Vault-browserudvidelsen. <a target='_blank' href='{0}'>Installer udvidelsen</a>, hvis du ikke allerede har gjort det.",

        "deviceStatus.networkLost": "Forbindelsen blev afbrudt. Forsøger at genoprette forbindelsen ...",
        "deviceStatus.networkRestored": "Netværksforbindelsen blev gendannet",
        "api.session.expired.retry": "Sessionen er udløbet. Prøver at forny...",
        "api.entitlements.reload": "Opdaterer din visning for at opdatere apps i dit katalog.",
        "api.security.header.invalid.relogin": "Validering af sikkerhedsheader mislykkedes. Logger af ...",
        "api.server.load.error": "Vi oplever en større belastning end normalt. Prøv venligst igen senere.",
        "api.updateApps": "Opdaterer liste...",
        "api.error": "Der opstod en fejl. Prøv igen.",
        "installation.error": "Oprindelige apps er midlertidigt ikke tilgængelige",
        "service.under.maintenance.error": "Workspace ONE er midlertidigt i vedligeholdelsestilstand. Du kan starte dine apps, men visse funktioner virker muligvis ikke",
        "api.timeout": "Der opstod timeout for forbindelsen. Prøv igen.",
        "favoriteStatus.favorite": "Favorit",
        "favoriteStatus.unfavorite": "Fjern fav.",
        "favoriteStatus.offlineFavoriteMessage": "Du kan ikke tilføje et bogmærke til en app, når du er offline. Genopret forbindelse, og prøv igen",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "Du kan ikke fjerne et bogmærke fra en app, når du er offline. Genopret forbindelse, og prøv igen",
        "error.failToFavoriteApp": "Bogmærkestatus kunne ikke opdateres",
        "error.failedToResetApp": "Nulstilling af appen mislykkedes",
        "error.failToHideApp": "Appen kunne ikke fjernes",
        "error.failToShowApp": "Appen kunne ikke føjes til Launcher",
        "error.failedToBookmarkApp": "Bogmærkning af appen mislykkedes",
        "error.failedToLaunchApp": "Appen kunne ikke åbnes",
        "error.failedToRemoveAccount": "Kontoen kunne ikke fjernes. Prøv igen senere",
        "installStatus.enrollDevice": "Brug af {0} kræver aktivering af Workspace Services for at beskytte virksomhedsdata",
        "installStatus.enrollDevice.learnMore": "Læs mere",
        "installStatus.offlineInstallMessage": "Der kan ikke udføres installationsanmodninger i offlinetilstand. Genopret forbindelse, og prøv igen",
        "installStatus.activated": "Aktiveret",
        "installStatus.notActivated": "Ikke aktiveret",
        "installStatus.request": "Anmodning",
        "installStatus.update": "Opdater",
        "installStatus.processing": "Behandler",
        "installStatus.installFailedMessage": "Der gik noget galt under installationen af appen {0}. Prøv igen. Hvis problemet fortsætter, skal du kontakte din it-administrator",
        "installStatus.unenrolledDevice": "Denne app er ikke længere tilgængelig for dig. Tryk på OK for at opdatere listen.",
        "installMessage.continueInstall": "Du har tidligere forsøgt at installere denne app. ",
        "installMessage.proceedToInstall": "Klik for at fortsætte.",
        "installMessage.installingOnDevice": "Installerer på enheden...",

        "app.mobileApp.versionAndMBSize": "{0} MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0} GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Aktivér Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "Dette er påkrævet, før appen kan installeres. Du modtager automatisk:",
        "app.adaptivemanagement.valueproposition1": "Direkte installation af alle virksomhedsressourcer.",
        "app.adaptivemanagement.valueproposition2": "Sikret adgang til virksomhedens netværk.",
        "app.adaptivemanagement.valueproposition3": "Synkroniserede apps og indhold på alle dine enheder.",
        "app.adaptivemanagement.valueproposition4": "En bedre app-oplevelse, der gør dig mere produktiv.",
        "app.adaptivemanagement.privacylink": "Beskyttelse af dine personlige oplysninger",

        "app.tunnel.continue": "Fortsæt",
        "app.tunnel.text.line1": "VMware Tunnel-appen er påkrævet for at få adgang",
        "app.tunnel.text.line2": "Tunnel-appen downloades automatisk sammen med din app.",
        "app.tunnel.header": "Kræver VMware Tunnel",
        "app.tunnel.message": "For at bruge denne app skal VMware Tunnel være installeret og køre.",
        "recommendedApps.tunnel.text.line1": "VMware Tunnel-appen er påkrævet for at få adgang",
        "recommendedApps.tunnel.text.line2": "Tunnel-appen downloades automatisk sammen med din app.",
        "app.tunnel.installHelpText": "Hvis apperne ikke installeres automatisk, skal du følge denne fremgangsmåde for at aktivere appen",
        "app.tunnel.installStep1": "Trin 1: Installer appen {0}",
        "app.tunnel.installStep2": "Trin 2: Installer appen {0}",

        "requestFailed": "Anmodningen mislykkedes",
        "changeOccurred": "Der opstod en ændring",
        "requestSuccessful": "Anmodningen lykkedes",
        "accept": "Accepter",
        "decline": "Afvis",
        "termsOfUse": "Vilkår for anvendelse",
        "beforeInstallation": "Før installationen",
        "resetDesktopStatus.offlineMessage": "Du kan ikke nulstille en desktop i offlinetilstand. Genopret forbindelsen, og prøv igen",
        "resetDesktop.sucess": "Nulstilling af desktop lykkedes",
        "appCenter.someAppsMissingMessage": "Alle apps kunne ikke indlæses på dette tidspunkt",
        "appCenter.register.device": "Nogle oplysninger om din enhed skal opdateres. Tryk på Opdater for at fortsætte med Workspace ONE.",
        "appCenter.mdm.device.error": "Du har ikke længere adgang til Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Kontakt din administrator vedrørende dine kontooplysninger.",
        "appCenter.mdm.device.poll.error": "Vi kan ikke afslutte opbygningen af dit arbejdsområde nu. Prøv igen, eller kontakt din administrator.",
        "appCenter.device.status.notRegistered": "Enheden er ikke registreret",
        "appCenter.device.status.blackListed": "Denne enhed er sortlistet",
        "appCenter.device.status.deviceInputError": "Denne enhed er ugyldig! Kontakt din it-administrator",
        "appCenter.device.status.unknownError": "Der opstod en ukendt fejl",

        "appCenter.device.register": "Registrer enhed",
        "appCenter.device.moreDetails": "Flere detaljer",
        "appCenter.device.unEnrollWarningTitle": "Vil du fjerne din konto?",
        "appCenter.device.mdmUnEnrollMessage": "Hvis du fjerner din konto, vil det deaktivere adgang til virksomhedsressourcer og måske også fjerne arbejds-apps på enheden.",
        "appCenter.device.getDeviceEnrollmentStatus": "Få yderligere oplysninger",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Er du sikker på, at du vil fortsætte?",
        "appCenter.device.remove": "Fjern",
        "appCenter.device.keep": "Behold",
        "appCenter.device.disableWorkspaceMessage": "Hvis du fjerner din konto, tilbagekaldes den adgang, der er givet via Workspace ONE-appen. Apps, der er downloadet til dit springbræt, vil forblive installeret, men adgangen kan blive afbrudt. Vil du fortsætte?",
        "appCenter.noAppsMsg": "Der er i øjeblikket ingen tilgængelige apps",
        "appCenter.vppInviteTitle": "Administreret distributionsregistrering",
        "appCenter.appInstallConfirmPromptTitle": "Bekræft installation",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Godkendelse er påkrævet for",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Din anmodning er tidligere blevet nægtet",
        "appCenter.mdmAppRequestConfirmPromptMessage": "Den app, som du forsøger at få adgang til, skal godkendes af din administrator",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Du har anmodet om denne app, og din anmodning er blevet nægtet, er du sikker på, at du vil anmode igen",
        "appCenter.acceptInvite": "Accepter invitation",
        "appCenter.install": "Installer",
        "appCenter.proceed": "Aktivér Workspace Services",
        "appCenter.cancel": "Annuller",
        "appCenter.confirm": "Bekræft",
        "appCenter.searchApps": "Søg efter apps",
        "appCenter.welcomeMsg": "Installer nye apps overalt, på alle enheder!",
        "appCenter.done": "Udført",
        "appCenter.nav.privacyPage": "Side om beskyttelse af personlige oplysninger",
        "appCenter.nav.catalog": "Katalog",
        "appCenter.nav.myApps": "Mine apps",
        "appCenter.nav.favorites": "Favoritter",
        "appCenter.nav.categories": "Kategorier",
        "appCenter.nav.filterby": "Filtrer efter",
        "appCenter.nav.show": "Vis",
        "appCenter.nav.settings": "Indstillinger",
        "appCenter.nav.sortBy": "Sorter efter",
        "appCenter.nav.sortBy.alpha": "Sorter efter A-Z",
        "appCenter.nav.sortBy.inverseAlpha": "Sorter efter Z-A",
        "appCenter.nav.sortBy.customView": "Brugerdefineret visning",
        "appCenter.nav.arrange": "Arranger",
        "appCenter.nav.arrange.saved": "Brugerdefineret visning er blevet gemt!",
        "appCenter.nav.arrange.tooltip": "Fås kun til Windows.",
        "appCenter.nav.arrange.saving": "Gemmer...",
        "appCenter.nav.arrange.error": "Den brugerdefinerede visning kunne ikke gemmes",
        "appCenter.nav.filter": "Filter",
        "appCenter.installFailedTitle": "Der var et problem med app-installationen",
        "appCenter.uccConflict": "Noget gik galt med den aktuelle session. Log på igen.",

        "appCenter.search.placeholder": "Søg",
        "appCenter.search.noResults": "Der blev ikke fundet nogen resultater.",

        "appCenter.action.open": "Åbn",
        "appCenter.action.install": "Installer",
        "appCenter.action.installing": "Installerer",
        "appCenter.action.installed": "Installeret",
        "appCenter.action.reinstall": "Installer igen",
        "appCenter.action.add": "Tilføj",
        "appCenter.action.added": "Tilføjet",
        "appCenter.action.processing": "Behandler",
        "appCenter.action.update": "Opdater",
        "appCenter.action.request": "Anmodning",
        "appCenter.action.pending": "Afventer",
        "appCenter.action.view": "Vis",
        "appCenter.action.favorite": "Favorit",
        "appCenter.action.unfavorite": "Fjern fav.",

        "appCenter.internalApp.installtionModalTitle": "Trin for installation af apps",
        "appCenter.internalApp.installationStepTitle": "For at kunne åbne denne app skal du følge disse trin efter installationen",
        "appCenter.internalApp.step1": "Åbn Indstillinger fra startskærmen på dit iOS",
        "appCenter.internalApp.step2": "Tryk på Generelt",
        "appCenter.internalApp.step3": "Tryk på Profiler og Enhedsstyring",
        "appCenter.internalApp.step4": "Tryk på app-udviklerens navn under Enterprise App",
        "appCenter.internalApp.step5": "Bekræft eller Hav tillid til appen",
        "appCenter.internalApp.watchTutorial": "Se trin-for-trin vejledning",

        "appCenter.type.web": "Websted",
        "appCenter.type.native": "Indbygget app",
        "appCenter.type.native.platform": "{0} App",
        "appCenter.type.virtual": "Virtuel app",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "App-pakke",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Kategorier",
        "myapp.nav.favorites": "Favoritter",
        "myapp.nav.allApps": "Alle apps",
        "myapp.nav.recommendedApps": "Anbefalet",
        "myapp.nav.newlyEntitledApps": "Ny",
        "myapp.nav.webApps": "Websteder",
        "myapp.nav.mobileApps": "Mobile apps",
        "myapp.nav.macApps": "Mac-apps",
        "myapp.nav.windowsApps": "Windows-apps",
        "myapp.nav.virtualApps": "Virtuel",
        "myapp.label.new": "Ny",
        "myapp.nav.filterby": "Filtrer efter",
        "myapp.nav.mobile.filter.pagetitle": "Filtrer efter kategorier",
        "appCenter.nav.browseBy": "Browse efter",

        "appCenter.catalog.empty": "Det ser ikke ud, som om du har fået tildelt nogen apps endnu. De kommer snart, så kig tilbage igen snart.",

        "userInfo.adminConsole": "Admin-konsol",
        "userInfo.settings": "Indstillinger",
        "userInfo.notifications": "Notifikationer",
        "userInfo.support": "Support",
        "userInfo.preferences": "Præferencer",
        "userInfo.about": "Om",
        "userInfo.devices": "Enheder",
        "userInfo.settings.promo.title": "Download Workspace ONE-appen",
        "userInfo.settings.promo.message": "Workspace ONE giver dig en bedre oplevelse i appen. Vil du prøve den nu?",

        "userInfo.tips": "App-tip",
        "userInfo.tips.description": "Få hjælp til at bruge appen.",

        "userInfo.tips.bookmarks": "Sådan bruges bogmærker",
        "userInfo.tips.catalog": "Sådan bruges kataloget",
        "userInfo.tips.people": "Nyt: Sådan bruges personer?",
        "userInfo.tips.notification": "Nyt: Sådan bruges notifikationer?",

        "userInfo.tips.catalog.desktop1": "Klik på Åbn for at åbne et websted i browseren. Brug {0} for at tilføje et bogmærke til det.",
        "userInfo.tips.catalog.desktop2": "Klik på ikonet eller navnet for appen for at se yderligere oplysninger.",
        "userInfo.tips.catalog.mobile1": "Brug {0} for at åbne et websted i browseren. Brug {1} for at tilføje et bogmærke til det.",
        "userInfo.tips.catalog.mobile2": "Brug {0} til at installere en indbygget app på din enhed. {1} betyder, at du skal tilmelde din enhed for at bruge disse apps.",
        "userInfo.tips.catalog.mobile3": "Tryk på ikonet eller navnet for appen for at se yderligere oplysninger.",

        "userInfo.tips.bookmarks.desktop1": "Klik på feltet for at åbne webstedet i browseren.",
        "userInfo.tips.bookmarks.desktop2": "Hold markøren over feltet for at få vist yderligere handlinger i menuen '...'.",

        "userInfo.tips.bookmarks.mobile": "Tryk på en flise for at starte et websted i browseren. Tryk, og hold nede for flere handlinger.",

        "userInfo.tips.catalog.download.phone": "Tryk på ikonet {0} for at installere en indbygget app på enheden. Ikonet {1} betyder, at du skal tilmelde din enhed for at bruge disse apps.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Tryk på ikonet {0} for at åbne et websted i browseren. Tryk på ikonet {1} for at tilføje et bogmærke til webstedet. Tryk på ikonet eller navnet for appen for at se yderligere oplysninger.",

        "userInfo.tips.catalog.download.tablet": "Download apps ved at klikke på downloadknappen. Klik på appen for at få flere oplysninger.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Start apps ved at klikke på startknappen, tilføj bogmærker til apps ved at klikke på bogmærkeknappen.",

        "userInfo.tips.people.mobile": "Klik på {0} for at navigere fra en vilkårlig profil for at vende tilbage til startsiden for personsøgning.",
        "userInfo.tips.notification.mobile": "Klik på {0} for at få adgang til dine notifikationer. Notifikations-badget er aktivt, indtil du har afvist eller reageret på alle notifikationer.",

        "userInfo.tips.title": "App-tip",
        "userInfo.tips.intro": "Få hjælp til at bruge appen.",
        "userInfo.tips.desktop": "Desktop",
        "userInfo.tips.reordering.title": "Tilpas dine bogmærker!",
        "userInfo.tips.reordering.text1": "1. Gå til Brugerdefineret visning ved hjælp af rullemenuen øverst til højre.",
        "userInfo.tips.reordering.text2": "2. Vælg Arranger. ",
        "userInfo.tips.reordering.text3": "3. Træk og slip for at omarrangere dine bogmærker. Når du er færdig, skal du klikke på Gem.",
        "userInfo.tips.mobile": "Mobile enheder",

        "userInfo.removeAccount": "Fjern konto",
        "userInfo.account": "Konto",
        "userInfo.profile": "Profil",
        "userInfo.profile.name": "Navn:",
        "userInfo.profile.email": "E-mail:",
        "userInfo.profile.username": "Brugernavn:",
        "userInfo.profile.picture": "Profilbillede",
        "userInfo.profile.password": "Adgangskode",
        "userInfo.profile.passwordchange": "Skift",
        "userInfo.profile.passwordprompt": "Administrer din adgangskode til virksomhedssystemet.",
        "userInfo.password": "Adgangskode",
        "userInfo.termsofuse": "Vilkår for anvendelse",
        "userInfo.signout": "Log af",
        "userInfo.tryAgain": "Prøv igen",
        "userInfo.managedevicesettings": "Administrer enhedsindstillinger",
        "userInfo.notification": "Push-meddelelse",
        "userInfo.passcode": "Touch-id eller adgangskode",

        "appCenter.support.selfservice": "Selvbetjening",
        "appCenter.support.managedevices": "Enheder",
        "appCenter.support.managedevicestext": "Se dine enhedsoplysninger.",
        "appCenter.support.managepassword": "Skift adgangskode",
        "appCenter.support.managepasswordtext": "Skift adgangskode til din virksomhedskonto",
        "appCenter.support.gethelp": "Få hjælp",
        "appCenter.support.appstips": "Apps og tip",
        "appCenter.support.appstipstext": "Se værktøjstippet i denne app for at få hjælp",
        "appCenter.support.sendReportTitle": "Send rapport",
        "appCenter.support.sendReportDetails": "Læs om, hvordan du sender app-diagnosticering.",
        "appCenter.support.helpdesk": "Helpdesk",
        "appCenter.support.contacthelpdesk": "Kontakt helpdesk",
        "appCenter.reportProblems.ios.sendLogInstruction": "Ryst din enhed, når der opstår en fejl, så du nemt kan sende app-diagnosticering eller give feedback.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Du kan slå denne funktion til/fra i enhedens indstillinger.",

        // App Details Page
        "app.details.link.back": "Tilbage",
        "app.details.nav.details": "Detaljer",
        "app.details.nav.reviews": "Bedømmelser",
        "app.details.label.description": "Beskrivelse",
        "app.details.label.noDescription": "Ingen tilgængelige beskrivelser",
        "app.details.label.seeFullDetails": "Se detaljer",
        "app.details.label.removeBookmark": "Fjern",
        "app.details.label.resetDektop": "Nulstil",
        "app.details.label.information": "Information",
        "app.details.label.category": "Kategorier",
        "app.details.label.version": "Version",
        "app.details.label.type": "Type",
        "app.details.label.type.SAML11": "Web app",
        "app.details.label.type.SAML20": "Web app",
        "app.details.label.type.WEBAPPLINK": "Web app",
        "app.details.label.type.MDMWEB": "Web app",
        "app.details.label.type.WSFED12": "Web app",
        "app.details.label.type.XENAPP": "Xen-app",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix Desktop",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Profil",
        "app.details.label.type.VIEWPOOL": "Horizon-desktop",
        "app.details.label.type.VIEWAPP": "Horizon-app",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud-desktop",
        "app.details.label.type.DESKTONEAPPLICATION": "Horizon Cloud-app",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Web app",
        "app.details.label.type.PUBLIC": "Offentlig app",
        "app.details.label.type.INTERNAL": "Interne",
        "app.details.label.size": "Størrelse",
        "app.details.label.price": "Pris",
        "app.details.label.screenshots": "Skærmbilleder",
        "app.details.label.showMore": "Vis mere",
        "app.details.label.showLess": "Vis mindre",
        "app.details.label.setAppPassword": "Angiv app-adgangskode",
        "app.details.label.sendFeedback": "Send feedback",
        "app.details.label.feedbackSubject": "Feedback for appen {0}",
        "app.details.label.support": "Support",
        "app.details.label.developer": "Udvikler",
        "app.details.label.email": "E-mail",
        "app.details.label.phone": "Telefon",
        "app.details.appSize": "{0}MB",
        "app.details.label.launchMessage": "Alle mobilapps kan startes fra din startskærm.",

        "app.details.label.requirement": "Krav:",
        "app.details.label.packageName": "Pakkenavn:",
        "app.details.thinapp.requirement": "Denne app fungerer kun på en Windows-computer med Identity Manager Desktop installeret.",
        "app.details.viewDesktop.requirement": "Denne Horizon-desktop kræver, at {0}Horizon Client{1} 3.0 eller nyere er installeret på din computer.",
        "app.details.viewapp.requirement": "Denne Horizon Hosted-app kræver, at {0} Horizon Client{1} 3.0 eller nyere er installeret på din computer.",
        "app.details.xenapp.requirement": "Denne app kræver, at {0}Citrix Receiver {1} er installeret.",
        "app.details.xenapp.msg.IE8OrLower": "Denne app kræver, at Citrix Receiver er installeret. Bemærk! Denne app kan ikke åbnes i Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "Denne Citrix Desktop kræver, at {0} Citrix Receiver {1} er installeret.",
        "app.details.desktoneDesktop.requirement": "Denne Horizon Cloud-desktop kræver, at {0} Horizon Client {1} er installeret på computeren.",
        "app.details.desktoneApp.requirement": "Denne Horizon Cloud-app kræver, at {0} Horizon Client {1} er installeret på computeren.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "Ingen tilgængelige oplysninger",
        "app.details.noScreenshots": "Ingen tilgængelige skærmbilleder",
        "app.details.noDescription": "Beskrivelsen kommer snart.",
        "app.details.needsDeviceEnrollment": "Kræver tilmelding af enhed",
        "app.details.label.addToHomeScreen": "Tilføj til startskærm",
        "app.details.action.open": "Åbn",
        "app.details.action.bookmark": "Bogmærke",
        "app.details.action.bookmarked": "Bogmærke tilføjet",
        "app.details.action.launch": "Start",
        "app.details.action.setPassword": "Angiv adgangskode",
        "app.details.action.pvAppCredentials": "Legitimationsoplysninger",
        "app.details.info.msg.missingInfo": "Nogle oplysninger mangler. Prøv igen senere for at se alle detaljer.",
        "app.details.wsrequired.msg": "Workspace Services er påkrævede.",
        "app.details.label.addedFavorites": "Føjet til favoritter",

        "app.rating.label": "Brugerbedømmelse",

        "app.settings.label.settings": "Indstillinger",
        "app.settings.link.back": "Tilbage",
        "app.settings.managedDevices": "Administrerede enheder",
        "app.nav.tab.bookmark": "Bogmærker",
        "app.nav.tab.catalog": "Katalog",
        "app.nav.tab.people": "Personer",
        "app.nav.tab.support": "Support",
        "app.nav.tab.apps": "Apps",
        "app.nav.tab.settings": "Indstillinger",
        "app.about.heading": "Om Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc. Alle rettigheder forbeholdes. Dette produkt er beskyttet af amerikanske og internationale love og regler om ophavsret. Produkter fra VMware er beskyttet af et eller flere patenter.",
        "app.about.button.label.privacyPolicy": "Politik til beskyttelse af personlige oplysninger",
        "app.about.button.label.patents": "Patent",
        "app.about.button.label.licenseAgreement": "Licensaftale",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents",
        "app.about.licenseAgreementLink": "http://www.vmware.com/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Enheder",
        "app.devices.tableColumn.deviceName": "Enhedsnavn",
        "app.devices.tableColumn.userDeviceId": "Enheds-id",
        "app.devices.tableColumn.lastLoginTime": "Seneste logontidspunkt",
        "app.devices.unlinkDevice": "Fjern link",
        "app.devices.unlinkedDevice": "Fjernet link",
        "app.devices.emptyDeviceListMessage": "Du har ikke en enhed, der er tilknyttet din konto.",

        "app.thinappMultiDeviceAct.heading": "Denne app føjes til godkendte enheder. Hvis du vil bruge \"{0}\" på flere enheder, kan du søge efter navnet på enheden herunder og klikke på knappen Anmod.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Enhedsnavn",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Status",
        "app.thinappMultiDeviceAct.button.request": "Anmodning",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Afvist",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "Afventer",
        "app.thinappMultiDeviceAct.activationState.activated": "Godkendt",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Ikke aktiveret",

        "app.thinappsInPackage.button.done": "Udført",
        "app.thinappsInPackage.button.bookmarkAll": "Tilføj bogmærke til alle",
        "app.thinappsInPackage.info": "App-pakke",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} apps",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} match fundet.",
        "app.thinappsInPackage.action.instruction": "Vælg bogmærkeikonet for at tilføje bogmærke til enkelte apps, eller vælg knappen for at tilføje bogmærke til alle apps.",
        "app.thinappsInPackage.search.placeholder": "Søg i pakke",

        "app.setAppPassword.heading": "Angiv adgangskode",
        "app.setAppPassword.instruction": "Anvend formularen herunder for at oprette en adgangskode for denne app. Adgangskoden skal bestå af mindst tre tegn.",
        "app.setAppPassword.label.password": "Adgangskode",
        "app.setAppPassword.label.confirmPassword": "Bekræft adgangskode",
        "app.setAppPassword.label.generate": "Generer adgangskode",
        "app.setAppPassword.error.passwordsNoMatch": "Adgangskoderne stemmer ikke overens.",
        "app.setAppPassword.msg.success": "Din app-adgangskode er blevet oprettet.",
        "app.setAppPassword.msg.fail": "Der opstod en fejl under instilling af din adgangskode. Prøv igen.",

        "pvapp.setAppPassword.heading": "Angiv gemte legitimationsoplysninger for {0}",
        "pvapp.setAppPassword.instruction": "Brug formularen herunder for at angive gemte legitimationsoplysninger for denne app.",
        "pvapp.setAppPassword.label.username": "Brugernavn",
        "pvapp.setAppPassword.label.password": "Adgangskode",
        "pvapp.setAppPassword.error.userNameEmpty": "Brugernavnet er tomt.",
        "pvapp.setAppPassword.error.passwordEmpty": "Adgangskoden er tom.",
        "pvapp.setAppPassword.msg.success": "Dine app-legitimationsoplysninger er blevet angivet korrekt.",
        "pvapp.setAppPassword.msg.fail": "Der opstod en fejl under angivelsen af dine app-legitimationsoplysninger. Prøv igen.",

        "app.launchPassword.heading": "Adgangskode anmodning",
        "app.launchPassword.view.instruction": "Vi skal bruge din adgangskode til at logge på denne Windows-ressource {0}.",
        "app.launchPassword.label.userName": "Bruger",
        "app.launchPassword.label.password": "Adgangskode",
        "app.launchPassword.button.label.signin": "Log på",

        "app.changePassword.title": "Skift adgangskode",
        "app.changePassword.enterCurrentPassword": "Indtast nuværende adgangskode",
        "app.changePassword.enterNewPassword": "Indtast ny adgangskode",
        "app.changePassword.confirmNewPassword": "Bekræft ny adgangskode",
        "app.changePassword.error.passwordsNoMatch": "De nye adgangskoder stemmer ikke overens.",
        "app.changePassword.error.requirementsNoMatch": "Den nye adgangskode opfylder ikke kravene.",
        "app.changePassword.success": "Den nye adgangskode blev gemt!",
        "app.changePassword.label.email": "E-mail",
        "app.changePassword.label.phone": "Telefon",

        "app.passwordPolicy.passwordRequirements": "Krav til adgangskode",
        "app.passwordPolicy.label.currentpassword": "Nuværende adgangskode",
        "app.passwordPolicy.label.newpassword": "Ny adgangskode",
        "app.passwordPolicy.label.confirmpassword": "Bekræft ny adgangskode",
        "app.passwordPolicy.minLength": "Min. {0} tegn",
        "app.passwordPolicy.leastIncludes": "skal indeholde mindst:",
        "app.passwordPolicy.minLower": "{0} Bogstav",
        "app.passwordPolicy.minUpper": "{0} Stort bogstav",
        "app.passwordPolicy.minDigit": "{0} Tal",
        "app.passwordPolicy.minSpecial": "{0} Specialtegn",

        "app.coachmarks.bookmarkTitle": "Sådan bruges bogmærker",
        "app.coachmarks.bookmarkMessage": "Tryk for at åbne websteder, tryk og hold nede for at se mere.",
        "app.coachmarks.catalogTitle": "Sådan bruges kataloget",
        "app.coachmarks.catalogMessage": "Installer eller opdater apps, tilføj til Bogmærker, eller åbn direkte herfra.",
        "app.coachmarks.buttonText": "Forstået!",

        "app.logout.confirm.msg": "Hvis du logger af Workspace ONE, vil din aktuelle session blive afsluttet. Apps downloadet fra kataloget vil forblive på enheden, men ingen nye apps vil blive gjort tilgængelige, før du logger på igen.",
        "app.logout.title": "ADVARSEL",

        "app.passwordVault.banner.msg": "Du har apps, der kan udnytte Workspace ONE-udvidelsen.",
        "app.passwordVault.banner.button.install": "Installer",
        "app.passwordVault.banner.setPreference": "Du kan hente det senere under Indstillinger - Præferencer.",
        "app.passwordVault.banner.donotshowagain": "Vis ikke dette igen",
        "app.passwordVault.banner.button.later": "Senere",
        "app.passwordVault.banner.button.get": "Hent",
        "app.passwordVault.preference.title": "Workspace ONE-udvidelse",
        "app.passwordVault.preference.instruction": "Du har apps, der kan udnytte Workspace ONE-udvidelsen.",
        "app.passwordVault.preference.getextension": "Hent udvidelsen.",
        "app.bookmarking.change.tab.title": "Er du stadig ved at arrangere dine bogmærker?",
        "app.bookmarking.change.tab.body": "De ændringer, du har foretaget, vil ikke blive gemt? Vil du fortsætte med at arrangere dine bogmærker?",
        "app.bookmarking.touch.disabled": "Du kan omorganisere apps, når du bruger trackpad eller mus.",
        "app.bookmarking.change.tab.exit": "Nej, afslut",
        "app.bookmarking.change.tab.stay": "Ja, bliv her",
        "app.virtual.disabled": "Deaktiveret af administrator",
        "app.virtual.unavailable": "Denne app er ikke tilgængelig på denne enhed",
        "app.virtual.not.available": "Ikke tilgængelig",

        "app.notification.type.NEW_ENTITLEMENTS": "Tjek dem ud",
        "app.notification.type.PASSWORD_EXPIRING": "Opdater adgangskode",
        "app.notification.action.delete": "Slet",
        "notification.new.entitlements.heading": "Nye rettigheder",
        "notification.new.entitlements.message": "Du har fået tildelt {0} nye rettigheder",
        "app.notification.delete.header": "Slet denne meddelelse?",
        "app.notification.delete.msg": "Er du sikker på, at du vil slette denne meddelelse? Du kan vælge Arkivér, hvis du vil arkivere den senere. ",
        "app.notification.delete.text": "Slet",
        "app.notification.keep.text": "Behold",
        "app.notification.restore.text": "Genopret",
        "app.notification.delete.toast.msg": "Meddelelsen er blevet slettet.",
        "app.notification.empty": "Så er du helt på omgangshøjde!",
        "app.notification.more.actions": "Flere handlinger",
        "app.notification.archive.all": "Arkivér alle",

        "app.notification.bookmark.all.error": "Beklager, vi kunne ikke bogmærke dine nye apps",
        "app.notification.bookmark.all.success": "Alle nye apps er blevet føjet til favoritter",
        "app.notification.delete.all": "Slet alle",
        "app.notification.see.archived": "Vis arkiverede",
        "app.notification.see.all": "Se alle notifikationer",
        "app.notification.newApps.title": "Du har nye apps!",
        "app.notification.newApps.excessIconsMessage": "+ {0} mere",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Se detaljer",
        "app.tooltip.clicktolaunch": "Klik for at starte",

        "recommendedApps.install.proceed": "Fortsæt",
        "recommendedApps.install.title": "Installer anbefalede apps",
        "recommendedApps.install.confirm.msg": "Du vil få anvisninger til at fortsætte installationen af dine apps.",
        "recommendedApps.text1": "Disse apps bruges ofte af dine kolleger.",
        "recommendedApps.text2": "Du kan installere dem nu eller finde dem senere i dit katalog.",
        "recommendedApps.selectAll": "Vælg alle",
        "recommendedApps.apps": "Apps",
        "recommendedApps.install": "Installer",
        "recommendedApps.skip": "Spring over",

        "app.desktopapp.settings.title.account": "Konto",
        "app.desktopapp.settings.title.devices": "Enheder",
        "app.desktopapp.settings.title.preferences": "Præferencer",

        "appCenter.peopleSearch.placeholder": "Søg efter personer",
        "app.tooltip.copyEmail": "Kopier e-mail",
        "app.peopleSearch.emailCopied": "E-mail kopieret",
        "appCenter.peopleSearch.noResults": "Der blev ikke fundet nogen resultater.",
        "appCenter.peopleSearch.tryNewSearch": "Prøv en ny søgning.",
        "appCenter.peopleSearch.atLeastThreeChars": "Indtast 3 eller flere tegn ovenfor for at søge.",
        "appCenter.searchPeople": "Søg efter personer.",
        "myapps.mobilepagetitle.people": "Personer",
        "app.people.labels.team": "Mit team",
        "app.people.labels.recent": "Nylige",
        "app.people.labels.manager": "Leder",
        "app.people.labels.peers": "Peers",
        "app.people.labels.directReports": "Overordnede, du rapporterer direkte til",
        "app.people.labels.profile": "Profil",
        "app.people.labels.org": "Org",
        "app.people.labels.workEmail": "Arbejds-e-mail",
        "app.people.labels.workPhone": "Arbejdstelefon",
        "app.people.labels.alternateNumber": "Alternativ telefon",
        "app.people.labels.mobile": "Mobil",
        "app.people.labels.address": "Adresse",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Ledere",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "Medarbejdernummer",
        "app.people.labels.skills": "Færdigheder",
        "app.people.labels.businessUnit": "Forretningsenhed",
        "app.people.labels.costCenter": "Omkostningssted",
        "app.people.labels.physicalDeliveryOfficeName": "Kontorplacering",

        "hub.apps": "Apps",
        "hub.notifications": "Notifikationer",
        "hub.notifications.welcome": "Velkommen!",
        "hub.notifications.first.time.message": "Notifikationer vises her, når du begynder at bruge Hub.",
        "hub.notifications.new.apps.favorite.all": "Favorit alle",
        "hub.notifications.congratulations": "Tillykke!",
        "hub.notifications.empty.description1": "Ingen nye notifikationer.",
        "hub.notifications.empty.description2": "Nyd den ekstra plads.",
        "hub.v2.notifications.empty.description": "Du er på omgangshøjde med dine notifikationer",
        "hub.v2.notifications.first.time.description": "Notifikationer vises her, når du begynder at bruge Hub.",
        "hub.notifications.empty.description.archived": "Ingen arkiverede notifikationer.",
        "hub.notifications.priority": "Prioritet",
        "hub.notifications.today": "I dag",
        "hub.notifications.yesterday": "I går",
        "hub.notifications.lastWeek": "Sidste uge",
        "hub.notifications.lastMonth": "Sidste måned",
        "hub.notifications.older": "Ældre",
        "hub.notifications.archived.label": "Arkiveret",
        "hub.notifications.action.success": "Det lykkedes!",
        "hub.notifications.action.failure": "Beklager, der synes at være en fejl under udførelse af denne handling",
        "hub.notifications.moreDetails": "Flere detaljer",
        "hub.notifications.dialog.action.completed": "Fuldført",
        "hub.notifications.dialog.action.needed": "Afventer",
        "hub.notifications.dialog.action.all.notifications": "Alle notifikationer",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Søg efter apps",
        "hub.apps.favorites": "Favoritter",
        "hub.apps.newApps": "Ny",
        "hub.apps.recommended": "Anbefalet",
        "hub.apps.categories": "Kategorier",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Wow, der er en masse plads her.",
        "hub.apps.no.apps.msg2": "Kontakt administratoren for at få arbejds-apps.",
        "hub.apps.search.in.category": "{0} Resultater i Kategori:",
        "hub.apps.search.in.app": "{0} Resultater i App-navn og Beskrivelse",
        "hub.apps.search.header": "Samlede resultater",
        "hub.apps.search.no.result.header": "Ingen resultater.",
        "hub.apps.search.no.result.msg": "Prøv igen med et andet ord.",
        "hub.apps.searchpeople.no.result.msg": "Prøv igen med et andet navn.",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "App",
        "hub.apps.type.anyApp": "AnyApp",
        "hub.people": "Personer",
        "hub.people.search.text": "Søg efter personer",
        "hub.people.labels.mypeers": "Mine Peers",
        "hub.people.labels.directreports": "Overordnede, du rapporterer direkte til",
        "hub.people.labels.manager": "Min leder",
        "hub.people.labels.organization": "Organisation",
        "hub.people.search.result": "Resultater",
        "hub.app.install.prompt.title": "Ønsker du at installere",

        "hub.actionsheet.label.viewDetails": "Vis detaljer",
        "hub.actionsheet.label.removeFavorites": "Fjern fra Favoritter",
        "hub.actionsheet.label.addFavorites": "Føj til favoritter",
        "hub.password.done": "Udført",

        "hub.placeholder.changepassword.username": "Brugernavn",
        "hub.placeholder.changepassword.password": "Adgangskode",
        "hub.placeholder.changepassword.confirmpassword": "Bekræft adgangskode",

        "hub.tunnel.text.line1": "Tunnel er påkrævet for at få adgang ",
        "hub.tunnel.text.line2": "Tunnel-appen downloades automatisk sammen med din app.",

        "hub.promotions.banner.category.title": "Kategori-højdepunkter",
        "hub.promotions.banner.category.open": "Åbn",
        "hub.promotions.banner.app.get": "Hent",
        "hub.promotions.banner.disabled": "Deaktiveret af administrator",
        "hub.require.app.management": "Administreret",
        "hub.app.installing.alert.mobile.message": "Appen {0} er ved at blive installeret. Tjek din telefons startskærm for opdateringer.",
        "hub.app.installing.alert.desktop.message": "Appen {0} er ved at blive installeret. Tjek din desktops app launcher for opdateringer.",

        "hub.nav.label.apps": "Apps",
        "hub.nav.label.people": "Personer",
        "hub.nav.label.notification": "Notifikationer",
        "hub.nav.label.settings": "Indstillinger",
        "hub.nav.label.account": "Konto",
        "hub.nav.label.signout": "Log af",
        "hub.userInfo.adminConsole": "Admin-konsol",
        "hub.userInfo.signout": "Log af",
        "hub.userInfo.settings": "Indstillinger",
        "hub.userInfo.account": "Konto",
        "hub.userInfo.devices": "Enheder",
        "hub.userInfo.whatsnew": "Nyheder",
        "hub.userInfo.about": "Hvad er der om",
        "hub.download.ios": "Hub for iOS",
        "hub.download.android": "Hub for Android",
        "hub.download.mac": "Hub for Mac",
        "hub.download.windows": "Hub for Windows",
        "hub.download.subtitle.mobile": "Få adgang til notifikationer, startside og meget mere på ét sted.",
        "hub.download.subtitle.desktop": "Hent desktop-notifikationer, og start direkte fra din dock.",
        "hub.preferences.title": "Præferencer",
        "hub.preferences.horizon.subtitle": "Horizon Remote-apps",
        "hub.preferences.launch.question": "Hvordan vil du starte Horizon Remote-apps?",
        "hub.about.title": "Om VMware Intelligent Hub",
        "hub.apps.allApps": "Alle apps",
        "hub.apps.configure.favorites.msg": "Tilføj dine favorit-apps her for at få hurtigere adgang",
        "hub.apps.configure.favorites": "Konfigurer",
        "hub.apps.edit.favorites": "Rediger",

        "hub.contextDialog.label.removeFavorites": "Fjern fra Favoritter",
        "hub.contextDialog.label.addFavorites": "Føj til favoritter",
        "hub.contextDialog.label.viewDetails": "Vis detaljer",
        "hub.apps.edit.favorites.header": "Favoritter – redigeringstilstand",
        "hub.apps.edit.favorites.prompt": "Træk og slip for at ændre rækkefølge.",
        "hub.apps.edit.favorites.save": "Gem",
        "hub.apps.edit.favorites.cancel": "Annuller ændringer",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Du har opdateret rækkefølgen, vælg enten at annullere eller gemme, før du afslutter",
        "hub.apps.edit.favorites.savecustomordering": "Gemmer brugerdefineret rækkefølge. For at undgå tab af resultaterne skal du undlade at navigere væk",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Du kan ikke omorganisere på berøringsfølsomme skærme.",
        "hub.apps.edit.favorites.notify.success": "Omorganisering af dine favoritter er blevet gemt!",
        "hub.apps.edit.favorites.notify.error": "Der opstod en fejl. Kunne ikke gemme omorganisering, prøv igen senere",

        "hub.nav.label.settings.settings": "Indstillinger",
        "hub.nav.label.settings.account": "Konto",
        "hub.nav.label.settings.about": "Om",
        "hub.nav.label.settings.devices": "Enheder",
        "hub.nav.label.settings.preferences": "Præferencer",
        "hub.nav.label.settings.whatsnew": "Nyheder",

        "hub.apps.detail.back": "Tilbage til apps",
        "hub.people.detail.back": "Tilbage til personer",
        "hub.people.notifications.back": "Tilbage til notifikationer",

        "hub.nav.label.notifications.filter": "Filter",
        "hub.nav.label.notifications.all.notifications": "Alle notifikationer",
        "hub.nav.label.notifications.action.needed": "Afventer",
        "hub.nav.label.notifications.completed": "Fuldført",
        "hub.long.card.description": "Beskrivelse",
        "hub.long.card.Comment": "Kommentar",
        "hub.long.card.Comment.placeholder": "Tilføj en kommentar",

        "hub.appLaunch.open": "Åbn",
        "hub.appLaunch.cancel": "Annuller"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "und",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Installieren",
        "app.banner.open": "Öffnen",
        "app.promotion.banner.donotshowagain": "Diese Informationen nicht mehr anzeigen. Ein Abruf ist zu einem späteren Zeitpunkt über „Einstellungen - Über diese Anwendung“ möglich.",
        "app.promotion.banner.open": "In App öffnen",
        "app.promotion.banner.download": "App herunterladen",
        "app.promotion.banner.message": "Nutzen Sie die App optimal.",
        "horizonDesktopNotDetected": "VMware Identity Manager Desktop müssen zum Öffnen dieser Anwendung auf diesem Computer installiert sein. <a target='_blank' href='{0}'>Installieren Sie gegebenenfalls VMware Identity Manager Desktop</a>, falls dies nicht bereits geschehen ist.",
        "viewAppsTooltip": "Für diese Horizon-gehostete Anwendung muss {0}Horizon Client{1} 3.0 oder höher auf Ihrem Computer installiert sein.",
        "desktoneDesktopTooltip": "Für diesen Horizon Cloud-Desktop muss {0} Horizon Client {1} auf dem Computer installiert sein.",
        "desktoneApplicationTooltip": "Für diese Horizon Cloud-Anwendung muss {0} Horizon Client {1} auf dem Computer installiert sein.",
        "xenAppsReceiverNotDetected": "Citrix Receiver muss zur Öffnung dieser Anwendung auf diesem Computer installiert sein. <a target='_blank' href='{0}'>Installieren Sie gegebenenfalls Citrix Receiver</a>, falls dies nicht bereits geschehen ist.",
        "button.save": "Speichern",
        "button.update": "Aktualisieren",
        "button.openHorizonView": "Horizon Client öffnen",
        "myapps.launch.openApp": "{0} öffnen",
        "button.openApp": "Anwendung öffnen",
        "button.clear": "Löschen",
        "button.close": "Schließen",
        "button.cancel": "Abbrechen",
        "button.download": "Herunterladen",
        "myapps.launch.title.launch": "Starten",
        "myapps.launch.title": "Anwendung starten",
        "myapps.launch.view.openWith": "Öffnen mit",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Browser",
        "myapps.launch.view.preferredClient.isDefault": "(Standard)",
        "myapps.launch.view.selectPreferredLaunchClient": "Wählen Sie, wie Sie Horizon-Desktops und -Anwendungen starten möchten",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Horizon-Remoteanwendungen",
        "myapps.launch.view.selectPreferredLaunchClientText": "Durch Öffnen der Horizon-Remoteanwendungen in Horizon Client wird die Benutzererfahrung im Vergleich zum Browser verbessert.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Wie möchten Sie die Horizon-Remoteanwendungen starten?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "WÄHLEN SIE EINEN STANDARDMÄSSIGEN START...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Dies legt das standardmäßige Startverhalten bei Öffnen eines Horizon-Desktops von Ihrem Gerät fest. Sollten Sie „Horizon Client“ als Ihren Standard wählen, müssen Sie Horizon Client installiert haben. <a target='_blank' href='{0}'>Installieren Sie gegebenenfalls Horizon Client</a>, falls dies nicht bereits geschehen ist.",
        "myapps.launch.view.unknownClientType": "Unbekannter Clienttyp zum Öffnen von Horizon Client.",
        "myapps.launch.view.openWithView": "Mit Horizon Client öffnen",
        "myapps.launch.view.openWithBrowser": "Mit Browser öffnen",

        "myapps.launch.view.preferredClient.byBrowser.description": "Bei der Auswahl von „Browser“ öffnet sich der Desktop bzw. die Anwendung in einem neuen Browserfenster.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Für diese Option ist Horizon Client 3.0 oder höher erforderlich. <a target='_blank' href='{0}'>Installieren Sie gegebenenfalls Horizon Client</a>, falls dies nicht bereits geschehen ist.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Sie können diese Einstellung jederzeit in Voreinstellungen ändern.",
        "myapps.launch.view.preferredClient.saveSuccess": "Die ausgewählte Voreinstellung wurde erfolgreich gespeichert.",
        "myapps.launch.msg.launching.desktop": "Desktop <b>{0}</b> wird gestartet......",
        "myapps.launch.msg.launching.application": "Anwendung <b>{0}</b> wird gestartet.....",
        "myapps.noAppsMsg": "Sie haben keine Anwendungen hinzugefügt. Sie können zu {0} navigieren, um Anwendungen hinzuzufügen.",
        "myapps.noFavAppsMsg": "Sie haben keine Lesezeichen für Anwendungen festgelegt.",
        "myapps.welcomeMsg": "Hallo {0}. Hier sind Ihre Anwendungen!",
        "myapps.bookmarks.empty.message": "Speichern Sie häufig verwendete Apps für den schnellen Zugriff als Lesezeichen.",
        "myapps.bookmarks.empty.hidecatalog.message": "Derzeit sind keine zu verwendenden Anwendungen verfügbar.",
        "myapps.bookmarks.empty.addbookmarks": "Lesezeichen hinzufügen",
        "myapps.bookmarks.organize.title": "Lesezeichen organisieren",
        "myapps.bookmarks.organize.addbookmarks": "Lesezeichen hinzufügen",
        "myapps.bookmarks.organize.batchremove": "Entfernen",

        "myapps.mobilepagetitle.apps": "Apps",
        "myapps.mobilepagetitle.details": "Details",
        "myapps.mobilepagetitle.support": "Support",
        "myapps.mobilepagetitle.settings": "Einstellungen",
        "myapps.mobilepagetitle.recommendedapps": "Für Sie empfohlen",
        "myapps.mobilepagetitle.notification": "Benachrichtigun­gen",
        "myapps.mobilepagetitle.archived": "Archiviert",
        "myapps.mobilepagetitle.notification.newapps": "Neue Apps",

        "myapps.dialog.openApp": "Öffnen",
        "myapps.dialog.openAppWithViewClient": "Im Client öffnen",
        "myapps.dialog.openAppWithBrowser": "Im Browser öffnen",

        "myapps.launch.passwordvault.installExtension.description": "Diese Anwendung kann die Password Vault-Browsererweiterung verwenden. <a target='_blank' href='{0}'>Installieren Sie gegebenenfalls die Erweiterung</a>, falls dies nicht bereits geschehen ist.",

        "deviceStatus.networkLost": "Verbindung getrennt. Es wird versucht, die Verbindung wiederherzustellen...",
        "deviceStatus.networkRestored": "Netzwerkverbindung wiederhergestellt",
        "api.session.expired.retry": "Sitzung abgelaufen. Es wird versucht, sie zu erneuern...",
        "api.entitlements.reload": "Frischen Sie die Ansicht auf, um die Apps in Ihrem Katalog zu aktualisieren.",
        "api.security.header.invalid.relogin": "Validierung von Sicherheitsheader fehlgeschlagen, Abmeldung läuft...",
        "api.server.load.error": "Die Auslastung ist zurzeit höher als üblich. Versuchen Sie es später erneut.",
        "api.updateApps": "Liste wird aktualisiert ...",
        "api.error": "Ein Fehler ist aufgetreten. Versuchen Sie es erneut.",
        "installation.error": "Native Apps sind vorübergehend nicht verfügbar",
        "service.under.maintenance.error": "Workspace ONE befindet sich vorübergehend im Wartungsmodus. Sie können Ihre Anwendungen starten; einige Funktionen funktionieren aber möglicherweise nicht.",
        "api.timeout": "Verbindung abgelaufen. Erneut versuchen",
        "favoriteStatus.favorite": "Favorisiert",
        "favoriteStatus.unfavorite": "Defavorisieren",
        "favoriteStatus.offlineFavoriteMessage": "Festlegen eines Lesezeichens für eine Anwendung ist im Offlinebetrieb nicht möglich. Stellen Sie die Verbindung wieder her und versuchen Sie es erneut.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "Entfernen eines Lesezeichens für eine Anwendung ist im Offlinebetrieb nicht möglich. Stellen Sie die Verbindung wieder her und versuchen Sie es erneut.",
        "error.failToFavoriteApp": "Aktualisieren des Lesezeichenstatus fehlgeschlagen",
        "error.failedToResetApp": "Anwendung konnte nicht zurückgesetzt werden.",
        "error.failToHideApp": "Entfernen der App fehlgeschlagen",
        "error.failToShowApp": "Hinzufügen der App zu Launcher fehlgeschlagen",
        "error.failedToBookmarkApp": "Lesezeichen für Anwendung konnte nicht gesetzt werden.",
        "error.failedToLaunchApp": "Anwendung konnte nicht geöffnet werden.",
        "error.failedToRemoveAccount": "Konto konnte nicht entfernt werden. Versuchen Sie es später erneut.",
        "installStatus.enrollDevice": "Die Nutzung von {0} erfordert die Aktivierung von Workspace Services, um Firmendaten zu schützen.",
        "installStatus.enrollDevice.learnMore": "Mehr erfahren",
        "installStatus.offlineInstallMessage": "Installationsaufforderungen sind im Offlinebetrieb nicht verfügbar. Stellen Sie die Verbindung wieder her und versuchen Sie es erneut.",
        "installStatus.activated": "Aktiviert",
        "installStatus.notActivated": "Nicht aktiviert",
        "installStatus.request": "Anfordern",
        "installStatus.update": "Aktualisieren",
        "installStatus.processing": "In Bearbeitung",
        "installStatus.installFailedMessage": "Fehler beim Installieren der App {0}. Versuchen Sie es erneut. Wenn dieses Problem weiterhin besteht, wenden Sie sich an Ihren IT-Administrator.",
        "installStatus.unenrolledDevice": "Diese Anwendung steht nicht mehr zur Verfügung. Bitte drücken Sie OK, um die Liste zu aktualisieren.",
        "installMessage.continueInstall": "Sie haben bereits zu einem früheren Zeitpunkt versucht, diese App zu installieren. ",
        "installMessage.proceedToInstall": "Klicken Sie hier, um fortzufahren.",
        "installMessage.installingOnDevice": "Installation auf Gerät läuft...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Workspace Services aktivieren",
        "app.adaptivemanagement.ws1servicessubtitle": "Dies ist erforderlich, bevor die Anwendung installiert werden kann. Sie erhalten automatisch:",
        "app.adaptivemanagement.valueproposition1": "Direkte Installation aller Firmenressourcen.",
        "app.adaptivemanagement.valueproposition2": "Sicheren Zugriff auf das Firmennetzwerk.",
        "app.adaptivemanagement.valueproposition3": "Synchronisierte App und Inhalte auf allen Geräten.",
        "app.adaptivemanagement.valueproposition4": "Verbesserte App-Erfahrung zur Steigerung der Produktivität.",
        "app.adaptivemanagement.privacylink": "Datenschutz",

        "app.tunnel.continue": "Fortfahren",
        "app.tunnel.text.line1": "VMware Tunnel-App für den Zugriff erforderlich",
        "app.tunnel.text.line2": "Tunnel-App wird automatisch zusammen mit Ihrer App heruntergeladen.",
        "app.tunnel.header": "Benötigt VMware Tunnel",
        "app.tunnel.message": "Um diese App zu verwenden, muss VMware Tunnel installiert und ausgeführt werden.",
        "recommendedApps.tunnel.text.line1": "VMware Tunnel-App für den Zugriff erforderlich",
        "recommendedApps.tunnel.text.line2": "Tunnel-App wird automatisch zusammen mit Ihrer App heruntergeladen.",
        "app.tunnel.installHelpText": "Wenn die Apps nicht automatisch installiert werden, führen Sie diese Schritte aus, um die App zu aktivieren",
        "app.tunnel.installStep1": "Schritt 1: Installieren der App {0}",
        "app.tunnel.installStep2": "Schritt 2: Installieren der App {0}",

        "requestFailed": "Anforderung fehlgeschlagen",
        "changeOccurred": "Änderung aufgetreten",
        "requestSuccessful": "Anforderung erfolgreich",
        "accept": "Akzeptieren",
        "decline": "Ablehnen",
        "termsOfUse": "Nutzungsbedingungen",
        "beforeInstallation": "Vor der Installation",
        "resetDesktopStatus.offlineMessage": "Ein Desktop kann im Offlinebetrieb nicht zurückgesetzt werden. Stellen Sie die Verbindung wieder her und versuchen Sie es erneut.",
        "resetDesktop.sucess": "Desktop erfolgreich zurückgesetzt.",
        "appCenter.someAppsMissingMessage": "Alle Apps konnten momentan nicht geladen werden",
        "appCenter.register.device": "Einige Informationen zu Ihrem Gerät müssen aktualisiert werden. Drücken Sie auf „Aktualisieren“, um mit Workspace ONE fortzufahren.",
        "appCenter.mdm.device.error": "Sie haben kein Zugriff mehr auf Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Wenden Sie sich an Ihren Administrator, um Kontodetails zu erhalten.",
        "appCenter.mdm.device.poll.error": "Die Erstellung Ihres Arbeitsbereichs kann zurzeit nicht abgeschlossen werden. Versuchen Sie es erneut, oder wenden Sie sich an Ihren Administrator.",
        "appCenter.device.status.notRegistered": "Gerät ist nicht angemeldet",
        "appCenter.device.status.blackListed": "Dieses Gerät ist auf der Blacklist",
        "appCenter.device.status.deviceInputError": "Gerät unzulässig. Wenden Sie sich bitte an Ihren IT-Administrator",
        "appCenter.device.status.unknownError": "Unbekannter Fehler",

        "appCenter.device.register": "Gerät anmelden",
        "appCenter.device.moreDetails": "Weitere Details",
        "appCenter.device.unEnrollWarningTitle": "Soll Ihr Konto entfernt werden?",
        "appCenter.device.mdmUnEnrollMessage": "Nach dem Entfernen Ihres Kontos können Sie nicht mehr auf Unternehmensressourcen zugreifen und möglicherweise werden Unternehmens-Apps von diesem Gerät gelöscht.",
        "appCenter.device.getDeviceEnrollmentStatus": "Zusätzliche Informationen abrufen",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Möchten Sie wirklich fortfahren?",
        "appCenter.device.remove": "Entfernen",
        "appCenter.device.keep": "Beibehalten",
        "appCenter.device.disableWorkspaceMessage": "Durch Entfernen Ihres Kontos wird der von der Workspace ONE-Anwendung gewährte Zugriff widerrufen. Auf Ihr Springboard heruntergeladene Anwendungen bleiben installiert, aber der Zugriff ist möglicherweise gesperrt. Möchten Sie fortfahren?",
        "appCenter.noAppsMsg": "Derzeit sind keine Apps verfügbar",
        "appCenter.vppInviteTitle": "Registrierung für verwaltete Verteilung",
        "appCenter.appInstallConfirmPromptTitle": "Installation bestätigen",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Genehmigung erforderlich für",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Ihre Anforderung wurde zuvor abgelehnt",
        "appCenter.mdmAppRequestConfirmPromptMessage": "Die Anwendung, auf die Sie zugreifen möchten, muss von Ihrem Administrator genehmigt werden",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Sie haben diese Anwendung angefordert, und Ihre Anforderung wurde abgelehnt. Möchten Sie die Anforderung wirklich erneut senden?",
        "appCenter.acceptInvite": "Einladung annehmen",
        "appCenter.install": "Installieren",
        "appCenter.proceed": "Workspace Services aktivieren",
        "appCenter.cancel": "Abbrechen",
        "appCenter.confirm": "Bestätigen",
        "appCenter.searchApps": "Suchen Sie nach Apps.",
        "appCenter.welcomeMsg": "Installieren Sie neue Apps überall, auf allen Geräten!",
        "appCenter.done": "Fertig",
        "appCenter.nav.privacyPage": "Seite „Datenschutz“",
        "appCenter.nav.catalog": "Katalog",
        "appCenter.nav.myApps": "Eigene Apps",
        "appCenter.nav.favorites": "Favoriten",
        "appCenter.nav.categories": "Kategorien",
        "appCenter.nav.filterby": "Filtern nach",
        "appCenter.nav.show": "Einblenden",
        "appCenter.nav.settings": "Einstellungen",
        "appCenter.nav.sortBy": "Sortieren nach",
        "appCenter.nav.sortBy.alpha": "Sortieren nach A-Z",
        "appCenter.nav.sortBy.inverseAlpha": "Sortieren nach Z-A",
        "appCenter.nav.sortBy.customView": "Benutzerdefinierte Ansicht",
        "appCenter.nav.arrange": "Anordnen",
        "appCenter.nav.arrange.saved": "Benutzerdefinierte Ansicht wurde gespeichert!",
        "appCenter.nav.arrange.tooltip": "Nur unter Windows verfügbar.",
        "appCenter.nav.arrange.saving": "Wird gespeichert...",
        "appCenter.nav.arrange.error": "Benutzerdefinierte Ansicht konnte nicht gespeichert werden",
        "appCenter.nav.filter": "Filter",
        "appCenter.installFailedTitle": "Problem bei der Installation der App",
        "appCenter.uccConflict": "In der aktuellen Sitzung ist ein Fehler aufgetreten. Melden Sie sich erneut an.",

        "appCenter.search.placeholder": "Suchen",
        "appCenter.search.noResults": "Es wurden keine Ergebnisse gefunden.",

        "appCenter.action.open": "Öffnen",
        "appCenter.action.install": "Installieren",
        "appCenter.action.installing": "Wird installiert",
        "appCenter.action.installed": "Installiert",
        "appCenter.action.reinstall": "Erneut installieren",
        "appCenter.action.add": "Hinzufügen",
        "appCenter.action.added": "Hinzugefügt",
        "appCenter.action.processing": "In Bearbeitung",
        "appCenter.action.update": "Aktualisieren",
        "appCenter.action.request": "Anfordern",
        "appCenter.action.pending": "Ausstehend",
        "appCenter.action.view": "Anzeigen",
        "appCenter.action.favorite": "Favorisiert",
        "appCenter.action.unfavorite": "Defavorisieren",

        "appCenter.internalApp.installtionModalTitle": "Schritte für die Anwendungsinstallation",
        "appCenter.internalApp.installationStepTitle": "Führen Sie zum Start dieser Anwendung diese Schritte nach der Installation aus",
        "appCenter.internalApp.step1": "Starten Sie „Einstellungen“ auf dem iOS-Startbildschirm",
        "appCenter.internalApp.step2": "Tippen Sie auf „Allgemein“",
        "appCenter.internalApp.step3": "Tippen Sie auf die Profil- und Geräteverwaltung",
        "appCenter.internalApp.step4": "Tippen Sie auf den Namen des Anwendungsentwicklers unter „Unternehmensanwendung“",
        "appCenter.internalApp.step5": "App bestätigen oder vertrauen",
        "appCenter.internalApp.watchTutorial": "Schrittweise Anleitung ansehen",

        "appCenter.type.web": "Website",
        "appCenter.type.native": "Systemeigene App",
        "appCenter.type.native.platform": "{0} Anwendung",
        "appCenter.type.virtual": "Virtuelle Anwendung",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "App-Paket",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Kategorien",
        "myapp.nav.favorites": "Favoriten",
        "myapp.nav.allApps": "Alle Apps",
        "myapp.nav.recommendedApps": "Empfohlen",
        "myapp.nav.newlyEntitledApps": "Neu",
        "myapp.nav.webApps": "Websites",
        "myapp.nav.mobileApps": "Mobile Apps",
        "myapp.nav.macApps": "Mac-Apps",
        "myapp.nav.windowsApps": "Windows-Apps",
        "myapp.nav.virtualApps": "Virtuell",
        "myapp.label.new": "Neu",
        "myapp.nav.filterby": "Filtern nach",
        "myapp.nav.mobile.filter.pagetitle": "Nach Kategorien filtern",
        "appCenter.nav.browseBy": "Browsen nach",

        "appCenter.catalog.empty": "Ihnen wurden offenbar noch keine Apps zugewiesen. Dies sollte in Kürze geschehen. Versuchen Sie es deshalb demnächst erneut.",

        "userInfo.adminConsole": "Admin-Konsole",
        "userInfo.settings": "Einstellungen",
        "userInfo.notifications": "Benachrichtigun­gen",
        "userInfo.support": "Support",
        "userInfo.preferences": "Voreinstellungen",
        "userInfo.about": "Info",
        "userInfo.devices": "Geräte",
        "userInfo.settings.promo.title": "Workspace ONE-Anwendung herunterladen",
        "userInfo.settings.promo.message": "Mit Workspace ONE wird die Benutzerfreundlichkeit Ihrer Anwendung gesteigert. Jetzt ausprobieren?",

        "userInfo.tips": "Anwendungstipps",
        "userInfo.tips.description": "Holen Sie sich Hilfe bei der Verwendung der Anwendung!",

        "userInfo.tips.bookmarks": "Verwenden von Lesezeichen",
        "userInfo.tips.catalog": "Verwenden des Katalogs",
        "userInfo.tips.people": "Neu: Verwenden von Personen",
        "userInfo.tips.notification": "Neu: Verwenden der Benachrichtigung",

        "userInfo.tips.catalog.desktop1": "Klicken Sie auf „Öffnen“, um eine Website im Browser zu öffnen. Verwenden Sie {0}, um ein Lesezeichen hinzuzufügen.",
        "userInfo.tips.catalog.desktop2": "Klicken Sie auf das Symbol oder den Namen der Anwendung, um weitere Details anzuzeigen.",
        "userInfo.tips.catalog.mobile1": "Verwenden Sie {0}, um eine Website im Browser zu öffnen. Verwenden Sie {1}, um ein Lesezeichen hinzuzufügen.",
        "userInfo.tips.catalog.mobile2": "Verwenden Sie {0}, um eine systemeigene Anwendung auf Ihrem Gerät zu installieren. {1} bedeutet, dass Sie Ihr Gerät registrieren müssen, um diese Anwendungen zu verwenden.",
        "userInfo.tips.catalog.mobile3": "Tippen Sie auf das Symbol oder den Namen der Anwendung, um weitere Details anzuzeigen.",

        "userInfo.tips.bookmarks.desktop1": "Klicken Sie auf den Titel, um die Website in Ihrem Browser zu starten.",
        "userInfo.tips.bookmarks.desktop2": "Bewegen Sie den Mauszeiger auf die Kachel, um weitere Aktionen aus dem Menü '...' anzuzeigen.",

        "userInfo.tips.bookmarks.mobile": "Tippen Sie auf die Kachel, um eine Website in Ihrem Browser zu starten. Drücken und halten Sie, um weitere Aktionen durchzuführen.",

        "userInfo.tips.catalog.download.phone": "Tippen Sie auf das {0}-Symbol, um eine systemeigene Anwendung auf Ihrem Gerät zu installieren. Das {1}-Symbol bedeutet, dass Sie Ihr Gerät registrieren müssen, um die jeweiligen Anwendungen zu verwenden.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Tippen Sie auf das {0}-Symbol, um eine Website im Browser zu öffnen. Tippen Sie auf das {1}-Symbol, um ein Lesezeichen hinzuzufügen. Tippen Sie auf das Symbol oder den Namen der Anwendung, um weitere Details anzuzeigen.",

        "userInfo.tips.catalog.download.tablet": "Laden Sie Apps herunter, indem Sie auf die Schaltfläche zum Heruntergeladen klicken. Klicken Sie einfach auf die App, um weitere Details zu erfahren.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Starten Sie Apps, indem Sie auf das Startsymbol klicken. Fügen Sie Lesezeichen hinzu, indem Sie auf die Lesezeichen-Schaltfläche klicken.",

        "userInfo.tips.people.mobile": "Klicken Sie auf {0}, um von jedem Profil aus zur Hauptzielseite für die Personensuche zu navigieren.",
        "userInfo.tips.notification.mobile": "Klicken Sie auf {0}, um auf Ihre Benachrichtigungen zuzugreifen. Das Benachrichtigungs-Badge bleibt so lange aktiv, bis Sie alle Benachrichtigungen verworfen oder Aktionen dafür ausgeführt haben.",

        "userInfo.tips.title": "Anwendungstipps",
        "userInfo.tips.intro": "Holen Sie sich Hilfe bei der Verwendung der Anwendung!",
        "userInfo.tips.desktop": "Desktop",
        "userInfo.tips.reordering.title": "Passen Sie Ihre Lesezeichen an!",
        "userInfo.tips.reordering.text1": "1. Navigieren Sie mithilfe des Dropdown-Menüs oben rechts zu „Benutzerdefinierte Ansicht“.",
        "userInfo.tips.reordering.text2": "2. Wählen Sie „Anordnen“ aus. ",
        "userInfo.tips.reordering.text3": "3. Ordnen Sie Ihre Lesezeichen per Drag & Drop neu an. Klicken Sie anschließend auf „Speichern“.",
        "userInfo.tips.mobile": "Mobilgeräte",

        "userInfo.removeAccount": "Konto entfernen",
        "userInfo.account": "Konto",
        "userInfo.profile": "Profil",
        "userInfo.profile.name": "Name:",
        "userInfo.profile.email": "E-Mail:",
        "userInfo.profile.username": "Benutzername:",
        "userInfo.profile.picture": "Profilbild",
        "userInfo.profile.password": "Kennwort",
        "userInfo.profile.passwordchange": "Ändern",
        "userInfo.profile.passwordprompt": "Verwalten Sie Ihr Kennwort für das Firmensystem.",
        "userInfo.password": "Kennwort",
        "userInfo.termsofuse": "Nutzungsbedingungen",
        "userInfo.signout": "Abmelden",
        "userInfo.tryAgain": "Erneut versuchen",
        "userInfo.managedevicesettings": "Geräteeinstellungen verwalten",
        "userInfo.notification": "Push-Benachrichtigung",
        "userInfo.passcode": "Touch-ID oder Passcode",

        "appCenter.support.selfservice": "Self-Service",
        "appCenter.support.managedevices": "Geräte",
        "appCenter.support.managedevicestext": "Geräteinformationen anzeigen",
        "appCenter.support.managepassword": "Kennwort ändern",
        "appCenter.support.managepasswordtext": "Kennwort für das Firmenkonto ändern",
        "appCenter.support.gethelp": "Hilfe erhalten",
        "appCenter.support.appstips": "Anwendungen und Tipps",
        "appCenter.support.appstipstext": "QuickInfos in dieser Anwendung anzeigen",
        "appCenter.support.sendReportTitle": "Bericht senden",
        "appCenter.support.sendReportDetails": "Erfahren Sie, wie Sie Anwendungsdiagnosen senden.",
        "appCenter.support.helpdesk": "Helpdesk",
        "appCenter.support.contacthelpdesk": "Helpdesk kontaktieren",
        "appCenter.reportProblems.ios.sendLogInstruction": "Schütteln Sie Ihr Gerät, wenn ein Fehler auftritt, um auf einfache Weise App-Diagnosen zu senden oder Feedback zu geben.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Diese Funktion können Sie in den Geräteeinstellungen aktivieren bzw. deaktivieren.",

        // App Details Page
        "app.details.link.back": "Zurück",
        "app.details.nav.details": "Details",
        "app.details.nav.reviews": "Bewertungen",
        "app.details.label.description": "Beschreibung",
        "app.details.label.noDescription": "Keine Beschreibung verfügbar",
        "app.details.label.seeFullDetails": "Details anzeigen",
        "app.details.label.removeBookmark": "Entfernen",
        "app.details.label.resetDektop": "Zurücksetzen",
        "app.details.label.information": "Informationen",
        "app.details.label.category": "Kategorien",
        "app.details.label.version": "Version",
        "app.details.label.type": "Typ",
        "app.details.label.type.SAML11": "Web-App",
        "app.details.label.type.SAML20": "Web-App",
        "app.details.label.type.WEBAPPLINK": "Web-App",
        "app.details.label.type.MDMWEB": "Web-App",
        "app.details.label.type.WSFED12": "Web-App",
        "app.details.label.type.XENAPP": "XEN-App",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix Desktop",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Profil",
        "app.details.label.type.VIEWPOOL": "Horizon-Desktop",
        "app.details.label.type.VIEWAPP": "Horizon-Anwendung",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud-Desktop",
        "app.details.label.type.DESKTONEAPPLICATION": "Horizon Cloud-Anwendung",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Web-App",
        "app.details.label.type.PUBLIC": "Öffentliche Anwendung",
        "app.details.label.type.INTERNAL": "Intern",
        "app.details.label.size": "Größe",
        "app.details.label.price": "Preis",
        "app.details.label.screenshots": "Bildschirmfotos",
        "app.details.label.showMore": "Mehr anzeigen",
        "app.details.label.showLess": "Weniger anzeigen",
        "app.details.label.setAppPassword": "Kennwort festl.",
        "app.details.label.sendFeedback": "Feedback senden",
        "app.details.label.feedbackSubject": "Feedback für App {0}",
        "app.details.label.support": "Support",
        "app.details.label.developer": "Entwickler",
        "app.details.label.email": "E-Mail",
        "app.details.label.phone": "Telefon",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "Alle mobilen Anwendungen können von Ihrer Startseite aus gestartet werden.",

        "app.details.label.requirement": "Voraussetzung:",
        "app.details.label.packageName": "Paketname:",
        "app.details.thinapp.requirement": "Diese Anwendung funktioniert nur auf Windows-Computern, auf denen Identity Manager Desktop installiert ist.",
        "app.details.viewDesktop.requirement": "Für diesen Horizon-Desktop muss {0} Horizon Client{1} 3.0 oder höher auf Ihrem Computer installiert sein.",
        "app.details.viewapp.requirement": "Für diese Horizon-gehostete Anwendung muss {0}Horizon Client{1} 3.0 oder höher auf Ihrem Computer installiert sein.",
        "app.details.xenapp.requirement": "Für diese Anwendung muss {0} Citrix Receiver {1}installiert sein.",
        "app.details.xenapp.msg.IE8OrLower": "Für diese Anwendung muss Citrix Receiver installiert sein. Hinweis: Diese Anwendung kann nicht in Internet Explorer 8 geöffnet werden.",
        "app.details.xenappsDeliveryGroup.requirement": "Für diesen Citrix Desktop muss {0} Citrix Receiver {1} installiert sein.",
        "app.details.desktoneDesktop.requirement": "Für diesen Horizon Cloud-Desktop muss {0} Horizon Client {1} auf dem Computer installiert sein.",
        "app.details.desktoneApp.requirement": "Für diese Horizon Cloud-Anwendung muss {0} Horizon Client {1} auf dem Computer installiert sein.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "Keine Informationen verfügbar",
        "app.details.noScreenshots": "Keine Bildschirmfotos verfügbar",
        "app.details.noDescription": "Die Beschreibung wird demnächst bereitgestellt.",
        "app.details.needsDeviceEnrollment": "Geräteregistrierung erforderlich",
        "app.details.label.addToHomeScreen": "Zur Startseite hinzufügen",
        "app.details.action.open": "Öffnen",
        "app.details.action.bookmark": "Lesezeichen",
        "app.details.action.bookmarked": "Als Lesezeichen hinzugefügt",
        "app.details.action.launch": "Starten",
        "app.details.action.setPassword": "Kennwort festlegen",
        "app.details.action.pvAppCredentials": "Anmeldedaten",
        "app.details.info.msg.missingInfo": "Einige Informationen fehlen. Versuchen Sie es später noch einmal, um alle Details anzuzeigen.",
        "app.details.wsrequired.msg": "Workspace Services erforderlich.",
        "app.details.label.addedFavorites": "Zu Favoriten hinzugefügt",

        "app.rating.label": "Anwenderbewertung",

        "app.settings.label.settings": "Einstellungen",
        "app.settings.link.back": "Zurück",
        "app.settings.managedDevices": "Verwaltete Geräte",
        "app.nav.tab.bookmark": "Lesezeichen",
        "app.nav.tab.catalog": "Katalog",
        "app.nav.tab.people": "Personen",
        "app.nav.tab.support": "Support",
        "app.nav.tab.apps": "Apps",
        "app.nav.tab.settings": "Einstellungen",
        "app.about.heading": "Infos zu Workspace ONE",
        "app.about.copyright": "Copyright ©2013–2019 VMware, Inc. Alle Rechte vorbehalten. Dieses Produkt ist durch US-amerikanische und internationale Urheberrechtsgesetze geschützt. Die VMware-Produkte sind durch Patente geschützt.",
        "app.about.button.label.privacyPolicy": "Datenschutzrichtlinie",
        "app.about.button.label.patents": "Patent",
        "app.about.button.label.licenseAgreement": "Lizenzvertrag",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-de",
        "app.about.licenseAgreementLink": "http://www.vmware.com/de/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/de/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Geräte",
        "app.devices.tableColumn.deviceName": "Gerätename",
        "app.devices.tableColumn.userDeviceId": "Geräte-ID",
        "app.devices.tableColumn.lastLoginTime": "Zeitpunkt der letzten Anmeldung",
        "app.devices.unlinkDevice": "Verknüpfung aufheben",
        "app.devices.unlinkedDevice": "Verknüpfung aufgehoben.",
        "app.devices.emptyDeviceListMessage": "Ihrem Konto ist kein Gerät zugeordnet.",

        "app.thinappMultiDeviceAct.heading": "Diese Anwendung wird zu den genehmigten Geräten hinzugefügt. Um „{0}“ auf zusätzlichen Geräten zu verwenden, suchen Sie den Gerätenamen unten und klicken Sie auf die Schaltfläche „Anfrage“.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Gerätename",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Status",
        "app.thinappMultiDeviceAct.button.request": "Anfordern",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Widerrufen",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "Ausstehend",
        "app.thinappMultiDeviceAct.activationState.activated": "Zugelassen",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Nicht aktiviert",

        "app.thinappsInPackage.button.done": "Fertig",
        "app.thinappsInPackage.button.bookmarkAll": "Lesezeichen für alle hinzufügen",
        "app.thinappsInPackage.info": "App-Paket",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} Anwendungen",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} Treffer gefunden.",
        "app.thinappsInPackage.action.instruction": "Wählen Sie das Lesezeichensymbol aus, um ein Lesezeichen zu einer einzelnen App oder zu allen Apps hinzuzufügen.",
        "app.thinappsInPackage.search.placeholder": "In Paket suchen",

        "app.setAppPassword.heading": "Kennwort festlegen",
        "app.setAppPassword.instruction": "Legen Sie mit dem unten angefügten Formular ein Kennwort für diese Anwendung fest. Das Kennwort muss aus mindestens drei Zeichen bestehen.",
        "app.setAppPassword.label.password": "Kennwort",
        "app.setAppPassword.label.confirmPassword": "Kennwort bestätigen",
        "app.setAppPassword.label.generate": "Kennwort generieren",
        "app.setAppPassword.error.passwordsNoMatch": "Kennwörter stimmen nicht überein. ",
        "app.setAppPassword.msg.success": "Ihr Anwendungskennwort wurde erfolgreich festgelegt.",
        "app.setAppPassword.msg.fail": "Ihr Kennwort konnte nicht festgelegt werden. Versuchen Sie es erneut.",

        "pvapp.setAppPassword.heading": "Gespeicherte Anmeldedaten für {0} festlegen",
        "pvapp.setAppPassword.instruction": "Verwenden Sie das nachfolgende Formular, um gespeicherte Anmeldedaten für diese Anwendung festzulegen.",
        "pvapp.setAppPassword.label.username": "Benutzername",
        "pvapp.setAppPassword.label.password": "Kennwort",
        "pvapp.setAppPassword.error.userNameEmpty": "Der Benutzername ist leer.",
        "pvapp.setAppPassword.error.passwordEmpty": "Das Kennwort ist leer.",
        "pvapp.setAppPassword.msg.success": "Ihre Anwendungsanmeldedaten wurden erfolgreich festgelegt.",
        "pvapp.setAppPassword.msg.fail": "Ihre Anwendungsanmeldedaten konnten nicht festgelegt werden. Versuchen Sie es erneut.",

        "app.launchPassword.heading": "Kennwortanforderung",
        "app.launchPassword.view.instruction": "Ihr Kennwort wird zur Anmeldung bei dieser Windows-Ressource {0} benötigt.",
        "app.launchPassword.label.userName": "Benutzer",
        "app.launchPassword.label.password": "Kennwort",
        "app.launchPassword.button.label.signin": "Anmelden",

        "app.changePassword.title": "Kennwort ändern",
        "app.changePassword.enterCurrentPassword": "Aktuelles Kennwort eingeben",
        "app.changePassword.enterNewPassword": "Neues Kennwort eingeben",
        "app.changePassword.confirmNewPassword": "Neues Kennwort bestätigen",
        "app.changePassword.error.passwordsNoMatch": "Die neuen Kennwörter stimmen nicht überein.",
        "app.changePassword.error.requirementsNoMatch": "Das neue Kennwort erfüllt die Anforderungen nicht.",
        "app.changePassword.success": "Neues Kennwort gespeichert!",
        "app.changePassword.label.email": "E-Mail",
        "app.changePassword.label.phone": "Telefon",

        "app.passwordPolicy.passwordRequirements": "Kennwortanforderungen",
        "app.passwordPolicy.label.currentpassword": "Aktuelles Kennwort",
        "app.passwordPolicy.label.newpassword": "Neues Kennwort",
        "app.passwordPolicy.label.confirmpassword": "Neues Kennwort bestätigen",
        "app.passwordPolicy.minLength": "Mindestens {0} Zeichen",
        "app.passwordPolicy.leastIncludes": "enthält mindestens:",
        "app.passwordPolicy.minLower": "{0} Buchstaben",
        "app.passwordPolicy.minUpper": "{0} Großbuchstaben",
        "app.passwordPolicy.minDigit": "{0} Zahlen",
        "app.passwordPolicy.minSpecial": "{0} Sonderzeichen",

        "app.coachmarks.bookmarkTitle": "Verwenden von Lesezeichen",
        "app.coachmarks.bookmarkMessage": "Tippen Sie, um Websites zu öffnen; drücken und halten Sie, um mehr zu erfahren.",
        "app.coachmarks.catalogTitle": "Verwenden des Katalogs",
        "app.coachmarks.catalogMessage": "Installieren oder aktualisieren Sie Anwendungen; fügen Sie sie zu den Lesezeichen hinzu oder öffnen Sie sie direkt hier.",
        "app.coachmarks.buttonText": "Alles klar!",

        "app.logout.confirm.msg": "Mit der Abmeldung von Workspace ONE wird Ihre Sitzung beendet. Alle aus dem Katalog heruntergeladenen Apps bleiben auf dem Gerät. Neue Apps sind aber erst wieder verfügbar, wenn Sie sich erneut anmelden.",
        "app.logout.title": "WARNUNG",

        "app.passwordVault.banner.msg": "Sie haben Apps, die die Workspace ONE-Erweiterung verwenden können.",
        "app.passwordVault.banner.button.install": "Installieren",
        "app.passwordVault.banner.setPreference": "Ein Abruf ist zu einem späteren Zeitpunkt über „Einstellungen - Voreinstellungen“ möglich.",
        "app.passwordVault.banner.donotshowagain": "Diese Informationen nicht mehr anzeigen",
        "app.passwordVault.banner.button.later": "Später",
        "app.passwordVault.banner.button.get": "Abrufen",
        "app.passwordVault.preference.title": "Workspace ONE-Erweiterung",
        "app.passwordVault.preference.instruction": "Sie haben Anwendungen, die die Workspace ONE-Erweiterung verwenden können.",
        "app.passwordVault.preference.getextension": "Rufen Sie die Erweiterung ab.",
        "app.bookmarking.change.tab.title": "Sind Sie immer noch dabei, Lesezeichen anzuordnen?",
        "app.bookmarking.change.tab.body": "Die von Ihnen vorgenommenen Änderungen werden nicht gespeichert. Möchten Sie Ihre Lesezeichen weiterhin anordnen?",
        "app.bookmarking.touch.disabled": "Mit dem Trackpad oder der Maus können Sie Apps neu anordnen.",
        "app.bookmarking.change.tab.exit": "Nein, beenden",
        "app.bookmarking.change.tab.stay": "Ja, auf dieser Seite bleiben",
        "app.virtual.disabled": "Vom Administrator deaktiviert",
        "app.virtual.unavailable": "Diese App ist auf diesem Gerät nicht verfügbar",
        "app.virtual.not.available": "Nicht verfügbar",

        "app.notification.type.NEW_ENTITLEMENTS": "Auschecken",
        "app.notification.type.PASSWORD_EXPIRING": "Kennwort aktualisieren",
        "app.notification.action.delete": "Löschen",
        "notification.new.entitlements.heading": "Neue Berechtigungen",
        "notification.new.entitlements.message": "Es wurden Ihnen {0} neue Berechtigungen zugewiesen",
        "app.notification.delete.header": "Diese Benachrichtigung löschen?",
        "app.notification.delete.msg": "Möchten Sie diese Benachrichtigung wirklich löschen? Sie können „Archivieren“ auswählen, um sie später zu archivieren. ",
        "app.notification.delete.text": "Löschen",
        "app.notification.keep.text": "Beibehalten",
        "app.notification.restore.text": "Wiederherstellen",
        "app.notification.delete.toast.msg": "Benachrichtigung wurde gelöscht.",
        "app.notification.empty": "Sie haben alles erledigt!",
        "app.notification.more.actions": "Weitere Aktionen",
        "app.notification.archive.all": "Alles archivieren",

        "app.notification.bookmark.all.error": "Leider konnten wir nicht alle Ihre neuen Apps mit Lesezeichen versehen",
        "app.notification.bookmark.all.success": "Alle neuen Apps wurden zu Favoriten hinzugefügt",
        "app.notification.delete.all": "Alles löschen",
        "app.notification.see.archived": "Archivierte anzeigen",
        "app.notification.see.all": "Alle Benachrichtigungen anzeigen",
        "app.notification.newApps.title": "Sie haben neue Apps!",
        "app.notification.newApps.excessIconsMessage": "+ {0} weitere",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Details anzeigen",
        "app.tooltip.clicktolaunch": "Zum Starten klicken",

        "recommendedApps.install.proceed": "Weiter",
        "recommendedApps.install.title": "Empfohlene Anwendungen installieren",
        "recommendedApps.install.confirm.msg": "Sie werden aufgefordert, die Installation Ihrer Anwendungen fortzusetzen.",
        "recommendedApps.text1": "Diese Anwendungen werden normalerweise von Ihren Kollegen verwendet.",
        "recommendedApps.text2": "Sie können sie jetzt installieren oder später in Ihrem Katalog suchen.",
        "recommendedApps.selectAll": "Alle auswählen",
        "recommendedApps.apps": "Apps",
        "recommendedApps.install": "Installieren",
        "recommendedApps.skip": "Überspringen",

        "app.desktopapp.settings.title.account": "Konto",
        "app.desktopapp.settings.title.devices": "Geräte",
        "app.desktopapp.settings.title.preferences": "Voreinstellungen",

        "appCenter.peopleSearch.placeholder": "Nach Personen suchen",
        "app.tooltip.copyEmail": "E-Mail kopieren",
        "app.peopleSearch.emailCopied": "E-Mail kopiert",
        "appCenter.peopleSearch.noResults": "Es wurden keine Ergebnisse gefunden",
        "appCenter.peopleSearch.tryNewSearch": "Führen Sie eine neue Suche durch.",
        "appCenter.peopleSearch.atLeastThreeChars": "Geben Sie 3 oder mehr Zeichen oben für die Suche ein.",
        "appCenter.searchPeople": "Nach Personen suchen.",
        "myapps.mobilepagetitle.people": "Personen",
        "app.people.labels.team": "Mein Team",
        "app.people.labels.recent": "Zuletzt Verwendete",
        "app.people.labels.manager": "Manager",
        "app.people.labels.peers": "Partner",
        "app.people.labels.directReports": "Direktberichte",
        "app.people.labels.profile": "Profil",
        "app.people.labels.org": "Organisation",
        "app.people.labels.workEmail": "E-Mail-Adresse (geschäftlich)",
        "app.people.labels.workPhone": "Telefon (geschäftlich)",
        "app.people.labels.alternateNumber": "Andere Telefonnummer",
        "app.people.labels.mobile": "Mobil",
        "app.people.labels.address": "Adresse",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Manager",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "Mitarbeiternummer",
        "app.people.labels.skills": "Qualifikationen",
        "app.people.labels.businessUnit": "Geschäftsbereich",
        "app.people.labels.costCenter": "Kostenstelle",
        "app.people.labels.physicalDeliveryOfficeName": "Bürostandort",

        "hub.apps": "Apps",
        "hub.notifications": "Benachrichtigun­gen",
        "hub.notifications.welcome": "Willkommen!",
        "hub.notifications.first.time.message": "Benachrichtigungen werden hier angezeigt, wenn Sie mit der Verwendung von Hub beginnen.",
        "hub.notifications.new.apps.favorite.all": "Alle favorisieren",
        "hub.notifications.congratulations": "Glückwunsch!",
        "hub.notifications.empty.description1": "Keine neuen Benachrichtigungen.",
        "hub.notifications.empty.description2": "Profitieren Sie von dem zusätzlichen Speicherplatz.",
        "hub.v2.notifications.empty.description": "Ihre Benachrichtigungen werden alle erfasst",
        "hub.v2.notifications.first.time.description": "Benachrichtigungen werden hier angezeigt, wenn Sie mit der Verwendung von Hub beginnen.",
        "hub.notifications.empty.description.archived": "Keine archivierten Benachrichtigungen.",
        "hub.notifications.priority": "Priorität",
        "hub.notifications.today": "Heute",
        "hub.notifications.yesterday": "Gestern",
        "hub.notifications.lastWeek": "Letzte Woche",
        "hub.notifications.lastMonth": "Letzter Monat",
        "hub.notifications.older": "Ältere",
        "hub.notifications.archived.label": "Archiviert",
        "hub.notifications.action.success": "Erfolg!",
        "hub.notifications.action.failure": "Offenbar ist ein Fehler beim Ausführen dieser Aktion aufgetreten",
        "hub.notifications.moreDetails": "Weitere Details",
        "hub.notifications.dialog.action.completed": "Abgeschlossen",
        "hub.notifications.dialog.action.needed": "Ausstehend",
        "hub.notifications.dialog.action.all.notifications": "Alle Benachrichtigungen",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Nach Apps suchen",
        "hub.apps.favorites": "Favoriten",
        "hub.apps.newApps": "Neu",
        "hub.apps.recommended": "Empfohlen",
        "hub.apps.categories": "Kategorien",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Toll, hier ist viel Speicherplatz.",
        "hub.apps.no.apps.msg2": "Wenden Sie sich an den Administrator, um Unternehmens-Apps zu erhalten.",
        "hub.apps.search.in.category": "{0} Ergebnisse in Kategorie:",
        "hub.apps.search.in.app": "{0} Ergebnisse in App-Name und Beschreibung",
        "hub.apps.search.header": "Ergebnisse insgesamt",
        "hub.apps.search.no.result.header": "Keine Ergebnisse.",
        "hub.apps.search.no.result.msg": "Versuchen Sie es noch einmal mit einem anderen Suchbegriff.",
        "hub.apps.searchpeople.no.result.msg": "Versuchen Sie es noch einmal mit einem anderen Namen.",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "Anwendung",
        "hub.apps.type.anyApp": "AnyApp",
        "hub.people": "Personen",
        "hub.people.search.text": "Nach Personen suchen",
        "hub.people.labels.mypeers": "Meine Peers",
        "hub.people.labels.directreports": "Direktberichte",
        "hub.people.labels.manager": "Mein Manager",
        "hub.people.labels.organization": "Organisation",
        "hub.people.search.result": "Ergebnisse",
        "hub.app.install.prompt.title": "Möchten Sie diese Anwendung installieren?",

        "hub.actionsheet.label.viewDetails": "Details anzeigen",
        "hub.actionsheet.label.removeFavorites": "Aus „Favoriten“ entfernen",
        "hub.actionsheet.label.addFavorites": "Zu „Favoriten“ hinzufügen",
        "hub.password.done": "Fertig",

        "hub.placeholder.changepassword.username": "Benutzername",
        "hub.placeholder.changepassword.password": "Kennwort",
        "hub.placeholder.changepassword.confirmpassword": "Kennwort bestätigen",

        "hub.tunnel.text.line1": "Für den Zugriff ist ein Tunnel erforderlich ",
        "hub.tunnel.text.line2": "Tunnel-App wird automatisch zusammen mit Ihrer App heruntergeladen.",

        "hub.promotions.banner.category.title": "Kategorie-Highlights",
        "hub.promotions.banner.category.open": "Öffnen",
        "hub.promotions.banner.app.get": "Abrufen",
        "hub.promotions.banner.disabled": "Vom Administrator deaktiviert",
        "hub.require.app.management": "Verwaltet",
        "hub.app.installing.alert.mobile.message": "Die Anwendung {0} wird installiert. Bitte überprüfen Sie Ihre Telefon-Startseite auf Updates.",
        "hub.app.installing.alert.desktop.message": "Die Anwendung {0} wird installiert. Bitte überprüfen Sie das App-Startprogramm auf Ihrem Desktop auf Updates.",

        "hub.nav.label.apps": "Apps",
        "hub.nav.label.people": "Personen",
        "hub.nav.label.notification": "Benachrichtigun­gen",
        "hub.nav.label.settings": "Einstellungen",
        "hub.nav.label.account": "Konto",
        "hub.nav.label.signout": "Abmelden",
        "hub.userInfo.adminConsole": "Admin-Konsole",
        "hub.userInfo.signout": "Abmelden",
        "hub.userInfo.settings": "Einstellungen",
        "hub.userInfo.account": "Konto",
        "hub.userInfo.devices": "Geräte",
        "hub.userInfo.whatsnew": "Was ist neu?",
        "hub.userInfo.about": "Worum geht es?",
        "hub.download.ios": "Hub für iOS",
        "hub.download.android": "Hub für Android",
        "hub.download.mac": "Hub für Mac",
        "hub.download.windows": "Hub für Windows",
        "hub.download.subtitle.mobile": "Erhalten Sie Zugriff auf Benachrichtigungen, Startseite und vieles mehr an einem Ort.",
        "hub.download.subtitle.desktop": "Rufen Sie Desktop-Benachrichtigungen ab und starten Sie sie direkt von Ihrem Dock aus.",
        "hub.preferences.title": "Voreinstellungen",
        "hub.preferences.horizon.subtitle": "Horizon-Remoteanwendungen",
        "hub.preferences.launch.question": "Wie möchten Sie die Horizon-Remote-Apps starten?",
        "hub.about.title": "Informationen zu VMware Intelligent Hub",
        "hub.apps.allApps": "Alle Apps",
        "hub.apps.configure.favorites.msg": "Fügen Sie Ihre bevorzugten Apps für schnelleren Zugriff hinzu",
        "hub.apps.configure.favorites": "Konfigurieren",
        "hub.apps.edit.favorites": "Bearbeiten",

        "hub.contextDialog.label.removeFavorites": "Aus „Favoriten“ entfernen",
        "hub.contextDialog.label.addFavorites": "Zu „Favoriten“ hinzufügen",
        "hub.contextDialog.label.viewDetails": "Details anzeigen",
        "hub.apps.edit.favorites.header": "Favoriten-Bearbeitungsmodus",
        "hub.apps.edit.favorites.prompt": "Ziehen und ablegen, um neu anzuordnen.",
        "hub.apps.edit.favorites.save": "Speichern",
        "hub.apps.edit.favorites.cancel": "Änderungen abbrechen",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Sie haben die Reihenfolge aktualisiert. Brechen Sie den Vorgang ab oder speichern Sie die Reihenfolge vor dem Beenden.",
        "hub.apps.edit.favorites.savecustomordering": "Die benutzerdefinierte Reihenfolge wird gespeichert. Bleiben Sie auf der Seite, um die Ergebnisse beizubehalten",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Neuanordnung nicht verfügbar auf Touchscreens.",
        "hub.apps.edit.favorites.notify.success": "Die Neuanordnung der Favoriten wurde gespeichert!",
        "hub.apps.edit.favorites.notify.error": "Es ist ein Fehler aufgetreten. Die Neuanordnung kann nicht gespeichert werden. Versuchen Sie es später erneut.",

        "hub.nav.label.settings.settings": "Einstellungen",
        "hub.nav.label.settings.account": "Konto",
        "hub.nav.label.settings.about": "Info",
        "hub.nav.label.settings.devices": "Geräte",
        "hub.nav.label.settings.preferences": "Voreinstellungen",
        "hub.nav.label.settings.whatsnew": "Was ist neu?",

        "hub.apps.detail.back": "Zurück zu Apps",
        "hub.people.detail.back": "Zurück zu Personen",
        "hub.people.notifications.back": "Zurück zu Benachrichtigungen",

        "hub.nav.label.notifications.filter": "Filter",
        "hub.nav.label.notifications.all.notifications": "Alle Benachrichtigungen",
        "hub.nav.label.notifications.action.needed": "Ausstehend",
        "hub.nav.label.notifications.completed": "Abgeschlossen",
        "hub.long.card.description": "Beschreibung",
        "hub.long.card.Comment": "Kommentar",
        "hub.long.card.Comment.placeholder": "Kommentar hinzufügen",

        "hub.appLaunch.open": "Öffnen",
        "hub.appLaunch.cancel": "Abbrechen"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n_en', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "and",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Install",
        "app.banner.open": "Open",
        "app.promotion.banner.donotshowagain": "Don't show this again. Get it later in Settings - About.",
        "app.promotion.banner.open": "Open in app",
        "app.promotion.banner.download": "Download app",
        "app.promotion.banner.message": "Get a better experience in the app.",
        "horizonDesktopNotDetected": "VMware Identity Manager Desktop must be installed on this computer to open this application. <a target='_blank' href='{0}'>Install VMware Identity Manager Desktop</a> if you have not already.",
        "viewAppsTooltip": "This Horizon Hosted Application requires {0} Horizon Client{1} 3.0 or later to be installed on your computer.",
        "desktoneDesktopTooltip": "This Horizon Cloud Desktop requires {0} Horizon Client {1} to be installed on your computer.",
        "desktoneApplicationTooltip": "This Horizon Cloud Application requires {0} Horizon Client {1} to be installed on your computer.",
        "xenAppsReceiverNotDetected": "Citrix Receiver must be installed on this computer to open this application. <a target='_blank' href='{0}'>Install Citrix Receiver</a> if you have not already.",
        "button.save": "Save",
        "button.update": "Update",
        "button.openHorizonView": "Open Horizon Client",
        "myapps.launch.openApp": "Open {0}",
        "button.openApp": "Open App",
        "button.clear": "Clear",
        "button.close": "Close",
        "button.cancel": "Cancel",
        "button.download": "Download",
        "myapps.launch.title.launch": "Launch",
        "myapps.launch.title": "Launch Application",
        "myapps.launch.view.openWith": "Open with",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Browser",
        "myapps.launch.view.preferredClient.isDefault": "(default)",
        "myapps.launch.view.selectPreferredLaunchClient": "Select how you would like to launch Horizon Desktops and Applications",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Horizon Remote Apps",
        "myapps.launch.view.selectPreferredLaunchClientText": "Opening the Horizon remote apps in the Horizon Client will give you a better experience than the browser.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "How would you like to launch the Horizon remote apps?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "CHOOSE A LAUNCH DEFAULT...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "This determines the default launch behavior when you choose to open a Horizon desktop from your device. If you choose Horizon Client as your default, you must have the Horizon Client installed. <a target='_blank' href='{0}'>Install the Horizon Client</a> if you have not already.",
        "myapps.launch.view.unknownClientType": "Unknown client type to open Horizon Client.",
        "myapps.launch.view.openWithView": "Open with Horizon Client",
        "myapps.launch.view.openWithBrowser": "Open with Browser",

        "myapps.launch.view.preferredClient.byBrowser.description": "By selecting Browser, your Desktop or Application will open in a new browser window.",
        "myapps.launch.view.preferredClient.byViewClient.description": "This item requires Horizon Client 3.0 or later. <a target='_blank' href='{0}'>Install the Horizon Client</a> if you have not already.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "You can always change this setting in preferences.",
        "myapps.launch.view.preferredClient.saveSuccess": "Successfully saved selected preference.",
        "myapps.launch.msg.launching.desktop": "Launching Desktop <b>{0}</b> .....",
        "myapps.launch.msg.launching.application": "Launching Application <b>{0}</b> .....",
        "myapps.noAppsMsg": "You haven't added any apps. You can navigate to the {0} to add applications",
        "myapps.noFavAppsMsg": "You haven't bookmarked any apps",
        "myapps.welcomeMsg": "Hello, {0}. Here are your apps!",
        "myapps.bookmarks.empty.message": "Bookmark frequently used apps for quick access.",
        "myapps.bookmarks.empty.hidecatalog.message": "Currently, you have no applications available for use.",
        "myapps.bookmarks.empty.addbookmarks": "Add Bookmarks",
        "myapps.bookmarks.organize.title": "Organize Your Bookmarks",
        "myapps.bookmarks.organize.addbookmarks": "Add Bookmarks",
        "myapps.bookmarks.organize.batchremove": "Remove",

        "myapps.mobilepagetitle.apps": "Apps",
        "myapps.mobilepagetitle.details": "Details",
        "myapps.mobilepagetitle.support": "Support",
        "myapps.mobilepagetitle.settings": "Settings",
        "myapps.mobilepagetitle.recommendedapps": "Recommended for You",
        "myapps.mobilepagetitle.notification": "Notifications",
        "myapps.mobilepagetitle.archived": "Archived",
        "myapps.mobilepagetitle.notification.newapps": "New Apps",

        "myapps.dialog.openApp": "Open",
        "myapps.dialog.openAppWithViewClient": "Open in Client",
        "myapps.dialog.openAppWithBrowser": "Open in Browser",

        "myapps.launch.passwordvault.installExtension.description": "This application can utilize the Password Vault browser extension. <a target='_blank' href='{0}'>Install the Extension</a> if you have not already.",

        "deviceStatus.networkLost": "Connection lost. Trying to reconnect …",
        "deviceStatus.networkRestored": "Network connection restored",
        "api.session.expired.retry": "Session expired, trying to renew...",
        "api.entitlements.reload": "Refreshing your view to update the apps in your Catalog.",
        "api.security.header.invalid.relogin": "Security header validation failed, logging out..",
        "api.server.load.error": "We are experiencing heavier than usual load. Please try again later.",
        "api.updateApps": "Updating list...",
        "api.error": "An error occurred. Please retry.",
        "installation.error": "Native apps are temporarily unavailable",
        "service.under.maintenance.error": "Workspace ONE is temporarily in maintenance mode. You can launch your apps, but some features may not work",
        "api.timeout": "Connection timed out, retry",
        "favoriteStatus.favorite": "Favorite",
        "favoriteStatus.unfavorite": "Unfavorite",
        "favoriteStatus.offlineFavoriteMessage": "Bookmarking an app is not available while offline, please reconnect and try again",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "Removing bookmark from an app is not available while offline, please reconnect and try again",
        "error.failToFavoriteApp": "Failed to update the bookmark status",
        "error.failedToResetApp": "Failed to reset app",
        "error.failToHideApp": "Failed to remove the app",
        "error.failToShowApp": "Failed to add the app to the Launcher",
        "error.failedToBookmarkApp": "Failed to bookmark app",
        "error.failedToLaunchApp": "Failed to open app",
        "error.failedToRemoveAccount": "Failed to remove account, please try again later",
        "installStatus.enrollDevice": "The use of {0} requires activation of Workspace Services to protect company data",
        "installStatus.enrollDevice.learnMore": "Learn More",
        "installStatus.offlineInstallMessage": "Install requests are not available while offline, please reconnect and try again",
        "installStatus.activated": "Activated",
        "installStatus.notActivated": "Not Activated",
        "installStatus.request": "Request",
        "installStatus.update": "Update",
        "installStatus.processing": "Processing",
        "installStatus.installFailedMessage": "Something went wrong while installing app {0}. Please try again. If this problem persists, contact your IT administrator",
        "installStatus.unenrolledDevice": "This app is no longer available to you. Press ok to update list.",
        "installMessage.continueInstall": "You were previously attempting to install this app. ",
        "installMessage.proceedToInstall": "Click to continue.",
        "installMessage.installingOnDevice": "Installing on device...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Enable Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "This is required before the app can be installed. You automatically receive:",
        "app.adaptivemanagement.valueproposition1": "Direct installation of all corporate resources.",
        "app.adaptivemanagement.valueproposition2": "Secured corporate network access.",
        "app.adaptivemanagement.valueproposition3": "Synchronized apps and content on all of your devices.",
        "app.adaptivemanagement.valueproposition4": "An enhanced app experience that will make you more productive.",
        "app.adaptivemanagement.privacylink": "Your Privacy",

        "app.tunnel.continue": "Continue",
        "app.tunnel.text.line1": "VMware Tunnel app is required to access",
        "app.tunnel.text.line2": "Tunnel app will download automatically along with your app.",
        "app.tunnel.header": "Requires VMware Tunnel",
        "app.tunnel.message": "To use this app, VMware Tunnel must be installed and running.",
        "recommendedApps.tunnel.text.line1": "VMware Tunnel app is required to access",
        "recommendedApps.tunnel.text.line2": "Tunnel app will download automatically along with your app.",
        "app.tunnel.installHelpText": "If the apps have not started installing automatically please follow these steps to enable the app",
        "app.tunnel.installStep1": "Step 1: Install {0} app",
        "app.tunnel.installStep2": "Step 2: Install {0} app",

        "requestFailed": "Request Failed",
        "changeOccurred": "Change Occurred",
        "requestSuccessful": "Request Successful",
        "accept": "Accept",
        "decline": "Decline",
        "termsOfUse": "Terms of Use",
        "beforeInstallation": "Before Installation",
        "resetDesktopStatus.offlineMessage": "Resetting a desktop is not available while offline, please reconnect and try again",
        "resetDesktop.sucess": "Sucessfully reset desktop",
        "appCenter.someAppsMissingMessage": "All apps could not be loaded at this time",
        "appCenter.register.device": "Some information about your device needs to be updated. Press update to continue with Workspace ONE.",
        "appCenter.mdm.device.error": "You no longer have access to Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Contact your admin for your account details.",
        "appCenter.mdm.device.poll.error": "We are unable to finish building your workspace at this time. Try again or contact your admin.",
        "appCenter.device.status.notRegistered": "Device is not registered",
        "appCenter.device.status.blackListed": "This device is black listed",
        "appCenter.device.status.deviceInputError": "This device is invalid! Please contact your IT Administrator",
        "appCenter.device.status.unknownError": "Unknown error occurred",

        "appCenter.device.register": "Register Device",
        "appCenter.device.moreDetails": "More Details",
        "appCenter.device.unEnrollWarningTitle": "Remove your Account?",
        "appCenter.device.mdmUnEnrollMessage": "Removing your account will disable access to company resources and may remove work apps on this device.",
        "appCenter.device.getDeviceEnrollmentStatus": "Getting additional information",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Are you sure you want to continue?",
        "appCenter.device.remove": "Remove",
        "appCenter.device.keep": "Keep",
        "appCenter.device.disableWorkspaceMessage": "Removing your account will revoke access granted via the Workspace ONE app. Apps downloaded to your springboard will remain installed, but access may be cut off. Would you like to continue?",
        "appCenter.noAppsMsg": "No apps are currently available",
        "appCenter.vppInviteTitle": "Managed Distribution Registration",
        "appCenter.appInstallConfirmPromptTitle": "Confirm Installation",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Approval needed for",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Your Request was previously denied",
        "appCenter.mdmAppRequestConfirmPromptMessage": "The application you're trying to access needs to be approved by your administrator",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "You have requested for this application and your request was denied, are your sure you want to request again",
        "appCenter.acceptInvite": "Accept Invite",
        "appCenter.install": "Install",
        "appCenter.proceed": "Enable Workspace Services",
        "appCenter.cancel": "Cancel",
        "appCenter.confirm": "Confirm",
        "appCenter.searchApps": "Search for apps.",
        "appCenter.welcomeMsg": "Install new Apps anywhere, on any Device!",
        "appCenter.done": "Done",
        "appCenter.nav.privacyPage": "Privacy Page",
        "appCenter.nav.catalog": "Catalog",
        "appCenter.nav.myApps": "My Apps",
        "appCenter.nav.favorites": "Favorites",
        "appCenter.nav.categories": "Categories",
        "appCenter.nav.filterby": "Filter by",
        "appCenter.nav.show": "Show",
        "appCenter.nav.settings": "Settings",
        "appCenter.nav.sortBy": "Sort by",
        "appCenter.nav.sortBy.alpha": "Sort by A-Z",
        "appCenter.nav.sortBy.inverseAlpha": "Sort by Z-A",
        "appCenter.nav.sortBy.customView": "Custom view",
        "appCenter.nav.arrange": "Arrange",
        "appCenter.nav.arrange.saved": "Custom view has been saved!",
        "appCenter.nav.arrange.tooltip": "Only available on Windows.",
        "appCenter.nav.arrange.saving": "Saving...",
        "appCenter.nav.arrange.error": "Unable to save custom view",
        "appCenter.nav.filter": "Filter",
        "appCenter.installFailedTitle": "App Installation Issue",
        "appCenter.uccConflict": "Something went wrong with the current session. Please relogin.",

        "appCenter.search.placeholder": "Search",
        "appCenter.search.noResults": "No results were found.",

        "appCenter.action.open": "Open",
        "appCenter.action.install": "Install",
        "appCenter.action.installing": "Installing",
        "appCenter.action.installed": "Installed",
        "appCenter.action.reinstall": "Reinstall",
        "appCenter.action.add": "Add",
        "appCenter.action.added": "Added",
        "appCenter.action.processing": "Processing",
        "appCenter.action.update": "Update",
        "appCenter.action.request": "Request",
        "appCenter.action.pending": "Pending",
        "appCenter.action.view": "View",
        "appCenter.action.favorite": "Favorite",
        "appCenter.action.unfavorite": "Unfavorite",

        "appCenter.internalApp.installtionModalTitle": "App installation steps",
        "appCenter.internalApp.installationStepTitle": "In order to open this app, follow these steps after installation",
        "appCenter.internalApp.step1": "Launch Settings from your iOS home screen",
        "appCenter.internalApp.step2": "Tap on General",
        "appCenter.internalApp.step3": "Tap on Profiles and Device management",
        "appCenter.internalApp.step4": "Tap on app developer name under Enterprise App",
        "appCenter.internalApp.step5": "Verify or Trust the app",
        "appCenter.internalApp.watchTutorial": "Watch step by step tutorial",

        "appCenter.type.web": "Website",
        "appCenter.type.native": "Native App",
        "appCenter.type.native.platform": "{0} App",
        "appCenter.type.virtual": "Virtual App",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "App Package",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Categories",
        "myapp.nav.favorites": "Favorites",
        "myapp.nav.allApps": "All Apps",
        "myapp.nav.recommendedApps": "Recommended",
        "myapp.nav.newlyEntitledApps": "New",
        "myapp.nav.webApps": "Websites",
        "myapp.nav.mobileApps": "Mobile Apps",
        "myapp.nav.macApps": "Mac Apps",
        "myapp.nav.windowsApps": "Windows Apps",
        "myapp.nav.virtualApps": "Virtual",
        "myapp.label.new": "New",
        "myapp.nav.filterby": "Filter by",
        "myapp.nav.mobile.filter.pagetitle": "Filter by Categories",
        "appCenter.nav.browseBy": "Browse by",

        "appCenter.catalog.empty": "It doesn’t look like you’ve been assigned any apps yet. They should be coming shortly, so check back soon.",

        "userInfo.adminConsole": "Administration Console",
        "userInfo.settings": "Settings",
        "userInfo.notifications": "Notifications",
        "userInfo.support": "Support",
        "userInfo.preferences": "Preferences",
        "userInfo.about": "About",
        "userInfo.devices": "Devices",
        "userInfo.settings.promo.title": "Download Workspace ONE App",
        "userInfo.settings.promo.message": "Workspace ONE gives you better experience in the app. Try it now?",

        "userInfo.tips": "App Tips",
        "userInfo.tips.description": "Get help on how to use the app.",

        "userInfo.tips.bookmarks": "How to use Bookmarks?",
        "userInfo.tips.catalog": "How to use Catalog?",
        "userInfo.tips.people": "New: How to use People?",
        "userInfo.tips.notification": "New: How to use Notification?",

        "userInfo.tips.catalog.desktop1": "Click on Open to launch a website in the browser;  use {0} to bookmark it.",
        "userInfo.tips.catalog.desktop2": "Click on the app icon or name to learn more details.",
        "userInfo.tips.catalog.mobile1": "Use {0} to open a website in the browser;  use {1} to bookmark it.",
        "userInfo.tips.catalog.mobile2": "Use {0} to install a native app on your device. {1} means you need to enroll your device to use these apps.",
        "userInfo.tips.catalog.mobile3": "Tap on the app icon or name to learn more details.",

        "userInfo.tips.bookmarks.desktop1": "Click the tile to launch the website in your browser.",
        "userInfo.tips.bookmarks.desktop2": "Hover on the tile to see more actions from the '...' menu.",

        "userInfo.tips.bookmarks.mobile": "Tap the tile to launch a website in your browser. Press and hold for more actions.",

        "userInfo.tips.catalog.download.phone": "Tap the {0} icon to install a native app on your device. The {1} icon means you need to enroll your device to use these apps.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Tap the {0} icon to open a website in the browser. Tap the {1} icon to bookmark it. Tap on the app icon or name for more details",

        "userInfo.tips.catalog.download.tablet": "Download apps by clicking on the download button, for more details just click on the app",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Launch apps by clicking on the launch button, bookmark apps by clicking on the bookmarks button",

        "userInfo.tips.people.mobile": "Click {0} to navigate from any profile to go back to the main people search landing page.",
        "userInfo.tips.notification.mobile": "Click {0} to access your notifications. The notification badge will stay active until you’ve dismissed or acted on all notifications.",

        "userInfo.tips.title": "App Tips",
        "userInfo.tips.intro": "Get help on how to use the app.",
        "userInfo.tips.desktop": "Desktop",
        "userInfo.tips.reordering.title": "Customize your bookmarks!",
        "userInfo.tips.reordering.text1": "1. Go to Custom View using the dropdown menu at the top right.",
        "userInfo.tips.reordering.text2": "2. Choose Arrange. ",
        "userInfo.tips.reordering.text3": "3. Drag and drop to rearrange your bookmarks. Once you are done, click Save.",
        "userInfo.tips.mobile": "Mobile Devices",

        "userInfo.removeAccount": "Remove Account",
        "userInfo.account": "Account",
        "userInfo.profile": "Profile",
        "userInfo.profile.name": "Name:",
        "userInfo.profile.email": "Email:",
        "userInfo.profile.username": "Username:",
        "userInfo.profile.picture": "Profile Picture",
        "userInfo.profile.password": "Password",
        "userInfo.profile.passwordchange": "Change",
        "userInfo.profile.passwordprompt": "Manage your password for the company system.",
        "userInfo.password": "Password",
        "userInfo.termsofuse": "Terms of Use",
        "userInfo.signout": "Sign Out",
        "userInfo.tryAgain": "Try again",
        "userInfo.managedevicesettings": "Manage Device Settings",
        "userInfo.notification": "Push Notification",
        "userInfo.passcode": "Touch ID or Passcode",

        "appCenter.support.selfservice": "Self Service",
        "appCenter.support.managedevices": "Devices",
        "appCenter.support.managedevicestext": "View your device information.",
        "appCenter.support.managepassword": "Change Password",
        "appCenter.support.managepasswordtext": "Change password for your company account",
        "appCenter.support.gethelp": "Get Help",
        "appCenter.support.appstips": "Apps and Tips",
        "appCenter.support.appstipstext": "See help tooltps in this app",
        "appCenter.support.sendReportTitle": "Send Report",
        "appCenter.support.sendReportDetails": "Learn how to send app diagnostics.",
        "appCenter.support.helpdesk": "Help Desk",
        "appCenter.support.contacthelpdesk": "Contact Help Desk",
        "appCenter.reportProblems.ios.sendLogInstruction": "Shake your device when an error occurs to easily send app diagnostics or provide feedback.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "You can turn this feature on/off in your device settings.",

        // App Details Page
        "app.details.link.back": "Back",
        "app.details.nav.details": "Details",
        "app.details.nav.reviews": "Reviews",
        "app.details.label.description": "Description",
        "app.details.label.noDescription": "No Description Available",
        "app.details.label.seeFullDetails": "View detail",
        "app.details.label.removeBookmark": "Remove",
        "app.details.label.resetDektop": "Reset",
        "app.details.label.information": "Information",
        "app.details.label.category": "Categories",
        "app.details.label.version": "Version",
        "app.details.label.type": "Type",
        "app.details.label.type.SAML11": "Web App",
        "app.details.label.type.SAML20": "Web App",
        "app.details.label.type.WEBAPPLINK": "Web App",
        "app.details.label.type.MDMWEB": "Web App",
        "app.details.label.type.WSFED12": "Web App",
        "app.details.label.type.XENAPP": "Xen App",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix Desktop",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Profile",
        "app.details.label.type.VIEWPOOL": "Horizon Desktop",
        "app.details.label.type.VIEWAPP": "Horizon App",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud Desktop",
        "app.details.label.type.DESKTONEAPPLICATION": "Horizon Cloud App",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Web App",
        "app.details.label.type.PUBLIC": "Public App",
        "app.details.label.type.INTERNAL": "Internal",
        "app.details.label.size": "Size",
        "app.details.label.price": "Price",
        "app.details.label.screenshots": "Screenshots",
        "app.details.label.showMore": "Show More",
        "app.details.label.showLess": "Show Less",
        "app.details.label.setAppPassword": "Set App Password",
        "app.details.label.sendFeedback": "Send Feedback",
        "app.details.label.feedbackSubject": "Feedback for app {0}",
        "app.details.label.support": "Support",
        "app.details.label.developer": "Developer",
        "app.details.label.email": "Email",
        "app.details.label.phone": "Phone",
        "app.details.appSize": "{0}MB",
        "app.details.label.launchMessage": "All mobile apps can be launched from your home screen.",

        "app.details.label.requirement": "Requirement:",
        "app.details.label.packageName": "Package Name:",
        "app.details.thinapp.requirement": "This application only works on a Windows computer with Identity Manager Desktop installed.",
        "app.details.viewDesktop.requirement": "This Horizon Desktop requires {0} Horizon Client{1} 3.0 or later to be installed on your computer.",
        "app.details.viewapp.requirement": "This Horizon Hosted Application requires {0} Horizon Client{1} 3.0 or later to be installed on your computer.",
        "app.details.xenapp.requirement": "This application requires {0} Citrix Receiver {1} to be installed.",
        "app.details.xenapp.msg.IE8OrLower": "This application requires Citrix Receiver to be installed. Note: this application cannot be opened in Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "This Citrix desktop requires {0} Citrix Receiver {1} to be installed.",
        "app.details.desktoneDesktop.requirement": "This Horizon Cloud Desktop requires {0} Horizon Client {1} to be installed on your computer.",
        "app.details.desktoneApp.requirement": "This Horizon Cloud Application requires {0} Horizon Client {1} to be installed on your computer.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "No information available",
        "app.details.noScreenshots": "No screenshots available",
        "app.details.noDescription": "The description is coming soon.",
        "app.details.needsDeviceEnrollment": "Requires Device Enrollment",
        "app.details.label.addToHomeScreen": "Add to Homescreen",
        "app.details.action.open": "Open",
        "app.details.action.bookmark": "Bookmark",
        "app.details.action.bookmarked": "Bookmarked",
        "app.details.action.launch": "Launch",
        "app.details.action.setPassword": "Set password",
        "app.details.action.pvAppCredentials": "Credentials",
        "app.details.info.msg.missingInfo": "Some information is missing. Try again later to see full details.",
        "app.details.wsrequired.msg": "Workspace Services required.",
        "app.details.label.addedFavorites": "Added to favorites",

        "app.rating.label": "User Rating",

        "app.settings.label.settings": "Settings",
        "app.settings.link.back": "Back",
        "app.settings.managedDevices": "Managed Devices",
        "app.nav.tab.bookmark": "Bookmarks",
        "app.nav.tab.catalog": "Catalog",
        "app.nav.tab.people": "People",
        "app.nav.tab.support": "Support",
        "app.nav.tab.apps": "Apps",
        "app.nav.tab.settings": "Settings",
        "app.about.heading": "About Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc. All rights reserved. This product is protected by copyright and intellectual property laws in the United States and other countries as well as by international treaties. VMware products are covered by one or more patents.",
        "app.about.button.label.privacyPolicy": "Privacy Policy",
        "app.about.button.label.patents": "Patent",
        "app.about.button.label.licenseAgreement": "License Agreement",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents",
        "app.about.licenseAgreementLink": "http://www.vmware.com/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Devices",
        "app.devices.tableColumn.deviceName": "Device Name",
        "app.devices.tableColumn.userDeviceId": "Device ID",
        "app.devices.tableColumn.lastLoginTime": "Last Login Time",
        "app.devices.unlinkDevice": "Unlink",
        "app.devices.unlinkedDevice": "Unlinked",
        "app.devices.emptyDeviceListMessage": "You do not have a device associated with your account.",

        "app.thinappMultiDeviceAct.heading": "This application will be added to the approved devices. To use \"{0}\" on additional devices, find the name of the device below then click Request button.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Device Name",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Status",
        "app.thinappMultiDeviceAct.button.request": "Request",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Declined",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "Pending",
        "app.thinappMultiDeviceAct.activationState.activated": "Approved",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Not Activated",

        "app.thinappsInPackage.button.done": "Done",
        "app.thinappsInPackage.button.bookmarkAll": "Bookmark All",
        "app.thinappsInPackage.info": "App Package",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} apps",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} match found.",
        "app.thinappsInPackage.action.instruction": "Choose bookmark icon to bookmark individual app or choose button to bookmark all apps.",
        "app.thinappsInPackage.search.placeholder": "Search in package",

        "app.setAppPassword.heading": "Set password",
        "app.setAppPassword.instruction": "Use the form below to set a password for this application. Password must be at least three characters in length.",
        "app.setAppPassword.label.password": "Password",
        "app.setAppPassword.label.confirmPassword": "Confirm Password",
        "app.setAppPassword.label.generate": "Generate Password",
        "app.setAppPassword.error.passwordsNoMatch": "Passwords do not match.",
        "app.setAppPassword.msg.success": "Your application password has been successfully set.",
        "app.setAppPassword.msg.fail": "There was an error while attempting to set your password. Please try again.",

        "pvapp.setAppPassword.heading": "Set saved credentials for {0}",
        "pvapp.setAppPassword.instruction": "Use the form below to set saved credentials for this application.",
        "pvapp.setAppPassword.label.username": "User Name",
        "pvapp.setAppPassword.label.password": "Password",
        "pvapp.setAppPassword.error.userNameEmpty": "User Name is empty.",
        "pvapp.setAppPassword.error.passwordEmpty": "Password is empty.",
        "pvapp.setAppPassword.msg.success": "Your application credentials has been successfully set.",
        "pvapp.setAppPassword.msg.fail": "There was an error while attempting to set your application credentials. Please try again.",

        "app.launchPassword.heading": "Password Request",
        "app.launchPassword.view.instruction": "We need your password to sign in to this windows resource {0}.",
        "app.launchPassword.label.userName": "User",
        "app.launchPassword.label.password": "password",
        "app.launchPassword.button.label.signin": "Sign In",

        "app.changePassword.title": "Change Password",
        "app.changePassword.enterCurrentPassword": "Enter current password",
        "app.changePassword.enterNewPassword": "Enter new password",
        "app.changePassword.confirmNewPassword": "Confirm new password",
        "app.changePassword.error.passwordsNoMatch": "New passwords don't match.",
        "app.changePassword.error.requirementsNoMatch": "New password doesn’t meet requirements.",
        "app.changePassword.success": "New password saved!",
        "app.changePassword.label.email": "Email",
        "app.changePassword.label.phone": "Phone",

        "app.passwordPolicy.passwordRequirements": "Password requirements",
        "app.passwordPolicy.label.currentpassword": "Current password",
        "app.passwordPolicy.label.newpassword": "New password",
        "app.passwordPolicy.label.confirmpassword": "Confirm new password",
        "app.passwordPolicy.minLength": "Minimal {0} digits",
        "app.passwordPolicy.leastIncludes": "at least includes:",
        "app.passwordPolicy.minLower": "{0} Letter",
        "app.passwordPolicy.minUpper": "{0} Cap",
        "app.passwordPolicy.minDigit": "{0} Number",
        "app.passwordPolicy.minSpecial": "{0} Special character",

        "app.coachmarks.bookmarkTitle": "How to use Bookmarks",
        "app.coachmarks.bookmarkMessage": "Tap to launch websites, press and hold to discover more.",
        "app.coachmarks.catalogTitle": "How to use Catalog",
        "app.coachmarks.catalogMessage": "Install or update apps, add to Bookmarks or directly open from here.",
        "app.coachmarks.buttonText": "Got it!",

        "app.logout.confirm.msg": "Logging out of Workspace ONE will end your current session. Any apps downloaded from the catalog will remain on the device, but no new apps will be available until you log back in.",
        "app.logout.title": "WARNING",

        "app.passwordVault.banner.msg": "You have apps that can utilize the Workspace ONE extension.",
        "app.passwordVault.banner.button.install": "Install",
        "app.passwordVault.banner.setPreference": "You can get it later in Settings - Preferences.",
        "app.passwordVault.banner.donotshowagain": "Don't show this again",
        "app.passwordVault.banner.button.later": "Later",
        "app.passwordVault.banner.button.get": "Get",
        "app.passwordVault.preference.title": "Workspace ONE Extension",
        "app.passwordVault.preference.instruction": "You have apps that can utilize the Workspace ONE Extension.",
        "app.passwordVault.preference.getextension": "Get the Extension.",
        "app.bookmarking.change.tab.title": "Still arranging your bookmarks?",
        "app.bookmarking.change.tab.body": "The changes you’ve made will not be saved. Do you want to keep arranging your bookmarks?",
        "app.bookmarking.touch.disabled": "You can Rearrange apps when using trackpad or mouse.",
        "app.bookmarking.change.tab.exit": "No, exit",
        "app.bookmarking.change.tab.stay": "Yes, stay here",
        "app.virtual.disabled": "Disabled by admin",
        "app.virtual.unavailable": "This app is unavailable on this device",
        "app.virtual.not.available": "Not Available",

        "app.notification.type.NEW_ENTITLEMENTS": "Check them out",
        "app.notification.type.PASSWORD_EXPIRING": "Update Password",
        "app.notification.action.delete": "Delete",
        "notification.new.entitlements.heading": "New Entitlements",
        "notification.new.entitlements.message": "You have {0} new entitlements assigned",
        "app.notification.delete.header": "Delete this Notification?",
        "app.notification.delete.msg": "Are you sure you want to delete this notification? You can choose Archive, if you want to archiveit later. ",
        "app.notification.delete.text": "Delete",
        "app.notification.keep.text": "Keep",
        "app.notification.restore.text": "Restore",
        "app.notification.delete.toast.msg": "Notification has been deleted.",
        "app.notification.empty": "You are all caught up!",
        "app.notification.more.actions": "More actions",
        "app.notification.archive.all": "Archive All",

        "app.notification.bookmark.all.error": "Sorry, we were not able to bookmark all your new apps",
        "app.notification.bookmark.all.success": "All new apps were added to favorites",
        "app.notification.delete.all": "Delete all",
        "app.notification.see.archived": "View Archived",
        "app.notification.see.all": "See all notifications",
        "app.notification.newApps.title": "You got new apps!",
        "app.notification.newApps.excessIconsMessage": "+ {0} more",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "View details",
        "app.tooltip.clicktolaunch": "Click to launch",

        "recommendedApps.install.proceed": "Proceed",
        "recommendedApps.install.title": "Install recommended apps",
        "recommendedApps.install.confirm.msg": "You will get prompts to continue installation of your apps.",
        "recommendedApps.text1": "These apps are commonly used by your colleagues.",
        "recommendedApps.text2": "You can install them now or find them later in your catalog.",
        "recommendedApps.selectAll": "Select All",
        "recommendedApps.apps": "apps",
        "recommendedApps.install": "Install",
        "recommendedApps.skip": "Skip",

        "app.desktopapp.settings.title.account": "Account",
        "app.desktopapp.settings.title.devices": "Devices",
        "app.desktopapp.settings.title.preferences": "Preferences",

        "appCenter.peopleSearch.placeholder": "Search People",
        "app.tooltip.copyEmail": "Copy Email",
        "app.peopleSearch.emailCopied": "Email copied",
        "appCenter.peopleSearch.noResults": "No results were found",
        "appCenter.peopleSearch.tryNewSearch": "Try a new search.",
        "appCenter.peopleSearch.atLeastThreeChars": "Enter 3 or more characters above to search.",
        "appCenter.searchPeople": "Search for people.",
        "myapps.mobilepagetitle.people": "People",
        "app.people.labels.team": "My Team",
        "app.people.labels.recent": "Recents",
        "app.people.labels.manager": "Manager",
        "app.people.labels.peers": "Peers",
        "app.people.labels.directReports": "Direct Reports",
        "app.people.labels.profile": "Profile",
        "app.people.labels.org": "Org",
        "app.people.labels.workEmail": "Work email",
        "app.people.labels.workPhone": "Work phone",
        "app.people.labels.alternateNumber": "Alternative phone",
        "app.people.labels.mobile": "Mobile",
        "app.people.labels.address": "Address",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Managers",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "Employee Number",
        "app.people.labels.skills": "Skills",
        "app.people.labels.businessUnit": "Business Unit",
        "app.people.labels.costCenter": "Cost Center",
        "app.people.labels.physicalDeliveryOfficeName": "Office Location",

        "hub.apps": "Apps",
        "hub.notifications": "Notifications",
        "hub.notifications.welcome": "Welcome!",
        "hub.notifications.first.time.message": "Notifications will appear here as you start using Hub.",
        "hub.notifications.new.apps.favorite.all": "Favorite All",
        "hub.notifications.congratulations": "Congratulations!",
        "hub.notifications.empty.description1": "No new notifications.",
        "hub.notifications.empty.description2": "Enjoy the extra space.",
        "hub.v2.notifications.empty.description": "You are all caught up with your notifications",
        "hub.v2.notifications.first.time.description": "Notifications will appear here as you start using Hub.",
        "hub.notifications.empty.description.archived": "No archived notifications.",
        "hub.notifications.priority": "Priority",
        "hub.notifications.today": "Today",
        "hub.notifications.yesterday": "Yesterday",
        "hub.notifications.lastWeek": "Last Week",
        "hub.notifications.lastMonth": "Last Month",
        "hub.notifications.older": "Older",
        "hub.notifications.archived.label": "Archived",
        "hub.notifications.action.success": "Success!",
        "hub.notifications.action.failure": "Sorry, there seems to be an error in executing that action",
        "hub.notifications.moreDetails": "More Details",
        "hub.notifications.dialog.action.completed": "Completed",
        "hub.notifications.dialog.action.needed": "Pending",
        "hub.notifications.dialog.action.all.notifications": "All Notifications",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Search apps",
        "hub.apps.favorites": "Favorites",
        "hub.apps.newApps": "New",
        "hub.apps.recommended": "Recommended",
        "hub.apps.categories": "Categories",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Whoa, there's a lot of space in here.",
        "hub.apps.no.apps.msg2": "Contact administrator to get work apps.",
        "hub.apps.search.in.category": "{0} Results in Category:",
        "hub.apps.search.in.app": "{0} Results in App Name and Description",
        "hub.apps.search.header": "Total Results",
        "hub.apps.search.no.result.header": "No results.",
        "hub.apps.search.no.result.msg": "Try again using a different term.",
        "hub.apps.searchpeople.no.result.msg": "Try again using a different name.",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "Application",
        "hub.apps.type.anyApp": "AnyApp",
        "hub.people": "People",
        "hub.people.search.text": "Search people",
        "hub.people.labels.mypeers": "My Peers",
        "hub.people.labels.directreports": "Direct Reports",
        "hub.people.labels.manager": "My Manager",
        "hub.people.labels.organization": "Organization",
        "hub.people.search.result": "Results",
        "hub.app.install.prompt.title": "Would you like to install",

        "hub.actionsheet.label.viewDetails": "View Details",
        "hub.actionsheet.label.removeFavorites": "Remove from Favorites",
        "hub.actionsheet.label.addFavorites": "Add to Favorites",
        "hub.password.done": "Done",

        "hub.placeholder.changepassword.username": "Username",
        "hub.placeholder.changepassword.password": "Password",
        "hub.placeholder.changepassword.confirmpassword": "Confirm Password",

        "hub.tunnel.text.line1": "Tunnel is required to access ",
        "hub.tunnel.text.line2": "Tunnel application will download automatically along with your app.",

        "hub.promotions.banner.category.title": "Category Highlights",
        "hub.promotions.banner.category.open": "Open",
        "hub.promotions.banner.app.get": "Get",
        "hub.promotions.banner.disabled": "Disabled by admin",
        "hub.require.app.management": "Managed",
        "hub.app.installing.alert.mobile.message": "The application {0} is installing, please check your phone's home screen for updates.",
        "hub.app.installing.alert.desktop.message": "The application {0} is installing, please check your desktop's app launcher for updates.",

        "hub.nav.label.apps": "Apps",
        "hub.nav.label.people": "People",
        "hub.nav.label.notification": "Notifications",
        "hub.nav.label.settings": "Settings",
        "hub.nav.label.account": "Account",
        "hub.nav.label.signout": "Sign Out",
        "hub.userInfo.adminConsole": "Administration Console",
        "hub.userInfo.signout": "Sign Out",
        "hub.userInfo.settings": "Settings",
        "hub.userInfo.account": "Account",
        "hub.userInfo.devices": "Devices",
        "hub.userInfo.whatsnew": "What's New",
        "hub.userInfo.about": "What's About",
        "hub.download.ios": "Hub for iOS",
        "hub.download.android": "Hub for Android",
        "hub.download.mac": "Hub for Mac",
        "hub.download.windows": "Hub for Windows",
        "hub.download.subtitle.mobile": "Get access to Notifications, Home and much more at one place.",
        "hub.download.subtitle.desktop": "Get desktop notifications and launch right from your dock.",
        "hub.preferences.title": "Preferences",
        "hub.preferences.horizon.subtitle": "Horizon Remote Apps",
        "hub.preferences.launch.question": "How would you like to launch Horizon remote apps?",
        "hub.about.title": "About VMware Intelligent Hub",
        "hub.apps.allApps": "All Apps",
        "hub.apps.configure.favorites.msg": "Add your favorite apps here for quicker access",
        "hub.apps.configure.favorites": "Configure",
        "hub.apps.edit.favorites": "Edit",

        "hub.contextDialog.label.removeFavorites": "Remove from Favorites",
        "hub.contextDialog.label.addFavorites": "Add to Favorites",
        "hub.contextDialog.label.viewDetails": "View Details",
        "hub.apps.edit.favorites.header": "Favorites Edit Mode",
        "hub.apps.edit.favorites.prompt": "Drag and drop to reorder.",
        "hub.apps.edit.favorites.save": "Save",
        "hub.apps.edit.favorites.cancel": "Cancel Changes",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "You have updated the order, please either cancel or save before exit",
        "hub.apps.edit.favorites.savecustomordering": "Saving custom ordering, to avoid loss of the results please do not navigate away",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Rearrange unavailable on touch screens.",
        "hub.apps.edit.favorites.notify.success": "Reordering of the favorites has been saved!",
        "hub.apps.edit.favorites.notify.error": "An error occurred, unable to save the reordering, try later",

        "hub.nav.label.settings.settings": "Settings",
        "hub.nav.label.settings.account": "Account",
        "hub.nav.label.settings.about": "About",
        "hub.nav.label.settings.devices": "Devices",
        "hub.nav.label.settings.preferences": "Preferences",
        "hub.nav.label.settings.whatsnew": "What's New",

        "hub.apps.detail.back": "Back to Apps",
        "hub.people.detail.back": "Back to People",
        "hub.people.notifications.back": "Back to Notifications",

        "hub.nav.label.notifications.filter": "Filter",
        "hub.nav.label.notifications.all.notifications": "All Notifications",
        "hub.nav.label.notifications.action.needed": "Pending",
        "hub.nav.label.notifications.completed": "Completed",
        "hub.long.card.description": "Description",
        "hub.long.card.Comment": "Comment",
        "hub.long.card.Comment.placeholder": "Add a comment",

        "hub.appLaunch.open": "Open",
        "hub.appLaunch.cancel": "Cancel",

        "hub.thinAppsInPackage.button.favoriteAll": "Favorite All"
    });
})(angular.module('com.vmware.greenbox.l10n', []));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "Aceptar",
        "and": "y",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Instalar",
        "app.banner.open": "Abrir",
        "app.promotion.banner.donotshowagain": "No volver a mostrar. Obtenerla más adelante en Ajustes - Acerca de.",
        "app.promotion.banner.open": "Abrir en aplicación",
        "app.promotion.banner.download": "Descargar aplicación",
        "app.promotion.banner.message": "Obtenga una mejor experiencia en la aplicación.",
        "horizonDesktopNotDetected": "VMware Identity Manager Desktop debe estar instalado en la computadora para poder abrir esta aplicación. <a target='_blank' href='{0}'>Instale VMware Identity Manager Desktop</a> si aún no lo tiene.",
        "viewAppsTooltip": "Esta aplicación hospedada de Horizon requiere que {0}Horizon Client{1} 3.0 o una versión más reciente esté instalado en la computadora.",
        "desktoneDesktopTooltip": "Este escritorio de Horizon Cloud requiere que {0} Horizon Client {1} esté instalado en el equipo.",
        "desktoneApplicationTooltip": "Esta aplicación de Horizon Cloud requiere que {0} Horizon Client {1} esté instalado en el equipo.",
        "xenAppsReceiverNotDetected": "Citrix Receiver debe estar instalado en la computadora para abrir esta aplicación. <a target='_blank' href='{0}'>Instale Citrix Receiver</a> si aún no lo tiene.",
        "button.save": "Guardar",
        "button.update": "Actualizar",
        "button.openHorizonView": "Abrir Horizon Client",
        "myapps.launch.openApp": "Abrir {0}",
        "button.openApp": "Abrir aplicación",
        "button.clear": "Borrar",
        "button.close": "Cerrar",
        "button.cancel": "Cancelar",
        "button.download": "Descargar",
        "myapps.launch.title.launch": "Iniciar",
        "myapps.launch.title": "Iniciar aplicación",
        "myapps.launch.view.openWith": "Abrir con",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Navegador",
        "myapps.launch.view.preferredClient.isDefault": "(predeterminado)",
        "myapps.launch.view.selectPreferredLaunchClient": "Seleccione cómo desea iniciar los escritorios y aplicaciones de Horizon",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Aplicaciones remotas de Horizon",
        "myapps.launch.view.selectPreferredLaunchClientText": "Al abrir las aplicaciones remotas de Horizon en Horizon Client y no en el navegador, disfrutará de una mejor experiencia.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "¿Cómo desea iniciar las aplicaciones remotas de Horizon?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "SELECCIONE EL MÉTODO PREDETERMINADO PARA INICIAR...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Esto determina el comportamiento de inicio predeterminado cuando se elige abrir un escritorio de Horizon en el dispositivo. Si selecciona Horizon Client como método predeterminado, debe tener Horizon Client instalado. <a target='_blank' href='{0}'>Instale Horizon Client</a> si aún no lo tiene.",
        "myapps.launch.view.unknownClientType": "Tipo de cliente desconocido para abrir Horizon Client.",
        "myapps.launch.view.openWithView": "Abrir con Horizon Client",
        "myapps.launch.view.openWithBrowser": "Abrir en el Navegador",

        "myapps.launch.view.preferredClient.byBrowser.description": "Si selecciona el navegador, su escritorio o aplicación se abrirá en una nueva ventana del navegador.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Este elemento requiere Horizon Client 3.0 o una versión más reciente. <a target='_blank' href='{0}'>Instale Horizon Client</a> si aún no lo tiene.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Puede cambiar este ajuste en las preferencias en cualquier momento.",
        "myapps.launch.view.preferredClient.saveSuccess": "La preferencia seleccionada se guardó correctamente.",
        "myapps.launch.msg.launching.desktop": "Iniciando escritorio <b>{0}</b> .....",
        "myapps.launch.msg.launching.application": "Iniciando aplicación <b>{0}</b> .....",
        "myapps.noAppsMsg": "No ha agregado ninguna aplicación. Puede navegar a {0} para agregar aplicaciones.",
        "myapps.noFavAppsMsg": "No ha marcado ninguna aplicación como favorita",
        "myapps.welcomeMsg": "Hola, {0}. Aquí están sus aplicaciones.",
        "myapps.bookmarks.empty.message": "Agregue como favoritas las aplicaciones utilizadas frecuentemente, para un acceso rápido.",
        "myapps.bookmarks.empty.hidecatalog.message": "Actualmente, no tiene aplicaciones disponibles para usar.",
        "myapps.bookmarks.empty.addbookmarks": "Agregar marcadores",
        "myapps.bookmarks.organize.title": "Organice sus marcadores",
        "myapps.bookmarks.organize.addbookmarks": "Agregar marcadores",
        "myapps.bookmarks.organize.batchremove": "Eliminar",

        "myapps.mobilepagetitle.apps": "Aplicaciones",
        "myapps.mobilepagetitle.details": "Detalles",
        "myapps.mobilepagetitle.support": "Soporte",
        "myapps.mobilepagetitle.settings": "Configuraciones",
        "myapps.mobilepagetitle.recommendedapps": "Recomendada para usted",
        "myapps.mobilepagetitle.notification": "Notificaciones",
        "myapps.mobilepagetitle.archived": "Archivado",
        "myapps.mobilepagetitle.notification.newapps": "Aplicaciones nuevas",

        "myapps.dialog.openApp": "Abrir",
        "myapps.dialog.openAppWithViewClient": "Abrir en Client",
        "myapps.dialog.openAppWithBrowser": "Abrir en Navegador",

        "myapps.launch.passwordvault.installExtension.description": "Esta aplicación puede usar la extensión de navegador Password Vault. <a target='_blank' href='{0}'>Instale la extensión</a> si aún no la tiene.",

        "deviceStatus.networkLost": "Se ha perdido la conexión. Intentado volver a conectar...",
        "deviceStatus.networkRestored": "Se restableció la conexión a la red",
        "api.session.expired.retry": "La sesión caducó, intentando renovar...",
        "api.entitlements.reload": "Se está actualizando la vista para actualizar las aplicaciones en su catálogo.",
        "api.security.header.invalid.relogin": "No se pudo validar el encabezado de seguridad, cerrando sesión...",
        "api.server.load.error": "Estamos experimentando una carga superior a lo habitual. Inténtelo de nuevo más tarde.",
        "api.updateApps": "Cargando la lista...",
        "api.error": "Se produjo un error. Inténtelo de nuevo.",
        "installation.error": "Las aplicaciones nativas no están disponibles temporalmente",
        "service.under.maintenance.error": "Workspace ONE está en modo de mantenimiento por el momento. Puede iniciar aplicaciones, pero puede que algunas funciones no estén disponibles.",
        "api.timeout": "Se agotó el tiempo de espera. Inténtelo de nuevo.",
        "favoriteStatus.favorite": "Favorito",
        "favoriteStatus.unfavorite": "No fav.",
        "favoriteStatus.offlineFavoriteMessage": "La función de marcar una aplicación como favorita no está disponible sin conexión. Conéctese e inténtelo de nuevo.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "No es posible eliminar un marcador de una aplicación fuera de línea. Conéctese e inténtelo de nuevo.",
        "error.failToFavoriteApp": "No se pudo actualizar el estado del marcador",
        "error.failedToResetApp": "No se pudo restablecer la aplicación",
        "error.failToHideApp": "No se pudo eliminar la aplicación",
        "error.failToShowApp": "No se pudo agregar la aplicación a Launcher",
        "error.failedToBookmarkApp": "No se pudo marcar la aplicación como favorita",
        "error.failedToLaunchApp": "No se pudo abrir la aplicación",
        "error.failedToRemoveAccount": "No se pudo eliminar la cuenta. Inténtelo de nuevo más tarde.",
        "installStatus.enrollDevice": "El uso de {0} requiere la activación de Workspace Services para proteger los datos corporativos",
        "installStatus.enrollDevice.learnMore": "Más información",
        "installStatus.offlineInstallMessage": "Las solicitudes de instalación no están disponibles fuera de línea. Vuelva a conectarse e inténtelo de nuevo.",
        "installStatus.activated": "Activado",
        "installStatus.notActivated": "Sin activar",
        "installStatus.request": "Solicitud",
        "installStatus.update": "Actualizar",
        "installStatus.processing": "Procesando",
        "installStatus.installFailedMessage": "Se produjo un error al instalar la aplicación {0}. Inténtelo de nuevo. Si el problema continúa, póngase en contacto con el administrador de TI.",
        "installStatus.unenrolledDevice": "Esta aplicación ya no está a disponible para usted. Presione Aceptar para actualizar la lista.",
        "installMessage.continueInstall": "Ya intentó descargar esta aplicación. ",
        "installMessage.proceedToInstall": "Haga clic para continuar.",
        "installMessage.installingOnDevice": "Instalando en dispositivo...",

        "app.mobileApp.versionAndMBSize": "{0} MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0} GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Habilitar Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "Es necesario hacerlo para poder instalar la aplicación. Automáticamente recibirá:",
        "app.adaptivemanagement.valueproposition1": "Instalación directa de todos los recursos corporativos.",
        "app.adaptivemanagement.valueproposition2": "Acceso seguro a la red corporativa.",
        "app.adaptivemanagement.valueproposition3": "Aplicaciones y contenido sincronizados en todos los dispositivos.",
        "app.adaptivemanagement.valueproposition4": "Mejora de la experiencia con las aplicaciones para una mayor productividad.",
        "app.adaptivemanagement.privacylink": "Su privacidad",

        "app.tunnel.continue": "Continuar",
        "app.tunnel.text.line1": "La aplicación VMware Tunnel es necesaria para acceder",
        "app.tunnel.text.line2": "La aplicación Tunnel se descargará automáticamente junto con su aplicación.",
        "app.tunnel.header": "Requiere VMware Tunnel",
        "app.tunnel.message": "Para usar esta aplicación, se debe instalar y ejecutar VMware Tunnel.",
        "recommendedApps.tunnel.text.line1": "La aplicación VMware Tunnel es necesaria para acceder",
        "recommendedApps.tunnel.text.line2": "La aplicación Tunnel se descargará automáticamente junto con su aplicación.",
        "app.tunnel.installHelpText": "Si las aplicaciones no han empezado a instalarse automáticamente, siga estos pasos para habilitar la aplicación.",
        "app.tunnel.installStep1": "Paso 1: instale la aplicación {0}",
        "app.tunnel.installStep2": "Paso 2: instale la aplicación {0}",

        "requestFailed": "Error de solicitud",
        "changeOccurred": "Ocurrió un cambio",
        "requestSuccessful": "Solicitud correcta",
        "accept": "Aceptar",
        "decline": "Rechazar",
        "termsOfUse": "Términos de uso",
        "beforeInstallation": "Antes de la instalación",
        "resetDesktopStatus.offlineMessage": "La función de reconfigurar un escritorio no está disponible fuera de línea. Vuelva a conectarse e inténtelo de nuevo.",
        "resetDesktop.sucess": "El escritorio se restableció correctamente",
        "appCenter.someAppsMissingMessage": "No se pudieron cargar todas las aplicaciones",
        "appCenter.register.device": "Es necesario actualizar información de su dispositivo. Pulse Actualizar para continuar en Workspace ONE.",
        "appCenter.mdm.device.error": "Ya no tiene acceso a Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Póngase en contacto con el administrador para conocer los detalles de su cuenta.",
        "appCenter.mdm.device.poll.error": "No se puede finalizar la compilación de su área de trabajo en este momento. Inténtelo de nuevo o póngase en contacto con el administrador.",
        "appCenter.device.status.notRegistered": "El dispositivo no está registrado",
        "appCenter.device.status.blackListed": "Este dispositivo está en la lista negra",
        "appCenter.device.status.deviceInputError": "¡Este dispositivo no es válido! Póngase en contacto con su administrador de TI.",
        "appCenter.device.status.unknownError": "Error desconocido",

        "appCenter.device.register": "Registrar dispositivo",
        "appCenter.device.moreDetails": "Más detalles",
        "appCenter.device.unEnrollWarningTitle": "¿Desea eliminar la cuenta?",
        "appCenter.device.mdmUnEnrollMessage": "Si elimina la cuenta, dejará de tener acceso a los recursos corporativos y las aplicaciones de trabajo de este dispositivo podrían eliminarse.",
        "appCenter.device.getDeviceEnrollmentStatus": "Obtener información adicional",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "¿Está seguro de que desea continuar?",
        "appCenter.device.remove": "Eliminar",
        "appCenter.device.keep": "Mantener",
        "appCenter.device.disableWorkspaceMessage": "Eliminar la cuenta revocará el acceso otorgado mediante la aplicación de Workspace ONE. Se desinstalarán las aplicaciones que se descargaron en su pantalla de inicio, pero puede que el acceso quede interrumpido. ¿Desea continuar?",
        "appCenter.noAppsMsg": "No hay aplicaciones disponibles",
        "appCenter.vppInviteTitle": "Registro de distribución administrado",
        "appCenter.appInstallConfirmPromptTitle": "Confirmar instalación",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Se requiere aprobación para",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Su solicitud fue denegada anteriormente",
        "appCenter.mdmAppRequestConfirmPromptMessage": "La aplicación a la cual que está intentando acceder debe ser aprobada por el administrador",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Ha realizado una solicitud para esta aplicación y se rechazó la solicitud. ¿Desea volver a realizar la solicitud?",
        "appCenter.acceptInvite": "Aceptar invitación",
        "appCenter.install": "Instalar",
        "appCenter.proceed": "Habilitar Workspace Services",
        "appCenter.cancel": "Cancelar",
        "appCenter.confirm": "Confirmar",
        "appCenter.searchApps": "Busque aplicaciones.",
        "appCenter.welcomeMsg": "¡Instale nuevas aplicaciones en cualquier lugar y en cualquier dispositivo!",
        "appCenter.done": "Listo",
        "appCenter.nav.privacyPage": "Página de privacidad",
        "appCenter.nav.catalog": "Catálogo",
        "appCenter.nav.myApps": "Mis aplicaciones",
        "appCenter.nav.favorites": "Favoritos",
        "appCenter.nav.categories": "Categorías",
        "appCenter.nav.filterby": "Filtrar por",
        "appCenter.nav.show": "Mostrar",
        "appCenter.nav.settings": "Configuraciones",
        "appCenter.nav.sortBy": "Ordenar por",
        "appCenter.nav.sortBy.alpha": "Ordenar de A a Z",
        "appCenter.nav.sortBy.inverseAlpha": "Ordenar de Z a A",
        "appCenter.nav.sortBy.customView": "Vista personalizada",
        "appCenter.nav.arrange": "Organizar",
        "appCenter.nav.arrange.saved": "La vista personalizada se ha guardado.",
        "appCenter.nav.arrange.tooltip": "Solo disponible en Windows.",
        "appCenter.nav.arrange.saving": "Guardando...",
        "appCenter.nav.arrange.error": "No se puede guardar la vista personalizada",
        "appCenter.nav.filter": "Filtrar",
        "appCenter.installFailedTitle": "Problema de instalación de aplicaciones",
        "appCenter.uccConflict": "Se presentó un problema con la sesión actual. Vuelva a iniciar sesión.",

        "appCenter.search.placeholder": "Buscar",
        "appCenter.search.noResults": "No se encontró ningún resultado.",

        "appCenter.action.open": "Abrir",
        "appCenter.action.install": "Instalar",
        "appCenter.action.installing": "Instalando",
        "appCenter.action.installed": "Instalado",
        "appCenter.action.reinstall": "Reinstalar",
        "appCenter.action.add": "Agregar",
        "appCenter.action.added": "Agregado",
        "appCenter.action.processing": "Procesando",
        "appCenter.action.update": "Actualizar",
        "appCenter.action.request": "Solicitud",
        "appCenter.action.pending": "Pendiente",
        "appCenter.action.view": "Ver",
        "appCenter.action.favorite": "Favorito",
        "appCenter.action.unfavorite": "No fav.",

        "appCenter.internalApp.installtionModalTitle": "Pasos de instalación de la aplicación",
        "appCenter.internalApp.installationStepTitle": "Para poder abrir la aplicación, siga estos pasos después de la instalación",
        "appCenter.internalApp.step1": "Inicie Ajustes desde la pantalla de inicio de iOS",
        "appCenter.internalApp.step2": "Pulse en General",
        "appCenter.internalApp.step3": "Pulse en Perfil y Administración del dispositivo",
        "appCenter.internalApp.step4": "Pulse en el nombre del desarrollador de la aplicación en Aplicación empresarial",
        "appCenter.internalApp.step5": "Verifique la aplicación o márquela como de confianza",
        "appCenter.internalApp.watchTutorial": "Vea el tutorial que detalla los pasos",

        "appCenter.type.web": "Sitio web",
        "appCenter.type.native": "Aplicación nativa",
        "appCenter.type.native.platform": "Aplicación {0}",
        "appCenter.type.virtual": "Aplicación virtual",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "Paquete de aplicaciones",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Categorías",
        "myapp.nav.favorites": "Favoritos",
        "myapp.nav.allApps": "Todas las aplicaciones",
        "myapp.nav.recommendedApps": "Recomendado",
        "myapp.nav.newlyEntitledApps": "Nuevo",
        "myapp.nav.webApps": "Sitios web",
        "myapp.nav.mobileApps": "Aplicaciones móviles",
        "myapp.nav.macApps": "Aplicaciones Mac",
        "myapp.nav.windowsApps": "Aplicaciones de Windows",
        "myapp.nav.virtualApps": "Virtual",
        "myapp.label.new": "Nuevo",
        "myapp.nav.filterby": "Filtrar por",
        "myapp.nav.mobile.filter.pagetitle": "Filtrar por categorías",
        "appCenter.nav.browseBy": "Examinar por",

        "appCenter.catalog.empty": "Parece que aún no tiene asignada ninguna aplicación. Debería recibirlas pronto, así que vuelva a comprobarlo en breve.",

        "userInfo.adminConsole": "Consola administrativa",
        "userInfo.settings": "Configuraciones",
        "userInfo.notifications": "Notificaciones",
        "userInfo.support": "Soporte",
        "userInfo.preferences": "Preferencias",
        "userInfo.about": "Acerca de",
        "userInfo.devices": "Dispositivos",
        "userInfo.settings.promo.title": "Descargar la aplicación Workspace ONE",
        "userInfo.settings.promo.message": "Workspace ONE ofrece una mejor experiencia en la aplicación. ¿Desea probarlo ahora?",

        "userInfo.tips": "Consejos de aplicación",
        "userInfo.tips.description": "Obtenga ayuda para utilizar la aplicación.",

        "userInfo.tips.bookmarks": "¿Cómo se utiliza la opción Marcadores?",
        "userInfo.tips.catalog": "¿Cómo se utiliza la opción Catálogo?",
        "userInfo.tips.people": "Nuevo: ¿Cómo se utiliza la opción Personas?",
        "userInfo.tips.notification": "Nuevo: ¿Cómo se utilizan las notificaciones?",

        "userInfo.tips.catalog.desktop1": "Haga clic en Abrir para iniciar un sitio web en el navegador; use {0} para marcarlo como favorito.",
        "userInfo.tips.catalog.desktop2": "Haga clic en el nombre o el icono de la aplicación para obtener más detalles.",
        "userInfo.tips.catalog.mobile1": "Use {0} para abrir un sitio web en el navegador; use {1} para marcarlo como favorito.",
        "userInfo.tips.catalog.mobile2": "Use {0} para instalar una aplicación nativa en el dispositivo. {1} significa que debe inscribir el dispositivo para usar estas aplicaciones.",
        "userInfo.tips.catalog.mobile3": "Pulse en el nombre o en el icono de la aplicación para obtener más detalles.",

        "userInfo.tips.bookmarks.desktop1": "Haga clic en el mosaico para iniciar el sitio web en el navegador.",
        "userInfo.tips.bookmarks.desktop2": "Pase el cursor sobre el mosaico para ver más acciones del menú '...'.",

        "userInfo.tips.bookmarks.mobile": "Pulse el mosaico para iniciar un sitio web en el navegador. Pulse y mantenga pulsado para ver más acciones.",

        "userInfo.tips.catalog.download.phone": "Pulse el icono {0} para instalar una aplicación nativa en el dispositivo. El icono {1} significa que debe inscribir el dispositivo para usar estas aplicaciones.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Pulse el icono {0} para abrir un sitio web en el navegador. Pulse el icono {1} para marcarlo como favorito. Pulse el icono o el nombre de la aplicación para obtener más detalles.",

        "userInfo.tips.catalog.download.tablet": "Para descargar aplicaciones, haga clic en el botón de descarga. Para obtener más detalles, simplemente haga clic en la aplicación.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Para iniciar aplicaciones, haga clic en el botón de inicio. Para marcar aplicaciones como favoritas, haga clic en el botón de favoritos.",

        "userInfo.tips.people.mobile": "Haga clic en {0} para volver a la página de destino de búsqueda de personas principal desde cualquier perfil.",
        "userInfo.tips.notification.mobile": "Haga clic en {0} para acceder a las notificaciones. La etiqueta de la notificación permanecerá activa hasta que se descarten las notificaciones o se tomen medidas en relación con ellas.",

        "userInfo.tips.title": "Consejos de aplicación",
        "userInfo.tips.intro": "Obtenga ayuda para utilizar la aplicación.",
        "userInfo.tips.desktop": "Escritorio",
        "userInfo.tips.reordering.title": "¡Personalice sus marcadores!",
        "userInfo.tips.reordering.text1": "1. Vaya a Vista personalizada mediante el menú desplegable en la parte superior derecha.",
        "userInfo.tips.reordering.text2": "2. Elija Organizar. ",
        "userInfo.tips.reordering.text3": "3. Arrastre y suelte para volver a organizar los marcadores. Cuando haya terminado, haga clic en Guardar.",
        "userInfo.tips.mobile": "Dispositivos móviles",

        "userInfo.removeAccount": "Eliminar cuenta",
        "userInfo.account": "Cuenta",
        "userInfo.profile": "Perfil",
        "userInfo.profile.name": "Nombre:",
        "userInfo.profile.email": "Correo electrónico:",
        "userInfo.profile.username": "Nombre del usuario:",
        "userInfo.profile.picture": "Imagen del perfil",
        "userInfo.profile.password": "Contraseña",
        "userInfo.profile.passwordchange": "Cambiar",
        "userInfo.profile.passwordprompt": "Administre su contraseña para el sistema corporativo.",
        "userInfo.password": "Contraseña",
        "userInfo.termsofuse": "Términos de uso",
        "userInfo.signout": "Cerrar sesión",
        "userInfo.tryAgain": "Intentar de nuevo",
        "userInfo.managedevicesettings": "Administrar configuración del dispositivo",
        "userInfo.notification": "Notificación push",
        "userInfo.passcode": "ID táctil o código de acceso",

        "appCenter.support.selfservice": "Autoservicio",
        "appCenter.support.managedevices": "Dispositivos",
        "appCenter.support.managedevicestext": "Vea la información de su dispositivo.",
        "appCenter.support.managepassword": "Cambiar contraseña",
        "appCenter.support.managepasswordtext": "Cambie la contraseña de su cuenta corporativa",
        "appCenter.support.gethelp": "Obtener ayuda",
        "appCenter.support.appstips": "Aplicaciones y consejos",
        "appCenter.support.appstipstext": "Vea información de ayuda en la aplicación",
        "appCenter.support.sendReportTitle": "Enviar informe",
        "appCenter.support.sendReportDetails": "Aprenda a enviar diagnósticos de una aplicación.",
        "appCenter.support.helpdesk": "Servicio de asistencia",
        "appCenter.support.contacthelpdesk": "Contacte con el servicio de asistencia",
        "appCenter.reportProblems.ios.sendLogInstruction": "Agite el dispositivo cuando se produzca un error para enviar diagnósticos de aplicaciones o sus comentarios.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Puede activar o desactivar esta función en la configuración del dispositivo.",

        // App Details Page
        "app.details.link.back": "Atrás",
        "app.details.nav.details": "Detalles",
        "app.details.nav.reviews": "Reseñas",
        "app.details.label.description": "Descripción",
        "app.details.label.noDescription": "No hay descripción disponible",
        "app.details.label.seeFullDetails": "Ver detalle",
        "app.details.label.removeBookmark": "Eliminar",
        "app.details.label.resetDektop": "Restablecer",
        "app.details.label.information": "Información",
        "app.details.label.category": "Categorías",
        "app.details.label.version": "Versión",
        "app.details.label.type": "Tipo",
        "app.details.label.type.SAML11": "Aplicación web",
        "app.details.label.type.SAML20": "Aplicación web",
        "app.details.label.type.WEBAPPLINK": "Aplicación web",
        "app.details.label.type.MDMWEB": "Aplicación web",
        "app.details.label.type.WSFED12": "Aplicación web",
        "app.details.label.type.XENAPP": "XenApp",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Escritorio de Citrix",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Perfil",
        "app.details.label.type.VIEWPOOL": "Escritorio de Horizon",
        "app.details.label.type.VIEWAPP": "Aplicación de Horizon",
        "app.details.label.type.DESKTONEDESKTOP": "Escritorio de Horizon Cloud",
        "app.details.label.type.DESKTONEAPPLICATION": "Aplicación de Horizon Cloud",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Aplicación web",
        "app.details.label.type.PUBLIC": "Aplicación pública",
        "app.details.label.type.INTERNAL": "Interno",
        "app.details.label.size": "Tamaño",
        "app.details.label.price": "Precio",
        "app.details.label.screenshots": "Capturas de pantalla",
        "app.details.label.showMore": "Mostrar más",
        "app.details.label.showLess": "Mostrar menos",
        "app.details.label.setAppPassword": "Est. contraseña",
        "app.details.label.sendFeedback": "Enviar comentarios",
        "app.details.label.feedbackSubject": "Comentarios sobre la aplicación{0}",
        "app.details.label.support": "Soporte",
        "app.details.label.developer": "Desarrollador",
        "app.details.label.email": "Correo electrónico",
        "app.details.label.phone": "Teléfono",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "Todas las aplicaciones móviles se pueden iniciar desde la pantalla de inicio.",

        "app.details.label.requirement": "Requisito:",
        "app.details.label.packageName": "Nombre del paquete:",
        "app.details.thinapp.requirement": "Esta aplicación solo funciona en un equipo Windows que tenga instalado Identity Manager Desktop.",
        "app.details.viewDesktop.requirement": "Este escritorio de Horizon requiere que {0}Horizon Client{1} 3.0 o una versión más reciente esté instalado en la computadora.",
        "app.details.viewapp.requirement": "Esta aplicación hospedada de Horizon requiere que {0}Horizon Client{1} 3.0 o una versión más reciente esté instalado en la computadora.",
        "app.details.xenapp.requirement": "Esta aplicación requiere que {0}Citrix Receiver{1} esté instalado.",
        "app.details.xenapp.msg.IE8OrLower": "Esta aplicación requiere que Citrix Receiver esté instalado. Aviso: Esta aplicación no se puede abrir en Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "El escritorio de Citrix requiere que {0}Citrix Receiver{1} esté instalado.",
        "app.details.desktoneDesktop.requirement": "Este escritorio de Horizon Cloud requiere que {0} Horizon Client {1} esté instalado en el equipo.",
        "app.details.desktoneApp.requirement": "Esta aplicación de Horizon Cloud requiere que {0} Horizon Client {1} esté instalado en el equipo.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "No hay información disponible",
        "app.details.noScreenshots": "No hay capturas de pantalla disponibles",
        "app.details.noDescription": "La descripción estará disponible próximamente.",
        "app.details.needsDeviceEnrollment": "Requiere que el dispositivo esté inscrito",
        "app.details.label.addToHomeScreen": "Agregar a pantalla de inicio",
        "app.details.action.open": "Abrir",
        "app.details.action.bookmark": "Marcar",
        "app.details.action.bookmarked": "Marcado",
        "app.details.action.launch": "Iniciar",
        "app.details.action.setPassword": "Establecer contraseña",
        "app.details.action.pvAppCredentials": "Credenciales",
        "app.details.info.msg.missingInfo": "Falta información. Inténtelo de nuevo más tarde para ver todos los detalles.",
        "app.details.wsrequired.msg": "Se requiere Workspace Services.",
        "app.details.label.addedFavorites": "Agregado a favoritos",

        "app.rating.label": "Calificación de usuario",

        "app.settings.label.settings": "Configuraciones",
        "app.settings.link.back": "Atrás",
        "app.settings.managedDevices": "Dispositivos administrados",
        "app.nav.tab.bookmark": "Marcadores",
        "app.nav.tab.catalog": "Catálogo",
        "app.nav.tab.people": "Personas",
        "app.nav.tab.support": "Soporte",
        "app.nav.tab.apps": "Aplicaciones",
        "app.nav.tab.settings": "Configuraciones",
        "app.about.heading": "Acerca de Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc. Todos los derechos reservados. El producto está protegido por leyes de propiedad intelectual y de copyright en los EE. UU. y otros países, así como por tratados internacionales. Los productos VMware cuentan con una o más patentes.",
        "app.about.button.label.privacyPolicy": "Política de privacidad",
        "app.about.button.label.patents": "Patentes",
        "app.about.button.label.licenseAgreement": "Acuerdo de licencia",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-es",
        "app.about.licenseAgreementLink": "http://www.vmware.com/es/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/es/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Dispositivos",
        "app.devices.tableColumn.deviceName": "Nombre del dispositivo",
        "app.devices.tableColumn.userDeviceId": "ID del dispositivo",
        "app.devices.tableColumn.lastLoginTime": "Hora del último inicio de sesión",
        "app.devices.unlinkDevice": "Anular enlace",
        "app.devices.unlinkedDevice": "No enlazado",
        "app.devices.emptyDeviceListMessage": "No tiene ningún dispositivo asociado a la cuenta.",

        "app.thinappMultiDeviceAct.heading": "Esta aplicación se agregará a los dispositivos aprobados. Para utilizar \"{0}\" en otros dispositivos, busque el nombre del dispositivo a continuación y haga clic en el botón Solicitud.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Nombre del dispositivo",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Estado",
        "app.thinappMultiDeviceAct.button.request": "Solicitud",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Denegada",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "Pendiente",
        "app.thinappMultiDeviceAct.activationState.activated": "Aprobada",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Sin activar",

        "app.thinappsInPackage.button.done": "Listo",
        "app.thinappsInPackage.button.bookmarkAll": "Marcar todo como Favoritos",
        "app.thinappsInPackage.info": "Paquete de aplicaciones",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} aplicaciones",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} coincidencia encontrada.",
        "app.thinappsInPackage.action.instruction": "Seleccione el icono de favorito para marcar como favorita una aplicación o seleccione el botón para marcar como favoritas todas las aplicaciones.",
        "app.thinappsInPackage.search.placeholder": "Buscar en paquete",

        "app.setAppPassword.heading": "Establecer contraseña",
        "app.setAppPassword.instruction": "Utilice el formulario a continuación para definir la contraseña de la aplicación. La contraseña debe tener, por lo menos, tres caracteres.",
        "app.setAppPassword.label.password": "Contraseña",
        "app.setAppPassword.label.confirmPassword": "Confirmar contraseña",
        "app.setAppPassword.label.generate": "Generar contraseña",
        "app.setAppPassword.error.passwordsNoMatch": "Las contraseñas no coinciden.",
        "app.setAppPassword.msg.success": "La contraseña de la aplicación se ha establecido correctamente.",
        "app.setAppPassword.msg.fail": "Error al intentar establecer la contraseña. Inténtelo de nuevo.",

        "pvapp.setAppPassword.heading": "Establecer credenciales guardadas para {0}",
        "pvapp.setAppPassword.instruction": "Utilice el formulario a continuación para definir las credenciales guardadas para esta aplicación.",
        "pvapp.setAppPassword.label.username": "Nombre de usuario",
        "pvapp.setAppPassword.label.password": "Contraseña",
        "pvapp.setAppPassword.error.userNameEmpty": "El nombre de usuario está vacío.",
        "pvapp.setAppPassword.error.passwordEmpty": "La contraseña está vacía.",
        "pvapp.setAppPassword.msg.success": "Las credenciales de la aplicación quedaron establecidas.",
        "pvapp.setAppPassword.msg.fail": "Error al intentar establecer las credenciales de la aplicación. Inténtelo de nuevo.",

        "app.launchPassword.heading": "Solicitud de contraseña",
        "app.launchPassword.view.instruction": "Necesitamos su contraseña para iniciar sesión en este recurso de Windows: {0}",
        "app.launchPassword.label.userName": "Usuario",
        "app.launchPassword.label.password": "Contraseña",
        "app.launchPassword.button.label.signin": "Iniciar sesión",

        "app.changePassword.title": "Cambiar contraseña",
        "app.changePassword.enterCurrentPassword": "Introduzca la contraseña actual",
        "app.changePassword.enterNewPassword": "Introduzca la nueva contraseña",
        "app.changePassword.confirmNewPassword": "Confirme la nueva contraseña",
        "app.changePassword.error.passwordsNoMatch": "Las contraseñas nuevas no coinciden.",
        "app.changePassword.error.requirementsNoMatch": "La nueva contraseña no cumple los requisitos.",
        "app.changePassword.success": "¡Se guardó la nueva contraseña!",
        "app.changePassword.label.email": "Correo electrónico",
        "app.changePassword.label.phone": "Teléfono",

        "app.passwordPolicy.passwordRequirements": "Requisitos de la contraseña",
        "app.passwordPolicy.label.currentpassword": "Contraseña actual",
        "app.passwordPolicy.label.newpassword": "Contraseña nueva",
        "app.passwordPolicy.label.confirmpassword": "Confirme la nueva contraseña",
        "app.passwordPolicy.minLength": "Mínimo {0} dígitos",
        "app.passwordPolicy.leastIncludes": "incluye al menos:",
        "app.passwordPolicy.minLower": "{0} Letra",
        "app.passwordPolicy.minUpper": "{0} Mayúscula",
        "app.passwordPolicy.minDigit": "{0} Número",
        "app.passwordPolicy.minSpecial": "{0} Carácter especial",

        "app.coachmarks.bookmarkTitle": "Cómo utilizar los marcadores",
        "app.coachmarks.bookmarkMessage": "Pulse para iniciar sitios web, mantenga pulsado para descubrir más.",
        "app.coachmarks.catalogTitle": "Cómo utilizar el catálogo",
        "app.coachmarks.catalogMessage": "Instale o actualice aplicaciones, agréguelas a Marcadores o ábralas directamente desde aquí.",
        "app.coachmarks.buttonText": "Lo entiendo",

        "app.logout.confirm.msg": "Cerrar la sesión de Workspace ONE cancelará su sesión actual. Todas las aplicaciones que haya descargado del catálogo permanecerán en el dispositivo, pero no habrá más aplicaciones disponibles hasta que vuelva a iniciar sesión.",
        "app.logout.title": "ADVERTENCIA",

        "app.passwordVault.banner.msg": "Tiene aplicaciones que pueden utilizar la extensión de Workspace ONE.",
        "app.passwordVault.banner.button.install": "Instalar",
        "app.passwordVault.banner.setPreference": "Puede obtenerla más adelante en Ajustes - Preferencias.",
        "app.passwordVault.banner.donotshowagain": "No volver a mostrar",
        "app.passwordVault.banner.button.later": "Más tarde",
        "app.passwordVault.banner.button.get": "Obtener",
        "app.passwordVault.preference.title": "Extensión de Workspace ONE",
        "app.passwordVault.preference.instruction": "Tiene aplicaciones que pueden utilizar la extensión de Workspace One.",
        "app.passwordVault.preference.getextension": "Obtenga la extensión.",
        "app.bookmarking.change.tab.title": "¿Sigue organizando sus marcadores?",
        "app.bookmarking.change.tab.body": "Los cambios que ha hecho no se guardarán. ¿Desea seguir organizando sus marcadores?",
        "app.bookmarking.touch.disabled": "Puede reorganizar las aplicaciones mediante un trackpad o un ratón.",
        "app.bookmarking.change.tab.exit": "No, salir",
        "app.bookmarking.change.tab.stay": "Sí, seguir aquí",
        "app.virtual.disabled": "Deshabilitado por el administrador",
        "app.virtual.unavailable": "Esta aplicación no está disponible en este dispositivo",
        "app.virtual.not.available": "No disponible",

        "app.notification.type.NEW_ENTITLEMENTS": "Compruébelas",
        "app.notification.type.PASSWORD_EXPIRING": "Actualizar contraseña",
        "app.notification.action.delete": "Eliminar",
        "notification.new.entitlements.heading": "Nuevas asignaciones",
        "notification.new.entitlements.message": "Tiene {0} asignaciones nuevas",
        "app.notification.delete.header": "¿Desea eliminar esta notificación?",
        "app.notification.delete.msg": "¿Está seguro de que desea eliminar esta notificación? Puede elegir Archivar si desea archivarla más tarde. ",
        "app.notification.delete.text": "Eliminar",
        "app.notification.keep.text": "Mantener",
        "app.notification.restore.text": "Restablecer",
        "app.notification.delete.toast.msg": "Se ha eliminado la notificación.",
        "app.notification.empty": "Están todos atrapados",
        "app.notification.more.actions": "Más acciones",
        "app.notification.archive.all": "Archivar todo",

        "app.notification.bookmark.all.error": "No pudimos marcar como favoritas todas sus aplicaciones nuevas",
        "app.notification.bookmark.all.success": "Todas las nuevas aplicaciones se agregaron a Favoritos",
        "app.notification.delete.all": "Eliminar todo",
        "app.notification.see.archived": "Ver archivados",
        "app.notification.see.all": "Ver todas las notificaciones",
        "app.notification.newApps.title": "¡Tiene aplicaciones nuevas!",
        "app.notification.newApps.excessIconsMessage": "+ {0} más",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Ver detalles",
        "app.tooltip.clicktolaunch": "Haga clic para iniciar",

        "recommendedApps.install.proceed": "Continuar",
        "recommendedApps.install.title": "Instalar aplicaciones recomendadas",
        "recommendedApps.install.confirm.msg": "Obtendrá indicaciones para continuar con la instalación de las aplicaciones.",
        "recommendedApps.text1": "Generalmente sus colegas usan estas aplicaciones.",
        "recommendedApps.text2": "Puede instalarlas ahora o buscarlas más tarde en el catálogo.",
        "recommendedApps.selectAll": "Seleccionar todo",
        "recommendedApps.apps": "aplicaciones",
        "recommendedApps.install": "Instalar",
        "recommendedApps.skip": "Omitir",

        "app.desktopapp.settings.title.account": "Cuenta",
        "app.desktopapp.settings.title.devices": "Dispositivos",
        "app.desktopapp.settings.title.preferences": "Preferencias",

        "appCenter.peopleSearch.placeholder": "Buscar personas",
        "app.tooltip.copyEmail": "Copiar correo electrónico",
        "app.peopleSearch.emailCopied": "Correo electrónico copiado",
        "appCenter.peopleSearch.noResults": "No se encontró ningún resultado",
        "appCenter.peopleSearch.tryNewSearch": "Intente una nueva búsqueda.",
        "appCenter.peopleSearch.atLeastThreeChars": "Introduzca arriba 3 caracteres o más para buscar.",
        "appCenter.searchPeople": "Busque personas.",
        "myapps.mobilepagetitle.people": "Personas",
        "app.people.labels.team": "Mi equipo",
        "app.people.labels.recent": "Recientes",
        "app.people.labels.manager": "Administrador",
        "app.people.labels.peers": "Pares",
        "app.people.labels.directReports": "Informes directos",
        "app.people.labels.profile": "Perfil",
        "app.people.labels.org": "Organización",
        "app.people.labels.workEmail": "Correo electrónico del trabajo",
        "app.people.labels.workPhone": "Teléfono del trabajo",
        "app.people.labels.alternateNumber": "Teléfono alternativo",
        "app.people.labels.mobile": "Teléfono móvil",
        "app.people.labels.address": "Dirección",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Administradores",
        "app.people.labels.skypeForBusiness": "Skype Empresarial",
        "app.people.labels.employeeNumber": "Código del empleado",
        "app.people.labels.skills": "Aptitudes",
        "app.people.labels.businessUnit": "Unidad de negocio",
        "app.people.labels.costCenter": "Centro de costos",
        "app.people.labels.physicalDeliveryOfficeName": "Ubicación de la oficina",

        "hub.apps": "Aplicaciones",
        "hub.notifications": "Notificaciones",
        "hub.notifications.welcome": "Le damos la bienvenida",
        "hub.notifications.first.time.message": "Las notificaciones aparecerán aquí a medida que empiece a utilizar Hub.",
        "hub.notifications.new.apps.favorite.all": "Marcar todos como favoritos",
        "hub.notifications.congratulations": "¡Felicitaciones!",
        "hub.notifications.empty.description1": "No hay notificaciones nuevas.",
        "hub.notifications.empty.description2": "Disfrute del espacio adicional.",
        "hub.v2.notifications.empty.description": "Todas sus notificaciones están actualizadas",
        "hub.v2.notifications.first.time.description": "Las notificaciones aparecerán aquí a medida que empiece a utilizar Hub.",
        "hub.notifications.empty.description.archived": "No hay notificaciones archivadas.",
        "hub.notifications.priority": "Prioridad",
        "hub.notifications.today": "Hoy",
        "hub.notifications.yesterday": "Ayer",
        "hub.notifications.lastWeek": "La semana pasada",
        "hub.notifications.lastMonth": "El mes pasado",
        "hub.notifications.older": "Más antiguos",
        "hub.notifications.archived.label": "Archivado",
        "hub.notifications.action.success": "Correcto.",
        "hub.notifications.action.failure": "Lo sentimos, parece que hay un error al ejecutar la acción",
        "hub.notifications.moreDetails": "Más detalles",
        "hub.notifications.dialog.action.completed": "Completado",
        "hub.notifications.dialog.action.needed": "Pendiente",
        "hub.notifications.dialog.action.all.notifications": "Todas las notificaciones",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Buscar aplicaciones",
        "hub.apps.favorites": "Favoritos",
        "hub.apps.newApps": "Nuevo",
        "hub.apps.recommended": "Recomendado",
        "hub.apps.categories": "Categorías",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Hay mucho espacio aquí.",
        "hub.apps.no.apps.msg2": "Póngase en contacto con el administrador para obtener las aplicaciones de trabajo.",
        "hub.apps.search.in.category": "{0} resultados en la categoría:",
        "hub.apps.search.in.app": "{0} resultados en el nombre de la aplicación y la descripción",
        "hub.apps.search.header": "Total de resultados",
        "hub.apps.search.no.result.header": "Sin resultados.",
        "hub.apps.search.no.result.msg": "Vuelva a intentarlo con un término distinto.",
        "hub.apps.searchpeople.no.result.msg": "Vuelva a intentarlo con un nombre distinto.",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "Aplicación",
        "hub.apps.type.anyApp": "AnyApp",
        "hub.people": "Personas",
        "hub.people.search.text": "Buscar personas",
        "hub.people.labels.mypeers": "Mis pares",
        "hub.people.labels.directreports": "Informes directos",
        "hub.people.labels.manager": "Mi administrador",
        "hub.people.labels.organization": "Organización",
        "hub.people.search.result": "Resultados",
        "hub.app.install.prompt.title": "Desea instalar",

        "hub.actionsheet.label.viewDetails": "Ver detalles",
        "hub.actionsheet.label.removeFavorites": "Eliminar de favoritos",
        "hub.actionsheet.label.addFavorites": "Agregar a favoritos",
        "hub.password.done": "Listo",

        "hub.placeholder.changepassword.username": "Nombre de usuario",
        "hub.placeholder.changepassword.password": "Contraseña",
        "hub.placeholder.changepassword.confirmpassword": "Confirmar contraseña",

        "hub.tunnel.text.line1": "Se requiere Tunnel para el acceso ",
        "hub.tunnel.text.line2": "La aplicación Tunnel se descargará automáticamente junto con su aplicación.",

        "hub.promotions.banner.category.title": "Información destacada de la categoría",
        "hub.promotions.banner.category.open": "Abrir",
        "hub.promotions.banner.app.get": "Obtener",
        "hub.promotions.banner.disabled": "Deshabilitado por el administrador",
        "hub.require.app.management": "Administrada",
        "hub.app.installing.alert.mobile.message": "Se está instalando la aplicación {0}, compruebe las actualizaciones en la pantalla de inicio del teléfono.",
        "hub.app.installing.alert.desktop.message": "Se está instalando la aplicación {0}, compruebe las actualizaciones en el iniciador de aplicaciones del escritorio.",

        "hub.nav.label.apps": "Aplicaciones",
        "hub.nav.label.people": "Personas",
        "hub.nav.label.notification": "Notificaciones",
        "hub.nav.label.settings": "Configuraciones",
        "hub.nav.label.account": "Cuenta",
        "hub.nav.label.signout": "Cerrar sesión",
        "hub.userInfo.adminConsole": "Consola administrativa",
        "hub.userInfo.signout": "Cerrar sesión",
        "hub.userInfo.settings": "Configuraciones",
        "hub.userInfo.account": "Cuenta",
        "hub.userInfo.devices": "Dispositivos",
        "hub.userInfo.whatsnew": "Novedades",
        "hub.userInfo.about": "Acerca de",
        "hub.download.ios": "Hub para iOS",
        "hub.download.android": "Hub para Android",
        "hub.download.mac": "Hub para Mac",
        "hub.download.windows": "Hub para Windows",
        "hub.download.subtitle.mobile": "Obtenga acceso a las notificaciones, el menú de inicio y mucho más en un solo lugar.",
        "hub.download.subtitle.desktop": "Obtenga notificaciones de escritorio e inicie directamente desde el Dock.",
        "hub.preferences.title": "Preferencias",
        "hub.preferences.horizon.subtitle": "Aplicaciones remotas de Horizon",
        "hub.preferences.launch.question": "¿Cómo desea iniciar las aplicaciones remotas de Horizon?",
        "hub.about.title": "Acerca de VMware Intelligent Hub",
        "hub.apps.allApps": "Todas las aplicaciones",
        "hub.apps.configure.favorites.msg": "Agregue sus aplicaciones favoritas aquí para un acceso más rápido",
        "hub.apps.configure.favorites": "Configurar",
        "hub.apps.edit.favorites": "Editar",

        "hub.contextDialog.label.removeFavorites": "Eliminar de favoritos",
        "hub.contextDialog.label.addFavorites": "Agregar a favoritos",
        "hub.contextDialog.label.viewDetails": "Ver detalles",
        "hub.apps.edit.favorites.header": "Modo de edición de favoritos",
        "hub.apps.edit.favorites.prompt": "Arrastre y suelte para reordenar.",
        "hub.apps.edit.favorites.save": "Guardar",
        "hub.apps.edit.favorites.cancel": "Cancelar los cambios",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Ha actualizado el orden, cancele o guarde antes de salir",
        "hub.apps.edit.favorites.savecustomordering": "Guardando el orden personalizado; para evitar perder los resultados, no salga de la página",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "La reorganización no está disponible en pantallas táctiles.",
        "hub.apps.edit.favorites.notify.success": "Se ha guardado la reordenación de los favoritos.",
        "hub.apps.edit.favorites.notify.error": "Se produjo un error; no se puede guardar la reordenación, inténtelo más tarde",

        "hub.nav.label.settings.settings": "Configuraciones",
        "hub.nav.label.settings.account": "Cuenta",
        "hub.nav.label.settings.about": "Acerca de",
        "hub.nav.label.settings.devices": "Dispositivos",
        "hub.nav.label.settings.preferences": "Preferencias",
        "hub.nav.label.settings.whatsnew": "Novedades",

        "hub.apps.detail.back": "Volver a Aplicaciones",
        "hub.people.detail.back": "Volver a Personas",
        "hub.people.notifications.back": "Volver a Notificaciones",

        "hub.nav.label.notifications.filter": "Filtrar",
        "hub.nav.label.notifications.all.notifications": "Todas las notificaciones",
        "hub.nav.label.notifications.action.needed": "Pendiente",
        "hub.nav.label.notifications.completed": "Completado",
        "hub.long.card.description": "Descripción",
        "hub.long.card.Comment": "Comentario",
        "hub.long.card.Comment.placeholder": "Agregar un comentario",

        "hub.appLaunch.open": "Abrir",
        "hub.appLaunch.cancel": "Cancelar"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "et",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Installer",
        "app.banner.open": "Ouvrir",
        "app.promotion.banner.donotshowagain": "Ne plus afficher ce message. Y revenir ultérieurement dans Paramètres - À propos de.",
        "app.promotion.banner.open": "Ouvrir dans l'application",
        "app.promotion.banner.download": "Télécharger l'application",
        "app.promotion.banner.message": "Bénéficiez d'une meilleure expérience avec l'application.",
        "horizonDesktopNotDetected": "VMware Identity Manager Desktop doit être installé sur cet ordinateur pour ouvrir cette application. <a target='_blank' href='{0}'>Installez VMware Identity Manager Desktop</a> si vous ne l'avez pas déjà fait.",
        "viewAppsTooltip": "Cette application hébergée par Horizon nécessite l'installation d'{0}Horizon Client{1} 3.0 ou version ultérieure sur votre ordinateur.",
        "desktoneDesktopTooltip": "Ce poste de travail Horizon Cloud nécessite l'installation d'{0}Horizon Client{1} sur votre ordinateur.",
        "desktoneApplicationTooltip": "Cette application Horizon Cloud nécessite l'installation d'{0}Horizon Client{1} sur votre ordinateur.",
        "xenAppsReceiverNotDetected": "Citrix Receiver doit être installé sur cet ordinateur pour ouvrir cette application. <a target='_blank' href='{0}'>Installez Citrix Receiver</a> si vous ne l'avez pas déjà fait.",
        "button.save": "Enregistrer",
        "button.update": "Mettre à jour",
        "button.openHorizonView": "Ouvrir Horizon Client",
        "myapps.launch.openApp": "Ouvrir {0}",
        "button.openApp": "Ouvrir l'application",
        "button.clear": "Effacer",
        "button.close": "Fermer",
        "button.cancel": "Annuler",
        "button.download": "Télécharger",
        "myapps.launch.title.launch": "Lancer",
        "myapps.launch.title": "Lancer l'application",
        "myapps.launch.view.openWith": "Ouvrir avec",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Navigateur",
        "myapps.launch.view.preferredClient.isDefault": "(par défaut)",
        "myapps.launch.view.selectPreferredLaunchClient": "Sélectionnez une option de lancement des applications et postes de travail Horizon.",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Applications distantes Horizon",
        "myapps.launch.view.selectPreferredLaunchClientText": "L'ouverture des applications distantes Horizon dans Horizon Client vous donnera une meilleure expérience que celle du navigateur.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Comment souhaitez-vous lancer les applications distantes Horizon ?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "Sélectionnez une option de lancement par défaut…",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Cela détermine l'option de lancement par défaut lorsque vous choisissez d'ouvrir un poste de travail Horizon depuis votre terminal. Si vous sélectionnez Horizon Client comme option par défaut, Horizon Client doit être préalablement installé. <a target='_blank' href='{0}'>Installez Horizon Client</a> si vous ne l'avez pas déjà fait.",
        "myapps.launch.view.unknownClientType": "Type de client inconnu pour ouvrir Horizon Client.",
        "myapps.launch.view.openWithView": "Ouvrir avec Horizon Client",
        "myapps.launch.view.openWithBrowser": "Ouvrir avec Navigateur",

        "myapps.launch.view.preferredClient.byBrowser.description": "Si vous sélectionnez Navigateur, votre poste de travail ou votre application s'ouvrira dans une nouvelle fenêtre de navigateur.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Cet élément requiert Horizon Client 3.0 ou version ultérieure. <a target='_blank' href='{0}'>Installez Horizon Client</a> si vous ne l'avez pas déjà fait.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Vous pouvez à tout moment modifier ce paramètre dans les préférences.",
        "myapps.launch.view.preferredClient.saveSuccess": "La préférence sélectionnée a été enregistrée.",
        "myapps.launch.msg.launching.desktop": "Lancement du poste de travail <b>{0}</b>…",
        "myapps.launch.msg.launching.application": "Lancement de l'application <b>{0}</b>…",
        "myapps.noAppsMsg": "Vous n'avez ajouté aucune application. Vous pouvez accéder à {0} pour ajouter des applications.",
        "myapps.noFavAppsMsg": "Vous n'avez ajouté aucun signet aux applications",
        "myapps.welcomeMsg": "Bonjour {0}. Voici vos applications !",
        "myapps.bookmarks.empty.message": "Mettez en signet les applications utilisées fréquemment pour un accès rapide.",
        "myapps.bookmarks.empty.hidecatalog.message": "Actuellement, vous n'avez aucune application utilisable.",
        "myapps.bookmarks.empty.addbookmarks": "Ajouter des signets",
        "myapps.bookmarks.organize.title": "Organiser vos signets",
        "myapps.bookmarks.organize.addbookmarks": "Ajouter des signets",
        "myapps.bookmarks.organize.batchremove": "Supprimer",

        "myapps.mobilepagetitle.apps": "Applications",
        "myapps.mobilepagetitle.details": "Détails",
        "myapps.mobilepagetitle.support": "Assistance",
        "myapps.mobilepagetitle.settings": "Paramètres",
        "myapps.mobilepagetitle.recommendedapps": "Recommandé pour vous",
        "myapps.mobilepagetitle.notification": "Notifications",
        "myapps.mobilepagetitle.archived": "Archivé",
        "myapps.mobilepagetitle.notification.newapps": "Nouvelles applications",

        "myapps.dialog.openApp": "Ouvrir",
        "myapps.dialog.openAppWithViewClient": "Ouvrir dans le client",
        "myapps.dialog.openAppWithBrowser": "Ouvrir dans le Navigateur",

        "myapps.launch.passwordvault.installExtension.description": "Cette application peut utiliser l'extension de navigateur Password Vault. <a target='_blank' href='{0}'>Installez l'extension</a> si vous ne l'avez pas déjà fait.",

        "deviceStatus.networkLost": "Connexion perdue. Tentative de reconnexion…",
        "deviceStatus.networkRestored": "Connexion réseau rétablie",
        "api.session.expired.retry": "Session expirée, tentative de renouvellement...",
        "api.entitlements.reload": "Actualisation de votre vue pour mettre à jour les applications dans votre catalogue.",
        "api.security.header.invalid.relogin": "Échec de la validation de l'en-tête de sécurité, déconnexion...",
        "api.server.load.error": "La charge est plus lourde qu'habituellement. Réessayez ultérieurement.",
        "api.updateApps": "Mise à jour de la liste...",
        "api.error": "Une erreur s'est produite. Réessayez.",
        "installation.error": "Les applications natives sont temporairement indisponibles.",
        "service.under.maintenance.error": "Workspace ONE est temporairement en mode maintenance. Vous pouvez lancer vos applications, mais certaines fonctionnalités peuvent ne pas fonctionner.",
        "api.timeout": "Délai de connexion dépassé. Réessayez.",
        "favoriteStatus.favorite": "Aj. aux fav.",
        "favoriteStatus.unfavorite": "Suppr. des fav.",
        "favoriteStatus.offlineFavoriteMessage": "L'ajout d'un signet d'une application n'est pas possible hors ligne. Reconnectez-vous et réessayez.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "La suppression d'un signet d'une application n'est pas possible hors ligne. Reconnectez-vous et réessayez.",
        "error.failToFavoriteApp": "Échec de la mise à jour de l'état des signets",
        "error.failedToResetApp": "Échec de la réinitialisation de l'application",
        "error.failToHideApp": "Échec de la suppression de l'application",
        "error.failToShowApp": "Échec de l'ajout de l'application au Launcher",
        "error.failedToBookmarkApp": "Échec de l'ajout du signet de l'application",
        "error.failedToLaunchApp": "Échec de l'ouverture de l'application",
        "error.failedToRemoveAccount": "Échec de la suppression du compte. Réessayez ultérieurement.",
        "installStatus.enrollDevice": "L'utilisation de {0} nécessite l'activation de Workspace Services pour protéger les données d'entreprise",
        "installStatus.enrollDevice.learnMore": "En savoir plus",
        "installStatus.offlineInstallMessage": "Les demandes d'installation ne sont pas possibles hors ligne. Reconnectez-vous et réessayez.",
        "installStatus.activated": "Activé",
        "installStatus.notActivated": "Non activé",
        "installStatus.request": "Demande",
        "installStatus.update": "Mettre à jour",
        "installStatus.processing": "Traitement en cours",
        "installStatus.installFailedMessage": "Une erreur est survenue lors de l'installation de l'application {0}. Réessayez. Si ce problème persiste, contactez votre administrateur informatique.",
        "installStatus.unenrolledDevice": "Cette application n'est plus disponible pour vous. Appuyez sur OK pour mettre à jour la liste.",
        "installMessage.continueInstall": "Vous avez déjà essayé d'installer cette application. ",
        "installMessage.proceedToInstall": "Cliquez pour continuer.",
        "installMessage.installingOnDevice": "Installation en cours sur le terminal…",

        "app.mobileApp.versionAndMBSize": "{0} Mo | v{1}",
        "app.mobileApp.versionAndGBSize": "{0} Go | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Activer Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "Cela est requis pour pouvoir installer l'application. Vous recevez automatiquement les éléments suivants :",
        "app.adaptivemanagement.valueproposition1": "Installation directe de toutes les ressources de l'entreprise.",
        "app.adaptivemanagement.valueproposition2": "Accès sécurisé au réseau d'entreprise.",
        "app.adaptivemanagement.valueproposition3": "Applications et contenu synchronisés sur tous vos terminaux.",
        "app.adaptivemanagement.valueproposition4": "Expérience d'application améliorée qui vous rendra plus productif.",
        "app.adaptivemanagement.privacylink": "Votre confidentialité",

        "app.tunnel.continue": "Continuer",
        "app.tunnel.text.line1": "L'application VMware Tunnel est requise pour accéder à",
        "app.tunnel.text.line2": "L'application Tunnel sera téléchargée automatiquement avec votre application.",
        "app.tunnel.header": "Nécessite le tunnel VMware",
        "app.tunnel.message": "Pour utiliser cette application, VMware Tunnel doit être installé et en cours d'exécution.",
        "recommendedApps.tunnel.text.line1": "L'application VMware Tunnel est requise pour accéder à",
        "recommendedApps.tunnel.text.line2": "L'application Tunnel sera téléchargée automatiquement avec votre application.",
        "app.tunnel.installHelpText": "Si l'installation des applications n'a pas démarré automatiquement, suivez la procédure suivante pour activer l'application",
        "app.tunnel.installStep1": "Étape 1 : Installer l'application {0}",
        "app.tunnel.installStep2": "Étape 2 : Installer l'application {0}",

        "requestFailed": "Échec de la demande",
        "changeOccurred": "Une modification a eu lieu",
        "requestSuccessful": "Demande réussie",
        "accept": "Accepter",
        "decline": "Refuser",
        "termsOfUse": "Conditions d'utilisation",
        "beforeInstallation": "Avant l'installation",
        "resetDesktopStatus.offlineMessage": "La réinitialisation d'un poste de travail n'est pas possible hors ligne. Reconnectez-vous et réessayez.",
        "resetDesktop.sucess": "Réinitialisation du poste de travail réussie",
        "appCenter.someAppsMissingMessage": "Toutes les applications n'ont pas pu être chargées",
        "appCenter.register.device": "Certaines informations relatives à votre périphérique doivent être mises à jour. Appuyez sur Mettre à jour pour continuer avec Workspace ONE.",
        "appCenter.mdm.device.error": "Vous n'avez plus accès à Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Pour obtenir les informations détaillées relatives à votre compte, contactez votre administrateur.",
        "appCenter.mdm.device.poll.error": "Nous ne sommes pas en mesure de terminer la création de votre espace de travail à ce stade. Réessayez ou contactez votre administrateur.",
        "appCenter.device.status.notRegistered": "Le terminal n'est pas inscrit",
        "appCenter.device.status.blackListed": "Ce terminal est sur liste noire",
        "appCenter.device.status.deviceInputError": "Terminal non valide ! Contactez votre administrateur informatique.",
        "appCenter.device.status.unknownError": "Une erreur inconnue s'est produite",

        "appCenter.device.register": "Inscrire le terminal",
        "appCenter.device.moreDetails": "Plus de détails",
        "appCenter.device.unEnrollWarningTitle": "Supprimer votre compte ?",
        "appCenter.device.mdmUnEnrollMessage": "La suppression de votre compte désactivera l'accès aux ressources de l'entreprise et peut supprimer des applications de travail sur ce terminal.",
        "appCenter.device.getDeviceEnrollmentStatus": "Obtenir des informations supplémentaires",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Voulez-vous vraiment continuer ?",
        "appCenter.device.remove": "Supprimer",
        "appCenter.device.keep": "Conserver",
        "appCenter.device.disableWorkspaceMessage": "La suppression de votre compte entraînera la révocation de l'accès accordé via l'application Workspace ONE. Les applications téléchargées sur votre Springboard resteront installées, mais l'accès peut être interrompu. Voulez-vous continuer ?",
        "appCenter.noAppsMsg": "Aucune application disponible actuellement",
        "appCenter.vppInviteTitle": "Inscription de la distribution gérée",
        "appCenter.appInstallConfirmPromptTitle": "Confirmer l'installation",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Approbation nécessaire pour",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Votre demande a été précédemment refusée",
        "appCenter.mdmAppRequestConfirmPromptMessage": "L'application à laquelle vous tentez d'accéder doit être approuvée par votre administrateur",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Vous avez demandé cette application et votre demande a été refusée. Voulez-vous vraiment la redemander ?",
        "appCenter.acceptInvite": "Accepter l'invitation",
        "appCenter.install": "Installer",
        "appCenter.proceed": "Activer Workspace Services",
        "appCenter.cancel": "Annuler",
        "appCenter.confirm": "Confirmer",
        "appCenter.searchApps": "Recherchez des applications.",
        "appCenter.welcomeMsg": "Installez de nouvelles applications n'importe où, sur n'importe quel terminal !",
        "appCenter.done": "Terminé",
        "appCenter.nav.privacyPage": "Page de confidentialité",
        "appCenter.nav.catalog": "Catalogue",
        "appCenter.nav.myApps": "Mes applications",
        "appCenter.nav.favorites": "Favoris",
        "appCenter.nav.categories": "Catégories",
        "appCenter.nav.filterby": "Filtrer par",
        "appCenter.nav.show": "Afficher",
        "appCenter.nav.settings": "Paramètres",
        "appCenter.nav.sortBy": "Trier par",
        "appCenter.nav.sortBy.alpha": "Trier par a-z",
        "appCenter.nav.sortBy.inverseAlpha": "Trier par z-a",
        "appCenter.nav.sortBy.customView": "Affichage personnalisé",
        "appCenter.nav.arrange": "Organiser",
        "appCenter.nav.arrange.saved": "L'affichage personnalisé a été enregistré !",
        "appCenter.nav.arrange.tooltip": "Disponible uniquement sur des fenêtres.",
        "appCenter.nav.arrange.saving": "Enregistrement...",
        "appCenter.nav.arrange.error": "Impossible d'enregistrer l'affichage personnalisé",
        "appCenter.nav.filter": "Filtrer",
        "appCenter.installFailedTitle": "Problème d'installation de l'application",
        "appCenter.uccConflict": "Une erreur s'est produite avec la session actuelle. Reconnectez-vous.",

        "appCenter.search.placeholder": "Rechercher",
        "appCenter.search.noResults": "Aucun résultat n'a été trouvé.",

        "appCenter.action.open": "Ouvrir",
        "appCenter.action.install": "Installer",
        "appCenter.action.installing": "Installation",
        "appCenter.action.installed": "Installé",
        "appCenter.action.reinstall": "Réinstaller",
        "appCenter.action.add": "Ajouter",
        "appCenter.action.added": "Ajouté",
        "appCenter.action.processing": "Traitement en cours",
        "appCenter.action.update": "Mettre à jour",
        "appCenter.action.request": "Demande",
        "appCenter.action.pending": "En attente",
        "appCenter.action.view": "Afficher",
        "appCenter.action.favorite": "Aj. aux fav.",
        "appCenter.action.unfavorite": "Suppr. des fav.",

        "appCenter.internalApp.installtionModalTitle": "Étapes d'installation de l'application",
        "appCenter.internalApp.installationStepTitle": "Pour ouvrir cette application, suivez ces étapes après l'installation",
        "appCenter.internalApp.step1": "Lancer Réglages depuis l'écran d'accueil de votre système iOS",
        "appCenter.internalApp.step2": "Appuyer sur Général",
        "appCenter.internalApp.step3": "Appuyer sur Gestion du terminal et des profils",
        "appCenter.internalApp.step4": "Appuyer sur le nom du développeur de l'application sous Application d'entreprise",
        "appCenter.internalApp.step5": "Vérifier ou se fier à l'application",
        "appCenter.internalApp.watchTutorial": "Regarder le tutoriel étape par étape",

        "appCenter.type.web": "Site Web",
        "appCenter.type.native": "Application native",
        "appCenter.type.native.platform": "Application {0}",
        "appCenter.type.virtual": "Application virtuelle",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "Package d'applications",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Catégories",
        "myapp.nav.favorites": "Favoris",
        "myapp.nav.allApps": "Toutes les applications",
        "myapp.nav.recommendedApps": "Recommandé",
        "myapp.nav.newlyEntitledApps": "Nouveau",
        "myapp.nav.webApps": "Sites Web",
        "myapp.nav.mobileApps": "Applications mobiles",
        "myapp.nav.macApps": "Applications Mac",
        "myapp.nav.windowsApps": "Applications Windows",
        "myapp.nav.virtualApps": "Virtuel",
        "myapp.label.new": "Nouveau",
        "myapp.nav.filterby": "Filtrer par",
        "myapp.nav.mobile.filter.pagetitle": "Filtrer par catégorie",
        "appCenter.nav.browseBy": "Rechercher par",

        "appCenter.catalog.empty": "Il semble qu'aucune application ne vous a encore été attribuée. Cela devrait se faire sous peu. Revérifiez prochainement.",

        "userInfo.adminConsole": "Console d'administration",
        "userInfo.settings": "Paramètres",
        "userInfo.notifications": "Notifications",
        "userInfo.support": "Assistance",
        "userInfo.preferences": "Préférences",
        "userInfo.about": "À propos",
        "userInfo.devices": "Terminaux",
        "userInfo.settings.promo.title": "Télécharger l'application Workspace ONE",
        "userInfo.settings.promo.message": "Workspace ONE vous fait vivre une meilleure expérience de l'application. Prêt à l'essayer ?",

        "userInfo.tips": "Conseils sur l'application",
        "userInfo.tips.description": "Obtenez de l'aide pour utiliser l'application !",

        "userInfo.tips.bookmarks": "Comment utiliser les signets ?",
        "userInfo.tips.catalog": "Comment utiliser le catalogue ?",
        "userInfo.tips.people": "Nouveau : Comment utiliser les personnes ?",
        "userInfo.tips.notification": "Nouveau : Comment utiliser la notification ?",

        "userInfo.tips.catalog.desktop1": "Cliquez sur Ouvrir pour lancer un site Web dans le navigateur ; utilisez {0} pour l'ajouter aux signets.",
        "userInfo.tips.catalog.desktop2": "Pour en savoir plus, cliquez sur l'icône ou le nom de l'application.",
        "userInfo.tips.catalog.mobile1": "Utilisez {0} pour ouvrir un site Web dans le navigateur ;  utilisez {1} pour l'ajouter aux signets.",
        "userInfo.tips.catalog.mobile2": "Utilisez {0} pour installer une application native sur votre terminal. {1} signifie que vous devez inscrire votre terminal pour pouvoir utiliser les applications.",
        "userInfo.tips.catalog.mobile3": "Pour en savoir plus, appuyez sur l'icône ou le nom de l'application.",

        "userInfo.tips.bookmarks.desktop1": "Cliquez sur le titre pour lancer le site Web dans votre navigateur.",
        "userInfo.tips.bookmarks.desktop2": "Pointez le curseur sur le titre pour afficher plus d'actions dans le menu « … ».",

        "userInfo.tips.bookmarks.mobile": "Appuyez sur la vignette pour lancer un site Web dans votre navigateur. Maintenez la vignette enfoncée pour voir plus d'actions.",

        "userInfo.tips.catalog.download.phone": "Appuyez sur l'icône {0} pour installer une application native sur votre terminal. L'icône {1} signifie que vous devez inscrire votre terminal pour utiliser ces applications.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Appuyez sur l'icône {0} pour ouvrir un site Web dans le navigateur. Appuyez sur l'icône {1} pour l'ajouter aux signets. Appuyez sur l'icône ou le nom de l'application pour obtenir plus d'informations.",

        "userInfo.tips.catalog.download.tablet": "Téléchargez des applications en cliquant sur le bouton de téléchargement. Pour obtenir plus d'informations, cliquez simplement sur l'application.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Lancez des applications en cliquant sur le bouton de lancement. Ajoutez un signet aux applications en cliquant sur le bouton de signet.",

        "userInfo.tips.people.mobile": "Cliquez sur {0} pour revenir à la page de lancement principale de la recherche de personnes à partir de n'importe quel profil.",
        "userInfo.tips.notification.mobile": "Cliquez sur {0} pour accéder à vos notifications. Le badge de notification restera actif tant que vous n'avez pas fermé ou traité toutes les notifications.",

        "userInfo.tips.title": "Conseils sur l'application",
        "userInfo.tips.intro": "Obtenez de l'aide pour utiliser l'application !",
        "userInfo.tips.desktop": "Poste de travail",
        "userInfo.tips.reordering.title": "Personnalisez vos signets !",
        "userInfo.tips.reordering.text1": "1. Accédez à la vue personnalisée à l'aide du menu déroulant en haut à droite.",
        "userInfo.tips.reordering.text2": "2. Sélectionnez Organiser. ",
        "userInfo.tips.reordering.text3": "3. Faites glisser vos signets pour les réorganiser. Une fois terminé, cliquez sur Enregistrer.",
        "userInfo.tips.mobile": "Terminaux mobiles",

        "userInfo.removeAccount": "Supprimer le compte",
        "userInfo.account": "Compte",
        "userInfo.profile": "Profil",
        "userInfo.profile.name": "Nom :",
        "userInfo.profile.email": "E-mail :",
        "userInfo.profile.username": "Nom d'utilisateur :",
        "userInfo.profile.picture": "Image de profil",
        "userInfo.profile.password": "Mot de passe",
        "userInfo.profile.passwordchange": "Modifier",
        "userInfo.profile.passwordprompt": "Gérez votre mot de passe pour le système de l'entreprise.",
        "userInfo.password": "Mot de passe",
        "userInfo.termsofuse": "Conditions d'utilisation",
        "userInfo.signout": "Déconnexion",
        "userInfo.tryAgain": "Réessayer",
        "userInfo.managedevicesettings": "Gérer les paramètres du terminal",
        "userInfo.notification": "Notification Push",
        "userInfo.passcode": "Touch ID ou code d'accès",

        "appCenter.support.selfservice": "Self-service",
        "appCenter.support.managedevices": "Terminaux",
        "appCenter.support.managedevicestext": "Consultez les informations de votre terminal.",
        "appCenter.support.managepassword": "Modifier le mot de passe",
        "appCenter.support.managepasswordtext": "Modifier le mot de passe pour le compte de votre entreprise",
        "appCenter.support.gethelp": "Obtenir de l'aide",
        "appCenter.support.appstips": "Applications et conseils",
        "appCenter.support.appstipstext": "Voir les info-bulles d'aide dans cette application",
        "appCenter.support.sendReportTitle": "Envoyer le rapport",
        "appCenter.support.sendReportDetails": "Découvrez comment envoyer des diagnostics d'application.",
        "appCenter.support.helpdesk": "Service d'assistance",
        "appCenter.support.contacthelpdesk": "Contacter le service d'assistance",
        "appCenter.reportProblems.ios.sendLogInstruction": "Secouez votre terminal lorsqu'une erreur se produit afin d'envoyer facilement des diagnostics d'application ou faire part de vos commentaires.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Vous pouvez activer ou désactiver cette fonctionnalité dans les paramètres de votre terminal.",

        // App Details Page
        "app.details.link.back": "Retour",
        "app.details.nav.details": "Détails",
        "app.details.nav.reviews": "Avis",
        "app.details.label.description": "Description",
        "app.details.label.noDescription": "Aucune description disponible",
        "app.details.label.seeFullDetails": "Afficher les détails",
        "app.details.label.removeBookmark": "Supprimer",
        "app.details.label.resetDektop": "Réinitialiser",
        "app.details.label.information": "Informations",
        "app.details.label.category": "Catégories",
        "app.details.label.version": "Version",
        "app.details.label.type": "Type",
        "app.details.label.type.SAML11": "Application Web",
        "app.details.label.type.SAML20": "Application Web",
        "app.details.label.type.WEBAPPLINK": "Application Web",
        "app.details.label.type.MDMWEB": "Application Web",
        "app.details.label.type.WSFED12": "Application Web",
        "app.details.label.type.XENAPP": "Application Xen",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Poste de travail Citrix",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Profil",
        "app.details.label.type.VIEWPOOL": "Poste de travail Horizon",
        "app.details.label.type.VIEWAPP": "Application Horizon",
        "app.details.label.type.DESKTONEDESKTOP": "Poste de travail Horizon Cloud",
        "app.details.label.type.DESKTONEAPPLICATION": "Application Horizon Cloud",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Application Web",
        "app.details.label.type.PUBLIC": "Application publique",
        "app.details.label.type.INTERNAL": "Interne",
        "app.details.label.size": "Taille",
        "app.details.label.price": "Tarif",
        "app.details.label.screenshots": "Captures d'écran",
        "app.details.label.showMore": "Plus d'informations",
        "app.details.label.showLess": "Moins d'informations",
        "app.details.label.setAppPassword": "Définir le mot de passe de l'application",
        "app.details.label.sendFeedback": "Envoyer des commentaires",
        "app.details.label.feedbackSubject": "Commentaires sur l'application {0}",
        "app.details.label.support": "Assistance",
        "app.details.label.developer": "Développeur",
        "app.details.label.email": "E-mail",
        "app.details.label.phone": "Téléphone",
        "app.details.appSize": "{0} Mo",
        "app.details.label.launchMessage": "Toutes les applications mobiles peuvent être lancées à partir de votre écran d'accueil.",

        "app.details.label.requirement": "Conditions :",
        "app.details.label.packageName": "Nom du package :",
        "app.details.thinapp.requirement": "Cette application ne fonctionne que sur un ordinateur Windows disposant d'Identity Manager Desktop.",
        "app.details.viewDesktop.requirement": "Ce poste de travail Horizon nécessite l'installation d'{0}Horizon Client{1} 3.0 ou version ultérieure sur votre ordinateur.",
        "app.details.viewapp.requirement": "Cette application hébergée par Horizon nécessite l'installation d'{0}Horizon Client{1} 3.0 ou version ultérieure sur votre ordinateur.",
        "app.details.xenapp.requirement": "Cette application nécessite l'installation de {0}Citrix Receiver{1}.",
        "app.details.xenapp.msg.IE8OrLower": "L'application nécessite l'installation de Citrix Receiver. Remarque : cette application ne peut pas être ouverte dans Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "Ce poste de travail Citrix nécessite l'installation de {0}Citrix Receiver{1}.",
        "app.details.desktoneDesktop.requirement": "Ce poste de travail Horizon Cloud nécessite l'installation d'{0}Horizon Client{1} sur votre ordinateur.",
        "app.details.desktoneApp.requirement": "Cette application Horizon Cloud nécessite l'installation d'{0}Horizon Client{1} sur votre ordinateur.",
        "app.details.abbrev.megabytes": "Mo",
        "app.details.abbrev.gigabytes": "Go",
        "app.details.noData": "Aucune information disponible",
        "app.details.noScreenshots": "Aucune capture d'écran disponible",
        "app.details.noDescription": "La description sera bientôt disponible.",
        "app.details.needsDeviceEnrollment": "Nécessite l'enrôlement du terminal",
        "app.details.label.addToHomeScreen": "Ajouter à l'écran d'accueil",
        "app.details.action.open": "Ouvrir",
        "app.details.action.bookmark": "Signet",
        "app.details.action.bookmarked": "Marqué comme signet",
        "app.details.action.launch": "Lancer",
        "app.details.action.setPassword": "Définir le mot de passe",
        "app.details.action.pvAppCredentials": "Informations d'identification",
        "app.details.info.msg.missingInfo": "Des informations sont manquantes. Réessayez ultérieurement pour voir tous les détails.",
        "app.details.wsrequired.msg": "Services d'espace de travail requis.",
        "app.details.label.addedFavorites": "Ajouté aux favoris",

        "app.rating.label": "Évaluation de l'utilisateur",

        "app.settings.label.settings": "Paramètres",
        "app.settings.link.back": "Retour",
        "app.settings.managedDevices": "Terminaux gérés",
        "app.nav.tab.bookmark": "Signets",
        "app.nav.tab.catalog": "Catalogue",
        "app.nav.tab.people": "Personnes",
        "app.nav.tab.support": "Assistance",
        "app.nav.tab.apps": "Applications",
        "app.nav.tab.settings": "Paramètres",
        "app.about.heading": "À propos de Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc. Tous droits réservés. Ce produit est protégé par les lois internationales et américaines relatives au droit d'auteur et à la propriété intellectuelle. Les produits VMware sont couverts par un ou plusieurs brevets.",
        "app.about.button.label.privacyPolicy": "Politique de confidentialité",
        "app.about.button.label.patents": "Brevet",
        "app.about.button.label.licenseAgreement": "Contrat de licence",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-fr",
        "app.about.licenseAgreementLink": "http://www.vmware.com/fr/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/fr/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Terminaux",
        "app.devices.tableColumn.deviceName": "Nom du terminal",
        "app.devices.tableColumn.userDeviceId": "Identifiant de terminal",
        "app.devices.tableColumn.lastLoginTime": "Heure de dernière connexion",
        "app.devices.unlinkDevice": "Dissocier",
        "app.devices.unlinkedDevice": "Dissocié",
        "app.devices.emptyDeviceListMessage": "Vous ne disposez pas de terminal associé à votre compte.",

        "app.thinappMultiDeviceAct.heading": "Cette application sera ajoutée aux terminaux approuvés. Pour utiliser « {0} » sur d'autres terminaux, recherchez le nom du terminal ci-dessous, puis cliquez sur le bouton Demande.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Nom du terminal",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "État",
        "app.thinappMultiDeviceAct.button.request": "Demande",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Refusée",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "En attente",
        "app.thinappMultiDeviceAct.activationState.activated": "Approuvée",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Non activé",

        "app.thinappsInPackage.button.done": "Terminé",
        "app.thinappsInPackage.button.bookmarkAll": "Tout ajouter aux favoris",
        "app.thinappsInPackage.info": "Package d'applications",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} applications",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} correspondances trouvées.",
        "app.thinappsInPackage.action.instruction": "Choisissez l'icône de signet pour ajouter un signet à une seule application ou choisissez le bouton pour ajouter un signet à toutes les applications.",
        "app.thinappsInPackage.search.placeholder": "Rechercher dans le package",

        "app.setAppPassword.heading": "Définir le mot de passe",
        "app.setAppPassword.instruction": "Utilisez le formulaire ci-dessous pour créer un mot de passe pour cette application. Le mot de passe doit comporter au moins trois caractères.",
        "app.setAppPassword.label.password": "Mot de passe",
        "app.setAppPassword.label.confirmPassword": "Confirmer le mot de passe",
        "app.setAppPassword.label.generate": "Générer le mot de passe",
        "app.setAppPassword.error.passwordsNoMatch": "Les mots de passe ne correspondent pas.",
        "app.setAppPassword.msg.success": "Création de votre mot de passe d'application réussie.",
        "app.setAppPassword.msg.fail": "Une erreur s'est produite lors de la tentative de définition de votre mot de passe. Réessayez.",

        "pvapp.setAppPassword.heading": "Définir les informations d'identification enregistrées pour {0}",
        "pvapp.setAppPassword.instruction": "Utilisez le formulaire ci-dessous pour définir les informations d'identification enregistrées pour cette application.",
        "pvapp.setAppPassword.label.username": "Nom d'utilisateur",
        "pvapp.setAppPassword.label.password": "Mot de passe",
        "pvapp.setAppPassword.error.userNameEmpty": "Le nom d'utilisateur est vide.",
        "pvapp.setAppPassword.error.passwordEmpty": "Le mot de passe est vide.",
        "pvapp.setAppPassword.msg.success": "Vos informations d'identification ont été définies correctement.",
        "pvapp.setAppPassword.msg.fail": "Une erreur s'est produite lors de la tentative de définition de vos informations d'identification. Réessayez.",

        "app.launchPassword.heading": "Demande de mot de passe",
        "app.launchPassword.view.instruction": "Votre mot de passe est requis pour vous connecter à cette ressource Windows {0}.",
        "app.launchPassword.label.userName": "Utilisateur",
        "app.launchPassword.label.password": "mot de passe",
        "app.launchPassword.button.label.signin": "Se connecter",

        "app.changePassword.title": "Modifier le mot de passe",
        "app.changePassword.enterCurrentPassword": "Entrer le mot de passe actuel",
        "app.changePassword.enterNewPassword": "Entrer un nouveau mot de passe",
        "app.changePassword.confirmNewPassword": "Confirmer le nouveau mot de passe",
        "app.changePassword.error.passwordsNoMatch": "La confirmation du nouveau mot de passe ne correspond pas.",
        "app.changePassword.error.requirementsNoMatch": "Le nouveau mot de passe ne satisfait pas les critères requis.",
        "app.changePassword.success": "Nouveau mot de passe enregistré !",
        "app.changePassword.label.email": "E-mail",
        "app.changePassword.label.phone": "Téléphone",

        "app.passwordPolicy.passwordRequirements": "Critères de mot de passe",
        "app.passwordPolicy.label.currentpassword": "Mot de passe actuel",
        "app.passwordPolicy.label.newpassword": "Nouveau mot de passe",
        "app.passwordPolicy.label.confirmpassword": "Confirmer le nouveau mot de passe",
        "app.passwordPolicy.minLength": "{0} chiffres au minimum",
        "app.passwordPolicy.leastIncludes": "inclut au moins :",
        "app.passwordPolicy.minLower": "{0} lettre",
        "app.passwordPolicy.minUpper": "{0} capitale",
        "app.passwordPolicy.minDigit": "{0} chiffre",
        "app.passwordPolicy.minSpecial": "{0} caractère spécial",

        "app.coachmarks.bookmarkTitle": "Comment utiliser les signets",
        "app.coachmarks.bookmarkMessage": "Appuyez pour lancer des sites Web, maintenez une pression pour en savoir plus.",
        "app.coachmarks.catalogTitle": "Comment utiliser le catalogue",
        "app.coachmarks.catalogMessage": "Installez ou mettez à jour des applications, ajoutez-les à des signets ou ouvrez-les directement ici.",
        "app.coachmarks.buttonText": "J'ai compris.",

        "app.logout.confirm.msg": "La déconnexion de Workspace ONE terminera votre session en cours. Toutes les applications téléchargées depuis le catalogue resteront sur le terminal, mais aucune nouvelle application ne sera disponible avant que vous ne vous reconnectiez.",
        "app.logout.title": "AVERTISSEMENT",

        "app.passwordVault.banner.msg": "Vous disposez d'applications qui peuvent utiliser l'extension Workspace ONE.",
        "app.passwordVault.banner.button.install": "Installer",
        "app.passwordVault.banner.setPreference": "Vous pouvez l'obtenir ultérieurement dans Paramètres - Préférences.",
        "app.passwordVault.banner.donotshowagain": "Ne plus afficher",
        "app.passwordVault.banner.button.later": "Plus tard",
        "app.passwordVault.banner.button.get": "Obtenir",
        "app.passwordVault.preference.title": "Extension Workspace ONE",
        "app.passwordVault.preference.instruction": "Vous disposez d'applications qui peuvent utiliser l'extension Workspace ONE.",
        "app.passwordVault.preference.getextension": "Obtenir l'extension.",
        "app.bookmarking.change.tab.title": "En pleine organisation de vos signets ?",
        "app.bookmarking.change.tab.body": "Les modifications apportées ne seront pas enregistrées. Voulez-vous continuer l'organisation de vos signets ?",
        "app.bookmarking.touch.disabled": "Vous pouvez réorganiser les applications lorsque vous utilisez le pavé tactile ou la souris.",
        "app.bookmarking.change.tab.exit": "Non, quitter",
        "app.bookmarking.change.tab.stay": "Oui, rester ici",
        "app.virtual.disabled": "Désactivé par l'administrateur",
        "app.virtual.unavailable": "Cette application n'est pas disponible sur ce terminal",
        "app.virtual.not.available": "Indisponible",

        "app.notification.type.NEW_ENTITLEMENTS": "Essayez-les",
        "app.notification.type.PASSWORD_EXPIRING": "Mettre à jour le mot de passe",
        "app.notification.action.delete": "Supprimer",
        "notification.new.entitlements.heading": "Nouveaux droits",
        "notification.new.entitlements.message": "{0} nouveaux droits vous ont été attribués.",
        "app.notification.delete.header": "Supprimez cette notification ?",
        "app.notification.delete.msg": "Voulez-vous vraiment supprimer cette notification ? Vous pouvez sélectionner Archiver si vous souhaitez l'archiver ultérieurement. ",
        "app.notification.delete.text": "Supprimer",
        "app.notification.keep.text": "Conserver",
        "app.notification.restore.text": "Restaurer",
        "app.notification.delete.toast.msg": "La notification a été supprimée.",
        "app.notification.empty": "Vous êtes à jour !",
        "app.notification.more.actions": "Autres actions",
        "app.notification.archive.all": "Tout archiver",

        "app.notification.bookmark.all.error": "Désolé, nous n'avons pas pu ajouter aux favoris toutes vos nouvelles applications",
        "app.notification.bookmark.all.success": "Toutes les nouvelles applications ont été ajoutées aux favoris",
        "app.notification.delete.all": "Tout supprimer",
        "app.notification.see.archived": "Afficher les éléments archivés",
        "app.notification.see.all": "Afficher toutes les notifications",
        "app.notification.newApps.title": "Vous avez de nouvelles applications !",
        "app.notification.newApps.excessIconsMessage": "+ {0} en plus",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Afficher les détails",
        "app.tooltip.clicktolaunch": "Cliquer pour lancer",

        "recommendedApps.install.proceed": "Continuer",
        "recommendedApps.install.title": "Installer les applications recommandées",
        "recommendedApps.install.confirm.msg": "Vous serez invité à poursuivre l'installation de vos applications.",
        "recommendedApps.text1": "Ces applications sont couramment utilisées par vos collègues.",
        "recommendedApps.text2": "Vous pouvez les installer maintenant ou les retrouver ultérieurement dans votre catalogue.",
        "recommendedApps.selectAll": "Tout sélectionner",
        "recommendedApps.apps": "applications",
        "recommendedApps.install": "Installer",
        "recommendedApps.skip": "Ignorer",

        "app.desktopapp.settings.title.account": "Compte",
        "app.desktopapp.settings.title.devices": "Terminaux",
        "app.desktopapp.settings.title.preferences": "Préférences",

        "appCenter.peopleSearch.placeholder": "Rechercher des personnes",
        "app.tooltip.copyEmail": "Copier l'adresse e-mail",
        "app.peopleSearch.emailCopied": "Adresse e-mail copiée",
        "appCenter.peopleSearch.noResults": "Aucun résultat n'a été trouvé",
        "appCenter.peopleSearch.tryNewSearch": "Essayez une nouvelle recherche.",
        "appCenter.peopleSearch.atLeastThreeChars": "Entrez 3 caractères au minimum ci-dessus pour effectuer la recherche.",
        "appCenter.searchPeople": "Recherchez des personnes.",
        "myapps.mobilepagetitle.people": "Personnes",
        "app.people.labels.team": "Mon équipe",
        "app.people.labels.recent": "Récents",
        "app.people.labels.manager": "Responsable",
        "app.people.labels.peers": "Homologues",
        "app.people.labels.directReports": "Supérieurs directs",
        "app.people.labels.profile": "Profil",
        "app.people.labels.org": "Org",
        "app.people.labels.workEmail": "E-mail professionnel",
        "app.people.labels.workPhone": "Téléphone professionnel",
        "app.people.labels.alternateNumber": "Autre numéro de téléphone",
        "app.people.labels.mobile": "Mobile",
        "app.people.labels.address": "Adresse",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Responsables",
        "app.people.labels.skypeForBusiness": "Skype Entreprise",
        "app.people.labels.employeeNumber": "Numéro d'employé",
        "app.people.labels.skills": "Compétences",
        "app.people.labels.businessUnit": "Unité commerciale",
        "app.people.labels.costCenter": "Centre de coûts",
        "app.people.labels.physicalDeliveryOfficeName": "Emplacement du bureau",

        "hub.apps": "Applications",
        "hub.notifications": "Notifications",
        "hub.notifications.welcome": "Bienvenue !",
        "hub.notifications.first.time.message": "Les notifications s'afficheront ici lorsque vous commencerez à utiliser le Hub.",
        "hub.notifications.new.apps.favorite.all": "Tout ajouter aux favoris",
        "hub.notifications.congratulations": "Félicitations !",
        "hub.notifications.empty.description1": "Aucune nouvelle notification.",
        "hub.notifications.empty.description2": "Profitez de l'espace supplémentaire.",
        "hub.v2.notifications.empty.description": "Vous êtes tous mis au courant de vos notifications",
        "hub.v2.notifications.first.time.description": "Les notifications s'afficheront ici lorsque vous commencerez à utiliser le Hub.",
        "hub.notifications.empty.description.archived": "Aucune notification archivée.",
        "hub.notifications.priority": "Priorité",
        "hub.notifications.today": "Aujourd'hui",
        "hub.notifications.yesterday": "Hier",
        "hub.notifications.lastWeek": "La semaine dernière",
        "hub.notifications.lastMonth": "Le mois dernier",
        "hub.notifications.older": "Antérieur",
        "hub.notifications.archived.label": "Archivé",
        "hub.notifications.action.success": "Réussite !",
        "hub.notifications.action.failure": "Désolé, une erreur s'est apparemment produite lors de l'exécution de cette action",
        "hub.notifications.moreDetails": "Plus de détails",
        "hub.notifications.dialog.action.completed": "Terminé",
        "hub.notifications.dialog.action.needed": "En attente",
        "hub.notifications.dialog.action.all.notifications": "Toutes les notifications",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Rechercher des applications",
        "hub.apps.favorites": "Favoris",
        "hub.apps.newApps": "Nouveau",
        "hub.apps.recommended": "Recommandé",
        "hub.apps.categories": "Catégories",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Holà, il y a beaucoup d'espace ici.",
        "hub.apps.no.apps.msg2": "Contactez l'administrateur pour obtenir des applications professionnelles.",
        "hub.apps.search.in.category": "{0} résultats dans la catégorie :",
        "hub.apps.search.in.app": "{0} résultats dans le nom et la description de l'application",
        "hub.apps.search.header": "Nombre total de résultats",
        "hub.apps.search.no.result.header": "Aucun résultat.",
        "hub.apps.search.no.result.msg": "Réessayez en utilisant un autre terme.",
        "hub.apps.searchpeople.no.result.msg": "Réessayez en utilisant un autre nom.",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "Application",
        "hub.apps.type.anyApp": "N'importe quelle application",
        "hub.people": "Personnes",
        "hub.people.search.text": "Rechercher des personnes",
        "hub.people.labels.mypeers": "Mes homologues",
        "hub.people.labels.directreports": "Supérieurs directs",
        "hub.people.labels.manager": "Mon responsable",
        "hub.people.labels.organization": "Organisation",
        "hub.people.search.result": "Résultats",
        "hub.app.install.prompt.title": "Voulez-vous effectuer l'installation ?",

        "hub.actionsheet.label.viewDetails": "Afficher les détails",
        "hub.actionsheet.label.removeFavorites": "Supprimer des favoris",
        "hub.actionsheet.label.addFavorites": "Ajouter aux favoris",
        "hub.password.done": "Terminé",

        "hub.placeholder.changepassword.username": "Nom d'utilisateur",
        "hub.placeholder.changepassword.password": "Mot de passe",
        "hub.placeholder.changepassword.confirmpassword": "Confirmer le mot de passe",

        "hub.tunnel.text.line1": "Le tunnel est requis pour l'accès ",
        "hub.tunnel.text.line2": "L'application de tunnel se téléchargera automatiquement avec votre application.",

        "hub.promotions.banner.category.title": "Points forts de la catégorie",
        "hub.promotions.banner.category.open": "Ouvrir",
        "hub.promotions.banner.app.get": "Obtenir",
        "hub.promotions.banner.disabled": "Désactivé par l'administrateur",
        "hub.require.app.management": "Géré",
        "hub.app.installing.alert.mobile.message": "L'application {0} est en cours d'installation. Vérifiez les mises à jour sur l'écran d'accueil de votre téléphone.",
        "hub.app.installing.alert.desktop.message": "L'application {0} est en cours d'installation. Vérifiez les mises à jour dans le lanceur d'applications de votre poste de travail.",

        "hub.nav.label.apps": "Applications",
        "hub.nav.label.people": "Personnes",
        "hub.nav.label.notification": "Notifications",
        "hub.nav.label.settings": "Paramètres",
        "hub.nav.label.account": "Compte",
        "hub.nav.label.signout": "Déconnexion",
        "hub.userInfo.adminConsole": "Console d'administration",
        "hub.userInfo.signout": "Déconnexion",
        "hub.userInfo.settings": "Paramètres",
        "hub.userInfo.account": "Compte",
        "hub.userInfo.devices": "Terminaux",
        "hub.userInfo.whatsnew": "Nouveautés",
        "hub.userInfo.about": "Contenu",
        "hub.download.ios": "Hub pour iOS",
        "hub.download.android": "Hub pour Android",
        "hub.download.mac": "Hub pour Mac",
        "hub.download.windows": "Hub pour Windows",
        "hub.download.subtitle.mobile": "Accédez aux notifications, à l'accueil, etc., à partir d'un emplacement unique.",
        "hub.download.subtitle.desktop": "Obtenez des notifications de poste de travail et effectuez le lancement directement à partir de votre dock.",
        "hub.preferences.title": "Préférences",
        "hub.preferences.horizon.subtitle": "Applications distantes Horizon",
        "hub.preferences.launch.question": "Comment souhaitez-vous lancer les applications distantes Horizon ?",
        "hub.about.title": "À propos de VMware Intelligent Hub",
        "hub.apps.allApps": "Toutes les applications",
        "hub.apps.configure.favorites.msg": "Ajoutez vos applications favorites ici pour y accéder plus rapidement",
        "hub.apps.configure.favorites": "Configurer",
        "hub.apps.edit.favorites": "Modifier",

        "hub.contextDialog.label.removeFavorites": "Supprimer des favoris",
        "hub.contextDialog.label.addFavorites": "Ajouter aux favoris",
        "hub.contextDialog.label.viewDetails": "Afficher les détails",
        "hub.apps.edit.favorites.header": "Mode de modification des favoris",
        "hub.apps.edit.favorites.prompt": "Effectuez un glisser-déplacer pour réorganiser.",
        "hub.apps.edit.favorites.save": "Enregistrer",
        "hub.apps.edit.favorites.cancel": "Annuler les modifications",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Vous avez mis à jour l'ordre. Annulez ou enregistrez avant de quitter cette page",
        "hub.apps.edit.favorites.savecustomordering": "Enregistrement de l'ordre personnalisé. Pour éviter la perte de résultats, ne quittez pas cette page",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Réorganisation non disponible sur les écrans tactiles.",
        "hub.apps.edit.favorites.notify.success": "La réorganisation des favoris a été enregistrée !",
        "hub.apps.edit.favorites.notify.error": "Une erreur s'est produite. Impossible d'enregistrer la réorganisation, réessayez ultérieurement",

        "hub.nav.label.settings.settings": "Paramètres",
        "hub.nav.label.settings.account": "Compte",
        "hub.nav.label.settings.about": "À propos",
        "hub.nav.label.settings.devices": "Terminaux",
        "hub.nav.label.settings.preferences": "Préférences",
        "hub.nav.label.settings.whatsnew": "Nouveautés",

        "hub.apps.detail.back": "Retour aux applications",
        "hub.people.detail.back": "Retour aux personnes",
        "hub.people.notifications.back": "Retour aux notifications",

        "hub.nav.label.notifications.filter": "Filtrer",
        "hub.nav.label.notifications.all.notifications": "Toutes les notifications",
        "hub.nav.label.notifications.action.needed": "En attente",
        "hub.nav.label.notifications.completed": "Terminé",
        "hub.long.card.description": "Description",
        "hub.long.card.Comment": "Commentaire",
        "hub.long.card.Comment.placeholder": "Ajouter un commentaire",

        "hub.appLaunch.open": "Ouvrir",
        "hub.appLaunch.cancel": "Annuler"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "אישור",
        "and": "וגם",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "‏‎/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "התקן",
        "app.banner.open": "פתח",
        "app.promotion.banner.donotshowagain": "אל תציג זאת שוב. קבל זאת מאוחר יותר ב'הגדרות - אודות'.",
        "app.promotion.banner.open": "פתח באפליקציה",
        "app.promotion.banner.download": "הורד אפליקציה",
        "app.promotion.banner.message": "קבל חוויה טובה יותר באפליקציה.",
        "horizonDesktopNotDetected": "יש להתקין את VMware Identity Manager Desktop במחשב כדי לפתוח אפליקציה זו. <a target='_blank' href='{0}'>התקן את VMware Identity Manager Desktop</a> אם טרם עשית זאת.",
        "viewAppsTooltip": "אפליקציה מתארחת זו של Horizon מחייבת התקנה של {0}Horizon Client{1} גרסה 3.0 ואילך במחשב.",
        "desktoneDesktopTooltip": "Horizon Cloud לשולחן העבודה מחייב התקנה של {0}Horizon Client{1} במחשב.",
        "desktoneApplicationTooltip": "אפליקציה זו של Horizon Cloud מחייבת התקנה של {0}Horizon Client{1} במחשב.",
        "xenAppsReceiverNotDetected": "יש להתקין את Citrix Receiver במחשב כדי לפתוח אפליקציה זו. התקן את <a target='_blank' href='{0}'>Citrix Receiver</a> אם טרם עשית זאת.",
        "button.save": "שמור",
        "button.update": "עדכן",
        "button.openHorizonView": "פתח את Horizon Client",
        "myapps.launch.openApp": "פתח את {0}",
        "button.openApp": "פתח אפליקציה",
        "button.clear": "מחק",
        "button.close": "סגור",
        "button.cancel": "ביטול",
        "button.download": "‏הורד",
        "myapps.launch.title.launch": "הפעל",
        "myapps.launch.title": "הפעל אפליקציה",
        "myapps.launch.view.openWith": "פתח באמצעות",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "דפדפן",
        "myapps.launch.view.preferredClient.isDefault": "(ברירת מחדל)",
        "myapps.launch.view.selectPreferredLaunchClient": "בחר כיצד ברצונך להפעיל שולחנות עבודה ואפליקציות של Horizon",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "אפליקציות מרוחקות של Horizon",
        "myapps.launch.view.selectPreferredLaunchClientText": "פתיחת האפליקציות המרוחקות של Horizon ב-Horizon Client תספק לך חוויה משופרת בהשוואה לדפדפן.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "כיצד תרצה להפעיל את האפליקציות המרוחקות של Horizon?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "בחר ברירת מחדל להפעלה...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "אפשרות זו קובעת את התנהגות ברירת המחדל כאשר תבחר להפעיל שולחן עבודה של Horizon במכשיר שלך. אם תבחר את Horizon Client כברירת המחדל, עליך להתקין את Horizon Client. <a target='_blank' href='{0}'>התקן את Horizon Client‏‎</a> אם טרם עשית זאת.",
        "myapps.launch.view.unknownClientType": "סוג לקוח לא מוכר לפתיחת Horizon Client.",
        "myapps.launch.view.openWithView": "פתח באמצעות Horizon Client",
        "myapps.launch.view.openWithBrowser": "פתח עם דפדפן",

        "myapps.launch.view.preferredClient.byBrowser.description": "אם תבחר 'דפדפן', שולחן העבודה או האפליקציה שלך ייפתחו בחלון דפדפן חדש.",
        "myapps.launch.view.preferredClient.byViewClient.description": "פריט זה מחייב Horizon Client גרסה 3.0 ואילך. <a target='_blank' href='{0}'>התקן את Horizon Client</a> אם טרם עשית זאת.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "תוכל לשנות הגדרה זו בכל עת בהעדפות.",
        "myapps.launch.view.preferredClient.saveSuccess": "העדיפות שנבחרה נשמרה בהצלחה.",
        "myapps.launch.msg.launching.desktop": "מפעיל את שולחן העבודה <b>{0}</b> .....",
        "myapps.launch.msg.launching.application": "מפעיל את האפליקציה <b>{0}</b> .....",
        "myapps.noAppsMsg": "לא הוספת אפליקציות. תוכל לנווט אל {0} כדי להוסיף אפליקציות",
        "myapps.noFavAppsMsg": "לא סימנת אפליקציות",
        "myapps.welcomeMsg": "שלום {0}. הנה האפליקציות שלך!",
        "myapps.bookmarks.empty.message": "שמור סימנייה של אפליקציות בשימוש נפוץ לגישה מהירה.",
        "myapps.bookmarks.empty.hidecatalog.message": "אין כרגע אפליקציות זמינות לשימוש.",
        "myapps.bookmarks.empty.addbookmarks": "הוסף סימניות",
        "myapps.bookmarks.organize.title": "ארגן את הסימניות",
        "myapps.bookmarks.organize.addbookmarks": "הוסף סימניות",
        "myapps.bookmarks.organize.batchremove": "הסר",

        "myapps.mobilepagetitle.apps": "אפליקציות",
        "myapps.mobilepagetitle.details": "פרטים",
        "myapps.mobilepagetitle.support": "תמיכה",
        "myapps.mobilepagetitle.settings": "הגדרות",
        "myapps.mobilepagetitle.recommendedapps": "מומלצות עבורך",
        "myapps.mobilepagetitle.notification": "הודעות",
        "myapps.mobilepagetitle.archived": "אוכסנו בארכיון",
        "myapps.mobilepagetitle.notification.newapps": "אפליקציות חדשות",

        "myapps.dialog.openApp": "פתח",
        "myapps.dialog.openAppWithViewClient": "פתח ב-Client",
        "myapps.dialog.openAppWithBrowser": "פתח בדפדפן",

        "myapps.launch.passwordvault.installExtension.description": "אפליקציה זו יכולה להשתמש בהרחבת הדפדפן Password Vault. <a target='_blank' href='{0}'>התקן את ההרחבה</a> אם טרם עשית זאת.",

        "deviceStatus.networkLost": "החיבור אבד. מנסה להתחבר מחדש...",
        "deviceStatus.networkRestored": "החיבור לרשת שוחזר",
        "api.session.expired.retry": "פג תוקף ההפעלה, מנסה לחדש...",
        "api.entitlements.reload": "מרענן את התצוגה כדי לעדכן את האפליקציות בקטלוג שלך.",
        "api.security.header.invalid.relogin": "אימות כותרת האבטחה נכשל, מתנתק...",
        "api.server.load.error": "אנו חווים עומס כבד מהרגיל. אנא נסה שוב מאוחר יותר.",
        "api.updateApps": "מעדכן את הרשימה...",
        "api.error": "אירעה שגיאה. נסה שוב.",
        "installation.error": "אפליקציות מקוריות אינן זמינות באופן זמני",
        "service.under.maintenance.error": "מערכת Workspace ONE נמצאת באופן זמני במצב תחזוקה. תוכל להפעיל את האפליקציות שלך, אבל ייתכן שחלק מהתכונות לא יפעלו",
        "api.timeout": "תם הזמן הקצוב לחיבור, נסה שוב",
        "favoriteStatus.favorite": "סמן כמועדף",
        "favoriteStatus.unfavorite": "בטל כמועדף",
        "favoriteStatus.offlineFavoriteMessage": "סימון אפליקציה בסימנייה אינו זמין כאשר אינך מקוון, התחבר מחדש ונסה שוב",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "הסרת סימנייה מאפליקציה אינה זמינה כשאינך מקוון, התחבר ונסה שוב",
        "error.failToFavoriteApp": "עדכון סטטוס הסימנייה נכשל",
        "error.failedToResetApp": "איפוס האפליקציה נכשל",
        "error.failToHideApp": "הסרת האפליקציה נכשלה",
        "error.failToShowApp": "הוספת האפליקציה למפעיל נכשלה",
        "error.failedToBookmarkApp": "סימון האפליקציה בסימנייה נכשל",
        "error.failedToLaunchApp": "פתיחת האפליקציה נכשלה",
        "error.failedToRemoveAccount": "הסרת החשבון נכשלה, נסה שוב מאוחר יותר.",
        "installStatus.enrollDevice": "השימוש ב-{0} מחייב הפעלה של Workspace Services כדי להגן על נתוני החברה",
        "installStatus.enrollDevice.learnMore": "למידע נוסף",
        "installStatus.offlineInstallMessage": "בקשות התקנה אינן זמינות כאשר אינך מקוון, התחבר מחדש ונסה שוב",
        "installStatus.activated": "הופעל",
        "installStatus.notActivated": "לא הופעל",
        "installStatus.request": "בקשה",
        "installStatus.update": "עדכן",
        "installStatus.processing": "מעבד",
        "installStatus.installFailedMessage": "משהו השתבש בעת התקנת האפליקציה {0}. נסה שוב. אם הבעיה ממשיכה, צור קשר עם מנהל ה-IT",
        "installStatus.unenrolledDevice": "אפליקציה זו אינה זמינה עוד עבורך. לחץ על 'אישור' כדי לעדכן את הרשימה.",
        "installMessage.continueInstall": "ניסית בעבר להתקין אפליקציה זו. ",
        "installMessage.proceedToInstall": "לחץ כדי להמשיך.",
        "installMessage.installingOnDevice": "מתקין במכשיר...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "הפעל את Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "עליך לעשות זאת לפני שתוכל להתקין את האפליקציה. תקבל באופן אוטומטי:",
        "app.adaptivemanagement.valueproposition1": "התקנה ישירה של כל משאבי החברה.",
        "app.adaptivemanagement.valueproposition2": "גישה מאובטחת לרשת החברה.",
        "app.adaptivemanagement.valueproposition3": "סנכרון אפליקציות ותוכן בכל המכשירים שלך.",
        "app.adaptivemanagement.valueproposition4": "חוויית אפליקציה משופרת להגברת הפרודוקטיביות שלך.",
        "app.adaptivemanagement.privacylink": "הפרטיות שלך",

        "app.tunnel.continue": "המשך",
        "app.tunnel.text.line1": "יש צורך באפליקציה VMware Tunnel כדי לקבל גישה",
        "app.tunnel.text.line2": "תתבצע הורדה אוטומטית של האפליקציה Tunnel יחד עם האפליקציה שלך.",
        "app.tunnel.header": "מחייב VMware Tunnel",
        "app.tunnel.message": "כדי להשתמש באפליקציה זו, יש להתקין את VMware Tunnel ולהריץ אותו.",
        "recommendedApps.tunnel.text.line1": "יש צורך באפליקציה VMware Tunnel כדי לקבל גישה",
        "recommendedApps.tunnel.text.line2": "תתבצע הורדה אוטומטית של האפליקציה Tunnel יחד עם האפליקציה שלך.",
        "app.tunnel.installHelpText": "אם התקנת האפליקציות לא התחילה באופן אוטומטי, בצע את השלבים הבאים כדי להפעיל את האפליקציה",
        "app.tunnel.installStep1": "שלב 1: התקן את האפליקציה {0}",
        "app.tunnel.installStep2": "שלב 2: התקן את האפליקציה {0}",

        "requestFailed": "הבקשה נכשלה",
        "changeOccurred": "אירע שינוי",
        "requestSuccessful": "הבקשה בוצעה בהצלחה",
        "accept": "קבל",
        "decline": "דחה",
        "termsOfUse": "תנאי שימוש",
        "beforeInstallation": "לפני ההתקנה",
        "resetDesktopStatus.offlineMessage": "איפוס שולחן עבודה אינו זמין כאשר אינך מקוון, התחבר מחדש ונסה שוב",
        "resetDesktop.sucess": "איפוס שולחן העבודה בוצע בהצלחה",
        "appCenter.someAppsMissingMessage": "לא ניתן לטעון את כל האפליקציות בשלב זה",
        "appCenter.register.device": "יש לעדכן חלק מפרטי המכשיר. לחץ על 'עדכן' כדי להמשיך עם Workspace ONE.",
        "appCenter.mdm.device.error": "כבר אין לך גישה ל-Workspace ONE.",
        "appCenter.mdm.device.error.contact": "צור קשר עם מנהל המערכת לקבלת פרטי החשבון שלך.",
        "appCenter.mdm.device.poll.error": "בשלב זה לא הצלחנו לסיים את בניית סביבת העבודה שלך. נסה שוב או צור קשר עם מנהל המערכת.",
        "appCenter.device.status.notRegistered": "המכשיר אינו רשום",
        "appCenter.device.status.blackListed": "המכשיר מופיע ברשימה שחורה",
        "appCenter.device.status.deviceInputError": "מכשיר זה לא חוקי! צור קשר עם מנהל ה-IT",
        "appCenter.device.status.unknownError": "אירעה שגיאה לא ידועה",

        "appCenter.device.register": "רשום מכשיר",
        "appCenter.device.moreDetails": "פרטים נוספים",
        "appCenter.device.unEnrollWarningTitle": "להסיר את החשבון שלך?",
        "appCenter.device.mdmUnEnrollMessage": "הסרת חשבונך תשבית את הגישה למשאבי החברה, ועלולה להסיר אפליקציות עבודה ממכשיר זה.",
        "appCenter.device.getDeviceEnrollmentStatus": "מקבל מידע נוסף",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "האם אתה בטוח שברצונך להמשיך?",
        "appCenter.device.remove": "הסר",
        "appCenter.device.keep": "שמור",
        "appCenter.device.disableWorkspaceMessage": "הסרת החשבון תשלול את הגישה שניתנה דרך אפליקציית Workspace ONE. אפליקציות שהורדו למסך הבית יישארו מותקנות, אך ייתכן שהגישה תנותק. האם ברצונך להמשיך?",
        "appCenter.noAppsMsg": "אין אפליקציות זמינות כעת",
        "appCenter.vppInviteTitle": "הרשמה להפצה מנוהלת",
        "appCenter.appInstallConfirmPromptTitle": "אשר התקנה",
        "appCenter.mdmAppRequestConfirmPromptTitle": "נדרש אישור עבור",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "בקשתך נדחתה בעבר",
        "appCenter.mdmAppRequestConfirmPromptMessage": "מנהל המערכת שלך צריך לאשר את האפליקציה שאליה אתה מנסה לגשת.",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "ביקשת את האפליקציה הזו והבקשה שלך נדחתה, האם אתה בטוח שברצונך לבקש שוב",
        "appCenter.acceptInvite": "קבל הזמנה",
        "appCenter.install": "התקן",
        "appCenter.proceed": "הפעל את Workspace Services",
        "appCenter.cancel": "ביטול",
        "appCenter.confirm": "אישור",
        "appCenter.searchApps": "חפש אפליקציות.",
        "appCenter.welcomeMsg": "התקן אפליקציות חדשות בכל מקום, בכל מכשיר!",
        "appCenter.done": "בוצע",
        "appCenter.nav.privacyPage": "דף פרטיות",
        "appCenter.nav.catalog": "קטלוג",
        "appCenter.nav.myApps": "האפליקציות שלי",
        "appCenter.nav.favorites": "מועדפים",
        "appCenter.nav.categories": "קטגוריות",
        "appCenter.nav.filterby": "סנן לפי",
        "appCenter.nav.show": "הצג",
        "appCenter.nav.settings": "הגדרות",
        "appCenter.nav.sortBy": "מיין לפי",
        "appCenter.nav.sortBy.alpha": "מיין לפי א-ת",
        "appCenter.nav.sortBy.inverseAlpha": "מיין לפי ת-א",
        "appCenter.nav.sortBy.customView": "תצוגה מותאמת אישית",
        "appCenter.nav.arrange": "ארגן",
        "appCenter.nav.arrange.saved": "התצוגה המותאמת אישית נשמרה!",
        "appCenter.nav.arrange.tooltip": "זמין ב-Windows בלבד.",
        "appCenter.nav.arrange.saving": "שומר...",
        "appCenter.nav.arrange.error": "לא ניתן לשמור תצוגה מותאמת אישית",
        "appCenter.nav.filter": "מסנן",
        "appCenter.installFailedTitle": "בעיה בהתקנת האפליקציה",
        "appCenter.uccConflict": "משהו השתבש בהפעלה הנוכחית. היכנס מחדש.",

        "appCenter.search.placeholder": "חיפוש",
        "appCenter.search.noResults": "לא נמצאו תוצאות.",

        "appCenter.action.open": "פתח",
        "appCenter.action.install": "התקן",
        "appCenter.action.installing": "מתקין",
        "appCenter.action.installed": "מותקן",
        "appCenter.action.reinstall": "התקן מחדש",
        "appCenter.action.add": "הוסף",
        "appCenter.action.added": "נוסף",
        "appCenter.action.processing": "מעבד",
        "appCenter.action.update": "עדכן",
        "appCenter.action.request": "בקשה",
        "appCenter.action.pending": "ממתין",
        "appCenter.action.view": "הצג",
        "appCenter.action.favorite": "סמן כמועדף",
        "appCenter.action.unfavorite": "בטל כמועדף",

        "appCenter.internalApp.installtionModalTitle": "שלבי התקנת אפליקציה",
        "appCenter.internalApp.installationStepTitle": "כדי לפתוח אפליקציה זו, בצע את השלבים הבאים לאחר ההתקנה",
        "appCenter.internalApp.step1": "הפעל את 'הגדרות' ממסך הבית של iOS",
        "appCenter.internalApp.step2": "הקש על 'כללי'",
        "appCenter.internalApp.step3": "הקש על 'פרופילים וניהול מכשירים'",
        "appCenter.internalApp.step4": "הקש על שם המפתח מתחת לאפליקציית החברה",
        "appCenter.internalApp.step5": "אמת את האפליקציה או תן בה אמון",
        "appCenter.internalApp.watchTutorial": "צפה בהדרכה שלב אחר שלב",

        "appCenter.type.web": "אתר",
        "appCenter.type.native": "אפליקציה מקורית",
        "appCenter.type.native.platform": "{0} אפליקציה",
        "appCenter.type.virtual": "אפליקציה וירטואלית",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "חבילת אפליקציות",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "קטגוריות",
        "myapp.nav.favorites": "מועדפים",
        "myapp.nav.allApps": "כל האפליקציות",
        "myapp.nav.recommendedApps": "מומלץ",
        "myapp.nav.newlyEntitledApps": "חדש",
        "myapp.nav.webApps": "אתרי אינטרנט",
        "myapp.nav.mobileApps": "אפליקציות לנייד",
        "myapp.nav.macApps": "אפליקציות ל-Mac",
        "myapp.nav.windowsApps": "אפליקציות ל-Windows",
        "myapp.nav.virtualApps": "וירטואלי",
        "myapp.label.new": "חדש",
        "myapp.nav.filterby": "סנן לפי",
        "myapp.nav.mobile.filter.pagetitle": "סנן לפי קטגוריות",
        "appCenter.nav.browseBy": "עיין לפי",

        "appCenter.catalog.empty": "נראה שטרם הוקצו לך אפליקציות כלשהן. הן אמורות להגיע בקרוב. חזור להתעדכן בקרוב.",

        "userInfo.adminConsole": "מסוף בקרת מנהל",
        "userInfo.settings": "הגדרות",
        "userInfo.notifications": "הודעות",
        "userInfo.support": "תמיכה",
        "userInfo.preferences": "העדפות",
        "userInfo.about": "אודות",
        "userInfo.devices": "מכשירים",
        "userInfo.settings.promo.title": "הורד את האפליקציה Workspace ONE",
        "userInfo.settings.promo.message": "Workspace ONE מספקת חוויה טובה יותר באפליקציה. לנסות עכשיו?",

        "userInfo.tips": "עצות לאפליקציה",
        "userInfo.tips.description": "קבל עזרה על השימוש באפליקציה.",

        "userInfo.tips.bookmarks": "כיצד להשתמש בסימניות?",
        "userInfo.tips.catalog": "כיצד להשתמש בקטלוג?",
        "userInfo.tips.people": "חדש: כיצד להשתמש באנשים?",
        "userInfo.tips.notification": "חדש: כיצד להשתמש בהודעות?",

        "userInfo.tips.catalog.desktop1": "לחץ על 'פתח' כדי לפתוח אתר בדפדפן; השתמש ב-{0} כדי להוסיף סימנייה עבורו.",
        "userInfo.tips.catalog.desktop2": "לחץ על סמל או שם האפליקציה כדי לקבל פרטים נוספים.",
        "userInfo.tips.catalog.mobile1": "השתמש ב-{0} כדי לפתוח אתר בדפדפן; השתמש ב-{1} כדי להוסיף סימנייה עבורו.",
        "userInfo.tips.catalog.mobile2": "השתמש ב-{0} כדי להתקין אפליקציה מקורית במכשיר. המשמעות של {1} היא שצריך לרשום את המכשיר על-מנת להשתמש באפליקציות אלה.",
        "userInfo.tips.catalog.mobile3": "לחץ על סמל או שם האפליקציה כדי לקבל פרטים נוספים.",

        "userInfo.tips.bookmarks.desktop1": "לחץ על כותרת האריח כדי להפעיל את האתר בדפדפן.",
        "userInfo.tips.bookmarks.desktop2": "רחף מעל לאריח כדי לראות פעולות נוספות מהתפריט '...'.",

        "userInfo.tips.bookmarks.mobile": "הקש על האריח כדי לפתוח את האתר בדפדפן שלך. לחץ והחזק לפעולות נוספות.",

        "userInfo.tips.catalog.download.phone": "הקש על הסמל {0} כדי להתקין אפליקציה מקורית במכשיר. משמעות הסמל {1} היא שיש לרשום את המכשיר כדי להשתמש באפליקציות אלה.",
        "userInfo.tips.catalog.bookmark.launch.phone": "הקש על הסמל {0} כדי לפתוח אתר בדפדפן. הקש על הסמל {1} כדי ליצור סימנייה עבורו. לפרטים נוספים, הקש על סמל או על שם האפליקציה",

        "userInfo.tips.catalog.download.tablet": "כדי להוריד אפליקציות, לחץ על לחצן ההורדה. לפרטים נוספים, לחץ על האפליקציה.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "כדי להפעיל אפליקציות, לחץ על סמל ההפעלה. כדי ליצור סימנייה עבור אפליקציות, לחץ על לחצן הסימניות",

        "userInfo.tips.people.mobile": "לחץ על {0} כדי לנווט מכל פרופיל חזרה לדף הנחיתה הראשי של חיפוש אנשים.",
        "userInfo.tips.notification.mobile": "לחץ על {0} כדי לקבל גישה להודעות. תג ההודעות יישאר פעיל עד שתבצע פעולה עבור כל אחת מההודעות או תמחק אותן.",

        "userInfo.tips.title": "עצות לאפליקציה",
        "userInfo.tips.intro": "קבל עזרה על השימוש באפליקציה.",
        "userInfo.tips.desktop": "שולחן עבודה",
        "userInfo.tips.reordering.title": "התאם אישית את הסימניות שלך!",
        "userInfo.tips.reordering.text1": "1. עבור אל 'תצוגה מותאמת אישית' באמצעות התפריט הנפתח למעלה משמאל.",
        "userInfo.tips.reordering.text2": "2. בחר 'סדר'. ",
        "userInfo.tips.reordering.text3": "3. גרור ושחרר על-מנת לשנות את סדר הסימניות. לסיום, לחץ על 'שמור'.",
        "userInfo.tips.mobile": "מכשירים ניידים",

        "userInfo.removeAccount": "הסר חשבון",
        "userInfo.account": "חשבון",
        "userInfo.profile": "פרופיל",
        "userInfo.profile.name": "שם:",
        "userInfo.profile.email": "אימייל:",
        "userInfo.profile.username": "שם משתמש:",
        "userInfo.profile.picture": "תמונת פרופיל",
        "userInfo.profile.password": "סיסמה",
        "userInfo.profile.passwordchange": "החלף",
        "userInfo.profile.passwordprompt": "נהל את הסיסמה שלך עבור מערכת החברה.",
        "userInfo.password": "סיסמה",
        "userInfo.termsofuse": "תנאי שימוש",
        "userInfo.signout": "יציאה",
        "userInfo.tryAgain": "נסה שוב",
        "userInfo.managedevicesettings": "נהל הגדרות מכשיר",
        "userInfo.notification": "הודעת דחיפה",
        "userInfo.passcode": "מזהה מגע או סיסמה",

        "appCenter.support.selfservice": "שירות עצמי",
        "appCenter.support.managedevices": "מכשירים",
        "appCenter.support.managedevicestext": "הצג את פרטי המכשיר שלך.",
        "appCenter.support.managepassword": "החלף סיסמה",
        "appCenter.support.managepasswordtext": "החלף סיסמה לחשבון החברה",
        "appCenter.support.gethelp": "קבל עזרה",
        "appCenter.support.appstips": "אפליקציות ועצות",
        "appCenter.support.appstipstext": "ראה תיאורי כלי לעזרה באפליקציה זו",
        "appCenter.support.sendReportTitle": "שלח דוח",
        "appCenter.support.sendReportDetails": "למד כיצד לשלוח אבחון אפליקציות.",
        "appCenter.support.helpdesk": "מרכז תמיכה",
        "appCenter.support.contacthelpdesk": "צור קשר עם מרכז התמיכה",
        "appCenter.reportProblems.ios.sendLogInstruction": "נער את המכשיר במקרה של שגיאה כדי לשלוח בקלות אבחון אפליקציה או לספק משוב.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "ניתן להפעיל/לכבות תכונה זו בהגדרות המכשיר.",

        // App Details Page
        "app.details.link.back": "חזרה",
        "app.details.nav.details": "פרטים",
        "app.details.nav.reviews": "חוות דעת",
        "app.details.label.description": "תיאור",
        "app.details.label.noDescription": "אין תיאור זמין",
        "app.details.label.seeFullDetails": "הצג פרטים",
        "app.details.label.removeBookmark": "הסר",
        "app.details.label.resetDektop": "איפוס",
        "app.details.label.information": "מידע",
        "app.details.label.category": "קטגוריות",
        "app.details.label.version": "גרסה",
        "app.details.label.type": "סוג",
        "app.details.label.type.SAML11": "אפליקציית אינטרנט",
        "app.details.label.type.SAML20": "אפליקציית אינטרנט",
        "app.details.label.type.WEBAPPLINK": "אפליקציית אינטרנט",
        "app.details.label.type.MDMWEB": "אפליקציית אינטרנט",
        "app.details.label.type.WSFED12": "אפליקציית אינטרנט",
        "app.details.label.type.XENAPP": "אפליקציית Xen",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix לשולחן העבודה",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "פרופיל",
        "app.details.label.type.VIEWPOOL": "Horizon לשולחן העבודה",
        "app.details.label.type.VIEWAPP": "האפליקציה Horizon",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud לשולחן העבודה",
        "app.details.label.type.DESKTONEAPPLICATION": "האפליקציה Horizon Cloud",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "אפליקציית אינטרנט",
        "app.details.label.type.PUBLIC": "אפליקציה ציבורית",
        "app.details.label.type.INTERNAL": "פנימי",
        "app.details.label.size": "גודל",
        "app.details.label.price": "מחיר",
        "app.details.label.screenshots": "צילומי מסך",
        "app.details.label.showMore": "הצג עוד",
        "app.details.label.showLess": "הצג פחות",
        "app.details.label.setAppPassword": "הגדר סיסמת אפ'",
        "app.details.label.sendFeedback": "שלח משוב",
        "app.details.label.feedbackSubject": "משוב עבור האפליקציה {0}",
        "app.details.label.support": "תמיכה",
        "app.details.label.developer": "מפתח",
        "app.details.label.email": "אימייל",
        "app.details.label.phone": "טלפון",
        "app.details.appSize": "{0}MB",
        "app.details.label.launchMessage": "ניתן להפעיל את כל האפליקציות לנייד ממסך הבית.",

        "app.details.label.requirement": "דרישה:",
        "app.details.label.packageName": "שם חבילה:",
        "app.details.thinapp.requirement": "אפליקציה זו עובדת רק במחשבי Windows שמותקן עליהם Identity Manager Desktop.",
        "app.details.viewDesktop.requirement": "שולחן עבודה זה של Horizon מחייב התקנה של {0}Horizon Client‏{1} גרסה 3.0 ואילך במחשב.",
        "app.details.viewapp.requirement": "אפליקציה מתארחת זו של Horizon מחייבת התקנה של {0}Horizon Client{1} גרסה 3.0 ואילך במחשב.",
        "app.details.xenapp.requirement": "אפליקציה זו מחייבת התקנה של {0}Citrix Receiver‏{1}.",
        "app.details.xenapp.msg.IE8OrLower": "אפליקציה זו דורשת התקנה של Citrix Receiver. הערה: לא ניתן לפתוח אפליקציה זו ב-Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "שולחן עבודה זה של Citrix דורש התקנה של {0}Citrix Receiver‏{1}.",
        "app.details.desktoneDesktop.requirement": "Horizon Cloud לשולחן העבודה מחייב התקנה של {0}Horizon Client{1} במחשב.",
        "app.details.desktoneApp.requirement": "אפליקציה זו של Horizon Cloud מחייבת התקנה של {0}Horizon Client{1} במחשב.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "אין מידע זמין",
        "app.details.noScreenshots": "אין צילומי מסך זמינים",
        "app.details.noDescription": "התיאור יגיע בקרוב.",
        "app.details.needsDeviceEnrollment": "נדרשת הרשמה של המכשיר",
        "app.details.label.addToHomeScreen": "הוסף למסך הבית",
        "app.details.action.open": "פתח",
        "app.details.action.bookmark": "צור סימנייה",
        "app.details.action.bookmarked": "מסומן",
        "app.details.action.launch": "הפעל",
        "app.details.action.setPassword": "הגדר סיסמה",
        "app.details.action.pvAppCredentials": "אישורים",
        "app.details.info.msg.missingInfo": "חלק מהמידע חסר. נסה מאוחר יותר כדי לראות את כל הפרטים.",
        "app.details.wsrequired.msg": "נדרשים Workspace Services.",
        "app.details.label.addedFavorites": "נוסף למועדפים",

        "app.rating.label": "דירוג משתמש",

        "app.settings.label.settings": "הגדרות",
        "app.settings.link.back": "חזרה",
        "app.settings.managedDevices": "מכשירים מנוהלים",
        "app.nav.tab.bookmark": "סימניות",
        "app.nav.tab.catalog": "קטלוג",
        "app.nav.tab.people": "אנשים",
        "app.nav.tab.support": "תמיכה",
        "app.nav.tab.apps": "אפליקציות",
        "app.nav.tab.settings": "הגדרות",
        "app.about.heading": "אודות Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc.‎‎‎. כל הזכויות שמורות. מוצר זה מוגן על-ידי חוקי זכויות היוצרים והקניין הרוחני בארצות הברית ובמדינות אחרות, כמו גם על-ידי אמנות בינלאומיות. מוצרי VMware מוגנים בפטנט אחד או יותר.",
        "app.about.button.label.privacyPolicy": "מדיניות פרטיות",
        "app.about.button.label.patents": "פטנט",
        "app.about.button.label.licenseAgreement": "הסכם רישיון",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/il/go/patents",
        "app.about.licenseAgreementLink": "http://www.vmware.com/il/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/il/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "מכשירים",
        "app.devices.tableColumn.deviceName": "שם מכשיר",
        "app.devices.tableColumn.userDeviceId": "מזהה מכשיר",
        "app.devices.tableColumn.lastLoginTime": "שעת כניסה אחרונה",
        "app.devices.unlinkDevice": "בטל קישור",
        "app.devices.unlinkedDevice": "בוטל קישור",
        "app.devices.emptyDeviceListMessage": "לא משויך מכשיר לחשבונך.",

        "app.thinappMultiDeviceAct.heading": "אפליקציה זו תתווסף למכשירים המאושרים. כדי להשתמש ב-'{0}' במכשירים נוספים, מצא את שם המכשיר להלן ולחץ על הלחצן 'בקשה'.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "שם מכשיר",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "סטטוס",
        "app.thinappMultiDeviceAct.button.request": "בקשה",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "נדחה",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "ממתין",
        "app.thinappMultiDeviceAct.activationState.activated": "מאושר",
        "app.thinappMultiDeviceAct.activationState.notActivated": "לא הופעל",

        "app.thinappsInPackage.button.done": "בוצע",
        "app.thinappsInPackage.button.bookmarkAll": "הגדר הכל כסימניות",
        "app.thinappsInPackage.info": "חבילת אפליקציות",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} אפליקציות",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "נמצאה התאמה {0}.",
        "app.thinappsInPackage.action.instruction": "בחר את סמל הסימנייה כי ליצור סימנייה עבור אפליקציה מסוימת או בחר בלחצן לסימון כל האפליקציות בסימנייה.",
        "app.thinappsInPackage.search.placeholder": "חיפוש בחבילה",

        "app.setAppPassword.heading": "הגדר סיסמה",
        "app.setAppPassword.instruction": "השתמש בטופס למטה כדי להגדיר סיסמה עבור אפליקציה זו. הסיסמה חייבת להכיל שלושה תווים לפחות.",
        "app.setAppPassword.label.password": "סיסמה",
        "app.setAppPassword.label.confirmPassword": "אשר סיסמה",
        "app.setAppPassword.label.generate": "צור סיסמה",
        "app.setAppPassword.error.passwordsNoMatch": "הסיסמאות לא תואמות.",
        "app.setAppPassword.msg.success": "סיסמת האפליקציה הוגדרה בהצלחה.",
        "app.setAppPassword.msg.fail": "אירעה שגיאה בעת הניסיון להגדיר את הסיסמה שלך. נסה שוב.",

        "pvapp.setAppPassword.heading": "הגדר אישורים שמורים עבור {0}",
        "pvapp.setAppPassword.instruction": "השתמש בטופס להלן כדי להגדיר אישורים שמורים עבור אפליקציה זו.",
        "pvapp.setAppPassword.label.username": "שם המשתמש",
        "pvapp.setAppPassword.label.password": "סיסמה",
        "pvapp.setAppPassword.error.userNameEmpty": "שם משתמש ריק.",
        "pvapp.setAppPassword.error.passwordEmpty": "סיסמה ריקה.",
        "pvapp.setAppPassword.msg.success": "אישורי האפליקציה הוגדרו בהצלחה.",
        "pvapp.setAppPassword.msg.fail": "אירעה שגיאה בעת הניסיון להגדיר את אישורי האפליקציה שלך. נסה שוב.",

        "app.launchPassword.heading": "בקשת סיסמה",
        "app.launchPassword.view.instruction": "נדרשת סיסמה כדי להיכנס למשאב Windows זה {0}.",
        "app.launchPassword.label.userName": "משתמש",
        "app.launchPassword.label.password": "סיסמה",
        "app.launchPassword.button.label.signin": "כניסה",

        "app.changePassword.title": "החלף סיסמה",
        "app.changePassword.enterCurrentPassword": "הזן סיסמה נוכחית",
        "app.changePassword.enterNewPassword": "הזן סיסמה חדשה",
        "app.changePassword.confirmNewPassword": "אשר סיסמה חדשה",
        "app.changePassword.error.passwordsNoMatch": "הסיסמאות החדשות לא תואמות.",
        "app.changePassword.error.requirementsNoMatch": "הסיסמה החדשה לא עומדת בדרישות.",
        "app.changePassword.success": "הסיסמה החדשה נשמרה!",
        "app.changePassword.label.email": "אימייל",
        "app.changePassword.label.phone": "טלפון",

        "app.passwordPolicy.passwordRequirements": "דרישות סיסמה",
        "app.passwordPolicy.label.currentpassword": "סיסמה נוכחית",
        "app.passwordPolicy.label.newpassword": "סיסמה חדשה",
        "app.passwordPolicy.label.confirmpassword": "אשר סיסמה חדשה",
        "app.passwordPolicy.minLength": "לפחות {0} ספרות",
        "app.passwordPolicy.leastIncludes": "כוללת לפחות:",
        "app.passwordPolicy.minLower": "{0} אות",
        "app.passwordPolicy.minUpper": "{0} אות גדולה",
        "app.passwordPolicy.minDigit": "{0} מספר",
        "app.passwordPolicy.minSpecial": "{0} תו מיוחד",

        "app.coachmarks.bookmarkTitle": "כיצד להשתמש בסימניות",
        "app.coachmarks.bookmarkMessage": "הקש כדי להפעיל אתרים, לחץ והחזק כדי לגלות עוד.",
        "app.coachmarks.catalogTitle": "כיצד להשתמש בקטלוג",
        "app.coachmarks.catalogMessage": "התקן אפליקציות או עדכן אותן, הוסף ל'סימניות' או פתח ישירות מכאן.",
        "app.coachmarks.buttonText": "הבנתי!",

        "app.logout.confirm.msg": "היציאה מ-Workspace ONE תסיים את ההפעלה הנוכחית שלך. כל האפליקציות שהורדו מהקטלוג יישארו במכשיר, אך אפליקציות חדשות לא יהיו זמינות עד שתיכנס חזרה.",
        "app.logout.title": "אזהרה",

        "app.passwordVault.banner.msg": "יש לך אפליקציות שיכולות לנצל את ההרחבה של Workspace One.",
        "app.passwordVault.banner.button.install": "התקן",
        "app.passwordVault.banner.setPreference": "תוכל לקבל אותה מאוחר יותר ב'הגדרות' - 'העדפות'.",
        "app.passwordVault.banner.donotshowagain": "אל תציג הודעה זו שוב",
        "app.passwordVault.banner.button.later": "מאוחר יותר",
        "app.passwordVault.banner.button.get": "קבל",
        "app.passwordVault.preference.title": "הרחבת Workspace ONE",
        "app.passwordVault.preference.instruction": "יש לך אפליקציות שיכולות לנצל את ההרחבה של Workspace One.",
        "app.passwordVault.preference.getextension": "קבל את ההרחבה.",
        "app.bookmarking.change.tab.title": "עדיין מארגן את הסימניות שלך?",
        "app.bookmarking.change.tab.body": "השינויים שביצעת לא יישמרו. האם ברצונך להמשיך בארגון הסימניות שלך?",
        "app.bookmarking.touch.disabled": "ניתן 'לשנות סדר' של אפליקציות בעת שימוש במשטח עקיבה או בעכבר.",
        "app.bookmarking.change.tab.exit": "לא, צא",
        "app.bookmarking.change.tab.stay": "כן, הישאר כאן",
        "app.virtual.disabled": "הושבת על-ידי מנהל המערכת",
        "app.virtual.unavailable": "אפליקציה זו אינה זמינה במכשיר זה",
        "app.virtual.not.available": "לא זמין",

        "app.notification.type.NEW_ENTITLEMENTS": "בדוק אותן",
        "app.notification.type.PASSWORD_EXPIRING": "עדכן סיסמה",
        "app.notification.action.delete": "מחק",
        "notification.new.entitlements.heading": "זכאויות חדשות",
        "notification.new.entitlements.message": "מוקצות לך {0} זכאויות חדשות",
        "app.notification.delete.header": "למחוק הודעה זו?",
        "app.notification.delete.msg": "האם אתה בטוח שברצונך למחוק הודעה זו? ניתן לבחור 'שלח לארכיון', אם תרצה לשמור אותה מאוחר יותר. ",
        "app.notification.delete.text": "מחק",
        "app.notification.keep.text": "שמור",
        "app.notification.restore.text": "שחזר",
        "app.notification.delete.toast.msg": "ההודעה נמחקה.",
        "app.notification.empty": "אתה מעודכן!",
        "app.notification.more.actions": "פעולות נוספות",
        "app.notification.archive.all": "העבר הכל לארכיון",

        "app.notification.bookmark.all.error": "לצערנו איננו יכולים להגדיר כסימניות את כל האפליקציות החדשות שלך",
        "app.notification.bookmark.all.success": "כל האפליקציות החדשות נוספו למועדפים",
        "app.notification.delete.all": "מחק הכל",
        "app.notification.see.archived": "הצג תוכן שמאוחסן בארכיון",
        "app.notification.see.all": "ראה את כל ההודעות",
        "app.notification.newApps.title": "יש לך אפליקציות חדשות!",
        "app.notification.newApps.excessIconsMessage": "ועוד {0}",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "הצג פרטים",
        "app.tooltip.clicktolaunch": "לחץ להפעלה",

        "recommendedApps.install.proceed": "המשך",
        "recommendedApps.install.title": "התקן אפליקציות מומלצות",
        "recommendedApps.install.confirm.msg": "תקבל חיוויים להמשך התקנת האפליקציות.",
        "recommendedApps.text1": "האפליקציות האלה נמצאות בשימוש נפוץ על-ידי העמיתים שלך.",
        "recommendedApps.text2": "תוכל להתקין אותן עכשיו או למצוא אותן מאוחר יותר בקטלוג שלך.",
        "recommendedApps.selectAll": "בחר הכל",
        "recommendedApps.apps": "אפליקציות",
        "recommendedApps.install": "התקן",
        "recommendedApps.skip": "דלג",

        "app.desktopapp.settings.title.account": "חשבון",
        "app.desktopapp.settings.title.devices": "מכשירים",
        "app.desktopapp.settings.title.preferences": "העדפות",

        "appCenter.peopleSearch.placeholder": "חפש אנשים",
        "app.tooltip.copyEmail": "העתק דואר אלקטרוני",
        "app.peopleSearch.emailCopied": "דואר אלקטרוני הועתק",
        "appCenter.peopleSearch.noResults": "לא נמצאו תוצאות",
        "appCenter.peopleSearch.tryNewSearch": "נסה חיפוש חדש.",
        "appCenter.peopleSearch.atLeastThreeChars": "הזן 3 תווים או יותר למעלה כדי לחפש.",
        "appCenter.searchPeople": "חפש אנשים.",
        "myapps.mobilepagetitle.people": "אנשים",
        "app.people.labels.team": "הצוות שלי",
        "app.people.labels.recent": "אחרונות",
        "app.people.labels.manager": "מנהל",
        "app.people.labels.peers": "עמיתים",
        "app.people.labels.directReports": "כפיפים ישירים",
        "app.people.labels.profile": "פרופיל",
        "app.people.labels.org": "ארגוני",
        "app.people.labels.workEmail": "אימייל בעבודה",
        "app.people.labels.workPhone": "אימייל בבית",
        "app.people.labels.alternateNumber": "טלפון חלופי",
        "app.people.labels.mobile": "נייד",
        "app.people.labels.address": "כתובת",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "מנהלים",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "מספר עובד",
        "app.people.labels.skills": "מיומנויות ",
        "app.people.labels.businessUnit": "יחידה עסקית",
        "app.people.labels.costCenter": "מרכז עלויות",
        "app.people.labels.physicalDeliveryOfficeName": "מיקום משרד",

        "hub.apps": "אפליקציות",
        "hub.notifications": "הודעות",
        "hub.notifications.welcome": "ברוכים הבאים!",
        "hub.notifications.first.time.message": "ההודעות יופיעו כאן כאשר תתחיל להשתמש ב-Hub.",
        "hub.notifications.new.apps.favorite.all": "הוסף את הכל למועדפים",
        "hub.notifications.congratulations": "ברכות!",
        "hub.notifications.empty.description1": "אין הודעות חדשות.",
        "hub.notifications.empty.description2": "תיהנה מהשטח הנוסף.",
        "hub.v2.notifications.empty.description": "התעדכנת בכל ההודעות שלך",
        "hub.v2.notifications.first.time.description": "ההודעות יופיעו כאן כאשר תתחיל להשתמש ב-Hub.",
        "hub.notifications.empty.description.archived": "אין הודעות מאוחסנות בארכיון.",
        "hub.notifications.priority": "עדיפות ראשונה",
        "hub.notifications.today": "היום",
        "hub.notifications.yesterday": "אתמול",
        "hub.notifications.lastWeek": "בשבוע שעבר",
        "hub.notifications.lastMonth": "בחודש שעבר",
        "hub.notifications.older": "ישן יותר",
        "hub.notifications.archived.label": "אוכסנו בארכיון",
        "hub.notifications.action.success": "הצלחת!",
        "hub.notifications.action.failure": "מצטערים, נראה שאירעה שגיאה בביצוע הפעולה",
        "hub.notifications.moreDetails": "פרטים נוספים",
        "hub.notifications.dialog.action.completed": "הושלם",
        "hub.notifications.dialog.action.needed": "ממתין",
        "hub.notifications.dialog.action.all.notifications": "כל ההודעות",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "חפש אפליקציות",
        "hub.apps.favorites": "מועדפים",
        "hub.apps.newApps": "חדש",
        "hub.apps.recommended": "מומלץ",
        "hub.apps.categories": "קטגוריות",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "וואו, יש שטח רב כאן.",
        "hub.apps.no.apps.msg2": "פנה למנהל המערכת כדי לקבל אפליקציות עבודה.",
        "hub.apps.search.in.category": "{0} תוצאות בקטגוריה:",
        "hub.apps.search.in.app": "{0} תוצאות בשם ובתיאור האפליקציה",
        "hub.apps.search.header": "תוצאות סה\"כ",
        "hub.apps.search.no.result.header": "אין תוצאות.",
        "hub.apps.search.no.result.msg": "נסה שוב תוך שימוש במונח אחר.",
        "hub.apps.searchpeople.no.result.msg": "נסה שוב תוך שימוש בשם אחר.",
        "hub.apps.type.web": "רשת",
        "hub.apps.type.Virtual": "רשת",
        "hub.apps.type.application": "אפליקציה",
        "hub.apps.type.anyApp": "AnyApp",
        "hub.people": "אנשים",
        "hub.people.search.text": "חפש אנשים",
        "hub.people.labels.mypeers": "העמיתים שלי",
        "hub.people.labels.directreports": "כפיפים ישירים",
        "hub.people.labels.manager": "המנהל שלי",
        "hub.people.labels.organization": "ארגון",
        "hub.people.search.result": "תוצאות",
        "hub.app.install.prompt.title": "האם ברצונך להתקין",

        "hub.actionsheet.label.viewDetails": "הצג פרטים",
        "hub.actionsheet.label.removeFavorites": "הסר ממועדפים",
        "hub.actionsheet.label.addFavorites": "הוסף למועדפים",
        "hub.password.done": "בוצע",

        "hub.placeholder.changepassword.username": "שם משתמש",
        "hub.placeholder.changepassword.password": "סיסמה",
        "hub.placeholder.changepassword.confirmpassword": "אשר סיסמה",

        "hub.tunnel.text.line1": "Tunnel נדרשת לגישה ",
        "hub.tunnel.text.line2": "תתבצע הורדה אוטומטית של האפליקציה Tunnel יחד עם האפליקציה שלך.",

        "hub.promotions.banner.category.title": "פריטים מרכזיים של הקטגוריה ",
        "hub.promotions.banner.category.open": "פתח",
        "hub.promotions.banner.app.get": "קבל",
        "hub.promotions.banner.disabled": "הושבת על-ידי מנהל המערכת",
        "hub.require.app.management": "מנוהל",
        "hub.app.installing.alert.mobile.message": "האפליקציה {0} בהתקנה, בדוק את מסך הבית של הטלפון לקבלת עדכונים.",
        "hub.app.installing.alert.desktop.message": "האפליקציה {0} בהתקנה, אנא בדוק את מפעיל האפליקציות של שולחן העבודה לקבלת עדכונים.",

        "hub.nav.label.apps": "אפליקציות",
        "hub.nav.label.people": "אנשים",
        "hub.nav.label.notification": "הודעות",
        "hub.nav.label.settings": "הגדרות",
        "hub.nav.label.account": "חשבון",
        "hub.nav.label.signout": "יציאה",
        "hub.userInfo.adminConsole": "מסוף בקרת מנהל",
        "hub.userInfo.signout": "יציאה",
        "hub.userInfo.settings": "הגדרות",
        "hub.userInfo.account": "חשבון",
        "hub.userInfo.devices": "מכשירים",
        "hub.userInfo.whatsnew": "מה חדש",
        "hub.userInfo.about": "מה לגבי",
        "hub.download.ios": "Hub ל-iOS",
        "hub.download.android": "Hub ל-Android",
        "hub.download.mac": "Hub ל-Mac",
        "hub.download.windows": "Hub ל-Windows",
        "hub.download.subtitle.mobile": "קבל גישה להודעות, לדף הבית ועוד במקום אחד.",
        "hub.download.subtitle.desktop": "קבל הודעות בשולחן העבודה והפעל ישירות מתחנת העגינה שלך.",
        "hub.preferences.title": "העדפות",
        "hub.preferences.horizon.subtitle": "אפליקציות מרוחקות של Horizon",
        "hub.preferences.launch.question": "כיצד תרצה להפעיל את האפליקציות המרוחקות של Horizon?",
        "hub.about.title": "אודות VMware Intelligent Hub",
        "hub.apps.allApps": "כל האפליקציות",
        "hub.apps.configure.favorites.msg": "הוסף את האפליקציות המועדפות עליך כאן לגישה מהירה יותר",
        "hub.apps.configure.favorites": "קבע תצורה",
        "hub.apps.edit.favorites": "ערוך",

        "hub.contextDialog.label.removeFavorites": "הסר ממועדפים",
        "hub.contextDialog.label.addFavorites": "הוסף למועדפים",
        "hub.contextDialog.label.viewDetails": "הצג פרטים",
        "hub.apps.edit.favorites.header": "מצב עריכה של מועדפים",
        "hub.apps.edit.favorites.prompt": "גרור ושחרר כדי לשנות את הסדר.",
        "hub.apps.edit.favorites.save": "שמור",
        "hub.apps.edit.favorites.cancel": "בטל שינויים",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "עדכנת את הסדר, בטל או שמור לפני היציאה",
        "hub.apps.edit.favorites.savecustomordering": "שומר את הסדר המותאם אישית. כדי להימנע מאובדן התוצאות, אל תנווט החוצה",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "שינוי הסדר אינו זמין במסכי מגע.",
        "hub.apps.edit.favorites.notify.success": "שינוי הסדר של המועדפים נשמר!",
        "hub.apps.edit.favorites.notify.error": "אירעה שגיאה, לא ניתן לשמור את שינוי הסדר, נסה מאוחר יותר",

        "hub.nav.label.settings.settings": "הגדרות",
        "hub.nav.label.settings.account": "חשבון",
        "hub.nav.label.settings.about": "אודות",
        "hub.nav.label.settings.devices": "מכשירים",
        "hub.nav.label.settings.preferences": "העדפות",
        "hub.nav.label.settings.whatsnew": "מה חדש",

        "hub.apps.detail.back": "חזרה לאפליקציות",
        "hub.people.detail.back": "חזרה לאנשים",
        "hub.people.notifications.back": "חזרה להודעות",

        "hub.nav.label.notifications.filter": "מסנן",
        "hub.nav.label.notifications.all.notifications": "כל ההודעות",
        "hub.nav.label.notifications.action.needed": "ממתין",
        "hub.nav.label.notifications.completed": "הושלם",
        "hub.long.card.description": "תיאור",
        "hub.long.card.Comment": "הערה",
        "hub.long.card.Comment.placeholder": "הוסף הערה",

        "hub.appLaunch.open": "פתח",
        "hub.appLaunch.cancel": "ביטול"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "e",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Installa",
        "app.banner.open": "Apri",
        "app.promotion.banner.donotshowagain": "Non visualizzare più questo messaggio. Mostralo più tardi in Impostazioni - Informazioni su.",
        "app.promotion.banner.open": "Apri nell'app",
        "app.promotion.banner.download": "Scarica app",
        "app.promotion.banner.message": "Prova un'esperienza migliore nell'app.",
        "horizonDesktopNotDetected": "Affinché sia possibile aprire questa applicazione, VMware Identity Manager Desktop deve essere installato nel computer. <a target='_blank' href='{0}'>Installa VMware Identity Manager Desktop</a> se non lo hai già fatto.",
        "viewAppsTooltip": "Questa applicazione ospitata in Horizon richiede che nel computer sia installato {0} Horizon Client{1} 3.0 o versione successiva.",
        "desktoneDesktopTooltip": "Questo desktop Horizon Cloud richiede che nel computer sia installato {0} Horizon Client {1}.",
        "desktoneApplicationTooltip": "Questa applicazione Horizon Cloud richiede che nel computer sia installato {0} Horizon Client {1}.",
        "xenAppsReceiverNotDetected": "Affinché sia possibile aprire questa applicazione, Citrix Receiver deve essere installato nel computer. <a target='_blank' href='{0}'>Installa Citrix Receiver</a> se non lo hai già fatto.",
        "button.save": "Salva",
        "button.update": "Aggiorna",
        "button.openHorizonView": "Apri Horizon Client",
        "myapps.launch.openApp": "Apri {0}",
        "button.openApp": "Apri app",
        "button.clear": "Cancella",
        "button.close": "Chiudi",
        "button.cancel": "Annulla",
        "button.download": "Download",
        "myapps.launch.title.launch": "Avvia",
        "myapps.launch.title": "Avvia applicazione",
        "myapps.launch.view.openWith": "Apri con",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Browser",
        "myapps.launch.view.preferredClient.isDefault": "(predefinito)",
        "myapps.launch.view.selectPreferredLaunchClient": "Seleziona la modalità di avvio delle applicazioni e dei desktop Horizon",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "App remote Horizon",
        "myapps.launch.view.selectPreferredLaunchClientText": "L'apertura delle app remote Horizon in Horizon Client garantisce un'esperienza di utilizzo migliore rispetto al browser.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Con quale modalità desideri avviare le app remote Horizon?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "SCEGLI UNA MODALITÀ DI AVVIO PREDEFINITA...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Questa opzione determina il comportamento di avvio predefinito quando scegli di aprire un desktop Horizon dal tuo dispositivo. Se scegli Horizon Client come predefinito, devi avere installato Horizon Client. <a target='_blank' href='{0}'>Installa Horizon Client</a> se non lo hai già fatto.",
        "myapps.launch.view.unknownClientType": "Tipo di client sconosciuto per l'apertura di Horizon Client.",
        "myapps.launch.view.openWithView": "Apri con Horizon Client",
        "myapps.launch.view.openWithBrowser": "Apri con il browser",

        "myapps.launch.view.preferredClient.byBrowser.description": "Se selezioni Browser, il desktop o l'applicazione si aprirà in una nuova finestra del browser.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Questo elemento richiede Horizon Client 3.0 o versione successiva. <a target='_blank' href='{0}'>Installa Horizon Client</a> se non lo hai già fatto.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Puoi cambiare questa impostazione in qualsiasi momento nelle preferenze.",
        "myapps.launch.view.preferredClient.saveSuccess": "La preferenza selezionata è stata salvata correttamente.",
        "myapps.launch.msg.launching.desktop": "Avvio del desktop <b>{0}</b> in corso...",
        "myapps.launch.msg.launching.application": "Avvio dell'applicazione <b>{0}</b> in corso...",
        "myapps.noAppsMsg": "Non hai aggiunto alcuna app. Puoi passare a {0} per aggiungere applicazioni.",
        "myapps.noFavAppsMsg": "Non hai aggiunto segnalibri ad alcuna app",
        "myapps.welcomeMsg": "Salve {0}, ecco le tue app.",
        "myapps.bookmarks.empty.message": "Aggiungi un segnalibro alle app che usi più di frequente per potervi accedere rapidamente.",
        "myapps.bookmarks.empty.hidecatalog.message": "Al momento non è presente alcuna applicazione disponibile per l'utilizzo.",
        "myapps.bookmarks.empty.addbookmarks": "Aggiungi segnalibri",
        "myapps.bookmarks.organize.title": "Organizza segnalibri",
        "myapps.bookmarks.organize.addbookmarks": "Aggiungi segnalibri",
        "myapps.bookmarks.organize.batchremove": "Rimuovi",

        "myapps.mobilepagetitle.apps": "App",
        "myapps.mobilepagetitle.details": "Dettagli",
        "myapps.mobilepagetitle.support": "Supporto",
        "myapps.mobilepagetitle.settings": "Impostazioni",
        "myapps.mobilepagetitle.recommendedapps": "Consigliate per te",
        "myapps.mobilepagetitle.notification": "Notifiche",
        "myapps.mobilepagetitle.archived": "Archiviato",
        "myapps.mobilepagetitle.notification.newapps": "Nuove app",

        "myapps.dialog.openApp": "Apri",
        "myapps.dialog.openAppWithViewClient": "Apri nel client",
        "myapps.dialog.openAppWithBrowser": "Apri nel browser",

        "myapps.launch.passwordvault.installExtension.description": "Questa applicazione può utilizzare l'estensione del browser Password Vault. <a target='_blank' href='{0}'>Installa l'estensione</a> se non lo hai già fatto.",

        "deviceStatus.networkLost": "Connessione persa. Tentativo di riconnessione in corso…",
        "deviceStatus.networkRestored": "Connessione di rete ripristinata",
        "api.session.expired.retry": "Sessione scaduta. Tentativo di rinnovo in corso...",
        "api.entitlements.reload": "È in corso l'aggiornamento della visualizzazione per aggiornare le app nel catalogo.",
        "api.security.header.invalid.relogin": "Convalida dell'intestazione di sicurezza non riuscita. Disconnessione in corso...",
        "api.server.load.error": "Al momento il carico è più intenso del solito. Riprova più tardi.",
        "api.updateApps": "Aggiornamento elenco in corso...",
        "api.error": "Si è verificato un errore. Riprova.",
        "installation.error": "Le app native non sono al momento disponibili",
        "service.under.maintenance.error": "Workspace ONE è temporaneamente in modalità di manutenzione. Puoi avviare le app, ma è possibile che alcune funzionalità siano inutilizzabili.",
        "api.timeout": "Timeout della connessione. Riprova.",
        "favoriteStatus.favorite": "Aggiungi",
        "favoriteStatus.unfavorite": "Rimuovi",
        "favoriteStatus.offlineFavoriteMessage": "Non è possibile aggiungere un segnalibro a un'app mentre si è offline. Riconnettiti e riprova.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "Non è possibile rimuovere un segnalibro da un'app mentre si è offline. Riconnettiti e riprova.",
        "error.failToFavoriteApp": "Impossibile aggiornare lo stato del segnalibro",
        "error.failedToResetApp": "Impossibile reimpostare l'app",
        "error.failToHideApp": "Impossibile rimuovere l'app",
        "error.failToShowApp": "Impossibile aggiungere l'app all'utilità di avvio",
        "error.failedToBookmarkApp": "Impossibile aggiungere un segnalibro all'app",
        "error.failedToLaunchApp": "Impossibile aprire l'app",
        "error.failedToRemoveAccount": "Impossibile rimuovere l'account. Riprova più tardi.",
        "installStatus.enrollDevice": "L'utilizzo di {0} richiede l'attivazione di Workspace Services per proteggere i dati aziendali",
        "installStatus.enrollDevice.learnMore": "Ulteriori informazioni",
        "installStatus.offlineInstallMessage": "Le richieste di installazione non sono disponibili mentre si è offline. Riconnettiti e riprova.",
        "installStatus.activated": "Attivato",
        "installStatus.notActivated": "Non attivato",
        "installStatus.request": "Richiesta",
        "installStatus.update": "Aggiorna",
        "installStatus.processing": "Elaborazione in corso",
        "installStatus.installFailedMessage": "Si è verificato un errore durante l'installazione dell'app {0}. Riprova. Se il problema persiste, contatta il tuo amministratore IT.",
        "installStatus.unenrolledDevice": "Questa app non è più disponibile per te. Fai clic su OK per aggiornare l'elenco.",
        "installMessage.continueInstall": "Hai già tentato di installare questa app. ",
        "installMessage.proceedToInstall": "Fai clic per continuare.",
        "installMessage.installingOnDevice": "Installazione sul dispositivo in corso...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Abilita Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "Questa operazione è necessaria prima di poter installare l'app. Riceverai automaticamente i vantaggi seguenti:",
        "app.adaptivemanagement.valueproposition1": "Installazione diretta di tutte le risorse aziendali.",
        "app.adaptivemanagement.valueproposition2": "Accesso protetto alla rete aziendale.",
        "app.adaptivemanagement.valueproposition3": "App e contenuti sincronizzati in tutti i tuoi dispositivi.",
        "app.adaptivemanagement.valueproposition4": "Esperienza avanzata di utilizzo dell'app che ti consentirà di aumentare la produttività.",
        "app.adaptivemanagement.privacylink": "La tua privacy",

        "app.tunnel.continue": "Continua",
        "app.tunnel.text.line1": "Per accedere è necessaria l'app VMware Tunnel",
        "app.tunnel.text.line2": "L'app Tunnel verrà scaricata automaticamente insieme alla tua app.",
        "app.tunnel.header": "Richiede VMware Tunnel",
        "app.tunnel.message": "Per utilizzare questa app, VMware Tunnel deve essere installato e in esecuzione.",
        "recommendedApps.tunnel.text.line1": "Per accedere è necessaria l'app VMware Tunnel",
        "recommendedApps.tunnel.text.line2": "L'app Tunnel verrà scaricata automaticamente insieme alla tua app.",
        "app.tunnel.installHelpText": "Se l'installazione delle app non viene avviata automaticamente, esegui questi passaggi per abilitare le app",
        "app.tunnel.installStep1": "Passaggio 1: Installa l'app {0}",
        "app.tunnel.installStep2": "Passaggio 2: Installa l'app {0}",

        "requestFailed": "Richiesta non riuscita",
        "changeOccurred": "Si è verificata una modifica",
        "requestSuccessful": "Richiesta riuscita",
        "accept": "Accetta",
        "decline": "Rifiuta",
        "termsOfUse": "Condizioni per l'utilizzo",
        "beforeInstallation": "Prima dell'installazione",
        "resetDesktopStatus.offlineMessage": "Non è possibile reimpostare un desktop mentre si è offline. Riconnettiti e riprova.",
        "resetDesktop.sucess": "Reimpostazione del desktop riuscita",
        "appCenter.someAppsMissingMessage": "Al momento non è possibile caricare tutte le app",
        "appCenter.register.device": "Alcune informazioni relative al tuo dispositivo devono essere aggiornate. Premi Aggiorna per continuare con Workspace ONE.",
        "appCenter.mdm.device.error": "Non disponi più delle autorizzazioni di accesso a Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Per dettagli relativi al tuo account, contatta l'amministratore.",
        "appCenter.mdm.device.poll.error": "Al momento non è possibile completare la creazione dell'area di lavoro. Riprova o contatta l'amministratore.",
        "appCenter.device.status.notRegistered": "Dispositivo non registrato",
        "appCenter.device.status.blackListed": "Questo dispositivo è inserito nella lista nera",
        "appCenter.device.status.deviceInputError": "Questo dispositivo non è valido. Contatta il tuo amministratore IT.",
        "appCenter.device.status.unknownError": "Si è verificato un errore sconosciuto",

        "appCenter.device.register": "Registra dispositivo",
        "appCenter.device.moreDetails": "Ulteriori dettagli",
        "appCenter.device.unEnrollWarningTitle": "Vuoi rimuovere il tuo account?",
        "appCenter.device.mdmUnEnrollMessage": "Se rimuovi il tuo account, non potrai più accedere alle risorse aziendali ed è possibile che le app di lavoro vengano rimosse da questo dispositivo.",
        "appCenter.device.getDeviceEnrollmentStatus": "Recupero di informazioni aggiuntive in corso",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Sei sicuro di voler continuare?",
        "appCenter.device.remove": "Rimuovi",
        "appCenter.device.keep": "Mantieni",
        "appCenter.device.disableWorkspaceMessage": "La rimozione del tuo account revocherà l'accesso ottenuto tramite l'app Workspace ONE. Le app scaricate sul tuo springboard rimarranno installate, ma l'accesso potrebbe essere interrotto. Continuare?",
        "appCenter.noAppsMsg": "Nessuna app attualmente disponibile",
        "appCenter.vppInviteTitle": "Registrazione distribuzione gestita",
        "appCenter.appInstallConfirmPromptTitle": "Conferma installazione",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Approvazione necessaria per",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "La tua richiesta è già stata rifiutata in precedenza",
        "appCenter.mdmAppRequestConfirmPromptMessage": "L'applicazione a cui stai tentando di accedere deve essere approvata dall'amministratore",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Hai già inviato una richiesta per questa applicazione e la tua richiesta è stata rifiutata. Inviare di nuovo la richiesta?",
        "appCenter.acceptInvite": "Accetta invito",
        "appCenter.install": "Installa",
        "appCenter.proceed": "Abilita Workspace Services",
        "appCenter.cancel": "Annulla",
        "appCenter.confirm": "Conferma",
        "appCenter.searchApps": "Cerca le app.",
        "appCenter.welcomeMsg": "Installa nuove app ovunque, su qualsiasi dispositivo.",
        "appCenter.done": "Fatto",
        "appCenter.nav.privacyPage": "Pagina della privacy",
        "appCenter.nav.catalog": "Catalogo",
        "appCenter.nav.myApps": "Le mie app",
        "appCenter.nav.favorites": "Preferiti",
        "appCenter.nav.categories": "Categorie",
        "appCenter.nav.filterby": "Filtra per",
        "appCenter.nav.show": "Mostra",
        "appCenter.nav.settings": "Impostazioni",
        "appCenter.nav.sortBy": "Ordina per",
        "appCenter.nav.sortBy.alpha": "Ordina dalla A alla Z",
        "appCenter.nav.sortBy.inverseAlpha": "Ordina dalla Z alla A",
        "appCenter.nav.sortBy.customView": "Visualizzazione personalizzata",
        "appCenter.nav.arrange": "Disponi",
        "appCenter.nav.arrange.saved": "La visualizzazione personalizzata è stata salvata.",
        "appCenter.nav.arrange.tooltip": "Disponibile solo su Windows.",
        "appCenter.nav.arrange.saving": "Salvataggio in corso...",
        "appCenter.nav.arrange.error": "Impossibile salvare la visualizzazione personalizzata",
        "appCenter.nav.filter": "Filtro",
        "appCenter.installFailedTitle": "Problema di installazione dell'app",
        "appCenter.uccConflict": "Si è verificato un problema relativo alla sessione corrente. Accedi nuovamente.",

        "appCenter.search.placeholder": "Cerca",
        "appCenter.search.noResults": "Nessun risultato trovato.",

        "appCenter.action.open": "Apri",
        "appCenter.action.install": "Installa",
        "appCenter.action.installing": "Installazione",
        "appCenter.action.installed": "Installazione completata",
        "appCenter.action.reinstall": "Reinstalla",
        "appCenter.action.add": "Aggiungi",
        "appCenter.action.added": "Aggiunto",
        "appCenter.action.processing": "Elaborazione in corso",
        "appCenter.action.update": "Aggiorna",
        "appCenter.action.request": "Richiesta",
        "appCenter.action.pending": "In sospeso",
        "appCenter.action.view": "Visualizzazione",
        "appCenter.action.favorite": "Aggiungi",
        "appCenter.action.unfavorite": "Rimuovi",

        "appCenter.internalApp.installtionModalTitle": "Passaggi di installazione dell'app",
        "appCenter.internalApp.installationStepTitle": "Per aprire questa app, esegui i passaggi seguenti dopo l'installazione",
        "appCenter.internalApp.step1": "Apri Impostazioni dalla schermata iniziale di iOS",
        "appCenter.internalApp.step2": "Tocca Generale",
        "appCenter.internalApp.step3": "Tocca Gestione profili e dispositivo",
        "appCenter.internalApp.step4": "Tocca il nome dello sviluppatore dell'app in App aziendali",
        "appCenter.internalApp.step5": "Verifica l'app o considerala attendibile",
        "appCenter.internalApp.watchTutorial": "Guarda il tutorial passo passo",

        "appCenter.type.web": "Sito Web",
        "appCenter.type.native": "App nativa",
        "appCenter.type.native.platform": "App {0}",
        "appCenter.type.virtual": "App virtuale",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "Pacchetto app",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Categorie",
        "myapp.nav.favorites": "Preferiti",
        "myapp.nav.allApps": "Tutte le app",
        "myapp.nav.recommendedApps": "Consigliate",
        "myapp.nav.newlyEntitledApps": "Nuovo",
        "myapp.nav.webApps": "Siti Web",
        "myapp.nav.mobileApps": "App mobili",
        "myapp.nav.macApps": "App Mac",
        "myapp.nav.windowsApps": "App Windows",
        "myapp.nav.virtualApps": "Virtuale",
        "myapp.label.new": "Nuovo",
        "myapp.nav.filterby": "Filtra per",
        "myapp.nav.mobile.filter.pagetitle": "Filtra per categorie",
        "appCenter.nav.browseBy": "Sfoglia per",

        "appCenter.catalog.empty": "Al momento, non hai alcuna app assegnata. Ti verranno comunque assegnate a breve, quindi controlla di nuovo tra poco.",

        "userInfo.adminConsole": "Console di amministrazione",
        "userInfo.settings": "Impostazioni",
        "userInfo.notifications": "Notifiche",
        "userInfo.support": "Supporto",
        "userInfo.preferences": "Preferenze",
        "userInfo.about": "Informazioni su",
        "userInfo.devices": "Dispositivi",
        "userInfo.settings.promo.title": "Scarica l'app Workspace ONE",
        "userInfo.settings.promo.message": "Workspace ONE offre un'esperienza migliore nell'app. Vuoi provarla ora?",

        "userInfo.tips": "Suggerimenti app",
        "userInfo.tips.description": "Informazioni su come utilizzare l'app.",

        "userInfo.tips.bookmarks": "Come utilizzare Segnalibri",
        "userInfo.tips.catalog": "Come utilizzare Catalogo",
        "userInfo.tips.people": "Novità: Come utilizzare Persone",
        "userInfo.tips.notification": "Novità: Come utilizzare Notifica",

        "userInfo.tips.catalog.desktop1": "Fai clic su Apri per aprire un sito Web nel browser. Utilizza {0} per aggiungere un segnalibro al sito.",
        "userInfo.tips.catalog.desktop2": "Fai clic sull'icona o sul nome dell'app per visualizzare ulteriori dettagli.",
        "userInfo.tips.catalog.mobile1": "Utilizza {0} per aprire un sito Web nel browser. Usa {1} per aggiungere un segnalibro al sito.",
        "userInfo.tips.catalog.mobile2": "Utilizza {0} per installare un'app nativa sul tuo dispositivo. {1} significa che devi registrare il dispositivo per usare queste app.",
        "userInfo.tips.catalog.mobile3": "Tocca l'icona o il nome dell'app per visualizzare ulteriori dettagli.",

        "userInfo.tips.bookmarks.desktop1": "Fai clic sul riquadro per aprire il sito Web nel browser.",
        "userInfo.tips.bookmarks.desktop2": "Passa il puntatore sul riquadro per visualizzare altre azioni del menu '...'.",

        "userInfo.tips.bookmarks.mobile": "Tocca il riquadro per avviare il sito Web nel tuo browser. Tieni premuto per visualizzare altre azioni.",

        "userInfo.tips.catalog.download.phone": "Tocca l'icona {0} per installare un'app nativa sul tuo dispositivo. L'icona {1} significa che devi registrare il dispositivo per usare queste app.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Tocca l'icona {0} per aprire un sito Web nel browser. Tocca l'icona {1} per aggiungere un segnalibro al sito. Tocca l'icona o il nome dell'app per visualizzare ulteriori dettagli.",

        "userInfo.tips.catalog.download.tablet": "Scarica le app facendo clic sul pulsante di download. Per ulteriori dettagli, fai clic sull'app.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Avvia le app facendo clic sul pulsante di avvio. Per aggiungere segnalibri alle app, fai clic sul pulsante del segnalibro.",

        "userInfo.tips.people.mobile": "Fai clic su {0} per passare da un profilo qualsiasi alla pagina di destinazione principale di ricerca delle persone.",
        "userInfo.tips.notification.mobile": "Fai clic su {0} per accedere alle notifiche. Il badge di notifica rimarrà attivo finché non avrai eseguito le operazioni richieste da ciascuna notifica o non avrai eliminato tutte le notifiche.",

        "userInfo.tips.title": "Suggerimenti app",
        "userInfo.tips.intro": "Informazioni su come utilizzare l'app.",
        "userInfo.tips.desktop": "Desktop",
        "userInfo.tips.reordering.title": "Personalizza i tuoi segnalibri.",
        "userInfo.tips.reordering.text1": "1. Passa a Visualizzazione personalizzata utilizzando il menu a discesa in alto a destra.",
        "userInfo.tips.reordering.text2": "2. Scegli Disponi. ",
        "userInfo.tips.reordering.text3": "3. Per riorganizzare i segnalibri, trascinali nella posizione che desideri. Al termine, fai clic su Salva.",
        "userInfo.tips.mobile": "Dispositivi mobili",

        "userInfo.removeAccount": "Rimuovi account",
        "userInfo.account": "Account",
        "userInfo.profile": "Profilo",
        "userInfo.profile.name": "Nome:",
        "userInfo.profile.email": "Email:",
        "userInfo.profile.username": "Nome utente:",
        "userInfo.profile.picture": "Immagine profilo",
        "userInfo.profile.password": "Password",
        "userInfo.profile.passwordchange": "Modifica",
        "userInfo.profile.passwordprompt": "Gestisci la tua password per il sistema aziendale.",
        "userInfo.password": "Password",
        "userInfo.termsofuse": "Condizioni per l'utilizzo",
        "userInfo.signout": "Esci",
        "userInfo.tryAgain": "Riprova",
        "userInfo.managedevicesettings": "Gestisci impostazioni dispositivo",
        "userInfo.notification": "Notifica push",
        "userInfo.passcode": "Touch ID o codice d'accesso",

        "appCenter.support.selfservice": "Self-service",
        "appCenter.support.managedevices": "Dispositivi",
        "appCenter.support.managedevicestext": "Visualizza le informazioni relative al tuo dispositivo.",
        "appCenter.support.managepassword": "Cambia password",
        "appCenter.support.managepasswordtext": "Cambia la password del tuo account aziendale",
        "appCenter.support.gethelp": "Visualizza la Guida",
        "appCenter.support.appstips": "App e suggerimenti",
        "appCenter.support.appstipstext": "Visualizza suggerimenti della Guida in questa app",
        "appCenter.support.sendReportTitle": "Invia report",
        "appCenter.support.sendReportDetails": "Scopri come inviare i dati diagnostici dell'app.",
        "appCenter.support.helpdesk": "Help desk",
        "appCenter.support.contacthelpdesk": "Contatta l'help desk",
        "appCenter.reportProblems.ios.sendLogInstruction": "Quando si verifica un errore, è sufficiente agitare il dispositivo per inviare i dati diagnostici dell'app o fornire il tuo feedback.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Puoi attivare o disattivare questa funzionalità nelle impostazioni del dispositivo.",

        // App Details Page
        "app.details.link.back": "Indietro",
        "app.details.nav.details": "Dettagli",
        "app.details.nav.reviews": "Recensioni",
        "app.details.label.description": "Descrizione",
        "app.details.label.noDescription": "Nessuna descrizione disponibile",
        "app.details.label.seeFullDetails": "Ulteriori info",
        "app.details.label.removeBookmark": "Rimuovi",
        "app.details.label.resetDektop": "Reimposta",
        "app.details.label.information": "Informazioni",
        "app.details.label.category": "Categorie",
        "app.details.label.version": "Versione",
        "app.details.label.type": "Tipo",
        "app.details.label.type.SAML11": "App Web",
        "app.details.label.type.SAML20": "App Web",
        "app.details.label.type.WEBAPPLINK": "App Web",
        "app.details.label.type.MDMWEB": "App Web",
        "app.details.label.type.WSFED12": "App Web",
        "app.details.label.type.XENAPP": "XenApp",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Desktop Citrix",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Profilo",
        "app.details.label.type.VIEWPOOL": "Desktop Horizon",
        "app.details.label.type.VIEWAPP": "App Horizon",
        "app.details.label.type.DESKTONEDESKTOP": "Desktop Horizon Cloud",
        "app.details.label.type.DESKTONEAPPLICATION": "App Horizon Cloud",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "App Web",
        "app.details.label.type.PUBLIC": "App pubblica",
        "app.details.label.type.INTERNAL": "Interna",
        "app.details.label.size": "Dimensioni",
        "app.details.label.price": "Prezzo",
        "app.details.label.screenshots": "Screenshot",
        "app.details.label.showMore": "Mostra dettagli",
        "app.details.label.showLess": "Nascondi dettagli",
        "app.details.label.setAppPassword": "Imposta password",
        "app.details.label.sendFeedback": "Invia feedback",
        "app.details.label.feedbackSubject": "Feedback per l'app {0}",
        "app.details.label.support": "Supporto",
        "app.details.label.developer": "Sviluppatore",
        "app.details.label.email": "Email",
        "app.details.label.phone": "Telefono",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "Tutte le app mobili possono essere avviate dalla schermata iniziale.",

        "app.details.label.requirement": "Requisito:",
        "app.details.label.packageName": "Nome pacchetto:",
        "app.details.thinapp.requirement": "Questa applicazione funziona solo su un computer Windows con Identity Manager Desktop.",
        "app.details.viewDesktop.requirement": "Questo desktop Horizon richiede che nel computer sia installato {0} Horizon Client{1} 3.0 o versione successiva.",
        "app.details.viewapp.requirement": "Questa applicazione ospitata in Horizon richiede che nel computer sia installato {0} Horizon Client{1} 3.0 o versione successiva.",
        "app.details.xenapp.requirement": "Questa applicazione richiede che sia installato {0} Citrix Receiver {1}.",
        "app.details.xenapp.msg.IE8OrLower": "Questa applicazione richiede l'installazione di Citrix Receiver. Nota: questa applicazione non può essere aperta in Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "Questo desktop Citrix richiede che sia installato {0} Citrix Receiver {1}.",
        "app.details.desktoneDesktop.requirement": "Questo desktop Horizon Cloud richiede che nel computer sia installato {0} Horizon Client {1}.",
        "app.details.desktoneApp.requirement": "Questa applicazione Horizon Cloud richiede che nel computer sia installato {0} Horizon Client {1}.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "Nessuna informazione disponibile",
        "app.details.noScreenshots": "Nessuno screenshot disponibile",
        "app.details.noDescription": "La descrizione sarà disponibile a breve.",
        "app.details.needsDeviceEnrollment": "Richiede la registrazione del dispositivo",
        "app.details.label.addToHomeScreen": "Aggiungi a schermata iniziale",
        "app.details.action.open": "Apri",
        "app.details.action.bookmark": "Segnalibro",
        "app.details.action.bookmarked": "Segnalibro aggiunto",
        "app.details.action.launch": "Avvia",
        "app.details.action.setPassword": "Imposta password",
        "app.details.action.pvAppCredentials": "Credenziali",
        "app.details.info.msg.missingInfo": "Mancano alcune informazioni. Riprova più tardi per visualizzare tutti i dettagli.",
        "app.details.wsrequired.msg": "È necessario Workspace Services.",
        "app.details.label.addedFavorites": "Aggiunto ai Preferiti",

        "app.rating.label": "Valutazione utente",

        "app.settings.label.settings": "Impostazioni",
        "app.settings.link.back": "Indietro",
        "app.settings.managedDevices": "Dispositivi gestiti",
        "app.nav.tab.bookmark": "Segnalibri",
        "app.nav.tab.catalog": "Catalogo",
        "app.nav.tab.people": "Persone",
        "app.nav.tab.support": "Supporto",
        "app.nav.tab.apps": "App",
        "app.nav.tab.settings": "Impostazioni",
        "app.about.heading": "Informazioni su Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc. Tutti i diritti sono riservati. Questo prodotto è protetto dalle leggi di proprietà intellettuale degli U.S.A. e del copyright internazionale. I prodotti VMware sono coperti da uno o più brevetti.",
        "app.about.button.label.privacyPolicy": "Informativa sulla privacy",
        "app.about.button.label.patents": "Brevetto",
        "app.about.button.label.licenseAgreement": "Accordo di licenza",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-it",
        "app.about.licenseAgreementLink": "http://www.vmware.com/it/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/it/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Dispositivi",
        "app.devices.tableColumn.deviceName": "Nome dispositivo",
        "app.devices.tableColumn.userDeviceId": "ID dispositivo",
        "app.devices.tableColumn.lastLoginTime": "Ora ultimo accesso",
        "app.devices.unlinkDevice": "Rimuovi collegamento",
        "app.devices.unlinkedDevice": "Collegamento rimosso",
        "app.devices.emptyDeviceListMessage": "Al tuo account non è associato alcun dispositivo.",

        "app.thinappMultiDeviceAct.heading": "Questa applicazione verrà aggiunta ai dispositivi approvati. Per utilizzare \"{0}\" su altri dispositivi, trova il nome del dispositivo qui sotto, quindi fai clic sul pulsante Richiesta.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Nome dispositivo",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Stato",
        "app.thinappMultiDeviceAct.button.request": "Richiesta",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Rifiutata",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "In sospeso",
        "app.thinappMultiDeviceAct.activationState.activated": "Approvata",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Non attivato",

        "app.thinappsInPackage.button.done": "Fatto",
        "app.thinappsInPackage.button.bookmarkAll": "Aggiungi segnalibro a tutte",
        "app.thinappsInPackage.info": "Pacchetto app",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} app",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} corrispondenza trovata.",
        "app.thinappsInPackage.action.instruction": "Scegli l'icona del segnalibro per aggiungere un segnalibro alle singole app oppure scegli il pulsante per aggiungere un segnalibro a tutte le app",
        "app.thinappsInPackage.search.placeholder": "Cerca nel pacchetto",

        "app.setAppPassword.heading": "Imposta password",
        "app.setAppPassword.instruction": "Utilizza il seguente modulo per impostare una password per questa applicazione. La password deve contenere almeno tre caratteri.",
        "app.setAppPassword.label.password": "Password",
        "app.setAppPassword.label.confirmPassword": "Conferma password",
        "app.setAppPassword.label.generate": "Genera password",
        "app.setAppPassword.error.passwordsNoMatch": "Le password non coincidono.",
        "app.setAppPassword.msg.success": "La password dell'applicazione è stata impostata correttamente.",
        "app.setAppPassword.msg.fail": "Si è verificato un errore durante il tentativo di impostare la password. Riprova.",

        "pvapp.setAppPassword.heading": "Imposta credenziali salvate per {0}",
        "pvapp.setAppPassword.instruction": "Utilizza il modulo seguente per impostare le credenziali salvate per questa applicazione.",
        "pvapp.setAppPassword.label.username": "Nome utente",
        "pvapp.setAppPassword.label.password": "Password",
        "pvapp.setAppPassword.error.userNameEmpty": "Il nome utente è vuoto.",
        "pvapp.setAppPassword.error.passwordEmpty": "La password è vuota.",
        "pvapp.setAppPassword.msg.success": "Le credenziali dell'applicazione sono state impostate correttamente.",
        "pvapp.setAppPassword.msg.fail": "Si è verificato un errore durante il tentativo di impostare le credenziali dell'applicazione. Riprova.",

        "app.launchPassword.heading": "Richiesta di password",
        "app.launchPassword.view.instruction": "Per accedere a questa risorsa di Windows {0}, è necessaria la tua password.",
        "app.launchPassword.label.userName": "Utente",
        "app.launchPassword.label.password": "Password",
        "app.launchPassword.button.label.signin": "Accedi",

        "app.changePassword.title": "Cambia password",
        "app.changePassword.enterCurrentPassword": "Inserisci password corrente",
        "app.changePassword.enterNewPassword": "Inserisci nuova password",
        "app.changePassword.confirmNewPassword": "Conferma nuova password",
        "app.changePassword.error.passwordsNoMatch": "Le nuove password non corrispondono.",
        "app.changePassword.error.requirementsNoMatch": "La nuova password non soddisfa i requisiti.",
        "app.changePassword.success": "Nuova password salvata.",
        "app.changePassword.label.email": "Email",
        "app.changePassword.label.phone": "Telefono",

        "app.passwordPolicy.passwordRequirements": "Requisiti della password",
        "app.passwordPolicy.label.currentpassword": "Password corrente",
        "app.passwordPolicy.label.newpassword": "Nuova password",
        "app.passwordPolicy.label.confirmpassword": "Conferma nuova password",
        "app.passwordPolicy.minLength": "Deve contenere almeno {0} cifre",
        "app.passwordPolicy.leastIncludes": "Deve includere almeno:",
        "app.passwordPolicy.minLower": "{0} lettera",
        "app.passwordPolicy.minUpper": "{0} maiuscola",
        "app.passwordPolicy.minDigit": "{0} numero",
        "app.passwordPolicy.minSpecial": "{0} carattere speciale",

        "app.coachmarks.bookmarkTitle": "Come utilizzare i segnalibri",
        "app.coachmarks.bookmarkMessage": "Tocca per avviare i siti Web, tieni premuto per visualizzare altre informazioni.",
        "app.coachmarks.catalogTitle": "Come utilizzare Catalogo",
        "app.coachmarks.catalogMessage": "Installa o aggiorna le app, aggiungile ai segnalibri o aprile direttamente da qui.",
        "app.coachmarks.buttonText": "Ok.",

        "app.logout.confirm.msg": "Se esci da Workspace ONE, la sessione corrente verrà terminata. Tutte le app scaricate dal catalogo rimarranno sul dispositivo, ma non sarà disponibile alcuna nuova app finché non effettuerai nuovamente l'accesso.",
        "app.logout.title": "ATTENZIONE",

        "app.passwordVault.banner.msg": "Sono disponibili app che possono utilizzare l'estensione Workspace ONE.",
        "app.passwordVault.banner.button.install": "Installa",
        "app.passwordVault.banner.setPreference": "Puoi recuperarla più tardi in Impostazioni - Preferenze",
        "app.passwordVault.banner.donotshowagain": "Non visualizzare più questo messaggio",
        "app.passwordVault.banner.button.later": "Più tardi",
        "app.passwordVault.banner.button.get": "Ottieni",
        "app.passwordVault.preference.title": "Estensione Workspace ONE",
        "app.passwordVault.preference.instruction": "Sono disponibili app che possono utilizzare l'estensione Workspace ONE.",
        "app.passwordVault.preference.getextension": "Ottieni l'estensione.",
        "app.bookmarking.change.tab.title": "Stai ancora organizzando i tuoi segnalibri?",
        "app.bookmarking.change.tab.body": "Le modifiche che hai apportato non verranno salvate. Vuoi continuare a organizzare i tuoi segnalibri?",
        "app.bookmarking.touch.disabled": "Puoi riorganizzare le app mediante il trackpad o il mouse.",
        "app.bookmarking.change.tab.exit": "No, esci",
        "app.bookmarking.change.tab.stay": "Sì, continua",
        "app.virtual.disabled": "Disabilitato dall'amministratore",
        "app.virtual.unavailable": "L'app non è disponibile su questo dispositivo",
        "app.virtual.not.available": "Non disponibile",

        "app.notification.type.NEW_ENTITLEMENTS": "Controlla le app",
        "app.notification.type.PASSWORD_EXPIRING": "Aggiorna password",
        "app.notification.action.delete": "Elimina",
        "notification.new.entitlements.heading": "Nuovi permessi",
        "notification.new.entitlements.message": "Hai {0} nuovi permessi assegnati",
        "app.notification.delete.header": "Eliminare questa notifica?",
        "app.notification.delete.msg": "Sei sicuro di voler eliminare questa notifica? Puoi scegliere Archivia per archiviarla in un secondo momento. ",
        "app.notification.delete.text": "Elimina",
        "app.notification.keep.text": "Mantieni",
        "app.notification.restore.text": "Ripristina",
        "app.notification.delete.toast.msg": "La notifica è stata eliminata.",
        "app.notification.empty": "È tutto pronto.",
        "app.notification.more.actions": "Altre azioni",
        "app.notification.archive.all": "Archivia tutte",

        "app.notification.bookmark.all.error": "Impossibile aggiungere segnalibri a tutte le nuove app",
        "app.notification.bookmark.all.success": "Tutte le nuove app sono state aggiunte ai Preferiti",
        "app.notification.delete.all": "Elimina tutto",
        "app.notification.see.archived": "Visualizza archiviate",
        "app.notification.see.all": "Visualizza tutte le notifiche",
        "app.notification.newApps.title": "Sono disponibili nuove app.",
        "app.notification.newApps.excessIconsMessage": "+ altre {0}",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Visualizza dettagli",
        "app.tooltip.clicktolaunch": "Fai clic per avviare",

        "recommendedApps.install.proceed": "Continua",
        "recommendedApps.install.title": "Installa app consigliate",
        "recommendedApps.install.confirm.msg": "Ti verrà chiesto se desideri continuare l'installazione delle app.",
        "recommendedApps.text1": "Queste app vengono in genere utilizzate dai tuoi colleghi.",
        "recommendedApps.text2": "Puoi installarle ora oppure in un secondo momento dal tuo catalogo.",
        "recommendedApps.selectAll": "Seleziona tutto",
        "recommendedApps.apps": "app",
        "recommendedApps.install": "Installa",
        "recommendedApps.skip": "Salta",

        "app.desktopapp.settings.title.account": "Account",
        "app.desktopapp.settings.title.devices": "Dispositivi",
        "app.desktopapp.settings.title.preferences": "Preferenze",

        "appCenter.peopleSearch.placeholder": "Cerca persone",
        "app.tooltip.copyEmail": "Copia e-mail",
        "app.peopleSearch.emailCopied": "E-mail copiata",
        "appCenter.peopleSearch.noResults": "Nessun risultato trovato",
        "appCenter.peopleSearch.tryNewSearch": "Prova con una nuova ricerca.",
        "appCenter.peopleSearch.atLeastThreeChars": "Per eseguire una ricerca, inserisci almeno 3 caratteri qui sopra.",
        "appCenter.searchPeople": "Cerca le persone.",
        "myapps.mobilepagetitle.people": "Persone",
        "app.people.labels.team": "Il mio team",
        "app.people.labels.recent": "Recenti",
        "app.people.labels.manager": "Responsabile",
        "app.people.labels.peers": "Colleghi",
        "app.people.labels.directReports": "Dipendenti diretti",
        "app.people.labels.profile": "Profilo",
        "app.people.labels.org": "Organizzazione",
        "app.people.labels.workEmail": "E-mail ufficio",
        "app.people.labels.workPhone": "Telefono ufficio",
        "app.people.labels.alternateNumber": "Telefono alternativo",
        "app.people.labels.mobile": "Cellulare",
        "app.people.labels.address": "Indirizzo",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Responsabili",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "Numero dipendente",
        "app.people.labels.skills": "Competenze",
        "app.people.labels.businessUnit": "Unità di business",
        "app.people.labels.costCenter": "Centro di costo",
        "app.people.labels.physicalDeliveryOfficeName": "Percorso di Office",

        "hub.apps": "App",
        "hub.notifications": "Notifiche",
        "hub.notifications.welcome": "Benvenuto!",
        "hub.notifications.first.time.message": "Le notifiche verranno visualizzate qui non appena inizierai a utilizzare Hub.",
        "hub.notifications.new.apps.favorite.all": "Imposta tutti come preferiti",
        "hub.notifications.congratulations": "Congratulazioni!",
        "hub.notifications.empty.description1": "Nessuna nuova notifica.",
        "hub.notifications.empty.description2": "Approfitta dello spazio aggiuntivo.",
        "hub.v2.notifications.empty.description": "Hai ricevuto tutte le notifiche",
        "hub.v2.notifications.first.time.description": "Le notifiche verranno visualizzate qui non appena inizierai a utilizzare Hub.",
        "hub.notifications.empty.description.archived": "Nessuna notifica archiviata.",
        "hub.notifications.priority": "Priorità",
        "hub.notifications.today": "Oggi",
        "hub.notifications.yesterday": "Ieri",
        "hub.notifications.lastWeek": "Ultima settimana",
        "hub.notifications.lastMonth": "Ultimo mese",
        "hub.notifications.older": "Meno recenti",
        "hub.notifications.archived.label": "Archiviato",
        "hub.notifications.action.success": "Operazione completata.",
        "hub.notifications.action.failure": "Si è verificato un errore durante l'esecuzione di tale azione",
        "hub.notifications.moreDetails": "Ulteriori dettagli",
        "hub.notifications.dialog.action.completed": "Completata",
        "hub.notifications.dialog.action.needed": "In sospeso",
        "hub.notifications.dialog.action.all.notifications": "Tutte le notifiche",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Cerca app",
        "hub.apps.favorites": "Preferiti",
        "hub.apps.newApps": "Nuovo",
        "hub.apps.recommended": "Consigliate",
        "hub.apps.categories": "Categorie",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "È presente molto spazio qui.",
        "hub.apps.no.apps.msg2": "Contatta l'amministratore per ottenere le app di lavoro.",
        "hub.apps.search.in.category": "{0} risultati in Categoria:",
        "hub.apps.search.in.app": "{0} risultati in Nome app e Descrizione",
        "hub.apps.search.header": "Risultati totali",
        "hub.apps.search.no.result.header": "Nessun risultato.",
        "hub.apps.search.no.result.msg": "Riprova utilizzando un termine diverso.",
        "hub.apps.searchpeople.no.result.msg": "Riprova utilizzando un nome diverso.",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "Applicazione",
        "hub.apps.type.anyApp": "Qualsiasi app",
        "hub.people": "Persone",
        "hub.people.search.text": "Cerca persone",
        "hub.people.labels.mypeers": "I miei colleghi",
        "hub.people.labels.directreports": "Dipendenti diretti",
        "hub.people.labels.manager": "Il mio responsabile",
        "hub.people.labels.organization": "Organizzazione",
        "hub.people.search.result": "Risultati",
        "hub.app.install.prompt.title": "Installare",

        "hub.actionsheet.label.viewDetails": "Visualizza dettagli",
        "hub.actionsheet.label.removeFavorites": "Rimuovi dai Preferiti",
        "hub.actionsheet.label.addFavorites": "Aggiungi ai Preferiti",
        "hub.password.done": "Fatto",

        "hub.placeholder.changepassword.username": "Nome utente",
        "hub.placeholder.changepassword.password": "Password",
        "hub.placeholder.changepassword.confirmpassword": "Conferma password",

        "hub.tunnel.text.line1": "Per accedere, è necessaria l'applicazione Tunnel ",
        "hub.tunnel.text.line2": "L'applicazione Tunnel verrà scaricata automaticamente insieme alla tua app.",

        "hub.promotions.banner.category.title": "In evidenza nella categoria",
        "hub.promotions.banner.category.open": "Apri",
        "hub.promotions.banner.app.get": "Ottieni",
        "hub.promotions.banner.disabled": "Disabilitato dall'amministratore",
        "hub.require.app.management": "Gestito",
        "hub.app.installing.alert.mobile.message": "È in corso l'installazione dell'applicazione {0}. Per gli aggiornamenti, controlla la schermata iniziale del tuo telefono.",
        "hub.app.installing.alert.desktop.message": "È in corso l'installazione dell'applicazione {0}. Per gli aggiornamenti, controlla il programma di avvio dell'app sul desktop.",

        "hub.nav.label.apps": "App",
        "hub.nav.label.people": "Persone",
        "hub.nav.label.notification": "Notifiche",
        "hub.nav.label.settings": "Impostazioni",
        "hub.nav.label.account": "Account",
        "hub.nav.label.signout": "Esci",
        "hub.userInfo.adminConsole": "Console di amministrazione",
        "hub.userInfo.signout": "Esci",
        "hub.userInfo.settings": "Impostazioni",
        "hub.userInfo.account": "Account",
        "hub.userInfo.devices": "Dispositivi",
        "hub.userInfo.whatsnew": "Novità",
        "hub.userInfo.about": "Di che cosa si tratta",
        "hub.download.ios": "Hub per iOS",
        "hub.download.android": "Hub per Android",
        "hub.download.mac": "Hub per Mac",
        "hub.download.windows": "Hub per Windows",
        "hub.download.subtitle.mobile": "Accedi alle notifiche, alla schermata iniziale e a molto altro in un'unica posizione.",
        "hub.download.subtitle.desktop": "Ricevi le notifiche del desktop ed esegui l'avvio direttamente dal Dock.",
        "hub.preferences.title": "Preferenze",
        "hub.preferences.horizon.subtitle": "App remote Horizon",
        "hub.preferences.launch.question": "Con quale modalità desideri avviare le app remote di Horizon?",
        "hub.about.title": "Informazioni su VMware Intelligent Hub",
        "hub.apps.allApps": "Tutte le app",
        "hub.apps.configure.favorites.msg": "Aggiungi le tue app preferite qui per accedervi più rapidamente",
        "hub.apps.configure.favorites": "Configura",
        "hub.apps.edit.favorites": "Modifica",

        "hub.contextDialog.label.removeFavorites": "Rimuovi dai Preferiti",
        "hub.contextDialog.label.addFavorites": "Aggiungi ai Preferiti",
        "hub.contextDialog.label.viewDetails": "Visualizza dettagli",
        "hub.apps.edit.favorites.header": "Modalità di modifica Preferiti",
        "hub.apps.edit.favorites.prompt": "Trascina per riordinare.",
        "hub.apps.edit.favorites.save": "Salva",
        "hub.apps.edit.favorites.cancel": "Annulla modifiche",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Hai aggiornato l'ordine. Annulla o salva prima di uscire.",
        "hub.apps.edit.favorites.savecustomordering": "È in corso il salvataggio dell'ordinamento personalizzato. Per evitare la perdita dei risultati, non uscire da questa schermata.",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "La riorganizzazione non è disponibile nei touchscreen.",
        "hub.apps.edit.favorites.notify.success": "Il riordinamento dei Preferiti è stato salvato.",
        "hub.apps.edit.favorites.notify.error": "Si è verificato un errore. Impossibile salvare il riordinamento. Prova più tardi.",

        "hub.nav.label.settings.settings": "Impostazioni",
        "hub.nav.label.settings.account": "Account",
        "hub.nav.label.settings.about": "Informazioni su",
        "hub.nav.label.settings.devices": "Dispositivi",
        "hub.nav.label.settings.preferences": "Preferenze",
        "hub.nav.label.settings.whatsnew": "Novità",

        "hub.apps.detail.back": "Torna ad App",
        "hub.people.detail.back": "Torna a Persone",
        "hub.people.notifications.back": "Torna a Notifiche",

        "hub.nav.label.notifications.filter": "Filtro",
        "hub.nav.label.notifications.all.notifications": "Tutte le notifiche",
        "hub.nav.label.notifications.action.needed": "In sospeso",
        "hub.nav.label.notifications.completed": "Completata",
        "hub.long.card.description": "Descrizione",
        "hub.long.card.Comment": "Commento",
        "hub.long.card.Comment.placeholder": "Aggiungi un commento",

        "hub.appLaunch.open": "Apri",
        "hub.appLaunch.cancel": "Annulla"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "אישור",
        "and": "וגם",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "‏‎/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "התקן",
        "app.banner.open": "פתח",
        "app.promotion.banner.donotshowagain": "אל תציג זאת שוב. קבל זאת מאוחר יותר ב'הגדרות - אודות'.",
        "app.promotion.banner.open": "פתח באפליקציה",
        "app.promotion.banner.download": "הורד אפליקציה",
        "app.promotion.banner.message": "קבל חוויה טובה יותר באפליקציה.",
        "horizonDesktopNotDetected": "יש להתקין את VMware Identity Manager Desktop במחשב כדי לפתוח אפליקציה זו. <a target='_blank' href='{0}'>התקן את VMware Identity Manager Desktop</a> אם טרם עשית זאת.",
        "viewAppsTooltip": "אפליקציה מתארחת זו של Horizon מחייבת התקנה של {0}Horizon Client{1} גרסה 3.0 ואילך במחשב.",
        "desktoneDesktopTooltip": "Horizon Cloud לשולחן העבודה מחייב התקנה של {0}Horizon Client{1} במחשב.",
        "desktoneApplicationTooltip": "אפליקציה זו של Horizon Cloud מחייבת התקנה של {0}Horizon Client{1} במחשב.",
        "xenAppsReceiverNotDetected": "יש להתקין את Citrix Receiver במחשב כדי לפתוח אפליקציה זו. התקן את <a target='_blank' href='{0}'>Citrix Receiver</a> אם טרם עשית זאת.",
        "button.save": "שמור",
        "button.update": "עדכן",
        "button.openHorizonView": "פתח את Horizon Client",
        "myapps.launch.openApp": "פתח את {0}",
        "button.openApp": "פתח אפליקציה",
        "button.clear": "מחק",
        "button.close": "סגור",
        "button.cancel": "ביטול",
        "button.download": "‏הורד",
        "myapps.launch.title.launch": "הפעל",
        "myapps.launch.title": "הפעל אפליקציה",
        "myapps.launch.view.openWith": "פתח באמצעות",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "דפדפן",
        "myapps.launch.view.preferredClient.isDefault": "(ברירת מחדל)",
        "myapps.launch.view.selectPreferredLaunchClient": "בחר כיצד ברצונך להפעיל שולחנות עבודה ואפליקציות של Horizon",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "אפליקציות מרוחקות של Horizon",
        "myapps.launch.view.selectPreferredLaunchClientText": "פתיחת האפליקציות המרוחקות של Horizon ב-Horizon Client תספק לך חוויה משופרת בהשוואה לדפדפן.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "כיצד תרצה להפעיל את האפליקציות המרוחקות של Horizon?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "בחר ברירת מחדל להפעלה...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "אפשרות זו קובעת את התנהגות ברירת המחדל כאשר תבחר להפעיל שולחן עבודה של Horizon במכשיר שלך. אם תבחר את Horizon Client כברירת המחדל, עליך להתקין את Horizon Client. <a target='_blank' href='{0}'>התקן את Horizon Client‏‎</a> אם טרם עשית זאת.",
        "myapps.launch.view.unknownClientType": "סוג לקוח לא מוכר לפתיחת Horizon Client.",
        "myapps.launch.view.openWithView": "פתח באמצעות Horizon Client",
        "myapps.launch.view.openWithBrowser": "פתח עם דפדפן",

        "myapps.launch.view.preferredClient.byBrowser.description": "אם תבחר 'דפדפן', שולחן העבודה או האפליקציה שלך ייפתחו בחלון דפדפן חדש.",
        "myapps.launch.view.preferredClient.byViewClient.description": "פריט זה מחייב Horizon Client גרסה 3.0 ואילך. <a target='_blank' href='{0}'>התקן את Horizon Client</a> אם טרם עשית זאת.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "תוכל לשנות הגדרה זו בכל עת בהעדפות.",
        "myapps.launch.view.preferredClient.saveSuccess": "העדיפות שנבחרה נשמרה בהצלחה.",
        "myapps.launch.msg.launching.desktop": "מפעיל את שולחן העבודה <b>{0}</b> .....",
        "myapps.launch.msg.launching.application": "מפעיל את האפליקציה <b>{0}</b> .....",
        "myapps.noAppsMsg": "לא הוספת אפליקציות. תוכל לנווט אל {0} כדי להוסיף אפליקציות",
        "myapps.noFavAppsMsg": "לא סימנת אפליקציות",
        "myapps.welcomeMsg": "שלום {0}. הנה האפליקציות שלך!",
        "myapps.bookmarks.empty.message": "שמור סימנייה של אפליקציות בשימוש נפוץ לגישה מהירה.",
        "myapps.bookmarks.empty.hidecatalog.message": "אין כרגע אפליקציות זמינות לשימוש.",
        "myapps.bookmarks.empty.addbookmarks": "הוסף סימניות",
        "myapps.bookmarks.organize.title": "ארגן את הסימניות",
        "myapps.bookmarks.organize.addbookmarks": "הוסף סימניות",
        "myapps.bookmarks.organize.batchremove": "הסר",

        "myapps.mobilepagetitle.apps": "אפליקציות",
        "myapps.mobilepagetitle.details": "פרטים",
        "myapps.mobilepagetitle.support": "תמיכה",
        "myapps.mobilepagetitle.settings": "הגדרות",
        "myapps.mobilepagetitle.recommendedapps": "מומלצות עבורך",
        "myapps.mobilepagetitle.notification": "הודעות",
        "myapps.mobilepagetitle.archived": "אוכסנו בארכיון",
        "myapps.mobilepagetitle.notification.newapps": "אפליקציות חדשות",

        "myapps.dialog.openApp": "פתח",
        "myapps.dialog.openAppWithViewClient": "פתח ב-Client",
        "myapps.dialog.openAppWithBrowser": "פתח בדפדפן",

        "myapps.launch.passwordvault.installExtension.description": "אפליקציה זו יכולה להשתמש בהרחבת הדפדפן Password Vault. <a target='_blank' href='{0}'>התקן את ההרחבה</a> אם טרם עשית זאת.",

        "deviceStatus.networkLost": "החיבור אבד. מנסה להתחבר מחדש...",
        "deviceStatus.networkRestored": "החיבור לרשת שוחזר",
        "api.session.expired.retry": "פג תוקף ההפעלה, מנסה לחדש...",
        "api.entitlements.reload": "מרענן את התצוגה כדי לעדכן את האפליקציות בקטלוג שלך.",
        "api.security.header.invalid.relogin": "אימות כותרת האבטחה נכשל, מתנתק...",
        "api.server.load.error": "אנו חווים עומס כבד מהרגיל. אנא נסה שוב מאוחר יותר.",
        "api.updateApps": "מעדכן את הרשימה...",
        "api.error": "אירעה שגיאה. נסה שוב.",
        "installation.error": "אפליקציות מקוריות אינן זמינות באופן זמני",
        "service.under.maintenance.error": "מערכת Workspace ONE נמצאת באופן זמני במצב תחזוקה. תוכל להפעיל את האפליקציות שלך, אבל ייתכן שחלק מהתכונות לא יפעלו",
        "api.timeout": "תם הזמן הקצוב לחיבור, נסה שוב",
        "favoriteStatus.favorite": "סמן כמועדף",
        "favoriteStatus.unfavorite": "בטל כמועדף",
        "favoriteStatus.offlineFavoriteMessage": "סימון אפליקציה בסימנייה אינו זמין כאשר אינך מקוון, התחבר מחדש ונסה שוב",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "הסרת סימנייה מאפליקציה אינה זמינה כשאינך מקוון, התחבר ונסה שוב",
        "error.failToFavoriteApp": "עדכון סטטוס הסימנייה נכשל",
        "error.failedToResetApp": "איפוס האפליקציה נכשל",
        "error.failToHideApp": "הסרת האפליקציה נכשלה",
        "error.failToShowApp": "הוספת האפליקציה למפעיל נכשלה",
        "error.failedToBookmarkApp": "סימון האפליקציה בסימנייה נכשל",
        "error.failedToLaunchApp": "פתיחת האפליקציה נכשלה",
        "error.failedToRemoveAccount": "הסרת החשבון נכשלה, נסה שוב מאוחר יותר.",
        "installStatus.enrollDevice": "השימוש ב-{0} מחייב הפעלה של Workspace Services כדי להגן על נתוני החברה",
        "installStatus.enrollDevice.learnMore": "למידע נוסף",
        "installStatus.offlineInstallMessage": "בקשות התקנה אינן זמינות כאשר אינך מקוון, התחבר מחדש ונסה שוב",
        "installStatus.activated": "הופעל",
        "installStatus.notActivated": "לא הופעל",
        "installStatus.request": "בקשה",
        "installStatus.update": "עדכן",
        "installStatus.processing": "מעבד",
        "installStatus.installFailedMessage": "משהו השתבש בעת התקנת האפליקציה {0}. נסה שוב. אם הבעיה ממשיכה, צור קשר עם מנהל ה-IT",
        "installStatus.unenrolledDevice": "אפליקציה זו אינה זמינה עוד עבורך. לחץ על 'אישור' כדי לעדכן את הרשימה.",
        "installMessage.continueInstall": "ניסית בעבר להתקין אפליקציה זו. ",
        "installMessage.proceedToInstall": "לחץ כדי להמשיך.",
        "installMessage.installingOnDevice": "מתקין במכשיר...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "הפעל את Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "עליך לעשות זאת לפני שתוכל להתקין את האפליקציה. תקבל באופן אוטומטי:",
        "app.adaptivemanagement.valueproposition1": "התקנה ישירה של כל משאבי החברה.",
        "app.adaptivemanagement.valueproposition2": "גישה מאובטחת לרשת החברה.",
        "app.adaptivemanagement.valueproposition3": "סנכרון אפליקציות ותוכן בכל המכשירים שלך.",
        "app.adaptivemanagement.valueproposition4": "חוויית אפליקציה משופרת להגברת הפרודוקטיביות שלך.",
        "app.adaptivemanagement.privacylink": "הפרטיות שלך",

        "app.tunnel.continue": "המשך",
        "app.tunnel.text.line1": "יש צורך באפליקציה VMware Tunnel כדי לקבל גישה",
        "app.tunnel.text.line2": "תתבצע הורדה אוטומטית של האפליקציה Tunnel יחד עם האפליקציה שלך.",
        "app.tunnel.header": "מחייב VMware Tunnel",
        "app.tunnel.message": "כדי להשתמש באפליקציה זו, יש להתקין את VMware Tunnel ולהריץ אותו.",
        "recommendedApps.tunnel.text.line1": "יש צורך באפליקציה VMware Tunnel כדי לקבל גישה",
        "recommendedApps.tunnel.text.line2": "תתבצע הורדה אוטומטית של האפליקציה Tunnel יחד עם האפליקציה שלך.",
        "app.tunnel.installHelpText": "אם התקנת האפליקציות לא התחילה באופן אוטומטי, בצע את השלבים הבאים כדי להפעיל את האפליקציה",
        "app.tunnel.installStep1": "שלב 1: התקן את האפליקציה {0}",
        "app.tunnel.installStep2": "שלב 2: התקן את האפליקציה {0}",

        "requestFailed": "הבקשה נכשלה",
        "changeOccurred": "אירע שינוי",
        "requestSuccessful": "הבקשה בוצעה בהצלחה",
        "accept": "קבל",
        "decline": "דחה",
        "termsOfUse": "תנאי שימוש",
        "beforeInstallation": "לפני ההתקנה",
        "resetDesktopStatus.offlineMessage": "איפוס שולחן עבודה אינו זמין כאשר אינך מקוון, התחבר מחדש ונסה שוב",
        "resetDesktop.sucess": "איפוס שולחן העבודה בוצע בהצלחה",
        "appCenter.someAppsMissingMessage": "לא ניתן לטעון את כל האפליקציות בשלב זה",
        "appCenter.register.device": "יש לעדכן חלק מפרטי המכשיר. לחץ על 'עדכן' כדי להמשיך עם Workspace ONE.",
        "appCenter.mdm.device.error": "כבר אין לך גישה ל-Workspace ONE.",
        "appCenter.mdm.device.error.contact": "צור קשר עם מנהל המערכת לקבלת פרטי החשבון שלך.",
        "appCenter.mdm.device.poll.error": "בשלב זה לא הצלחנו לסיים את בניית סביבת העבודה שלך. נסה שוב או צור קשר עם מנהל המערכת.",
        "appCenter.device.status.notRegistered": "המכשיר אינו רשום",
        "appCenter.device.status.blackListed": "המכשיר מופיע ברשימה שחורה",
        "appCenter.device.status.deviceInputError": "מכשיר זה לא חוקי! צור קשר עם מנהל ה-IT",
        "appCenter.device.status.unknownError": "אירעה שגיאה לא ידועה",

        "appCenter.device.register": "רשום מכשיר",
        "appCenter.device.moreDetails": "פרטים נוספים",
        "appCenter.device.unEnrollWarningTitle": "להסיר את החשבון שלך?",
        "appCenter.device.mdmUnEnrollMessage": "הסרת חשבונך תשבית את הגישה למשאבי החברה, ועלולה להסיר אפליקציות עבודה ממכשיר זה.",
        "appCenter.device.getDeviceEnrollmentStatus": "מקבל מידע נוסף",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "האם אתה בטוח שברצונך להמשיך?",
        "appCenter.device.remove": "הסר",
        "appCenter.device.keep": "שמור",
        "appCenter.device.disableWorkspaceMessage": "הסרת החשבון תשלול את הגישה שניתנה דרך אפליקציית Workspace ONE. אפליקציות שהורדו למסך הבית יישארו מותקנות, אך ייתכן שהגישה תנותק. האם ברצונך להמשיך?",
        "appCenter.noAppsMsg": "אין אפליקציות זמינות כעת",
        "appCenter.vppInviteTitle": "הרשמה להפצה מנוהלת",
        "appCenter.appInstallConfirmPromptTitle": "אשר התקנה",
        "appCenter.mdmAppRequestConfirmPromptTitle": "נדרש אישור עבור",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "בקשתך נדחתה בעבר",
        "appCenter.mdmAppRequestConfirmPromptMessage": "מנהל המערכת שלך צריך לאשר את האפליקציה שאליה אתה מנסה לגשת.",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "ביקשת את האפליקציה הזו והבקשה שלך נדחתה, האם אתה בטוח שברצונך לבקש שוב",
        "appCenter.acceptInvite": "קבל הזמנה",
        "appCenter.install": "התקן",
        "appCenter.proceed": "הפעל את Workspace Services",
        "appCenter.cancel": "ביטול",
        "appCenter.confirm": "אישור",
        "appCenter.searchApps": "חפש אפליקציות.",
        "appCenter.welcomeMsg": "התקן אפליקציות חדשות בכל מקום, בכל מכשיר!",
        "appCenter.done": "בוצע",
        "appCenter.nav.privacyPage": "דף פרטיות",
        "appCenter.nav.catalog": "קטלוג",
        "appCenter.nav.myApps": "האפליקציות שלי",
        "appCenter.nav.favorites": "מועדפים",
        "appCenter.nav.categories": "קטגוריות",
        "appCenter.nav.filterby": "סנן לפי",
        "appCenter.nav.show": "הצג",
        "appCenter.nav.settings": "הגדרות",
        "appCenter.nav.sortBy": "מיין לפי",
        "appCenter.nav.sortBy.alpha": "מיין לפי א-ת",
        "appCenter.nav.sortBy.inverseAlpha": "מיין לפי ת-א",
        "appCenter.nav.sortBy.customView": "תצוגה מותאמת אישית",
        "appCenter.nav.arrange": "ארגן",
        "appCenter.nav.arrange.saved": "התצוגה המותאמת אישית נשמרה!",
        "appCenter.nav.arrange.tooltip": "זמין ב-Windows בלבד.",
        "appCenter.nav.arrange.saving": "שומר...",
        "appCenter.nav.arrange.error": "לא ניתן לשמור תצוגה מותאמת אישית",
        "appCenter.nav.filter": "מסנן",
        "appCenter.installFailedTitle": "בעיה בהתקנת האפליקציה",
        "appCenter.uccConflict": "משהו השתבש בהפעלה הנוכחית. היכנס מחדש.",

        "appCenter.search.placeholder": "חיפוש",
        "appCenter.search.noResults": "לא נמצאו תוצאות.",

        "appCenter.action.open": "פתח",
        "appCenter.action.install": "התקן",
        "appCenter.action.installing": "מתקין",
        "appCenter.action.installed": "מותקן",
        "appCenter.action.reinstall": "התקן מחדש",
        "appCenter.action.add": "הוסף",
        "appCenter.action.added": "נוסף",
        "appCenter.action.processing": "מעבד",
        "appCenter.action.update": "עדכן",
        "appCenter.action.request": "בקשה",
        "appCenter.action.pending": "ממתין",
        "appCenter.action.view": "הצג",
        "appCenter.action.favorite": "סמן כמועדף",
        "appCenter.action.unfavorite": "בטל כמועדף",

        "appCenter.internalApp.installtionModalTitle": "שלבי התקנת אפליקציה",
        "appCenter.internalApp.installationStepTitle": "כדי לפתוח אפליקציה זו, בצע את השלבים הבאים לאחר ההתקנה",
        "appCenter.internalApp.step1": "הפעל את 'הגדרות' ממסך הבית של iOS",
        "appCenter.internalApp.step2": "הקש על 'כללי'",
        "appCenter.internalApp.step3": "הקש על 'פרופילים וניהול מכשירים'",
        "appCenter.internalApp.step4": "הקש על שם המפתח מתחת לאפליקציית החברה",
        "appCenter.internalApp.step5": "אמת את האפליקציה או תן בה אמון",
        "appCenter.internalApp.watchTutorial": "צפה בהדרכה שלב אחר שלב",

        "appCenter.type.web": "אתר",
        "appCenter.type.native": "אפליקציה מקורית",
        "appCenter.type.native.platform": "{0} אפליקציה",
        "appCenter.type.virtual": "אפליקציה וירטואלית",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "חבילת אפליקציות",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "קטגוריות",
        "myapp.nav.favorites": "מועדפים",
        "myapp.nav.allApps": "כל האפליקציות",
        "myapp.nav.recommendedApps": "מומלץ",
        "myapp.nav.newlyEntitledApps": "חדש",
        "myapp.nav.webApps": "אתרי אינטרנט",
        "myapp.nav.mobileApps": "אפליקציות לנייד",
        "myapp.nav.macApps": "אפליקציות ל-Mac",
        "myapp.nav.windowsApps": "אפליקציות ל-Windows",
        "myapp.nav.virtualApps": "וירטואלי",
        "myapp.label.new": "חדש",
        "myapp.nav.filterby": "סנן לפי",
        "myapp.nav.mobile.filter.pagetitle": "סנן לפי קטגוריות",
        "appCenter.nav.browseBy": "עיין לפי",

        "appCenter.catalog.empty": "נראה שטרם הוקצו לך אפליקציות כלשהן. הן אמורות להגיע בקרוב. חזור להתעדכן בקרוב.",

        "userInfo.adminConsole": "מסוף בקרת מנהל",
        "userInfo.settings": "הגדרות",
        "userInfo.notifications": "הודעות",
        "userInfo.support": "תמיכה",
        "userInfo.preferences": "העדפות",
        "userInfo.about": "אודות",
        "userInfo.devices": "מכשירים",
        "userInfo.settings.promo.title": "הורד את האפליקציה Workspace ONE",
        "userInfo.settings.promo.message": "Workspace ONE מספקת חוויה טובה יותר באפליקציה. לנסות עכשיו?",

        "userInfo.tips": "עצות לאפליקציה",
        "userInfo.tips.description": "קבל עזרה על השימוש באפליקציה.",

        "userInfo.tips.bookmarks": "כיצד להשתמש בסימניות?",
        "userInfo.tips.catalog": "כיצד להשתמש בקטלוג?",
        "userInfo.tips.people": "חדש: כיצד להשתמש באנשים?",
        "userInfo.tips.notification": "חדש: כיצד להשתמש בהודעות?",

        "userInfo.tips.catalog.desktop1": "לחץ על 'פתח' כדי לפתוח אתר בדפדפן; השתמש ב-{0} כדי להוסיף סימנייה עבורו.",
        "userInfo.tips.catalog.desktop2": "לחץ על סמל או שם האפליקציה כדי לקבל פרטים נוספים.",
        "userInfo.tips.catalog.mobile1": "השתמש ב-{0} כדי לפתוח אתר בדפדפן; השתמש ב-{1} כדי להוסיף סימנייה עבורו.",
        "userInfo.tips.catalog.mobile2": "השתמש ב-{0} כדי להתקין אפליקציה מקורית במכשיר. המשמעות של {1} היא שצריך לרשום את המכשיר על-מנת להשתמש באפליקציות אלה.",
        "userInfo.tips.catalog.mobile3": "לחץ על סמל או שם האפליקציה כדי לקבל פרטים נוספים.",

        "userInfo.tips.bookmarks.desktop1": "לחץ על כותרת האריח כדי להפעיל את האתר בדפדפן.",
        "userInfo.tips.bookmarks.desktop2": "רחף מעל לאריח כדי לראות פעולות נוספות מהתפריט '...'.",

        "userInfo.tips.bookmarks.mobile": "הקש על האריח כדי לפתוח את האתר בדפדפן שלך. לחץ והחזק לפעולות נוספות.",

        "userInfo.tips.catalog.download.phone": "הקש על הסמל {0} כדי להתקין אפליקציה מקורית במכשיר. משמעות הסמל {1} היא שיש לרשום את המכשיר כדי להשתמש באפליקציות אלה.",
        "userInfo.tips.catalog.bookmark.launch.phone": "הקש על הסמל {0} כדי לפתוח אתר בדפדפן. הקש על הסמל {1} כדי ליצור סימנייה עבורו. לפרטים נוספים, הקש על סמל או על שם האפליקציה",

        "userInfo.tips.catalog.download.tablet": "כדי להוריד אפליקציות, לחץ על לחצן ההורדה. לפרטים נוספים, לחץ על האפליקציה.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "כדי להפעיל אפליקציות, לחץ על סמל ההפעלה. כדי ליצור סימנייה עבור אפליקציות, לחץ על לחצן הסימניות",

        "userInfo.tips.people.mobile": "לחץ על {0} כדי לנווט מכל פרופיל חזרה לדף הנחיתה הראשי של חיפוש אנשים.",
        "userInfo.tips.notification.mobile": "לחץ על {0} כדי לקבל גישה להודעות. תג ההודעות יישאר פעיל עד שתבצע פעולה עבור כל אחת מההודעות או תמחק אותן.",

        "userInfo.tips.title": "עצות לאפליקציה",
        "userInfo.tips.intro": "קבל עזרה על השימוש באפליקציה.",
        "userInfo.tips.desktop": "שולחן עבודה",
        "userInfo.tips.reordering.title": "התאם אישית את הסימניות שלך!",
        "userInfo.tips.reordering.text1": "1. עבור אל 'תצוגה מותאמת אישית' באמצעות התפריט הנפתח למעלה משמאל.",
        "userInfo.tips.reordering.text2": "2. בחר 'סדר'. ",
        "userInfo.tips.reordering.text3": "3. גרור ושחרר על-מנת לשנות את סדר הסימניות. לסיום, לחץ על 'שמור'.",
        "userInfo.tips.mobile": "מכשירים ניידים",

        "userInfo.removeAccount": "הסר חשבון",
        "userInfo.account": "חשבון",
        "userInfo.profile": "פרופיל",
        "userInfo.profile.name": "שם:",
        "userInfo.profile.email": "אימייל:",
        "userInfo.profile.username": "שם משתמש:",
        "userInfo.profile.picture": "תמונת פרופיל",
        "userInfo.profile.password": "סיסמה",
        "userInfo.profile.passwordchange": "החלף",
        "userInfo.profile.passwordprompt": "נהל את הסיסמה שלך עבור מערכת החברה.",
        "userInfo.password": "סיסמה",
        "userInfo.termsofuse": "תנאי שימוש",
        "userInfo.signout": "יציאה",
        "userInfo.tryAgain": "נסה שוב",
        "userInfo.managedevicesettings": "נהל הגדרות מכשיר",
        "userInfo.notification": "הודעת דחיפה",
        "userInfo.passcode": "מזהה מגע או סיסמה",

        "appCenter.support.selfservice": "שירות עצמי",
        "appCenter.support.managedevices": "מכשירים",
        "appCenter.support.managedevicestext": "הצג את פרטי המכשיר שלך.",
        "appCenter.support.managepassword": "החלף סיסמה",
        "appCenter.support.managepasswordtext": "החלף סיסמה לחשבון החברה",
        "appCenter.support.gethelp": "קבל עזרה",
        "appCenter.support.appstips": "אפליקציות ועצות",
        "appCenter.support.appstipstext": "ראה תיאורי כלי לעזרה באפליקציה זו",
        "appCenter.support.sendReportTitle": "שלח דוח",
        "appCenter.support.sendReportDetails": "למד כיצד לשלוח אבחון אפליקציות.",
        "appCenter.support.helpdesk": "מרכז תמיכה",
        "appCenter.support.contacthelpdesk": "צור קשר עם מרכז התמיכה",
        "appCenter.reportProblems.ios.sendLogInstruction": "נער את המכשיר במקרה של שגיאה כדי לשלוח בקלות אבחון אפליקציה או לספק משוב.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "ניתן להפעיל/לכבות תכונה זו בהגדרות המכשיר.",

        // App Details Page
        "app.details.link.back": "חזרה",
        "app.details.nav.details": "פרטים",
        "app.details.nav.reviews": "חוות דעת",
        "app.details.label.description": "תיאור",
        "app.details.label.noDescription": "אין תיאור זמין",
        "app.details.label.seeFullDetails": "הצג פרטים",
        "app.details.label.removeBookmark": "הסר",
        "app.details.label.resetDektop": "איפוס",
        "app.details.label.information": "מידע",
        "app.details.label.category": "קטגוריות",
        "app.details.label.version": "גרסה",
        "app.details.label.type": "סוג",
        "app.details.label.type.SAML11": "אפליקציית אינטרנט",
        "app.details.label.type.SAML20": "אפליקציית אינטרנט",
        "app.details.label.type.WEBAPPLINK": "אפליקציית אינטרנט",
        "app.details.label.type.MDMWEB": "אפליקציית אינטרנט",
        "app.details.label.type.WSFED12": "אפליקציית אינטרנט",
        "app.details.label.type.XENAPP": "אפליקציית Xen",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix לשולחן העבודה",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "פרופיל",
        "app.details.label.type.VIEWPOOL": "Horizon לשולחן העבודה",
        "app.details.label.type.VIEWAPP": "האפליקציה Horizon",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud לשולחן העבודה",
        "app.details.label.type.DESKTONEAPPLICATION": "האפליקציה Horizon Cloud",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "אפליקציית אינטרנט",
        "app.details.label.type.PUBLIC": "אפליקציה ציבורית",
        "app.details.label.type.INTERNAL": "פנימי",
        "app.details.label.size": "גודל",
        "app.details.label.price": "מחיר",
        "app.details.label.screenshots": "צילומי מסך",
        "app.details.label.showMore": "הצג עוד",
        "app.details.label.showLess": "הצג פחות",
        "app.details.label.setAppPassword": "הגדר סיסמת אפ'",
        "app.details.label.sendFeedback": "שלח משוב",
        "app.details.label.feedbackSubject": "משוב עבור האפליקציה {0}",
        "app.details.label.support": "תמיכה",
        "app.details.label.developer": "מפתח",
        "app.details.label.email": "אימייל",
        "app.details.label.phone": "טלפון",
        "app.details.appSize": "{0}MB",
        "app.details.label.launchMessage": "ניתן להפעיל את כל האפליקציות לנייד ממסך הבית.",

        "app.details.label.requirement": "דרישה:",
        "app.details.label.packageName": "שם חבילה:",
        "app.details.thinapp.requirement": "אפליקציה זו עובדת רק במחשבי Windows שמותקן עליהם Identity Manager Desktop.",
        "app.details.viewDesktop.requirement": "שולחן עבודה זה של Horizon מחייב התקנה של {0}Horizon Client‏{1} גרסה 3.0 ואילך במחשב.",
        "app.details.viewapp.requirement": "אפליקציה מתארחת זו של Horizon מחייבת התקנה של {0}Horizon Client{1} גרסה 3.0 ואילך במחשב.",
        "app.details.xenapp.requirement": "אפליקציה זו מחייבת התקנה של {0}Citrix Receiver‏{1}.",
        "app.details.xenapp.msg.IE8OrLower": "אפליקציה זו דורשת התקנה של Citrix Receiver. הערה: לא ניתן לפתוח אפליקציה זו ב-Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "שולחן עבודה זה של Citrix דורש התקנה של {0}Citrix Receiver‏{1}.",
        "app.details.desktoneDesktop.requirement": "Horizon Cloud לשולחן העבודה מחייב התקנה של {0}Horizon Client{1} במחשב.",
        "app.details.desktoneApp.requirement": "אפליקציה זו של Horizon Cloud מחייבת התקנה של {0}Horizon Client{1} במחשב.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "אין מידע זמין",
        "app.details.noScreenshots": "אין צילומי מסך זמינים",
        "app.details.noDescription": "התיאור יגיע בקרוב.",
        "app.details.needsDeviceEnrollment": "נדרשת הרשמה של המכשיר",
        "app.details.label.addToHomeScreen": "הוסף למסך הבית",
        "app.details.action.open": "פתח",
        "app.details.action.bookmark": "צור סימנייה",
        "app.details.action.bookmarked": "מסומן",
        "app.details.action.launch": "הפעל",
        "app.details.action.setPassword": "הגדר סיסמה",
        "app.details.action.pvAppCredentials": "אישורים",
        "app.details.info.msg.missingInfo": "חלק מהמידע חסר. נסה מאוחר יותר כדי לראות את כל הפרטים.",
        "app.details.wsrequired.msg": "נדרשים Workspace Services.",
        "app.details.label.addedFavorites": "נוסף למועדפים",

        "app.rating.label": "דירוג משתמש",

        "app.settings.label.settings": "הגדרות",
        "app.settings.link.back": "חזרה",
        "app.settings.managedDevices": "מכשירים מנוהלים",
        "app.nav.tab.bookmark": "סימניות",
        "app.nav.tab.catalog": "קטלוג",
        "app.nav.tab.people": "אנשים",
        "app.nav.tab.support": "תמיכה",
        "app.nav.tab.apps": "אפליקציות",
        "app.nav.tab.settings": "הגדרות",
        "app.about.heading": "אודות Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc.‎‎‎. כל הזכויות שמורות. מוצר זה מוגן על-ידי חוקי זכויות היוצרים והקניין הרוחני בארצות הברית ובמדינות אחרות, כמו גם על-ידי אמנות בינלאומיות. מוצרי VMware מוגנים בפטנט אחד או יותר.",
        "app.about.button.label.privacyPolicy": "מדיניות פרטיות",
        "app.about.button.label.patents": "פטנט",
        "app.about.button.label.licenseAgreement": "הסכם רישיון",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/il/go/patents",
        "app.about.licenseAgreementLink": "http://www.vmware.com/il/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/il/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "מכשירים",
        "app.devices.tableColumn.deviceName": "שם מכשיר",
        "app.devices.tableColumn.userDeviceId": "מזהה מכשיר",
        "app.devices.tableColumn.lastLoginTime": "שעת כניסה אחרונה",
        "app.devices.unlinkDevice": "בטל קישור",
        "app.devices.unlinkedDevice": "בוטל קישור",
        "app.devices.emptyDeviceListMessage": "לא משויך מכשיר לחשבונך.",

        "app.thinappMultiDeviceAct.heading": "אפליקציה זו תתווסף למכשירים המאושרים. כדי להשתמש ב-'{0}' במכשירים נוספים, מצא את שם המכשיר להלן ולחץ על הלחצן 'בקשה'.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "שם מכשיר",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "סטטוס",
        "app.thinappMultiDeviceAct.button.request": "בקשה",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "נדחה",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "ממתין",
        "app.thinappMultiDeviceAct.activationState.activated": "מאושר",
        "app.thinappMultiDeviceAct.activationState.notActivated": "לא הופעל",

        "app.thinappsInPackage.button.done": "בוצע",
        "app.thinappsInPackage.button.bookmarkAll": "הגדר הכל כסימניות",
        "app.thinappsInPackage.info": "חבילת אפליקציות",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} אפליקציות",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "נמצאה התאמה {0}.",
        "app.thinappsInPackage.action.instruction": "בחר את סמל הסימנייה כי ליצור סימנייה עבור אפליקציה מסוימת או בחר בלחצן לסימון כל האפליקציות בסימנייה.",
        "app.thinappsInPackage.search.placeholder": "חיפוש בחבילה",

        "app.setAppPassword.heading": "הגדר סיסמה",
        "app.setAppPassword.instruction": "השתמש בטופס למטה כדי להגדיר סיסמה עבור אפליקציה זו. הסיסמה חייבת להכיל שלושה תווים לפחות.",
        "app.setAppPassword.label.password": "סיסמה",
        "app.setAppPassword.label.confirmPassword": "אשר סיסמה",
        "app.setAppPassword.label.generate": "צור סיסמה",
        "app.setAppPassword.error.passwordsNoMatch": "הסיסמאות לא תואמות.",
        "app.setAppPassword.msg.success": "סיסמת האפליקציה הוגדרה בהצלחה.",
        "app.setAppPassword.msg.fail": "אירעה שגיאה בעת הניסיון להגדיר את הסיסמה שלך. נסה שוב.",

        "pvapp.setAppPassword.heading": "הגדר אישורים שמורים עבור {0}",
        "pvapp.setAppPassword.instruction": "השתמש בטופס להלן כדי להגדיר אישורים שמורים עבור אפליקציה זו.",
        "pvapp.setAppPassword.label.username": "שם המשתמש",
        "pvapp.setAppPassword.label.password": "סיסמה",
        "pvapp.setAppPassword.error.userNameEmpty": "שם משתמש ריק.",
        "pvapp.setAppPassword.error.passwordEmpty": "סיסמה ריקה.",
        "pvapp.setAppPassword.msg.success": "אישורי האפליקציה הוגדרו בהצלחה.",
        "pvapp.setAppPassword.msg.fail": "אירעה שגיאה בעת הניסיון להגדיר את אישורי האפליקציה שלך. נסה שוב.",

        "app.launchPassword.heading": "בקשת סיסמה",
        "app.launchPassword.view.instruction": "נדרשת סיסמה כדי להיכנס למשאב Windows זה {0}.",
        "app.launchPassword.label.userName": "משתמש",
        "app.launchPassword.label.password": "סיסמה",
        "app.launchPassword.button.label.signin": "כניסה",

        "app.changePassword.title": "החלף סיסמה",
        "app.changePassword.enterCurrentPassword": "הזן סיסמה נוכחית",
        "app.changePassword.enterNewPassword": "הזן סיסמה חדשה",
        "app.changePassword.confirmNewPassword": "אשר סיסמה חדשה",
        "app.changePassword.error.passwordsNoMatch": "הסיסמאות החדשות לא תואמות.",
        "app.changePassword.error.requirementsNoMatch": "הסיסמה החדשה לא עומדת בדרישות.",
        "app.changePassword.success": "הסיסמה החדשה נשמרה!",
        "app.changePassword.label.email": "אימייל",
        "app.changePassword.label.phone": "טלפון",

        "app.passwordPolicy.passwordRequirements": "דרישות סיסמה",
        "app.passwordPolicy.label.currentpassword": "סיסמה נוכחית",
        "app.passwordPolicy.label.newpassword": "סיסמה חדשה",
        "app.passwordPolicy.label.confirmpassword": "אשר סיסמה חדשה",
        "app.passwordPolicy.minLength": "לפחות {0} ספרות",
        "app.passwordPolicy.leastIncludes": "כוללת לפחות:",
        "app.passwordPolicy.minLower": "{0} אות",
        "app.passwordPolicy.minUpper": "{0} אות גדולה",
        "app.passwordPolicy.minDigit": "{0} מספר",
        "app.passwordPolicy.minSpecial": "{0} תו מיוחד",

        "app.coachmarks.bookmarkTitle": "כיצד להשתמש בסימניות",
        "app.coachmarks.bookmarkMessage": "הקש כדי להפעיל אתרים, לחץ והחזק כדי לגלות עוד.",
        "app.coachmarks.catalogTitle": "כיצד להשתמש בקטלוג",
        "app.coachmarks.catalogMessage": "התקן אפליקציות או עדכן אותן, הוסף ל'סימניות' או פתח ישירות מכאן.",
        "app.coachmarks.buttonText": "הבנתי!",

        "app.logout.confirm.msg": "היציאה מ-Workspace ONE תסיים את ההפעלה הנוכחית שלך. כל האפליקציות שהורדו מהקטלוג יישארו במכשיר, אך אפליקציות חדשות לא יהיו זמינות עד שתיכנס חזרה.",
        "app.logout.title": "אזהרה",

        "app.passwordVault.banner.msg": "יש לך אפליקציות שיכולות לנצל את ההרחבה של Workspace One.",
        "app.passwordVault.banner.button.install": "התקן",
        "app.passwordVault.banner.setPreference": "תוכל לקבל אותה מאוחר יותר ב'הגדרות' - 'העדפות'.",
        "app.passwordVault.banner.donotshowagain": "אל תציג הודעה זו שוב",
        "app.passwordVault.banner.button.later": "מאוחר יותר",
        "app.passwordVault.banner.button.get": "קבל",
        "app.passwordVault.preference.title": "הרחבת Workspace ONE",
        "app.passwordVault.preference.instruction": "יש לך אפליקציות שיכולות לנצל את ההרחבה של Workspace One.",
        "app.passwordVault.preference.getextension": "קבל את ההרחבה.",
        "app.bookmarking.change.tab.title": "עדיין מארגן את הסימניות שלך?",
        "app.bookmarking.change.tab.body": "השינויים שביצעת לא יישמרו. האם ברצונך להמשיך בארגון הסימניות שלך?",
        "app.bookmarking.touch.disabled": "ניתן 'לשנות סדר' של אפליקציות בעת שימוש במשטח עקיבה או בעכבר.",
        "app.bookmarking.change.tab.exit": "לא, צא",
        "app.bookmarking.change.tab.stay": "כן, הישאר כאן",
        "app.virtual.disabled": "הושבת על-ידי מנהל המערכת",
        "app.virtual.unavailable": "אפליקציה זו אינה זמינה במכשיר זה",
        "app.virtual.not.available": "לא זמין",

        "app.notification.type.NEW_ENTITLEMENTS": "בדוק אותן",
        "app.notification.type.PASSWORD_EXPIRING": "עדכן סיסמה",
        "app.notification.action.delete": "מחק",
        "notification.new.entitlements.heading": "זכאויות חדשות",
        "notification.new.entitlements.message": "מוקצות לך {0} זכאויות חדשות",
        "app.notification.delete.header": "למחוק הודעה זו?",
        "app.notification.delete.msg": "האם אתה בטוח שברצונך למחוק הודעה זו? ניתן לבחור 'שלח לארכיון', אם תרצה לשמור אותה מאוחר יותר. ",
        "app.notification.delete.text": "מחק",
        "app.notification.keep.text": "שמור",
        "app.notification.restore.text": "שחזר",
        "app.notification.delete.toast.msg": "ההודעה נמחקה.",
        "app.notification.empty": "אתה מעודכן!",
        "app.notification.more.actions": "פעולות נוספות",
        "app.notification.archive.all": "העבר הכל לארכיון",

        "app.notification.bookmark.all.error": "לצערנו איננו יכולים להגדיר כסימניות את כל האפליקציות החדשות שלך",
        "app.notification.bookmark.all.success": "כל האפליקציות החדשות נוספו למועדפים",
        "app.notification.delete.all": "מחק הכל",
        "app.notification.see.archived": "הצג תוכן שמאוחסן בארכיון",
        "app.notification.see.all": "ראה את כל ההודעות",
        "app.notification.newApps.title": "יש לך אפליקציות חדשות!",
        "app.notification.newApps.excessIconsMessage": "ועוד {0}",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "הצג פרטים",
        "app.tooltip.clicktolaunch": "לחץ להפעלה",

        "recommendedApps.install.proceed": "המשך",
        "recommendedApps.install.title": "התקן אפליקציות מומלצות",
        "recommendedApps.install.confirm.msg": "תקבל חיוויים להמשך התקנת האפליקציות.",
        "recommendedApps.text1": "האפליקציות האלה נמצאות בשימוש נפוץ על-ידי העמיתים שלך.",
        "recommendedApps.text2": "תוכל להתקין אותן עכשיו או למצוא אותן מאוחר יותר בקטלוג שלך.",
        "recommendedApps.selectAll": "בחר הכל",
        "recommendedApps.apps": "אפליקציות",
        "recommendedApps.install": "התקן",
        "recommendedApps.skip": "דלג",

        "app.desktopapp.settings.title.account": "חשבון",
        "app.desktopapp.settings.title.devices": "מכשירים",
        "app.desktopapp.settings.title.preferences": "העדפות",

        "appCenter.peopleSearch.placeholder": "חפש אנשים",
        "app.tooltip.copyEmail": "העתק דואר אלקטרוני",
        "app.peopleSearch.emailCopied": "דואר אלקטרוני הועתק",
        "appCenter.peopleSearch.noResults": "לא נמצאו תוצאות",
        "appCenter.peopleSearch.tryNewSearch": "נסה חיפוש חדש.",
        "appCenter.peopleSearch.atLeastThreeChars": "הזן 3 תווים או יותר למעלה כדי לחפש.",
        "appCenter.searchPeople": "חפש אנשים.",
        "myapps.mobilepagetitle.people": "אנשים",
        "app.people.labels.team": "הצוות שלי",
        "app.people.labels.recent": "אחרונות",
        "app.people.labels.manager": "מנהל",
        "app.people.labels.peers": "עמיתים",
        "app.people.labels.directReports": "כפיפים ישירים",
        "app.people.labels.profile": "פרופיל",
        "app.people.labels.org": "ארגוני",
        "app.people.labels.workEmail": "אימייל בעבודה",
        "app.people.labels.workPhone": "אימייל בבית",
        "app.people.labels.alternateNumber": "טלפון חלופי",
        "app.people.labels.mobile": "נייד",
        "app.people.labels.address": "כתובת",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "מנהלים",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "מספר עובד",
        "app.people.labels.skills": "מיומנויות ",
        "app.people.labels.businessUnit": "יחידה עסקית",
        "app.people.labels.costCenter": "מרכז עלויות",
        "app.people.labels.physicalDeliveryOfficeName": "מיקום משרד",

        "hub.apps": "אפליקציות",
        "hub.notifications": "הודעות",
        "hub.notifications.welcome": "ברוכים הבאים!",
        "hub.notifications.first.time.message": "ההודעות יופיעו כאן כאשר תתחיל להשתמש ב-Hub.",
        "hub.notifications.new.apps.favorite.all": "הוסף את הכל למועדפים",
        "hub.notifications.congratulations": "ברכות!",
        "hub.notifications.empty.description1": "אין הודעות חדשות.",
        "hub.notifications.empty.description2": "תיהנה מהשטח הנוסף.",
        "hub.v2.notifications.empty.description": "התעדכנת בכל ההודעות שלך",
        "hub.v2.notifications.first.time.description": "ההודעות יופיעו כאן כאשר תתחיל להשתמש ב-Hub.",
        "hub.notifications.empty.description.archived": "אין הודעות מאוחסנות בארכיון.",
        "hub.notifications.priority": "עדיפות ראשונה",
        "hub.notifications.today": "היום",
        "hub.notifications.yesterday": "אתמול",
        "hub.notifications.lastWeek": "בשבוע שעבר",
        "hub.notifications.lastMonth": "בחודש שעבר",
        "hub.notifications.older": "ישן יותר",
        "hub.notifications.archived.label": "אוכסנו בארכיון",
        "hub.notifications.action.success": "הצלחת!",
        "hub.notifications.action.failure": "מצטערים, נראה שאירעה שגיאה בביצוע הפעולה",
        "hub.notifications.moreDetails": "פרטים נוספים",
        "hub.notifications.dialog.action.completed": "הושלם",
        "hub.notifications.dialog.action.needed": "ממתין",
        "hub.notifications.dialog.action.all.notifications": "כל ההודעות",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "חפש אפליקציות",
        "hub.apps.favorites": "מועדפים",
        "hub.apps.newApps": "חדש",
        "hub.apps.recommended": "מומלץ",
        "hub.apps.categories": "קטגוריות",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "וואו, יש שטח רב כאן.",
        "hub.apps.no.apps.msg2": "פנה למנהל המערכת כדי לקבל אפליקציות עבודה.",
        "hub.apps.search.in.category": "{0} תוצאות בקטגוריה:",
        "hub.apps.search.in.app": "{0} תוצאות בשם ובתיאור האפליקציה",
        "hub.apps.search.header": "תוצאות סה\"כ",
        "hub.apps.search.no.result.header": "אין תוצאות.",
        "hub.apps.search.no.result.msg": "נסה שוב תוך שימוש במונח אחר.",
        "hub.apps.searchpeople.no.result.msg": "נסה שוב תוך שימוש בשם אחר.",
        "hub.apps.type.web": "רשת",
        "hub.apps.type.Virtual": "רשת",
        "hub.apps.type.application": "אפליקציה",
        "hub.apps.type.anyApp": "AnyApp",
        "hub.people": "אנשים",
        "hub.people.search.text": "חפש אנשים",
        "hub.people.labels.mypeers": "העמיתים שלי",
        "hub.people.labels.directreports": "כפיפים ישירים",
        "hub.people.labels.manager": "המנהל שלי",
        "hub.people.labels.organization": "ארגון",
        "hub.people.search.result": "תוצאות",
        "hub.app.install.prompt.title": "האם ברצונך להתקין",

        "hub.actionsheet.label.viewDetails": "הצג פרטים",
        "hub.actionsheet.label.removeFavorites": "הסר ממועדפים",
        "hub.actionsheet.label.addFavorites": "הוסף למועדפים",
        "hub.password.done": "בוצע",

        "hub.placeholder.changepassword.username": "שם משתמש",
        "hub.placeholder.changepassword.password": "סיסמה",
        "hub.placeholder.changepassword.confirmpassword": "אשר סיסמה",

        "hub.tunnel.text.line1": "Tunnel נדרשת לגישה ",
        "hub.tunnel.text.line2": "תתבצע הורדה אוטומטית של האפליקציה Tunnel יחד עם האפליקציה שלך.",

        "hub.promotions.banner.category.title": "פריטים מרכזיים של הקטגוריה ",
        "hub.promotions.banner.category.open": "פתח",
        "hub.promotions.banner.app.get": "קבל",
        "hub.promotions.banner.disabled": "הושבת על-ידי מנהל המערכת",
        "hub.require.app.management": "מנוהל",
        "hub.app.installing.alert.mobile.message": "האפליקציה {0} בהתקנה, בדוק את מסך הבית של הטלפון לקבלת עדכונים.",
        "hub.app.installing.alert.desktop.message": "האפליקציה {0} בהתקנה, אנא בדוק את מפעיל האפליקציות של שולחן העבודה לקבלת עדכונים.",

        "hub.nav.label.apps": "אפליקציות",
        "hub.nav.label.people": "אנשים",
        "hub.nav.label.notification": "הודעות",
        "hub.nav.label.settings": "הגדרות",
        "hub.nav.label.account": "חשבון",
        "hub.nav.label.signout": "יציאה",
        "hub.userInfo.adminConsole": "מסוף בקרת מנהל",
        "hub.userInfo.signout": "יציאה",
        "hub.userInfo.settings": "הגדרות",
        "hub.userInfo.account": "חשבון",
        "hub.userInfo.devices": "מכשירים",
        "hub.userInfo.whatsnew": "מה חדש",
        "hub.userInfo.about": "מה לגבי",
        "hub.download.ios": "Hub ל-iOS",
        "hub.download.android": "Hub ל-Android",
        "hub.download.mac": "Hub ל-Mac",
        "hub.download.windows": "Hub ל-Windows",
        "hub.download.subtitle.mobile": "קבל גישה להודעות, לדף הבית ועוד במקום אחד.",
        "hub.download.subtitle.desktop": "קבל הודעות בשולחן העבודה והפעל ישירות מתחנת העגינה שלך.",
        "hub.preferences.title": "העדפות",
        "hub.preferences.horizon.subtitle": "אפליקציות מרוחקות של Horizon",
        "hub.preferences.launch.question": "כיצד תרצה להפעיל את האפליקציות המרוחקות של Horizon?",
        "hub.about.title": "אודות VMware Intelligent Hub",
        "hub.apps.allApps": "כל האפליקציות",
        "hub.apps.configure.favorites.msg": "הוסף את האפליקציות המועדפות עליך כאן לגישה מהירה יותר",
        "hub.apps.configure.favorites": "קבע תצורה",
        "hub.apps.edit.favorites": "ערוך",

        "hub.contextDialog.label.removeFavorites": "הסר ממועדפים",
        "hub.contextDialog.label.addFavorites": "הוסף למועדפים",
        "hub.contextDialog.label.viewDetails": "הצג פרטים",
        "hub.apps.edit.favorites.header": "מצב עריכה של מועדפים",
        "hub.apps.edit.favorites.prompt": "גרור ושחרר כדי לשנות את הסדר.",
        "hub.apps.edit.favorites.save": "שמור",
        "hub.apps.edit.favorites.cancel": "בטל שינויים",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "עדכנת את הסדר, בטל או שמור לפני היציאה",
        "hub.apps.edit.favorites.savecustomordering": "שומר את הסדר המותאם אישית. כדי להימנע מאובדן התוצאות, אל תנווט החוצה",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "שינוי הסדר אינו זמין במסכי מגע.",
        "hub.apps.edit.favorites.notify.success": "שינוי הסדר של המועדפים נשמר!",
        "hub.apps.edit.favorites.notify.error": "אירעה שגיאה, לא ניתן לשמור את שינוי הסדר, נסה מאוחר יותר",

        "hub.nav.label.settings.settings": "הגדרות",
        "hub.nav.label.settings.account": "חשבון",
        "hub.nav.label.settings.about": "אודות",
        "hub.nav.label.settings.devices": "מכשירים",
        "hub.nav.label.settings.preferences": "העדפות",
        "hub.nav.label.settings.whatsnew": "מה חדש",

        "hub.apps.detail.back": "חזרה לאפליקציות",
        "hub.people.detail.back": "חזרה לאנשים",
        "hub.people.notifications.back": "חזרה להודעות",

        "hub.nav.label.notifications.filter": "מסנן",
        "hub.nav.label.notifications.all.notifications": "כל ההודעות",
        "hub.nav.label.notifications.action.needed": "ממתין",
        "hub.nav.label.notifications.completed": "הושלם",
        "hub.long.card.description": "תיאור",
        "hub.long.card.Comment": "הערה",
        "hub.long.card.Comment.placeholder": "הוסף הערה",

        "hub.appLaunch.open": "פתח",
        "hub.appLaunch.cancel": "ביטול"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "および",
        "fullname": "{1} {0}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "インストール",
        "app.banner.open": "開く",
        "app.promotion.banner.donotshowagain": "次回から表示しません。後で [設定 - 関連情報] から入手します。",
        "app.promotion.banner.open": "アプリで開く",
        "app.promotion.banner.download": "アプリをダウンロード",
        "app.promotion.banner.message": "アプリでのエクスペリエンスを改善。",
        "horizonDesktopNotDetected": "このアプリケーションを開くには、VMware Identity Manager Desktop がこのコンピュータにインストールされている必要があります。まだインストールしていない場合は、<a target='_blank' href='{0}'>VMware Identity Manager Desktop をインストール</a>してください。",
        "viewAppsTooltip": "この Horizon ホスト型アプリケーションを使用するには、{0}Horizon Client{1} 3.0 以降をコンピュータにインストールする必要があります。",
        "desktoneDesktopTooltip": "この Horizon Cloud デスクトップを使用するには {0}Horizon Client{1} をコンピュータにインストールする必要があります。",
        "desktoneApplicationTooltip": "この Horizon Cloud アプリケーションを使用するには {0}Horizon Client{1} をコンピュータにインストールする必要があります。",
        "xenAppsReceiverNotDetected": "このアプリケーションを開くには、コンピュータに Citrix Receiver がインストールされている必要があります。まだインストールしていない場合は、<a target='_blank' href='{0}'>Citrix Receiver をインストール</a>してください。",
        "button.save": "保存",
        "button.update": "更新",
        "button.openHorizonView": "Horizon Client を開く",
        "myapps.launch.openApp": "{0} を開く",
        "button.openApp": "アプリを開く",
        "button.clear": "消去",
        "button.close": "閉じる",
        "button.cancel": "キャンセル",
        "button.download": "ダウンロード",
        "myapps.launch.title.launch": "起動",
        "myapps.launch.title": "アプリケーションの起動",
        "myapps.launch.view.openWith": "プログラムから開く",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "ブラウザ",
        "myapps.launch.view.preferredClient.isDefault": "(デフォルト)",
        "myapps.launch.view.selectPreferredLaunchClient": "Horizon デスクトップとアプリケーションを起動する方法を選択してください",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Horizon リモート アプリケーション",
        "myapps.launch.view.selectPreferredLaunchClientText": "Horizon リモート アプリケーションは、ブラウザで開くよりも Horizon Client で開いたほうがエクスペリエンスが向上します。",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Horizon リモート アプリケーションを起動する方法を選択してください。",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "起動時のデフォルト設定を選択...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "これで、デバイスから Horizon デスクトップを開いた際のデフォルトの起動時の動作を決定します。デフォルトで Horizon Client を起動させるためには、Horizon Client がインストールされている必要があります。まだインストールしていない場合は、<a target='_blank' href='{0}'>Horizon Client をインストール</a>してください。",
        "myapps.launch.view.unknownClientType": "Horizon Client を開くクライアント タイプが不明です。",
        "myapps.launch.view.openWithView": "Horizon Client で開く",
        "myapps.launch.view.openWithBrowser": "ブラウザで開く",

        "myapps.launch.view.preferredClient.byBrowser.description": "ブラウザを選択すると、新しいブラウザ ウィンドウでデスクトップまたはアプリケーションが開きます。",
        "myapps.launch.view.preferredClient.byViewClient.description": "このアイテムを使用するには Horizon Client 3.0 以降が必要です。まだインストールしていない場合は、<a target='_blank' href='{0}'>Horizon Client をインストール</a>してください。",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "この設定は基本設定でいつでも変更することができます。",
        "myapps.launch.view.preferredClient.saveSuccess": "選択した基本設定が正常に保存されました。",
        "myapps.launch.msg.launching.desktop": "デスクトップ <b>{0}</b> を起動しています.....",
        "myapps.launch.msg.launching.application": "アプリケーション <b>{0}</b> を起動しています.....",
        "myapps.noAppsMsg": "アプリがまだ追加されていません。{0} を開き、アプリを追加してください",
        "myapps.noFavAppsMsg": "ブックマークしたアプリはありません",
        "myapps.welcomeMsg": "こんにちは、{0} さん。あなたのアプリです。",
        "myapps.bookmarks.empty.message": "頻繁に使用するアプリケーションをブックマークに登録してすばやくアクセスします。",
        "myapps.bookmarks.empty.hidecatalog.message": "現在、使用できるアプリがありません。",
        "myapps.bookmarks.empty.addbookmarks": "ブックマークを追加",
        "myapps.bookmarks.organize.title": "ブックマークを整理",
        "myapps.bookmarks.organize.addbookmarks": "ブックマークを追加",
        "myapps.bookmarks.organize.batchremove": "削除",

        "myapps.mobilepagetitle.apps": "アプリ",
        "myapps.mobilepagetitle.details": "詳細",
        "myapps.mobilepagetitle.support": "サポート",
        "myapps.mobilepagetitle.settings": "設定",
        "myapps.mobilepagetitle.recommendedapps": "推奨されるアプリ",
        "myapps.mobilepagetitle.notification": "通知",
        "myapps.mobilepagetitle.archived": "アーカイブ済み",
        "myapps.mobilepagetitle.notification.newapps": "新しいアプリ",

        "myapps.dialog.openApp": "開く",
        "myapps.dialog.openAppWithViewClient": "クライアントから",
        "myapps.dialog.openAppWithBrowser": "ブラウザで開く",

        "myapps.launch.passwordvault.installExtension.description": "このアプリケーションは、Password Vault ブラウザ拡張機能を使用できます。まだインストールしていない場合は、<a target='_blank' href='{0}'>拡張機能をインストール</a>してください。",

        "deviceStatus.networkLost": "接続が失われました。再接続しています…",
        "deviceStatus.networkRestored": "ネットワーク接続が復元しました",
        "api.session.expired.retry": "セッションの期限が切れました。更新しようとしています...",
        "api.entitlements.reload": "ビューを更新してカタログのアプリを更新します。",
        "api.security.header.invalid.relogin": "セキュリティ ヘッダーの検証に失敗しました。ログアウトしています。",
        "api.server.load.error": "通常よりも大きい負荷が発生しています。後で再試行してください。",
        "api.updateApps": "リストを更新しています...",
        "api.error": "エラーが発生しました。再試行してください。",
        "installation.error": "ネイティブ アプリは一時的に利用できません",
        "service.under.maintenance.error": "Workspace ONE は一時的にメンテナンスモードになっています。アプリを起動することはできますが、一部の機能が使えない可能性があります。",
        "api.timeout": "接続がタイムアウトしました。もう一度お試しください。",
        "favoriteStatus.favorite": "お気に入り登録",
        "favoriteStatus.unfavorite": "お気に入り解除",
        "favoriteStatus.offlineFavoriteMessage": "オフライン中にアプリをブックマークすることはできません。再接続してから再試行してください",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "オフライン中にアプリからブックマークを削除することはできません。再接続してから再試行してください",
        "error.failToFavoriteApp": "ブックマークのステータス更新に失敗しました",
        "error.failedToResetApp": "アプリのリセットに失敗しました",
        "error.failToHideApp": "アプリの削除に失敗しました。",
        "error.failToShowApp": "ランチャーへのアプリ追加に失敗しました",
        "error.failedToBookmarkApp": "アプリのブックマークに失敗しました",
        "error.failedToLaunchApp": "アプリのオープンに失敗しました",
        "error.failedToRemoveAccount": "アカウントの削除に失敗しました。しばらくしてから再試行してください",
        "installStatus.enrollDevice": "企業データを保護するために {0} を使用するには Workspace Services のアクティベーションが必要です",
        "installStatus.enrollDevice.learnMore": "さらに詳しく",
        "installStatus.offlineInstallMessage": "オフライン中にインストール要求を行うことはできません。再接続してから再試行してください",
        "installStatus.activated": "アクティブ化済み",
        "installStatus.notActivated": "アクティブ化されていません",
        "installStatus.request": "リクエスト",
        "installStatus.update": "更新",
        "installStatus.processing": "処理中",
        "installStatus.installFailedMessage": "アプリ {0} のインストール中に問題が発生しました。再試行してください。問題が解決しない場合は、貴社 IT 管理者までお問い合わせください",
        "installStatus.unenrolledDevice": "このアプリは利用できなくなりました。[OK] をクリックし、リストを更新してください。",
        "installMessage.continueInstall": "以前このアプリをインストールしようとしました。",
        "installMessage.proceedToInstall": "続行するには、クリックしてください。",
        "installMessage.installingOnDevice": "デバイスにインストールしています...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Workspace Services を有効にする",
        "app.adaptivemanagement.ws1servicessubtitle": "アプリをインストールする前に Workspace Services を有効にする必要があります。自動的に以下の項目が可能になります。",
        "app.adaptivemanagement.valueproposition1": "すべての企業リソースの直接インストール。",
        "app.adaptivemanagement.valueproposition2": "企業ネットワークへの安全なアクセス。",
        "app.adaptivemanagement.valueproposition3": "すべてのデバイス上の同期されたアプリとコンテンツの受信。",
        "app.adaptivemanagement.valueproposition4": "生産性向上のために改善されたアプリのエクスペリエンスの使用。",
        "app.adaptivemanagement.privacylink": "プライバシー",

        "app.tunnel.continue": "続行",
        "app.tunnel.text.line1": "アクセスするには VMware Tunnel アプリが必要です",
        "app.tunnel.text.line2": "Tunnel アプリは他のアプリと一緒に自動的にダウンロードされます。",
        "app.tunnel.header": "VMware Tunnel が必要です",
        "app.tunnel.message": "このアプリを使用するには、VMware Tunnel をインストールし、実行している必要があります。",
        "recommendedApps.tunnel.text.line1": "アクセスするには VMware Tunnel アプリが必要です",
        "recommendedApps.tunnel.text.line2": "Tunnel アプリは他のアプリと一緒に自動的にダウンロードされます。",
        "app.tunnel.installHelpText": "アプリが自動的にインストールを開始しない場合は、次の手順に従ってアプリを有効にしてください",
        "app.tunnel.installStep1": "手順 1: {0} アプリのインストール",
        "app.tunnel.installStep2": "手順 2: {0} アプリのインストール",

        "requestFailed": "リクエストに失敗しました",
        "changeOccurred": "変更が加えられました",
        "requestSuccessful": "要求に成功しました",
        "accept": "承諾する",
        "decline": "同意しない",
        "termsOfUse": "利用規約",
        "beforeInstallation": "インストールの前に",
        "resetDesktopStatus.offlineMessage": "オフライン中にデスクトップをリセットすることはできません。再接続してから再試行してください",
        "resetDesktop.sucess": "デスクトップは正常にリセットされました",
        "appCenter.someAppsMissingMessage": "現段階でアプリをすべてロードすることができませんでした",
        "appCenter.register.device": "デバイスに関する一部の情報を更新する必要があります。Workspace ONE の操作を続行するには、[更新] を押します。",
        "appCenter.mdm.device.error": "Workspace ONE にアクセスできなくなりました。",
        "appCenter.mdm.device.error.contact": "アカウントの詳細については、貴社管理者までお問い合わせください",
        "appCenter.mdm.device.poll.error": "現時点ではワークスペースのビルドを完了できません。再試行するか、貴社管理者までお問い合わせください。",
        "appCenter.device.status.notRegistered": "デバイスが登録されていません",
        "appCenter.device.status.blackListed": "このデバイスはブラックリスト設定されています",
        "appCenter.device.status.deviceInputError": "このデバイスは無効です。貴社 IT 管理者までお問い合わせください",
        "appCenter.device.status.unknownError": "不明なエラーが発生しました",

        "appCenter.device.register": "デバイスを登録する",
        "appCenter.device.moreDetails": "さらに詳しく",
        "appCenter.device.unEnrollWarningTitle": "アカウントを削除しますか?",
        "appCenter.device.mdmUnEnrollMessage": "アカウントを削除すると、会社のリソースへのアクセスが禁止され、このデバイスの業務アプリが削除される可能性があります。",
        "appCenter.device.getDeviceEnrollmentStatus": "追加情報の取得",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "継続しますか?",
        "appCenter.device.remove": "削除",
        "appCenter.device.keep": "保持",
        "appCenter.device.disableWorkspaceMessage": "アカウントを削除すると、Workspace ONE アプリケーションを通じて与えられたアクセス権限が取り消されます。スプリングボードにダウンロードしたアプリはインストールされたまま残りますが、アクセスできなくなる場合があります。続行しますか?",
        "appCenter.noAppsMsg": "現在利用できるアプリはありません",
        "appCenter.vppInviteTitle": "管理対象の配布登録",
        "appCenter.appInstallConfirmPromptTitle": "インストールを確認する",
        "appCenter.mdmAppRequestConfirmPromptTitle": "承認が必要なもの:",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "要求は以前に拒否されました",
        "appCenter.mdmAppRequestConfirmPromptMessage": "アクセスしようとしているアプリケーションは管理者の承認が必要です",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "このアプリケーションについての要求を行いましたが、その要求は拒否されました。もう一度要求しますか",
        "appCenter.acceptInvite": "招待を受理する",
        "appCenter.install": "インストール",
        "appCenter.proceed": "Workspace Services を有効にする",
        "appCenter.cancel": "キャンセル",
        "appCenter.confirm": "確認",
        "appCenter.searchApps": "アプリを検索します。",
        "appCenter.welcomeMsg": "どんなデバイスからでも、場所を問わずに新しいアプリをインストールできます。",
        "appCenter.done": "完了",
        "appCenter.nav.privacyPage": "プライバシー画面",
        "appCenter.nav.catalog": "カタログ",
        "appCenter.nav.myApps": "マイ アプリ",
        "appCenter.nav.favorites": "お気に入り",
        "appCenter.nav.categories": "カテゴリ",
        "appCenter.nav.filterby": "フィルタ基準",
        "appCenter.nav.show": "表示",
        "appCenter.nav.settings": "設定",
        "appCenter.nav.sortBy": "並べ替え基準",
        "appCenter.nav.sortBy.alpha": "昇順に並べ替え",
        "appCenter.nav.sortBy.inverseAlpha": "降順に並べ替え",
        "appCenter.nav.sortBy.customView": "カスタム ビュー",
        "appCenter.nav.arrange": "整理",
        "appCenter.nav.arrange.saved": "カスタム ビューが保存されました。",
        "appCenter.nav.arrange.tooltip": "Windows でのみ利用可能です。",
        "appCenter.nav.arrange.saving": "保存しています...",
        "appCenter.nav.arrange.error": "カスタム ビューを保存できません",
        "appCenter.nav.filter": "フィルタ",
        "appCenter.installFailedTitle": "アプリ インストールの問題",
        "appCenter.uccConflict": "現在のセッションで問題が発生しました。再ログインしてください。",

        "appCenter.search.placeholder": "検索",
        "appCenter.search.noResults": "検索結果はありません。",

        "appCenter.action.open": "開く",
        "appCenter.action.install": "インストール",
        "appCenter.action.installing": "インストール中",
        "appCenter.action.installed": "インストール済み",
        "appCenter.action.reinstall": "再インストール",
        "appCenter.action.add": "追加",
        "appCenter.action.added": "追加済み",
        "appCenter.action.processing": "処理中",
        "appCenter.action.update": "更新",
        "appCenter.action.request": "リクエスト",
        "appCenter.action.pending": "保留中",
        "appCenter.action.view": "閲覧する",
        "appCenter.action.favorite": "お気に入り登録",
        "appCenter.action.unfavorite": "お気に入り解除",

        "appCenter.internalApp.installtionModalTitle": "アプリのインストール手順",
        "appCenter.internalApp.installationStepTitle": "このアプリを開くには、インストール後以下の手順に従ってください",
        "appCenter.internalApp.step1": "iOS ホーム画面から｢設定｣を起動します",
        "appCenter.internalApp.step2": "｢一般｣ をタップします",
        "appCenter.internalApp.step3": "｢プロファイルとデバイス管理｣ をタップします",
        "appCenter.internalApp.step4": "｢エンタープライズ App｣ の下に表示されるアプリ開発者名をタップします",
        "appCenter.internalApp.step5": "アプリを ｢検証｣ または ｢信頼｣ します",
        "appCenter.internalApp.watchTutorial": "手順ごとに進めるチュートリアルを見ます",

        "appCenter.type.web": "Web サイト",
        "appCenter.type.native": "ネイティブ アプリケーション",
        "appCenter.type.native.platform": "{0} アプリ",
        "appCenter.type.virtual": "仮想アプリ",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "アプリ パッケージ",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "カテゴリ",
        "myapp.nav.favorites": "お気に入り",
        "myapp.nav.allApps": "すべてのアプリ",
        "myapp.nav.recommendedApps": "推奨",
        "myapp.nav.newlyEntitledApps": "新規",
        "myapp.nav.webApps": "Web サイト",
        "myapp.nav.mobileApps": "モバイル アプリ",
        "myapp.nav.macApps": "Mac アプリ",
        "myapp.nav.windowsApps": "Windows アプリ",
        "myapp.nav.virtualApps": "仮想",
        "myapp.label.new": "新規",
        "myapp.nav.filterby": "フィルタ基準",
        "myapp.nav.mobile.filter.pagetitle": "カテゴリ別フィルタ",
        "appCenter.nav.browseBy": "ウェブ閲覧に使用するアプリ",

        "appCenter.catalog.empty": "まだアプリが割り当てられていないようです。まもなく割り当てられますので、後でご確認ください。",

        "userInfo.adminConsole": "管理コンソール",
        "userInfo.settings": "設定",
        "userInfo.notifications": "通知",
        "userInfo.support": "サポート",
        "userInfo.preferences": "基本設定",
        "userInfo.about": "バージョン情報",
        "userInfo.devices": "デバイス",
        "userInfo.settings.promo.title": "Workspace ONE アプリをダウンロード",
        "userInfo.settings.promo.message": "Workspace ONE によってアプリのエクスペリエンスが向上します。いますぐ試してみますか?",

        "userInfo.tips": "アプリのヒント",
        "userInfo.tips.description": "アプリの使用方法についてのヒントを表示します。",

        "userInfo.tips.bookmarks": "ブックマークの使用方法",
        "userInfo.tips.catalog": "カタログの使用方法",
        "userInfo.tips.people": "新規: ユーザーの使用方法",
        "userInfo.tips.notification": "新規: 通知の使用方法",

        "userInfo.tips.catalog.desktop1": "[開く] をクリックして Web サイトをブラウザで起動し、{0} を使用してブックマークします。",
        "userInfo.tips.catalog.desktop2": "アプリのアイコンまたは名前をクリックすると、詳細が表示されます。",
        "userInfo.tips.catalog.mobile1": "{0} を使用して Web サイトをブラウザで開き、{1} を使用してブックマークします。",
        "userInfo.tips.catalog.mobile2": "{0} を使用して、ネイティブ アプリケーションをデバイスにインストールします。{1} は、端末登録が必要なアプリを示します。",
        "userInfo.tips.catalog.mobile3": "アプリのアイコンまたは名前をタップすると、詳細が表示されます。",

        "userInfo.tips.bookmarks.desktop1": "タイルをクリックして、Web サイトをブラウザで起動します。",
        "userInfo.tips.bookmarks.desktop2": "タイルにカーソルを当てると、「...」メニューからアクションがさらに表示されます。",

        "userInfo.tips.bookmarks.mobile": "タイルをタップして Web サイトをブラウザで開きます。タイルを押したままにすると、実行可能なアクションが表示されます。",

        "userInfo.tips.catalog.download.phone": "{0} アイコンをタップして、デバイスにネイティブ アプリをインストールします。{1} は、端末登録が必要なアプリを示します。",
        "userInfo.tips.catalog.bookmark.launch.phone": "{0} アイコンをタップして Web サイトをブラウザで開き、{1} アイコンをタップしてブックマークします。アプリのアイコンまたは名前をタップすると詳細が表示されます",

        "userInfo.tips.catalog.download.tablet": "ダウンロード ボタンをクリックしてアプリをダウンロードします。アプリをクリックすると詳細が表示されます",
        "userInfo.tips.catalog.bookmark.launch.tablet": "起動ボタンをクリックしてアプリを起動し、ブックマーク ボタンをクリックしてアプリをブックマークします",

        "userInfo.tips.people.mobile": "{0} をクリックして、プロファイルからメインのユーザー検索トップページに戻ります。",
        "userInfo.tips.notification.mobile": "{0} をクリックして通知にアクセスします。すべての通知を却下するか受け入れるまで、通知のバッジはアクティブのままです。",

        "userInfo.tips.title": "アプリのヒント",
        "userInfo.tips.intro": "アプリの使用方法についてのヒントを表示します。",
        "userInfo.tips.desktop": "デスクトップ",
        "userInfo.tips.reordering.title": "ブックマークをカスタマイズします。",
        "userInfo.tips.reordering.text1": "1. 右上のドロップダウン メニューを使用して、カスタム ビューに移動します。",
        "userInfo.tips.reordering.text2": "2. [整理] を選択します。 ",
        "userInfo.tips.reordering.text3": "3. ドラッグ アンド ドロップしてブックマークを再整理します。終了したら、[保存] をクリックします。",
        "userInfo.tips.mobile": "モバイル デバイス",

        "userInfo.removeAccount": "アカウントを削除",
        "userInfo.account": "アカウント",
        "userInfo.profile": "プロファイル",
        "userInfo.profile.name": "名前:",
        "userInfo.profile.email": "E メール:",
        "userInfo.profile.username": "ユーザー名:",
        "userInfo.profile.picture": "プロファイルの画像",
        "userInfo.profile.password": "パスワード",
        "userInfo.profile.passwordchange": "変更",
        "userInfo.profile.passwordprompt": "会社システムのパスワードを管理します。",
        "userInfo.password": "パスワード",
        "userInfo.termsofuse": "利用規約",
        "userInfo.signout": "ログアウト",
        "userInfo.tryAgain": "再試行",
        "userInfo.managedevicesettings": "デバイス設定を管理",
        "userInfo.notification": "プッシュ通知",
        "userInfo.passcode": "Touch ID またはパスコード",

        "appCenter.support.selfservice": "セルフ サービス",
        "appCenter.support.managedevices": "デバイス",
        "appCenter.support.managedevicestext": "デバイス情報を表示します。",
        "appCenter.support.managepassword": "パスワード変更",
        "appCenter.support.managepasswordtext": "会社アカウントのパスワードを変更",
        "appCenter.support.gethelp": "ヘルプを表示",
        "appCenter.support.appstips": "アプリとヒント",
        "appCenter.support.appstipstext": "このアプリにヘルプのツールチップを表示",
        "appCenter.support.sendReportTitle": "レポートを送信",
        "appCenter.support.sendReportDetails": "アプリの診断情報を送信する方法",
        "appCenter.support.helpdesk": "ヘルプ デスク",
        "appCenter.support.contacthelpdesk": "ヘルプ デスクに問い合わせ",
        "appCenter.reportProblems.ios.sendLogInstruction": "エラーが発生した場合は、デバイスをシェイクして簡単にアプリの診断情報を送信するか、フィードバックを提供してください。",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "この機能はデバイスの設定でオンまたはオフにすることができます。",

        // App Details Page
        "app.details.link.back": "戻る",
        "app.details.nav.details": "詳細",
        "app.details.nav.reviews": "レビュー",
        "app.details.label.description": "説明",
        "app.details.label.noDescription": "利用できる説明はありません",
        "app.details.label.seeFullDetails": "詳細を表示",
        "app.details.label.removeBookmark": "削除",
        "app.details.label.resetDektop": "リセット",
        "app.details.label.information": "情報",
        "app.details.label.category": "カテゴリ",
        "app.details.label.version": "バージョン",
        "app.details.label.type": "タイプ",
        "app.details.label.type.SAML11": "Web アプリ",
        "app.details.label.type.SAML20": "Web アプリ",
        "app.details.label.type.WEBAPPLINK": "Web アプリ",
        "app.details.label.type.MDMWEB": "Web アプリ",
        "app.details.label.type.WSFED12": "Web アプリ",
        "app.details.label.type.XENAPP": "Xen アプリ",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix デスクトップ",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "プロファイル",
        "app.details.label.type.VIEWPOOL": "Horizon デスクトップ",
        "app.details.label.type.VIEWAPP": "Horizon アプリ",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud デスクトップ",
        "app.details.label.type.DESKTONEAPPLICATION": "Horizon Cloud アプリケーション",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Web アプリ",
        "app.details.label.type.PUBLIC": "公開されているアプリ",
        "app.details.label.type.INTERNAL": "社内",
        "app.details.label.size": "サイズ",
        "app.details.label.price": "価格",
        "app.details.label.screenshots": "スクリーンショット",
        "app.details.label.showMore": "さらに表示",
        "app.details.label.showLess": "簡易表示",
        "app.details.label.setAppPassword": "パスワードを設定",
        "app.details.label.sendFeedback": "フィードバックを送信",
        "app.details.label.feedbackSubject": "アプリ {0} のフィードバック",
        "app.details.label.support": "サポート",
        "app.details.label.developer": "開発者",
        "app.details.label.email": "E メール",
        "app.details.label.phone": "電話番号",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "ホーム画面からすべてのモバイル アプリを起動できます。",

        "app.details.label.requirement": "要件",
        "app.details.label.packageName": "パッケージ名:",
        "app.details.thinapp.requirement": "このアプリケーションは Identity Manager Desktop がインストールされている Windows コンピュータ上でのみ作動します。",
        "app.details.viewDesktop.requirement": "この Horizon デスクトップを使用するには {0}Horizon Client{1} 3.0 以降をコンピュータにインストールする必要があります。",
        "app.details.viewapp.requirement": "この Horizon ホスト型アプリケーションを使用するには、{0}Horizon Client{1} 3.0 以降をコンピュータにインストールする必要があります。",
        "app.details.xenapp.requirement": "このアプリケーションを使用するには {0}Citrix Receiver{1} をインストールする必要があります。",
        "app.details.xenapp.msg.IE8OrLower": "このアプリケーションを使用するには Citrix Receiver をインストールする必要があります。注: このアプリケーションを Internet Explorer 8 で開くことはできません。",
        "app.details.xenappsDeliveryGroup.requirement": "この Citrix デスクトップを使用するには {0}Citrix Receiver{1} をインストールする必要があります。",
        "app.details.desktoneDesktop.requirement": "この Horizon Cloud デスクトップを使用するには {0}Horizon Client{1} をコンピュータにインストールする必要があります。",
        "app.details.desktoneApp.requirement": "この Horizon Cloud アプリケーションを使用するには {0}Horizon Client{1} をコンピュータにインストールする必要があります。",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "利用できる情報はありません",
        "app.details.noScreenshots": "利用できるスクリーンショットはありません",
        "app.details.noDescription": "説明はまもなく利用可能になります。",
        "app.details.needsDeviceEnrollment": "デバイスの加入が必要です",
        "app.details.label.addToHomeScreen": "ホーム画面に追加",
        "app.details.action.open": "開く",
        "app.details.action.bookmark": "ブックマーク",
        "app.details.action.bookmarked": "ブックマーク済み",
        "app.details.action.launch": "起動",
        "app.details.action.setPassword": "パスワードを設定",
        "app.details.action.pvAppCredentials": "資格情報",
        "app.details.info.msg.missingInfo": "情報が不足しています。後でもう一度やり直して完全な詳細を確認してください。",
        "app.details.wsrequired.msg": "Workspace Services が必要です。",
        "app.details.label.addedFavorites": "お気に入りに追加",

        "app.rating.label": "ユーザー評価",

        "app.settings.label.settings": "設定",
        "app.settings.link.back": "戻る",
        "app.settings.managedDevices": "管理デバイス",
        "app.nav.tab.bookmark": "ブックマーク",
        "app.nav.tab.catalog": "カタログ",
        "app.nav.tab.people": "ユーザー",
        "app.nav.tab.support": "サポート",
        "app.nav.tab.apps": "アプリ",
        "app.nav.tab.settings": "設定",
        "app.about.heading": "Workspace ONE のバージョン情報",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc. All rights reserved. 本製品は、米国および他国の著作権法と知的財産法ならびに国際条約により保護されています。VMware 製品は、http://www.vmware.com/go/patents のリストに表示されている 1 件または複数の特許対象です。",
        "app.about.button.label.privacyPolicy": "プライバシー ポリシー",
        "app.about.button.label.patents": "特許情報",
        "app.about.button.label.licenseAgreement": "ライセンス同意書",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-jp",
        "app.about.licenseAgreementLink": "http://www.vmware.com/jp/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/jp/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "デバイス",
        "app.devices.tableColumn.deviceName": "デバイス名",
        "app.devices.tableColumn.userDeviceId": "デバイス ID",
        "app.devices.tableColumn.lastLoginTime": "最終ログイン時刻",
        "app.devices.unlinkDevice": "リンク解除",
        "app.devices.unlinkedDevice": "リンク解除済み",
        "app.devices.emptyDeviceListMessage": "アカウントに関連付けられたデバイスがありません。",

        "app.thinappMultiDeviceAct.heading": "このアプリケーションは承認されたデバイスに追加されます。それ以外のデバイスで \"{0}\" を使用するには、以下でデバイス名を探し、｢要求｣ボタンをクリックしてください。",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "デバイス名",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "ステータス",
        "app.thinappMultiDeviceAct.button.request": "リクエスト",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "拒否済み",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "保留中",
        "app.thinappMultiDeviceAct.activationState.activated": "承認済み",
        "app.thinappMultiDeviceAct.activationState.notActivated": "アクティブ化されていません",

        "app.thinappsInPackage.button.done": "完了",
        "app.thinappsInPackage.button.bookmarkAll": "すべてをブックマーク",
        "app.thinappsInPackage.info": "アプリ パッケージ",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} アプリ",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} 件の一致が見つかりました。",
        "app.thinappsInPackage.action.instruction": "ブックマーク アイコンを選択して個々のアプリをブックマークするか、ボタンを選択してすべてのアプリをブックマークします。",
        "app.thinappsInPackage.search.placeholder": "パッケージで検索",

        "app.setAppPassword.heading": "パスワードを設定",
        "app.setAppPassword.instruction": "以下のフォームを使用してこのアプリケーションのパスワードを設定してください。パスワードは 3 文字以上である必要があります。",
        "app.setAppPassword.label.password": "パスワード",
        "app.setAppPassword.label.confirmPassword": "パスワードの再入力",
        "app.setAppPassword.label.generate": "パスワードの生成",
        "app.setAppPassword.error.passwordsNoMatch": "パスワードが一致しません。",
        "app.setAppPassword.msg.success": "このアプリケーションのパスワードは正常に設定されました。",
        "app.setAppPassword.msg.fail": "パスワード設定中にエラーが発生しました。再試行してください。",

        "pvapp.setAppPassword.heading": "{0} の保存した資格情報を設定する",
        "pvapp.setAppPassword.instruction": "以下のフォームを使用して、このアプリケーションの保存した資格情報を設定してください。",
        "pvapp.setAppPassword.label.username": "ユーザー名",
        "pvapp.setAppPassword.label.password": "パスワード",
        "pvapp.setAppPassword.error.userNameEmpty": "ユーザー名が空です。",
        "pvapp.setAppPassword.error.passwordEmpty": "パスワードが空です。",
        "pvapp.setAppPassword.msg.success": "このアプリケーションの資格情報は正常に設定されました。",
        "pvapp.setAppPassword.msg.fail": "アプリケーションの資格情報の設定中にエラーが発生しました。再試行してください。",

        "app.launchPassword.heading": "パスワードの要求",
        "app.launchPassword.view.instruction": "この Windows リソース {0} にログインするにはパスワードを入力する必要があります。",
        "app.launchPassword.label.userName": "ユーザー",
        "app.launchPassword.label.password": "パスワード",
        "app.launchPassword.button.label.signin": "ログイン",

        "app.changePassword.title": "パスワード変更",
        "app.changePassword.enterCurrentPassword": "現在のパスワードを入力してください",
        "app.changePassword.enterNewPassword": "新しいパスワードを入力してください",
        "app.changePassword.confirmNewPassword": "新しいパスワードの再入力",
        "app.changePassword.error.passwordsNoMatch": "新しいパスワードが一致していません。",
        "app.changePassword.error.requirementsNoMatch": "新しいパスワードが要件を満たしていません。",
        "app.changePassword.success": "新しいパスワードが保存されました。",
        "app.changePassword.label.email": "E メール",
        "app.changePassword.label.phone": "電話番号",

        "app.passwordPolicy.passwordRequirements": "パスワードの要件",
        "app.passwordPolicy.label.currentpassword": "現在のパスワード",
        "app.passwordPolicy.label.newpassword": "新しいパスワード",
        "app.passwordPolicy.label.confirmpassword": "新しいパスワードの再入力",
        "app.passwordPolicy.minLength": "最低 {0} 文字",
        "app.passwordPolicy.leastIncludes": "少なくとも以下の文字を含むこと:",
        "app.passwordPolicy.minLower": "{0} 文字の英字",
        "app.passwordPolicy.minUpper": "{0} 文字の大文字",
        "app.passwordPolicy.minDigit": "{0} 文字の数字",
        "app.passwordPolicy.minSpecial": "{0} 文字の特殊文字",

        "app.coachmarks.bookmarkTitle": "ブックマークの使用方法",
        "app.coachmarks.bookmarkMessage": "タップして Web サイトを起動します。押したままにするとより多くのオプションが表示されます。",
        "app.coachmarks.catalogTitle": "カタログの使用方法",
        "app.coachmarks.catalogMessage": "アプリをインストールまたはアップデートします。ブックマークに追加するかここから直接開きます。",
        "app.coachmarks.buttonText": "OK",

        "app.logout.confirm.msg": "Workspace ONE からログアウトすると、現在のセッションは終了します。カタログからダウンロードしたアプリはデバイスに残りますが、再度ログインするまでは新しいアプリを使用できません。",
        "app.logout.title": "警告",

        "app.passwordVault.banner.msg": "Workspace One 拡張機能を使用できるアプリがあります。",
        "app.passwordVault.banner.button.install": "インストール",
        "app.passwordVault.banner.setPreference": "後から [設定] の [基本設定] で取得できます。",
        "app.passwordVault.banner.donotshowagain": "次回から表示しない",
        "app.passwordVault.banner.button.later": "後で",
        "app.passwordVault.banner.button.get": "取得",
        "app.passwordVault.preference.title": "Workspace ONE 拡張機能",
        "app.passwordVault.preference.instruction": "Workspace One 拡張機能を使用できるアプリがあります。",
        "app.passwordVault.preference.getextension": "拡張機能を取得します。",
        "app.bookmarking.change.tab.title": "ブックマークを整理中ですか?",
        "app.bookmarking.change.tab.body": "変更は保存されません。ブックマークの整理を続けますか?",
        "app.bookmarking.touch.disabled": "トラックパッドまたはマウスを使用するときに、アプリを並べ替えることができます。",
        "app.bookmarking.change.tab.exit": "いいえ、終了します",
        "app.bookmarking.change.tab.stay": "はい、続けます",
        "app.virtual.disabled": "管理者による無効化",
        "app.virtual.unavailable": "このアプリはこのデバイスでは使用できません",
        "app.virtual.not.available": "利用不可",

        "app.notification.type.NEW_ENTITLEMENTS": "確認してください",
        "app.notification.type.PASSWORD_EXPIRING": "パスワードを更新",
        "app.notification.action.delete": "削除",
        "notification.new.entitlements.heading": "新しい資格",
        "notification.new.entitlements.message": "{0} の新しい資格が割り当てられました",
        "app.notification.delete.header": "この通知を削除しますか?",
        "app.notification.delete.msg": "この通知を削除しますか? 後でアーカイブする場合は [アーカイブ] を選択することができます。",
        "app.notification.delete.text": "削除",
        "app.notification.keep.text": "保持",
        "app.notification.restore.text": "リストア",
        "app.notification.delete.toast.msg": "通知が削除されました。",
        "app.notification.empty": "すべて正常に実行されました",
        "app.notification.more.actions": "その他のアクション",
        "app.notification.archive.all": "すべてアーカイブ",

        "app.notification.bookmark.all.error": "申し訳ありませんが、新しいアプリのすべてをブックマークできませんでした",
        "app.notification.bookmark.all.success": "すべての新しいアプリがお気に入りに追加されました",
        "app.notification.delete.all": "すべて削除",
        "app.notification.see.archived": "アーカイブを表示",
        "app.notification.see.all": "すべての通知を表示",
        "app.notification.newApps.title": "新しいアプリがあります。",
        "app.notification.newApps.excessIconsMessage": "さらに {0}",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "詳細を表示",
        "app.tooltip.clicktolaunch": "クリックして起動",

        "recommendedApps.install.proceed": "続行",
        "recommendedApps.install.title": "推奨アプリをインストール",
        "recommendedApps.install.confirm.msg": "プロンプトに従って、アプリのインストールを続行します。",
        "recommendedApps.text1": "これらのアプリは通常同僚によって使用されています。",
        "recommendedApps.text2": "今すぐインストールするか、後でカタログから見つけることができます。",
        "recommendedApps.selectAll": "すべて選択",
        "recommendedApps.apps": "アプリ",
        "recommendedApps.install": "インストール",
        "recommendedApps.skip": "スキップ",

        "app.desktopapp.settings.title.account": "アカウント",
        "app.desktopapp.settings.title.devices": "デバイス",
        "app.desktopapp.settings.title.preferences": "基本設定",

        "appCenter.peopleSearch.placeholder": "ユーザー検索",
        "app.tooltip.copyEmail": "E メールをコピー",
        "app.peopleSearch.emailCopied": "E メールがコピーされました",
        "appCenter.peopleSearch.noResults": "結果が見つかりませんでした",
        "appCenter.peopleSearch.tryNewSearch": "再検索してください。",
        "appCenter.peopleSearch.atLeastThreeChars": "検索するには、上の場所に 3 文字以上入力します。",
        "appCenter.searchPeople": "ユーザーを検索します。",
        "myapps.mobilepagetitle.people": "ユーザー",
        "app.people.labels.team": "マイ チーム",
        "app.people.labels.recent": "検索の履歴",
        "app.people.labels.manager": "マネージャ",
        "app.people.labels.peers": "ピア",
        "app.people.labels.directReports": "直属の部下",
        "app.people.labels.profile": "プロファイル",
        "app.people.labels.org": "組織",
        "app.people.labels.workEmail": "仕事用の E メール",
        "app.people.labels.workPhone": "仕事用の電話",
        "app.people.labels.alternateNumber": "代替用の電話",
        "app.people.labels.mobile": "モバイル",
        "app.people.labels.address": "アドレス",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "マネージャ",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "社員番号",
        "app.people.labels.skills": "スキル",
        "app.people.labels.businessUnit": "ビジネス ユニット",
        "app.people.labels.costCenter": "コスト センター",
        "app.people.labels.physicalDeliveryOfficeName": "オフィスの場所",

        "hub.apps": "アプリ",
        "hub.notifications": "通知",
        "hub.notifications.welcome": "ようこそ!",
        "hub.notifications.first.time.message": "Hub を使用して起動すると、通知がここに表示されます。",
        "hub.notifications.new.apps.favorite.all": "すべてをお気に入りに登録",
        "hub.notifications.congratulations": "おめでとうございます。",
        "hub.notifications.empty.description1": "新しい通知がありません。",
        "hub.notifications.empty.description2": "追加容量をご利用いただけます。",
        "hub.v2.notifications.empty.description": "すべての通知を取得しました",
        "hub.v2.notifications.first.time.description": "Hub を使用して起動すると、通知がここに表示されます。",
        "hub.notifications.empty.description.archived": "アーカイブされた通知がありません。",
        "hub.notifications.priority": "優先度",
        "hub.notifications.today": "今日",
        "hub.notifications.yesterday": "昨日",
        "hub.notifications.lastWeek": "先週",
        "hub.notifications.lastMonth": "先月",
        "hub.notifications.older": "古い",
        "hub.notifications.archived.label": "アーカイブ済み",
        "hub.notifications.action.success": "成功しました",
        "hub.notifications.action.failure": "そのアクションを実行中にエラーが発生する可能性があります",
        "hub.notifications.moreDetails": "さらに詳しく",
        "hub.notifications.dialog.action.completed": "完了しました",
        "hub.notifications.dialog.action.needed": "保留中",
        "hub.notifications.dialog.action.all.notifications": "すべての通知",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "アプリを検索",
        "hub.apps.favorites": "お気に入り",
        "hub.apps.newApps": "新規",
        "hub.apps.recommended": "推奨",
        "hub.apps.categories": "カテゴリ",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "ここには十分な容量があります。",
        "hub.apps.no.apps.msg2": "業務アプリを取得するには管理者にお問い合わせください。",
        "hub.apps.search.in.category": "{0} カテゴリの結果:",
        "hub.apps.search.in.app": "{0} アプリケーションの名前と説明の結果",
        "hub.apps.search.header": "結果の合計",
        "hub.apps.search.no.result.header": "結果がありません。",
        "hub.apps.search.no.result.msg": "別の用語を使用してもう一度やり直してください。",
        "hub.apps.searchpeople.no.result.msg": "別の名前を使用してもう一度やり直してください。",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "アプリケーション",
        "hub.apps.type.anyApp": "任意のアプリ",
        "hub.people": "ユーザー",
        "hub.people.search.text": "ユーザー検索",
        "hub.people.labels.mypeers": "同僚",
        "hub.people.labels.directreports": "直属の部下",
        "hub.people.labels.manager": "マネージャ",
        "hub.people.labels.organization": "組織",
        "hub.people.search.result": "結果",
        "hub.app.install.prompt.title": "インストールしますか",

        "hub.actionsheet.label.viewDetails": "詳細の表示",
        "hub.actionsheet.label.removeFavorites": "お気に入りから削除",
        "hub.actionsheet.label.addFavorites": "お気に入りに追加",
        "hub.password.done": "完了",

        "hub.placeholder.changepassword.username": "ユーザー名",
        "hub.placeholder.changepassword.password": "パスワード",
        "hub.placeholder.changepassword.confirmpassword": "パスワードの再入力",

        "hub.tunnel.text.line1": "アクセスするには Tunnel が必要です",
        "hub.tunnel.text.line2": "Tunnel アプリケーションは他のアプリケーションと一緒に自動的にダウンロードされます。",

        "hub.promotions.banner.category.title": "カテゴリの概要",
        "hub.promotions.banner.category.open": "開く",
        "hub.promotions.banner.app.get": "取得",
        "hub.promotions.banner.disabled": "管理者による無効化",
        "hub.require.app.management": "管理対象",
        "hub.app.installing.alert.mobile.message": "アプリケーション {0} をインストール中です。更新について携帯電話のホーム画面を確認してください。",
        "hub.app.installing.alert.desktop.message": "アプリケーション {0} をインストール中です。更新についてデスクトップのアプリケーション ランチャーを確認してください。",

        "hub.nav.label.apps": "アプリ",
        "hub.nav.label.people": "ユーザー",
        "hub.nav.label.notification": "通知",
        "hub.nav.label.settings": "設定",
        "hub.nav.label.account": "アカウント",
        "hub.nav.label.signout": "ログアウト",
        "hub.userInfo.adminConsole": "管理コンソール",
        "hub.userInfo.signout": "ログアウト",
        "hub.userInfo.settings": "設定",
        "hub.userInfo.account": "アカウント",
        "hub.userInfo.devices": "デバイス",
        "hub.userInfo.whatsnew": "新機能",
        "hub.userInfo.about": "新機能の紹介",
        "hub.download.ios": "iOS 版 Hub",
        "hub.download.android": "Android 版 Hub",
        "hub.download.mac": "Mac 版 Hub",
        "hub.download.windows": "Windows 版 Hub",
        "hub.download.subtitle.mobile": "通知、ホームなどに、1 つの場所からアクセスできます。",
        "hub.download.subtitle.desktop": "デスクトップ通知を取得し、ドックから直接起動します。",
        "hub.preferences.title": "基本設定",
        "hub.preferences.horizon.subtitle": "Horizon リモート アプリケーション",
        "hub.preferences.launch.question": "Horizon リモート アプリケーションを起動する方法を選択してください。",
        "hub.about.title": "VMware Intelligent Hub について",
        "hub.apps.allApps": "すべてのアプリ",
        "hub.apps.configure.favorites.msg": "お気に入りのアプリケーションをここに追加すると素早くアクセスできます",
        "hub.apps.configure.favorites": "設定",
        "hub.apps.edit.favorites": "編集",

        "hub.contextDialog.label.removeFavorites": "お気に入りから削除",
        "hub.contextDialog.label.addFavorites": "お気に入りに追加",
        "hub.contextDialog.label.viewDetails": "詳細の表示",
        "hub.apps.edit.favorites.header": "お気に入り編集モード",
        "hub.apps.edit.favorites.prompt": "ドラッグ アンド ドロップで順序を変更します。",
        "hub.apps.edit.favorites.save": "保存",
        "hub.apps.edit.favorites.cancel": "変更をキャンセル",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "順序を更新しました。終了する前にキャンセルまたは保存してください",
        "hub.apps.edit.favorites.savecustomordering": "カスタムの順序を保存して結果の損失を回避するには、ページを離れないようにしてください",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "タッチ スクリーンで使用できないよう再設定します。",
        "hub.apps.edit.favorites.notify.success": "お気に入りの順序変更が保存されました。",
        "hub.apps.edit.favorites.notify.error": "エラーが発生しました。順序変更を保存できません。後でやり直してください",

        "hub.nav.label.settings.settings": "設定",
        "hub.nav.label.settings.account": "アカウント",
        "hub.nav.label.settings.about": "バージョン情報",
        "hub.nav.label.settings.devices": "デバイス",
        "hub.nav.label.settings.preferences": "基本設定",
        "hub.nav.label.settings.whatsnew": "新機能",

        "hub.apps.detail.back": "アプリに戻る",
        "hub.people.detail.back": "People に戻る",
        "hub.people.notifications.back": "通知に戻る",

        "hub.nav.label.notifications.filter": "フィルタ",
        "hub.nav.label.notifications.all.notifications": "すべての通知",
        "hub.nav.label.notifications.action.needed": "保留中",
        "hub.nav.label.notifications.completed": "完了しました",
        "hub.long.card.description": "説明",
        "hub.long.card.Comment": "コメント",
        "hub.long.card.Comment.placeholder": "コメントを追加する",

        "hub.appLaunch.open": "開く",
        "hub.appLaunch.cancel": "キャンセル"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "확인",
        "and": "및",
        "fullname": "{1}{0}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "설치",
        "app.banner.open": "열기",
        "app.promotion.banner.donotshowagain": "다시 표시하지 않습니다. 설정 - 정보에서 나중에 설정할 수 있습니다.",
        "app.promotion.banner.open": "앱에서 열기",
        "app.promotion.banner.download": "앱 다운로드",
        "app.promotion.banner.message": "앱 사용 환경 개선.",
        "horizonDesktopNotDetected": "이 컴퓨터에 VMware Identity Manager Desktop이 설치되어 있어야 이 애플리케이션을 열 수 있습니다. 아직 설치하지 않은 경우 <a target='_blank' href='{0}'>VMware Identity Manager Desktop을 설치하십시오</a>.",
        "viewAppsTooltip": "이 Horizon 호스팅된 애플리케이션을 이용하려면 {0} Horizon Client{1} 3.0 이상을 컴퓨터에 설치해야 합니다.",
        "desktoneDesktopTooltip": "이 Horizon Cloud 데스크톱을 이용하려면 {0} Horizon Client {1}을(를) 컴퓨터에 설치해야 합니다.",
        "desktoneApplicationTooltip": "이 Horizon Cloud 애플리케이션을 이용하려면 {0} Horizon Client {1}을(를) 컴퓨터에 설치해야 합니다.",
        "xenAppsReceiverNotDetected": "이 컴퓨터에 Citrix Receiver가 설치되어 있어야 이 애플리케이션을 열 수 있습니다. 아직 설치하지 않은 경우 <a target='_blank' href='{0}'>Citrix Receiver를 설치하십시오</a>.",
        "button.save": "저장",
        "button.update": "업데이트",
        "button.openHorizonView": "Horizon Client 열기",
        "myapps.launch.openApp": "{0} 열기",
        "button.openApp": "앱 열기",
        "button.clear": "지우기",
        "button.close": "닫기",
        "button.cancel": "취소",
        "button.download": "다운로드",
        "myapps.launch.title.launch": "시작",
        "myapps.launch.title": "애플리케이션 시작",
        "myapps.launch.view.openWith": "다음 도구로 열기",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "브라우저",
        "myapps.launch.view.preferredClient.isDefault": "(기본)",
        "myapps.launch.view.selectPreferredLaunchClient": "Horizon 데스크톱과 애플리케이션 시작 방법 선택",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Horizon 원격 앱",
        "myapps.launch.view.selectPreferredLaunchClientText": "Horizon Client에서 Horizon 원격 앱을 열면 브라우저에서보다 더 나은 환경이 제공됩니다.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Horizon 원격 앱을 시작할 방법을 선택하십시오.",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "시작 기본값 선택...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "장치에서 Horizon 데스크톱을 열 때 실행되는 기본 시작 동작을 결정합니다. 기본으로 Horizon Client를 선택하려면 Horizon Client가 설치되어 있어야 합니다. 아직 설치하지 않은 경우 <a target='_blank' href='{0}'>Horizon Client를 설치하십시오</a>.",
        "myapps.launch.view.unknownClientType": "Horizon Client를 여는 알 수 없는 클라이언트 유형",
        "myapps.launch.view.openWithView": "Horizon Client로 열기",
        "myapps.launch.view.openWithBrowser": "브라우저로 열기",

        "myapps.launch.view.preferredClient.byBrowser.description": "브라우저를 선택하면, 데스크톱 또는 애플리케이션이 새 브라우저 창에 열립니다.",
        "myapps.launch.view.preferredClient.byViewClient.description": "이 항목을 이용하려면 Horizon Client 3.0 이상이 필요합니다. 아직 설치하지 않은 경우 <a target='_blank' href='{0}'>Horizon Client를 설치하십시오</a>.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "기본 설정에서 이 설정을 언제든 변경할 수 있습니다.",
        "myapps.launch.view.preferredClient.saveSuccess": "선택한 기본 설정 저장 성공.",
        "myapps.launch.msg.launching.desktop": "데스크톱 <b>{0}</b> 시작 중.....",
        "myapps.launch.msg.launching.application": "애플리케이션 <b>{0}</b> 시작 중.....",
        "myapps.noAppsMsg": "앱을 추가하지 않았습니다. {0}(으)로 가서 애플리케이션을 추가할 수 있습니다.",
        "myapps.noFavAppsMsg": "북마크된 앱이 없습니다.",
        "myapps.welcomeMsg": "{0}님 안녕하세요, 여기 앱이 있습니다!",
        "myapps.bookmarks.empty.message": "빠른 액세스를 위해 자주 사용하는 앱에 북마크하십시오.",
        "myapps.bookmarks.empty.hidecatalog.message": "현재는 사용 가능한 애플리케이션이 없습니다.",
        "myapps.bookmarks.empty.addbookmarks": "북마크 추가",
        "myapps.bookmarks.organize.title": "북마크 구성",
        "myapps.bookmarks.organize.addbookmarks": "북마크 추가",
        "myapps.bookmarks.organize.batchremove": "제거",

        "myapps.mobilepagetitle.apps": "애플리케이션",
        "myapps.mobilepagetitle.details": "세부 정보",
        "myapps.mobilepagetitle.support": "지원",
        "myapps.mobilepagetitle.settings": "설정",
        "myapps.mobilepagetitle.recommendedapps": "사용자를 위한 추천 앱",
        "myapps.mobilepagetitle.notification": "알림",
        "myapps.mobilepagetitle.archived": "보관됨",
        "myapps.mobilepagetitle.notification.newapps": "새로운 앱",

        "myapps.dialog.openApp": "열기",
        "myapps.dialog.openAppWithViewClient": "클라이언트에서 열기",
        "myapps.dialog.openAppWithBrowser": "브라우저에서 열기",

        "myapps.launch.passwordvault.installExtension.description": "이 애플리케이션은 Password Vault 브라우저 확장을 이용할 수 있습니다. 아직 설치하지 않은 경우 <a target='_blank' href='{0}'>Extension을 설치하십시오</a>.",

        "deviceStatus.networkLost": "연결이 끊겼습니다. 다시 연결하는 중…",
        "deviceStatus.networkRestored": "네트워크 연결이 복구되었습니다.",
        "api.session.expired.retry": "세션 만료됨, 갱신하려는 중...",
        "api.entitlements.reload": "보기를 새로 고쳐 카탈로그의 앱을 업데이트하는 중입니다.",
        "api.security.header.invalid.relogin": "보안 헤더 유효성 검사가 실패했습니다. 로그아웃 중입니다.",
        "api.server.load.error": "일반적인 경우보다 더 많은 로드가 발생하고 있습니다. 나중에 다시 시도하십시오.",
        "api.updateApps": "목록 업데이트 중...",
        "api.error": "오류가 발생했습니다. 재시도하십시오.",
        "installation.error": "네이티브 앱이 일시적으로 사용 가능하지 않습니다.",
        "service.under.maintenance.error": "Workspace ONE이 일시적인 유지 보수 모드에 있습니다. 애플리케이션을 시작할 수 있으나 일부 기능은 작동하지 않을 수 있습니다.",
        "api.timeout": "연결 시간 초과, 재시도",
        "favoriteStatus.favorite": "즐겨찾기",
        "favoriteStatus.unfavorite": "즐겨찾기 해제",
        "favoriteStatus.offlineFavoriteMessage": "오프라인일 때는 앱을 북마크할 수 없습니다. 다시 연결한 후 다시 시도하십시오.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "오프라인일 때는 앱에서 북마크를 제거할 수 없습니다. 다시 연결한 후 다시 시도하십시오.",
        "error.failToFavoriteApp": "북마크 상태 업데이트 실패",
        "error.failedToResetApp": "앱 재설정 실패",
        "error.failToHideApp": "앱 제거 실패",
        "error.failToShowApp": "시작 관리자에 앱 추가 실패",
        "error.failedToBookmarkApp": "앱 북마크 실패",
        "error.failedToLaunchApp": "앱 열기 실패",
        "error.failedToRemoveAccount": "계정을 제거하지 못했습니다. 나중에 다시 시도하십시오.",
        "installStatus.enrollDevice": "회사 데이터 보호를 위해 {0}을(를) 사용하려면 Workspace Services를 활성화해야 합니다.",
        "installStatus.enrollDevice.learnMore": "자세히 알아보기",
        "installStatus.offlineInstallMessage": "오프라인일 때는 설치 요청을 할 수 없습니다. 다시 연결한 후 다시 시도하십시오.",
        "installStatus.activated": "활성화됨",
        "installStatus.notActivated": "활성화되지 않음",
        "installStatus.request": "요청",
        "installStatus.update": "업데이트",
        "installStatus.processing": "처리 중",
        "installStatus.installFailedMessage": "{0} 앱 설치 중에 문제가 발생했습니다. 다시 시도하십시오. 이 문제가 지속되면 IT 관리자에게 문의하십시오.",
        "installStatus.unenrolledDevice": "더 이상 이 앱을 사용할 수 없습니다. 확인을 눌러 목록을 업데이트하십시오.",
        "installMessage.continueInstall": "이전에 이 앱을 설치하려고 한 적이 있습니다. ",
        "installMessage.proceedToInstall": "계속하려면 클릭하십시오.",
        "installMessage.installingOnDevice": "장치에 설치 중...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Workspace Services 사용 설정",
        "app.adaptivemanagement.ws1servicessubtitle": "앱을 설치할 수 있으려면 이 작업이 필요합니다. 이를 통해 자동으로 다음 기능이 제공됩니다.",
        "app.adaptivemanagement.valueproposition1": "모든 기업 리소스 즉시 설치.",
        "app.adaptivemanagement.valueproposition2": "기업 네트워크에 안전하게 액세스.",
        "app.adaptivemanagement.valueproposition3": "앱 및 컨텐츠가 모든 장치에 동기화됨.",
        "app.adaptivemanagement.valueproposition4": "생산성을 높여 주는 개선된 앱 환경.",
        "app.adaptivemanagement.privacylink": "개인 정보",

        "app.tunnel.continue": "계속",
        "app.tunnel.text.line1": "액세스하려면 VMware Tunnel 앱이 필요합니다.",
        "app.tunnel.text.line2": "Tunnel 앱이 해당 앱과 함께 자동으로 다운로드될 것입니다.",
        "app.tunnel.header": "VMware Tunnel 필요",
        "app.tunnel.message": "이 앱을 사용하려면 VMware Tunnel이 설치되어 있고 실행 중이어야 합니다.",
        "recommendedApps.tunnel.text.line1": "액세스하려면 VMware Tunnel 앱이 필요합니다.",
        "recommendedApps.tunnel.text.line2": "Tunnel 앱이 해당 앱과 함께 자동으로 다운로드될 것입니다.",
        "app.tunnel.installHelpText": "앱이 시작되어 자동 설치되지 않으면 다음 단계에 따라 앱을 활성화하십시오.",
        "app.tunnel.installStep1": "1단계: {0} 앱 설치",
        "app.tunnel.installStep2": "2단계: {0} 앱 설치",

        "requestFailed": "요청 실패",
        "changeOccurred": "변경되었습니다.",
        "requestSuccessful": "요청 성공",
        "accept": "수락",
        "decline": "거부",
        "termsOfUse": "이용 약관",
        "beforeInstallation": "설치하기 전",
        "resetDesktopStatus.offlineMessage": "오프라인일 때는 데스크톱 재설정을 할 수 없습니다. 다시 연결한 후 다시 시도하십시오.",
        "resetDesktop.sucess": "데스크톱 재설정 성공",
        "appCenter.someAppsMissingMessage": "현재 일부 앱을 로드할 수 없음",
        "appCenter.register.device": "장치에 대한 일부 정보를 업데이트해야 합니다. Workspace ONE을 계속 사용하려면 업데이트를 누르십시오.",
        "appCenter.mdm.device.error": "Workspace ONE에 더 이상 액세스할 수 없습니다.",
        "appCenter.mdm.device.error.contact": "계정 세부 정보는 관리자에게 문의하십시오.",
        "appCenter.mdm.device.poll.error": "지금은 업무 공간 구축을 완료할 수 없습니다. 다시 시도하거나 관리자에게 문의하십시오.",
        "appCenter.device.status.notRegistered": "장치 등록 안 됨",
        "appCenter.device.status.blackListed": "이 장치는 블랙리스트에 등록되어 있음",
        "appCenter.device.status.deviceInputError": "이 장치는 유효하지 않습니다! IT 관리자에게 문의하십시오.",
        "appCenter.device.status.unknownError": "알 수 없는 오류 발생",

        "appCenter.device.register": "장치 등록",
        "appCenter.device.moreDetails": "자세한 정보",
        "appCenter.device.unEnrollWarningTitle": "계정을 제거하시겠습니까?",
        "appCenter.device.mdmUnEnrollMessage": "계정을 제거하면 회사 리소스에 대한 액세스가 비활성화되며 이 장치에서 작업 앱이 제거될 수 있습니다.",
        "appCenter.device.getDeviceEnrollmentStatus": "추가 정보 얻기",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "계속 진행하시겠습니까?",
        "appCenter.device.remove": "제거",
        "appCenter.device.keep": "유지",
        "appCenter.device.disableWorkspaceMessage": "계정을 제거하면 Workspace ONE 앱을 통해 부여된 액세스가 취소됩니다. 스프링보드로 다운로드한 앱은 설치 상태를 유지하지만 액세스가 차단될 수 있습니다. 계속하시겠습니까?",
        "appCenter.noAppsMsg": "현재 사용 가능한 앱이 없음",
        "appCenter.vppInviteTitle": "관리되는 배포 등록",
        "appCenter.appInstallConfirmPromptTitle": "설치 확인",
        "appCenter.mdmAppRequestConfirmPromptTitle": "승인 필요",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "사용자 요청이 이전에 거부되었습니다.",
        "appCenter.mdmAppRequestConfirmPromptMessage": "액세스하려는 애플리케이션은 관리자의 승인이 필요합니다.",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "이 애플리케이션을 요청했으며 요청이 거부되었습니다. 다시 요청하시겠습니까?",
        "appCenter.acceptInvite": "초대 수락",
        "appCenter.install": "설치",
        "appCenter.proceed": "Workspace Services 사용 설정",
        "appCenter.cancel": "취소",
        "appCenter.confirm": "확인",
        "appCenter.searchApps": "앱을 검색합니다.",
        "appCenter.welcomeMsg": "새 앱을 모든 장치에 어디에서든지 설치!",
        "appCenter.done": "완료",
        "appCenter.nav.privacyPage": "개인 정보 페이지",
        "appCenter.nav.catalog": "카탈로그",
        "appCenter.nav.myApps": "내 앱",
        "appCenter.nav.favorites": "즐겨찾기",
        "appCenter.nav.categories": "카테고리",
        "appCenter.nav.filterby": "필터 기준",
        "appCenter.nav.show": "표시",
        "appCenter.nav.settings": "설정",
        "appCenter.nav.sortBy": "정렬 기준",
        "appCenter.nav.sortBy.alpha": "A-Z 순으로 정렬",
        "appCenter.nav.sortBy.inverseAlpha": "Z-A 순으로 정렬",
        "appCenter.nav.sortBy.customView": "사용자 지정 보기",
        "appCenter.nav.arrange": "정렬",
        "appCenter.nav.arrange.saved": "사용자 지정 보기가 저장되었습니다!",
        "appCenter.nav.arrange.tooltip": "Windows에서만 사용 가능합니다.",
        "appCenter.nav.arrange.saving": "저장 중...",
        "appCenter.nav.arrange.error": "사용자 지정 보기를 저장할 수 없음",
        "appCenter.nav.filter": "필터",
        "appCenter.installFailedTitle": "앱 설치 문제",
        "appCenter.uccConflict": "현재 세션에 문제가 있습니다. 다시 로그인하십시오.",

        "appCenter.search.placeholder": "검색",
        "appCenter.search.noResults": "결과가 없습니다.",

        "appCenter.action.open": "열기",
        "appCenter.action.install": "설치",
        "appCenter.action.installing": "설치 중",
        "appCenter.action.installed": "설치됨",
        "appCenter.action.reinstall": "다시 설치",
        "appCenter.action.add": "추가",
        "appCenter.action.added": "추가됨",
        "appCenter.action.processing": "처리 중",
        "appCenter.action.update": "업데이트",
        "appCenter.action.request": "요청",
        "appCenter.action.pending": "대기 중",
        "appCenter.action.view": "보기",
        "appCenter.action.favorite": "즐겨찾기",
        "appCenter.action.unfavorite": "즐겨찾기 해제",

        "appCenter.internalApp.installtionModalTitle": "앱 설치 단계",
        "appCenter.internalApp.installationStepTitle": "이 엡을 열려면 설치 후 다음 단계를 따르십시오.",
        "appCenter.internalApp.step1": "iOS 홈 화면에서 설정 실행",
        "appCenter.internalApp.step2": "일반 누르기",
        "appCenter.internalApp.step3": "프로필 및 장치 관리 누르기",
        "appCenter.internalApp.step4": "Enterprise App 아래의 앱 개발자 이름 누르기",
        "appCenter.internalApp.step5": "앱 확인 또는 신뢰하기",
        "appCenter.internalApp.watchTutorial": "단계별 튜토리얼 보기",

        "appCenter.type.web": "웹 사이트",
        "appCenter.type.native": "네이티브 앱",
        "appCenter.type.native.platform": "{0} 앱",
        "appCenter.type.virtual": "가상 앱",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "앱 패키지",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "카테고리",
        "myapp.nav.favorites": "즐겨찾기",
        "myapp.nav.allApps": "모든 앱",
        "myapp.nav.recommendedApps": "권장",
        "myapp.nav.newlyEntitledApps": "새로 만들기",
        "myapp.nav.webApps": "웹사이트",
        "myapp.nav.mobileApps": "모바일 앱",
        "myapp.nav.macApps": "Mac 앱",
        "myapp.nav.windowsApps": "Windows 앱",
        "myapp.nav.virtualApps": "가상",
        "myapp.label.new": "새로 만들기",
        "myapp.nav.filterby": "필터 기준",
        "myapp.nav.mobile.filter.pagetitle": "카테고리별로 필터링",
        "appCenter.nav.browseBy": "탐색 기준",

        "appCenter.catalog.empty": "아직 아무 앱도 할당되지 않은 것 같습니다. 조금 기다리면 할당될 수 있으니, 잠시 후에 다시 확인하십시오.",

        "userInfo.adminConsole": "관리 콘솔",
        "userInfo.settings": "설정",
        "userInfo.notifications": "알림",
        "userInfo.support": "지원",
        "userInfo.preferences": "기본 설정",
        "userInfo.about": "정보",
        "userInfo.devices": "장치",
        "userInfo.settings.promo.title": "Workspace ONE 앱 다운로드",
        "userInfo.settings.promo.message": "Workspace ONE은 앱에서 개선된 환경을 제공합니다. 지금 사용해 보시겠습니까?",

        "userInfo.tips": "앱 팁",
        "userInfo.tips.description": "앱을 사용하는 방법에 대한 도움말을 이용하십시오.",

        "userInfo.tips.bookmarks": "북마크를 사용하는 방법",
        "userInfo.tips.catalog": "카탈로그를 사용하는 방법",
        "userInfo.tips.people": "신규: 피플을 사용하는 방법",
        "userInfo.tips.notification": "신규: 알림을 사용하는 방법",

        "userInfo.tips.catalog.desktop1": "열기를 클릭하여 브라우저에서 웹 사이트를 시작합니다. {0}을(를) 사용하여 북마크합니다.",
        "userInfo.tips.catalog.desktop2": "앱 아이콘 또는 이름을 클릭하여 세부 정보를 알아봅니다.",
        "userInfo.tips.catalog.mobile1": "{0}을(를) 사용하여 브라우저에서 웹 사이트를 엽니다. {1}을(를) 사용하여 북마크합니다.",
        "userInfo.tips.catalog.mobile2": "{0}을(를) 사용하여 장치에 네이티브 앱을 설치합니다. {1}은(는) 해당 앱을 사용하려면 장치를 등록해야 함을 나타냅니다.",
        "userInfo.tips.catalog.mobile3": "앱 아이콘 또는 이름을 눌러 세부 정보를 알아봅니다.",

        "userInfo.tips.bookmarks.desktop1": "타일을 클릭하여 브라우저에서 웹 사이트를 시작합니다.",
        "userInfo.tips.bookmarks.desktop2": "타일에 커서를 올려 '...' 메뉴에서 추가 작업을 봅니다.",

        "userInfo.tips.bookmarks.mobile": "타일을 눌러 브라우저에서 웹 사이트를 시작합니다. 더 많은 작업을 보려면 길게 누릅니다.",

        "userInfo.tips.catalog.download.phone": "{0} 아이콘을 눌러 장치에 네이티브 앱을 설치합니다. {1} 아이콘은 해당 앱을 사용하려면 장치를 등록해야 함을 나타냅니다.",
        "userInfo.tips.catalog.bookmark.launch.phone": "{0} 아이콘을 눌러 브라우저에서 웹 사이트를 엽니다. {1} 아이콘을 눌러 북마크합니다. 세부 정보를 보려면 앱 아이콘이나 이름을 누릅니다.",

        "userInfo.tips.catalog.download.tablet": "다운로드 버튼을 클릭하여 앱을 다운로드합니다. 세부 정보를 보려면 앱을 클릭하면 됩니다.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "시작 버튼을 클릭하여 앱을 시작합니다. 북마크 버튼을 클릭하여 앱을 북마크합니다.",

        "userInfo.tips.people.mobile": "프로필에서 이동하여 기본 피플 검색 랜딩 페이지로 돌아가려면 {0}을(를) 클릭하십시오.",
        "userInfo.tips.notification.mobile": "알림에 액세스하려면 {0}을(를) 클릭하십시오. 모든 알림을 해제하거나 이에 대한 조치를 취할 때까지 알림 배지가 활성 상태로 유지됩니다.",

        "userInfo.tips.title": "앱 팁",
        "userInfo.tips.intro": "앱을 사용하는 방법에 대한 도움말을 이용하십시오.",
        "userInfo.tips.desktop": "데스크톱",
        "userInfo.tips.reordering.title": "북마크를 사용자 지정하십시오!",
        "userInfo.tips.reordering.text1": "1. 오른쪽 상단의 드롭다운 메뉴를 사용하여 사용자 지정 보기로 이동합니다.",
        "userInfo.tips.reordering.text2": "2. 정렬을 선택합니다. ",
        "userInfo.tips.reordering.text3": "3. 끌어다 놓아 북마크를 재정렬합니다. 완료되면 저장을 클릭합니다.",
        "userInfo.tips.mobile": "모바일 장치",

        "userInfo.removeAccount": "계정 제거",
        "userInfo.account": "계정",
        "userInfo.profile": "프로파일",
        "userInfo.profile.name": "이름 :",
        "userInfo.profile.email": "이메일:",
        "userInfo.profile.username": "사용자 이름:",
        "userInfo.profile.picture": "프로필 사진",
        "userInfo.profile.password": "암호",
        "userInfo.profile.passwordchange": "변경",
        "userInfo.profile.passwordprompt": "회사 시스템의 비밀번호를 관리하십시오.",
        "userInfo.password": "암호",
        "userInfo.termsofuse": "이용 약관",
        "userInfo.signout": "로그아웃",
        "userInfo.tryAgain": "다시 시도",
        "userInfo.managedevicesettings": "장치 설정 관리",
        "userInfo.notification": "푸시 알림",
        "userInfo.passcode": "터치 ID 또는 암호",

        "appCenter.support.selfservice": "셀프 서비스",
        "appCenter.support.managedevices": "장치",
        "appCenter.support.managedevicestext": "내 장치 정보를 보십시오.",
        "appCenter.support.managepassword": "비밀번호 변경",
        "appCenter.support.managepasswordtext": "회사 계정의 비밀번호 변경",
        "appCenter.support.gethelp": "도움말 이용",
        "appCenter.support.appstips": "앱 및 팁",
        "appCenter.support.appstipstext": "이 앱에서 도움말 툴팁 보기",
        "appCenter.support.sendReportTitle": "보고서 보내기",
        "appCenter.support.sendReportDetails": "앱 진단을 보내는 방법을 알아보십시오.",
        "appCenter.support.helpdesk": "지원 센터",
        "appCenter.support.contacthelpdesk": "지원 센터에 문의",
        "appCenter.reportProblems.ios.sendLogInstruction": "오류가 발생하면 이 장치를 흔들어서 손쉽게 앱 진단을 보내거나 피드백을 제공하십시오.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "장치 설정에서 이 기능을 켜거나 끌 수 있습니다.",

        // App Details Page
        "app.details.link.back": "뒤로",
        "app.details.nav.details": "세부 정보",
        "app.details.nav.reviews": "검토",
        "app.details.label.description": "설명",
        "app.details.label.noDescription": "사용할 수 있는 설명 없음",
        "app.details.label.seeFullDetails": "세부 정보 보기",
        "app.details.label.removeBookmark": "제거",
        "app.details.label.resetDektop": "재설정",
        "app.details.label.information": "정보",
        "app.details.label.category": "카테고리",
        "app.details.label.version": "버전",
        "app.details.label.type": "유형",
        "app.details.label.type.SAML11": "웹 앱",
        "app.details.label.type.SAML20": "웹 앱",
        "app.details.label.type.WEBAPPLINK": "웹 앱",
        "app.details.label.type.MDMWEB": "웹 앱",
        "app.details.label.type.WSFED12": "웹 앱",
        "app.details.label.type.XENAPP": "Xen 앱",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix 데스크톱",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "프로파일",
        "app.details.label.type.VIEWPOOL": "Horizon 데스크톱",
        "app.details.label.type.VIEWAPP": "Horizon 앱",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud 데스크톱",
        "app.details.label.type.DESKTONEAPPLICATION": "Horizon Cloud 앱",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "웹 앱",
        "app.details.label.type.PUBLIC": "공개 앱",
        "app.details.label.type.INTERNAL": "내부",
        "app.details.label.size": "크기",
        "app.details.label.price": "가격",
        "app.details.label.screenshots": "스크린샷",
        "app.details.label.showMore": "자세히 표시",
        "app.details.label.showLess": "간단히 표시",
        "app.details.label.setAppPassword": "앱 비밀번호 설정",
        "app.details.label.sendFeedback": "피드백 보내기",
        "app.details.label.feedbackSubject": "{0} 애플리케이션에 대한 피드백",
        "app.details.label.support": "지원",
        "app.details.label.developer": "개발자",
        "app.details.label.email": "이메일",
        "app.details.label.phone": "전화",
        "app.details.appSize": "{0}MB",
        "app.details.label.launchMessage": "모든 모바일 애플리케이션은 홈 화면에서 실행할 수 있습니다.",

        "app.details.label.requirement": "필수 요건:",
        "app.details.label.packageName": "패키지 이름:",
        "app.details.thinapp.requirement": "이 애플리케이션은 Identity Manager Desktop이 설치된 Windows 컴퓨터에서만 작동됩니다.",
        "app.details.viewDesktop.requirement": "이 Horizon 데스크톱을 이용하려면 {0} Horizon Client{1} 3.0 이상을 컴퓨터에 설치해야 합니다.",
        "app.details.viewapp.requirement": "이 Horizon 호스팅된 애플리케이션을 이용하려면 {0} Horizon Client{1} 3.0 이상을 컴퓨터에 설치해야 합니다.",
        "app.details.xenapp.requirement": "이 애플리케이션을 이용하려면 {0} Citrix Receiver {1}을(를) 설치해야 합니다.",
        "app.details.xenapp.msg.IE8OrLower": "이 애플리케이션을 사용하려면 Citrix Receiver가 설치되어 있어야 합니다. 참고: 이 애플리케이션은 Internet Explorer 8에서는 열 수 없습니다.",
        "app.details.xenappsDeliveryGroup.requirement": "이 Citrix 데스크톱을 이용하려면 {0} Citrix Receiver {1}을(를) 설치해야 합니다.",
        "app.details.desktoneDesktop.requirement": "이 Horizon Cloud 데스크톱을 이용하려면 {0} Horizon Client {1}을(를) 컴퓨터에 설치해야 합니다.",
        "app.details.desktoneApp.requirement": "이 Horizon Cloud 애플리케이션을 이용하려면 {0} Horizon Client {1}을(를) 컴퓨터에 설치해야 합니다.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "사용할 수 있는 정보 없음",
        "app.details.noScreenshots": "사용할 수 있는 스크린샷 없음",
        "app.details.noDescription": "해당 설명은 곧 제공됩니다.",
        "app.details.needsDeviceEnrollment": "장치 등록 필수",
        "app.details.label.addToHomeScreen": "홈 화면에 추가",
        "app.details.action.open": "열기",
        "app.details.action.bookmark": "북마크",
        "app.details.action.bookmarked": "북마크됨",
        "app.details.action.launch": "시작",
        "app.details.action.setPassword": "비밀번호 설정",
        "app.details.action.pvAppCredentials": "자격 증명",
        "app.details.info.msg.missingInfo": "일부 정보가 누락되었습니다. 전체 세부 정보를 보려면 나중에 다시 시도하십시오.",
        "app.details.wsrequired.msg": "Workspace Services가 필요합니다.",
        "app.details.label.addedFavorites": "즐겨찾기에 추가됨",

        "app.rating.label": "사용자 등급",

        "app.settings.label.settings": "설정",
        "app.settings.link.back": "뒤로",
        "app.settings.managedDevices": "관리되는 장치",
        "app.nav.tab.bookmark": "북마크",
        "app.nav.tab.catalog": "카탈로그",
        "app.nav.tab.people": "사용자",
        "app.nav.tab.support": "지원",
        "app.nav.tab.apps": "애플리케이션",
        "app.nav.tab.settings": "설정",
        "app.about.heading": "Workspace ONE 정보",
        "app.about.copyright": "Copyright © 2013-2019 VMware, Inc. All rights reserved. 이 제품은 미국 및 다른 나라들의 저작권과 지적재산권법, 그리고 국제조약에 의해 보호를 받습니다. VMware 제품은 하나 이상 특허의 적용을 받습니다.",
        "app.about.button.label.privacyPolicy": "개인정보취급방침",
        "app.about.button.label.patents": "특허",
        "app.about.button.label.licenseAgreement": "라이선스 계약",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-kr",
        "app.about.licenseAgreementLink": "http://www.vmware.com/kr/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/kr/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "장치",
        "app.devices.tableColumn.deviceName": "장치 이름",
        "app.devices.tableColumn.userDeviceId": "장치 ID",
        "app.devices.tableColumn.lastLoginTime": "마지막 로그인 시간",
        "app.devices.unlinkDevice": "연결 해제",
        "app.devices.unlinkedDevice": "연결 해제됨",
        "app.devices.emptyDeviceListMessage": "계정에 연결된 장치가 없습니다.",

        "app.thinappMultiDeviceAct.heading": "이 애플리케이션은 승인된 장치에 추가됩니다. 추가 장치에서 \"{0}\"을(를) 사용하려면 아래에서 장치 이름을 찾고 요청 버튼을 클릭하십시오.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "장치 이름",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "상태",
        "app.thinappMultiDeviceAct.button.request": "요청",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "거부됨",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "대기 중",
        "app.thinappMultiDeviceAct.activationState.activated": "승인됨",
        "app.thinappMultiDeviceAct.activationState.notActivated": "활성화되지 않음",

        "app.thinappsInPackage.button.done": "완료",
        "app.thinappsInPackage.button.bookmarkAll": "모두 북마크",
        "app.thinappsInPackage.info": "앱 패키지",
        "app.thinappsInPackage.noOfAppsInPackage": "{0}개 앱",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0}개 일치가 발견되었습니다.",
        "app.thinappsInPackage.action.instruction": "북마크 아이콘을 선택하여 개별 앱을 북마크하거나 버튼을 선택하여 모든 앱을 북마크하십시오.",
        "app.thinappsInPackage.search.placeholder": "패키지에서 검색",

        "app.setAppPassword.heading": "비밀번호 설정",
        "app.setAppPassword.instruction": "이 애플리케이션의 비밀번호는 아래 양식을 사용하여 설정하십시오. 비밀번호 길이는 3자 이상이어야 합니다.",
        "app.setAppPassword.label.password": "암호",
        "app.setAppPassword.label.confirmPassword": "비밀번호 확인",
        "app.setAppPassword.label.generate": "비밀번호 생성",
        "app.setAppPassword.error.passwordsNoMatch": "비밀번호가 일치하지 않습니다.",
        "app.setAppPassword.msg.success": "애플리케이션 비밀번호가 성공적으로 설정되었습니다.",
        "app.setAppPassword.msg.fail": "비밀번호 설정 시도 중에 오류가 발생했습니다. 다시 시도하십시오.",

        "pvapp.setAppPassword.heading": "{0}의 저장된 자격 증명 설정",
        "pvapp.setAppPassword.instruction": "아래 양식을 사용하여 이 애플리케이션의 저장된 자격 증명을 설정하십시오.",
        "pvapp.setAppPassword.label.username": "사용자 이름",
        "pvapp.setAppPassword.label.password": "암호",
        "pvapp.setAppPassword.error.userNameEmpty": "사용자 이름이 비어 있습니다.",
        "pvapp.setAppPassword.error.passwordEmpty": "비밀번호가 비어 있습니다.",
        "pvapp.setAppPassword.msg.success": "애플리케이션 자격 증명이 성공적으로 설정되었습니다.",
        "pvapp.setAppPassword.msg.fail": "애플리케이션 자격 증명 설정 시도 중에 오류가 발생했습니다. 다시 시도하십시오.",

        "app.launchPassword.heading": "비밀번호 요청",
        "app.launchPassword.view.instruction": "이 Windows 리소스 {0}에 로그인하려면 비밀번호가 필요합니다.",
        "app.launchPassword.label.userName": "사용자",
        "app.launchPassword.label.password": "비밀번호",
        "app.launchPassword.button.label.signin": "로그인",

        "app.changePassword.title": "비밀번호 변경",
        "app.changePassword.enterCurrentPassword": "현재 비밀번호 입력",
        "app.changePassword.enterNewPassword": "새 비밀번호 입력",
        "app.changePassword.confirmNewPassword": "새 비밀번호 확인",
        "app.changePassword.error.passwordsNoMatch": "새 비밀번호가 일치하지 않습니다.",
        "app.changePassword.error.requirementsNoMatch": "새 비밀번호가 필수 요건을 충족하지 않습니다.",
        "app.changePassword.success": "새 비밀번호가 저장되었습니다!",
        "app.changePassword.label.email": "이메일",
        "app.changePassword.label.phone": "전화",

        "app.passwordPolicy.passwordRequirements": "비밀번호 필수 요건",
        "app.passwordPolicy.label.currentpassword": "현재 비밀번호",
        "app.passwordPolicy.label.newpassword": "새 비밀번호",
        "app.passwordPolicy.label.confirmpassword": "새 비밀번호 확인",
        "app.passwordPolicy.minLength": "최소 {0}자",
        "app.passwordPolicy.leastIncludes": "최소한 다음 포함:",
        "app.passwordPolicy.minLower": "{0}개 문자",
        "app.passwordPolicy.minUpper": "{0}개 대문자",
        "app.passwordPolicy.minDigit": "{0}개 숫자",
        "app.passwordPolicy.minSpecial": "{0}개 특수 문자",

        "app.coachmarks.bookmarkTitle": "북마크를 사용하는 방법",
        "app.coachmarks.bookmarkMessage": "웹사이트를 눌러서 실행하고, 길게 눌러서 자세히 알아볼 수 있습니다.",
        "app.coachmarks.catalogTitle": "카탈로그를 사용하는 방법",
        "app.coachmarks.catalogMessage": "앱을 설치 또는 업데이트하거나, 북마크하거나, 여기에서 바로 여십시오.",
        "app.coachmarks.buttonText": "확인",

        "app.logout.confirm.msg": "Workspace ONE에서 로그아웃하면 현재 세션이 종료됩니다. 카탈로그에서 다운로드한 모든 앱은 장치에 유지되지만 다시 로그인하지 않으면 새로운 앱을 사용할 수 없습니다.",
        "app.logout.title": "경고",

        "app.passwordVault.banner.msg": "Workspace One 확장을 이용할 수 있는 앱이 있습니다.",
        "app.passwordVault.banner.button.install": "설치",
        "app.passwordVault.banner.setPreference": "나중에 설정 - 기본 설정에서 가져올 수 있습니다.",
        "app.passwordVault.banner.donotshowagain": "다시 표시 안 함",
        "app.passwordVault.banner.button.later": "나중에",
        "app.passwordVault.banner.button.get": "가져오기",
        "app.passwordVault.preference.title": "Workspace ONE 확장",
        "app.passwordVault.preference.instruction": "Workspace One 확장을 이용할 수 있는 앱이 있습니다.",
        "app.passwordVault.preference.getextension": "확장을 가져오십시오.",
        "app.bookmarking.change.tab.title": "그래도 북마크를 정렬하시겠습니까?",
        "app.bookmarking.change.tab.body": "변경한 사항이 저장되지 않게 됩니다. 북마크를 계속 정렬하시겠습니까?",
        "app.bookmarking.touch.disabled": "트랙패드나 마우스를 사용하는 경우 앱을 재정렬할 수 있습니다.",
        "app.bookmarking.change.tab.exit": "아니요, 끝내겠습니다.",
        "app.bookmarking.change.tab.stay": "예, 계속 진행하겠습니다.",
        "app.virtual.disabled": "관리자가 사용하지 않도록 설정",
        "app.virtual.unavailable": "이 장치에서 이 애플리케이션을 사용할 수 없습니다.",
        "app.virtual.not.available": "사용할 수 없음",

        "app.notification.type.NEW_ENTITLEMENTS": "해당 항목 확인",
        "app.notification.type.PASSWORD_EXPIRING": "암호 업데이트",
        "app.notification.action.delete": "삭제",
        "notification.new.entitlements.heading": "새로운 권한",
        "notification.new.entitlements.message": "새로운 권한 {0}개가 할당되었습니다.",
        "app.notification.delete.header": "이 알림을 삭제하시겠습니까?",
        "app.notification.delete.msg": "이 알림을 삭제하시겠습니까? 나중에 이 알림을 보관하려면 보관을 선택하면 됩니다. ",
        "app.notification.delete.text": "삭제",
        "app.notification.keep.text": "유지",
        "app.notification.restore.text": "복원",
        "app.notification.delete.toast.msg": "알림이 삭제되었습니다.",
        "app.notification.empty": "모두 마쳤습니다!",
        "app.notification.more.actions": "추가 작업",
        "app.notification.archive.all": "모두 보관",

        "app.notification.bookmark.all.error": "죄송합니다. 모든 새 애플리케이션을 북마크할 수 없습니다.",
        "app.notification.bookmark.all.success": "모든 새 애플리케이션이 즐겨찾기에 추가됨",
        "app.notification.delete.all": "모두 삭제",
        "app.notification.see.archived": "보관된 버전 보기",
        "app.notification.see.all": "모든 알림 보기",
        "app.notification.newApps.title": "새로운 앱을 다운로드했습니다!",
        "app.notification.newApps.excessIconsMessage": "+ {0} 이상",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "세부 정보 보기",
        "app.tooltip.clicktolaunch": "클릭하여 시작",

        "recommendedApps.install.proceed": "계속",
        "recommendedApps.install.title": "추천된 앱 설치",
        "recommendedApps.install.confirm.msg": "앱의 설치를 계속하기 위한 프롬프트가 나타납니다.",
        "recommendedApps.text1": "해당 앱은 동료들이 흔히 사용합니다.",
        "recommendedApps.text2": "지금 이러한 앱을 설치하거나 나중에 카탈로그에서 찾아볼 수 있습니다.",
        "recommendedApps.selectAll": "모두 선택",
        "recommendedApps.apps": "앱",
        "recommendedApps.install": "설치",
        "recommendedApps.skip": "건너뛰기",

        "app.desktopapp.settings.title.account": "계정",
        "app.desktopapp.settings.title.devices": "장치",
        "app.desktopapp.settings.title.preferences": "기본 설정",

        "appCenter.peopleSearch.placeholder": "피플 검색",
        "app.tooltip.copyEmail": "이메일 복사",
        "app.peopleSearch.emailCopied": "이메일 복사됨",
        "appCenter.peopleSearch.noResults": "결과가 없습니다.",
        "appCenter.peopleSearch.tryNewSearch": "새로 검색해 보십시오.",
        "appCenter.peopleSearch.atLeastThreeChars": "위에 3자 이상 입력하여 검색하십시오.",
        "appCenter.searchPeople": "피플을 검색하십시오.",
        "myapps.mobilepagetitle.people": "사용자",
        "app.people.labels.team": "내 팀",
        "app.people.labels.recent": "최근 항목",
        "app.people.labels.manager": "관리자",
        "app.people.labels.peers": "동료",
        "app.people.labels.directReports": "직속 부하 직원",
        "app.people.labels.profile": "프로파일",
        "app.people.labels.org": "조직",
        "app.people.labels.workEmail": "업무용 이메일",
        "app.people.labels.workPhone": "업무용 전화",
        "app.people.labels.alternateNumber": "대체 전화",
        "app.people.labels.mobile": "휴대 전화",
        "app.people.labels.address": "주소",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "관리자",
        "app.people.labels.skypeForBusiness": "비즈니스용 Skype",
        "app.people.labels.employeeNumber": "직원 번호",
        "app.people.labels.skills": "기술",
        "app.people.labels.businessUnit": "사업부",
        "app.people.labels.costCenter": "비용 센터",
        "app.people.labels.physicalDeliveryOfficeName": "사무실 위치",

        "hub.apps": "애플리케이션",
        "hub.notifications": "알림",
        "hub.notifications.welcome": "환영합니다!",
        "hub.notifications.first.time.message": "Hub를 사용하기 시작하면 알림이 여기에 나타납니다.",
        "hub.notifications.new.apps.favorite.all": "모두 즐겨찾기",
        "hub.notifications.congratulations": "축하합니다!",
        "hub.notifications.empty.description1": "새 알림이 없습니다.",
        "hub.notifications.empty.description2": "여유 공간의 이점을 누리십시오.",
        "hub.v2.notifications.empty.description": "모든 알림이 표시됩니다.",
        "hub.v2.notifications.first.time.description": "Hub를 사용하기 시작하면 알림이 여기에 나타납니다.",
        "hub.notifications.empty.description.archived": "아카이브된 알림이 없습니다.",
        "hub.notifications.priority": "우선 순위",
        "hub.notifications.today": "오늘",
        "hub.notifications.yesterday": "어제",
        "hub.notifications.lastWeek": "지난주",
        "hub.notifications.lastMonth": "지난달",
        "hub.notifications.older": "이전 버전",
        "hub.notifications.archived.label": "보관됨",
        "hub.notifications.action.success": "성공!",
        "hub.notifications.action.failure": "죄송합니다. 해당 작업을 실행하는 동안 오류가 발생했습니다.",
        "hub.notifications.moreDetails": "자세한 정보",
        "hub.notifications.dialog.action.completed": "완료됨",
        "hub.notifications.dialog.action.needed": "대기 중",
        "hub.notifications.dialog.action.all.notifications": "모든 알림",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "앱 검색",
        "hub.apps.favorites": "즐겨찾기",
        "hub.apps.newApps": "새로 만들기",
        "hub.apps.recommended": "권장",
        "hub.apps.categories": "카테고리",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "공간이 정말 많군요.",
        "hub.apps.no.apps.msg2": "관리자에게 문의하여 업무 애플리케이션을 가져옵니다.",
        "hub.apps.search.in.category": "카테고리에서 {0}개 결과:",
        "hub.apps.search.in.app": "애플리케이션 이름 및 설명에서 {0}개 결과",
        "hub.apps.search.header": "전체 결과",
        "hub.apps.search.no.result.header": "결과 없음.",
        "hub.apps.search.no.result.msg": "다른 용어를 사용하여 다시 시도하십시오.",
        "hub.apps.searchpeople.no.result.msg": "다른 이름을 사용하여 다시 시도하십시오.",
        "hub.apps.type.web": "웹",
        "hub.apps.type.Virtual": "웹",
        "hub.apps.type.application": "애플리케이션",
        "hub.apps.type.anyApp": "AnyApp",
        "hub.people": "사용자",
        "hub.people.search.text": "피플 검색",
        "hub.people.labels.mypeers": "내 동료",
        "hub.people.labels.directreports": "직속 부하 직원",
        "hub.people.labels.manager": "내 관리자",
        "hub.people.labels.organization": "조직",
        "hub.people.search.result": "결과",
        "hub.app.install.prompt.title": "설치하시겠습니까?",

        "hub.actionsheet.label.viewDetails": "상세 정보 보기",
        "hub.actionsheet.label.removeFavorites": "즐겨찾기에서 제거",
        "hub.actionsheet.label.addFavorites": "즐겨찾기에 추가",
        "hub.password.done": "완료",

        "hub.placeholder.changepassword.username": "사용자 이름",
        "hub.placeholder.changepassword.password": "암호",
        "hub.placeholder.changepassword.confirmpassword": "비밀번호 확인",

        "hub.tunnel.text.line1": "액세스하려면 Tunnel 필요 ",
        "hub.tunnel.text.line2": "Tunnel 애플리케이션이 해당 애플리케이션과 함께 자동으로 다운로드됩니다.",

        "hub.promotions.banner.category.title": "카테고리 하이라이트",
        "hub.promotions.banner.category.open": "열기",
        "hub.promotions.banner.app.get": "가져오기",
        "hub.promotions.banner.disabled": "관리자가 사용하지 않도록 설정",
        "hub.require.app.management": "관리됨",
        "hub.app.installing.alert.mobile.message": "{0} 애플리케이션을 설치하고 있습니다. 휴대폰의 홈 화면에서 업데이트를 확인하십시오.",
        "hub.app.installing.alert.desktop.message": "{0} 애플리케이션을 설치하고 있습니다. 데스크톱의 앱 런처에서 업데이트를 확인하십시오.",

        "hub.nav.label.apps": "애플리케이션",
        "hub.nav.label.people": "사용자",
        "hub.nav.label.notification": "알림",
        "hub.nav.label.settings": "설정",
        "hub.nav.label.account": "계정",
        "hub.nav.label.signout": "로그아웃",
        "hub.userInfo.adminConsole": "관리 콘솔",
        "hub.userInfo.signout": "로그아웃",
        "hub.userInfo.settings": "설정",
        "hub.userInfo.account": "계정",
        "hub.userInfo.devices": "장치",
        "hub.userInfo.whatsnew": "새로운 기능",
        "hub.userInfo.about": "알아볼 기능",
        "hub.download.ios": "iOS용 Hub",
        "hub.download.android": "Android용 Hub",
        "hub.download.mac": "Mac용 Hub",
        "hub.download.windows": "Windows용 Hub",
        "hub.download.subtitle.mobile": "한 곳에서 알림, 홈 등에 대한 액세스 권한을 얻습니다.",
        "hub.download.subtitle.desktop": "데스크톱 알림을 받고 도킹에서 바로 시작합니다.",
        "hub.preferences.title": "기본 설정",
        "hub.preferences.horizon.subtitle": "Horizon 원격 앱",
        "hub.preferences.launch.question": "Horizon 원격 앱을 시작할 방법을 선택하십시오.",
        "hub.about.title": "VMware Intelligent Hub 정보",
        "hub.apps.allApps": "모든 앱",
        "hub.apps.configure.favorites.msg": "더 빠른 액세스를 위해 여기에 즐겨찾는 애플리케이션 추가",
        "hub.apps.configure.favorites": "구성",
        "hub.apps.edit.favorites": "편집",

        "hub.contextDialog.label.removeFavorites": "즐겨찾기에서 제거",
        "hub.contextDialog.label.addFavorites": "즐겨찾기에 추가",
        "hub.contextDialog.label.viewDetails": "상세 정보 보기",
        "hub.apps.edit.favorites.header": "즐겨찾기 편집 모드",
        "hub.apps.edit.favorites.prompt": "끌어다 놓아 재정렬합니다.",
        "hub.apps.edit.favorites.save": "저장",
        "hub.apps.edit.favorites.cancel": "변경 내용 취소",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "순서를 업데이트했습니다. 종료하기 전에 저장하거나 취소하십시오.",
        "hub.apps.edit.favorites.savecustomordering": "사용자 지정 순서를 저장 중입니다. 결과가 손실되지 않도록 하려면 이동하지 마십시오.",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "터치 스크린에서는 재정렬할 수 없습니다.",
        "hub.apps.edit.favorites.notify.success": "재정렬된 즐겨찾기가 저장되었습니다!",
        "hub.apps.edit.favorites.notify.error": "오류가 발생했습니다. 재정렬된 상태를 저장할 수 없습니다. 나중에 다시 시도하십시오.",

        "hub.nav.label.settings.settings": "설정",
        "hub.nav.label.settings.account": "계정",
        "hub.nav.label.settings.about": "정보",
        "hub.nav.label.settings.devices": "장치",
        "hub.nav.label.settings.preferences": "기본 설정",
        "hub.nav.label.settings.whatsnew": "새로운 기능",

        "hub.apps.detail.back": "앱으로 돌아가기",
        "hub.people.detail.back": "People로 돌아가기",
        "hub.people.notifications.back": "알림으로 돌아가기",

        "hub.nav.label.notifications.filter": "필터",
        "hub.nav.label.notifications.all.notifications": "모든 알림",
        "hub.nav.label.notifications.action.needed": "대기 중",
        "hub.nav.label.notifications.completed": "완료됨",
        "hub.long.card.description": "설명",
        "hub.long.card.Comment": "설명",
        "hub.long.card.Comment.placeholder": "설명 추가",

        "hub.appLaunch.open": "열기",
        "hub.appLaunch.cancel": "취소"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "en",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Installeren",
        "app.banner.open": "Openen",
        "app.promotion.banner.donotshowagain": "Niet opnieuw weergeven. Dit is toegankelijk via Instellingen - Over.",
        "app.promotion.banner.open": "Openen in app",
        "app.promotion.banner.download": "App downloaden",
        "app.promotion.banner.message": "Profiteer van een betere ervaring in de app.",
        "horizonDesktopNotDetected": "VMware Identity Manager Desktop moet op deze computer geïnstalleerd zijn om deze applicatie te openen. <a target='_blank' href='{0}'>Installeer VMware Identity Manager Desktop</a> als u dat nog niet gedaan heeft.",
        "viewAppsTooltip": "Voor deze gehoste Horizon-applicatie moet {0} Horizon Client{1} 3.0 of recenter zijn geïnstalleerd op uw computer.",
        "desktoneDesktopTooltip": "Voor deze Horizon Cloud-desktop moet {0}Horizon Client{1} op uw computer zijn geïnstalleerd.",
        "desktoneApplicationTooltip": "Voor deze Horizon Cloud-applicatie moet {0}Horizon Client{1} op uw computer zijn geïnstalleerd.",
        "xenAppsReceiverNotDetected": "Citrix Receiver moet op deze computer geïnstalleerd zijn om deze applicatie te openen. <a target='_blank' href='{0}'>Installeer Citrix Receiver</a> als u dat nog niet gedaan heeft.",
        "button.save": "Opslaan",
        "button.update": "Bijwerken",
        "button.openHorizonView": "Horizon Client openen",
        "myapps.launch.openApp": "{0} openen",
        "button.openApp": "App openen",
        "button.clear": "Wissen",
        "button.close": "Sluiten",
        "button.cancel": "Annuleren",
        "button.download": "Downloaden",
        "myapps.launch.title.launch": "Starten",
        "myapps.launch.title": "Applicatie starten",
        "myapps.launch.view.openWith": "Openen met",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Browser",
        "myapps.launch.view.preferredClient.isDefault": "(standaard)",
        "myapps.launch.view.selectPreferredLaunchClient": "Selecteer hoe u Horizon-desktops en -applicaties wilt openen",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Externe Horizon-apps",
        "myapps.launch.view.selectPreferredLaunchClientText": "Open de externe Horizon-apps in de Horizon Client voor een betere ervaring dan met de browser.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Hoe wilt u de externe Horizon-apps starten?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "KIES EEN STANDAARDMETHODE...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Hiermee wordt bepaald hoe een Horizon-desktop op uw toestel standaard geopend wordt. Als u Horizon Client als uw standaardinstelling selecteert, moet Horizon Client zijn geïnstalleerd. <a target='_blank' href='{0}'>Installeer Horizon Client</a> als u dat nog niet gedaan heeft.",
        "myapps.launch.view.unknownClientType": "Onbekend client-type om Horizon Client mee te openen.",
        "myapps.launch.view.openWithView": "Openen met Horizon Client",
        "myapps.launch.view.openWithBrowser": "Openen met Browser",

        "myapps.launch.view.preferredClient.byBrowser.description": "Als u Browser selecteert, zal uw desktop of applicatie worden geopend in een nieuw browservenster.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Voor dit item is Horizon Client 3.0 of recenter vereist. <a target='_blank' href='{0}'>Installeer Horizon Client</a> als u dat nog niet gedaan heeft.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "U kunt deze instelling altijd wijzigen in het menu met voorkeursinstellingen.",
        "myapps.launch.view.preferredClient.saveSuccess": "Geselecteerde voorkeur is opgeslagen.",
        "myapps.launch.msg.launching.desktop": "Desktop wordt gestart <b>{0}</b> .....",
        "myapps.launch.msg.launching.application": "Applicatie wordt gestart <b>{0}</b> .....",
        "myapps.noAppsMsg": "U heeft geen apps toegevoegd. U kunt naar de {0} gaan om applicaties toe te voegen",
        "myapps.noFavAppsMsg": "U heeft nog geen bladwijzers gemaakt voor apps",
        "myapps.welcomeMsg": "Hallo {0}. Hier zijn uw apps!",
        "myapps.bookmarks.empty.message": "Maak bladwijzers voor veelvuldig gebruikte apps om ze snel te openen.",
        "myapps.bookmarks.empty.hidecatalog.message": "U heeft momenteel geen applicaties die beschikbaar zijn voor gebruik.",
        "myapps.bookmarks.empty.addbookmarks": "Bladwijzers toevoegen",
        "myapps.bookmarks.organize.title": "Uw bladwijzers indelen",
        "myapps.bookmarks.organize.addbookmarks": "Bladwijzers toevoegen",
        "myapps.bookmarks.organize.batchremove": "Verwijderen",

        "myapps.mobilepagetitle.apps": "Apps",
        "myapps.mobilepagetitle.details": "Gegevens",
        "myapps.mobilepagetitle.support": "Ondersteuning",
        "myapps.mobilepagetitle.settings": "Instellingen",
        "myapps.mobilepagetitle.recommendedapps": "Aanbevolen voor u",
        "myapps.mobilepagetitle.notification": "Meldingen",
        "myapps.mobilepagetitle.archived": "Gearchiveerd",
        "myapps.mobilepagetitle.notification.newapps": "Nieuwe apps",

        "myapps.dialog.openApp": "Openen",
        "myapps.dialog.openAppWithViewClient": "Openen in Client",
        "myapps.dialog.openAppWithBrowser": "In Browser openen",

        "myapps.launch.passwordvault.installExtension.description": "Deze applicatie kan gebruik maken van de browser-extensie Password Vault. <a target='_blank' href='{0}'>Installeer de extensie</a> als u dat nog niet gedaan heeft.",

        "deviceStatus.networkLost": "Verbinding verbroken. Proberen opnieuw verbinding te maken…",
        "deviceStatus.networkRestored": "Netwerkverbinding hersteld",
        "api.session.expired.retry": "Sessie is verlopen. We proberen nu de sessie te vernieuwen...",
        "api.entitlements.reload": "De weergave wordt vernieuwd om de apps in uw catalogus bij te werken.",
        "api.security.header.invalid.relogin": "Validatie van beveiligingsheader is mislukt, u wordt uitgelogd..",
        "api.server.load.error": "We ondervinden een zwaardere belasting dan gebruikelijk. Probeer het later opnieuw.",
        "api.updateApps": "De lijst wordt geüpdatet...",
        "api.error": "Er is een fout opgetreden. Probeer het opnieuw.",
        "installation.error": "Systeemeigen apps zijn tijdelijk onbeschikbaar",
        "service.under.maintenance.error": "Workspace ONE is tijdelijk in onderhoudsmodus. U kunt uw applicaties wel opstarten, maar sommige functies werken wellicht niet.",
        "api.timeout": "Time-out in de verbinding. Probeer het opnieuw.",
        "favoriteStatus.favorite": "Fav. toev.",
        "favoriteStatus.unfavorite": "Fav. verw.",
        "favoriteStatus.offlineFavoriteMessage": "U kunt geen bladwijzers maken voor apps als u offline bent. Maak verbinding en probeer het opnieuw.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "U kunt geen bladwijzers verwijderen voor apps als u offline bent. Maak verbinding en probeer het opnieuw.",
        "error.failToFavoriteApp": "De bladwijzerstatus kon niet worden bijgewerkt.",
        "error.failedToResetApp": "De app kon niet worden gereset.",
        "error.failToHideApp": "De applicatie kon niet worden verwijderd.",
        "error.failToShowApp": "De applicatie kon niet aan de Launcher worden toegevoegd.",
        "error.failedToBookmarkApp": "Er kon geen bladwijzer worden gemaakt voor de app.",
        "error.failedToLaunchApp": "De app kon niet worden geopend.",
        "error.failedToRemoveAccount": "Account kan niet worden verwijderd. Probeer het later opnieuw.",
        "installStatus.enrollDevice": "Om {0} te kunnen gebruiken, moet Workspace Services geactiveerd worden, zodat bedrijfsgegevens beveiligd worden.",
        "installStatus.enrollDevice.learnMore": "Meer informatie",
        "installStatus.offlineInstallMessage": "U kunt geen applicaties installeren als u offline bent. Maak verbinding en probeer het opnieuw.",
        "installStatus.activated": "Geactiveerd",
        "installStatus.notActivated": "Niet-geactiveerd",
        "installStatus.request": "Aanvragen",
        "installStatus.update": "Bijwerken",
        "installStatus.processing": "Verwerken",
        "installStatus.installFailedMessage": "Er is iets misgegaan tijdens het installeren van de {0}-app. Probeer het opnieuw. Neem contact op met uw systeembeheerder als het probleem blijft voortduren.",
        "installStatus.unenrolledDevice": "Deze applicatie is niet meer beschikbaar voor u. Klik op OK om de lijst bij te werken.",
        "installMessage.continueInstall": "U heeft al eerder geprobeerd deze app te installeren. ",
        "installMessage.proceedToInstall": "Klik om verder te gaan.",
        "installMessage.installingOnDevice": "Installeren op toestel...",

        "app.mobileApp.versionAndMBSize": "{0} MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0} GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Workspace Services inschakelen",
        "app.adaptivemanagement.ws1servicessubtitle": "Dit is vereist om de app te kunnen installeren. U ontvangt automatisch:",
        "app.adaptivemanagement.valueproposition1": "Directe installatie van alle bedrijfsresources.",
        "app.adaptivemanagement.valueproposition2": "Beveiligde toegang tot het bedrijfsnetwerk.",
        "app.adaptivemanagement.valueproposition3": "Gesynchroniseerde apps en inhoud op al uw toestellen.",
        "app.adaptivemanagement.valueproposition4": "Een verbeterde app-ervaring waardoor u productiever kunt zijn.",
        "app.adaptivemanagement.privacylink": "Uw privacy",

        "app.tunnel.continue": "Doorgaan",
        "app.tunnel.text.line1": "VMware Tunnel-app is vereist voor toegang",
        "app.tunnel.text.line2": "Tunnel-app wordt automatisch samen met uw app gedownload.",
        "app.tunnel.header": "VMware Tunnel is vereist",
        "app.tunnel.message": "Voor het gebruik van deze app moet VMware Tunnel zijn geïnstalleerd en worden uitgevoerd.",
        "recommendedApps.tunnel.text.line1": "VMware Tunnel-app is vereist voor toegang",
        "recommendedApps.tunnel.text.line2": "Tunnel-app wordt automatisch samen met uw app gedownload.",
        "app.tunnel.installHelpText": "Als de installatie van de apps niet automatisch is gestart, voert u deze stappen uit om de apps in te schakelen",
        "app.tunnel.installStep1": "Stap 1: installeer de app {0}",
        "app.tunnel.installStep2": "Stap 2: installeer de app {0}",

        "requestFailed": "Aanvraag is mislukt",
        "changeOccurred": "Er is een wijzing opgetreden.",
        "requestSuccessful": "Aanvraag geslaagd",
        "accept": "Accepteren",
        "decline": "Weigeren",
        "termsOfUse": "Gebruikersovereenkomst",
        "beforeInstallation": "Voor installatie",
        "resetDesktopStatus.offlineMessage": "U kunt geen desktop opnieuw instellen als u offline bent. Maak verbinding en probeer het opnieuw.",
        "resetDesktop.sucess": "Desktop opnieuw instellen geslaagd.",
        "appCenter.someAppsMissingMessage": "Niet alle applicaties kunnen op dit moment worden geladen.",
        "appCenter.register.device": "Bepaalde informatie over uw toestel moet worden bijgewerkt. Druk op Bijwerken om door te gaan met Workspace ONE.",
        "appCenter.mdm.device.error": "U heeft niet langer toegang tot Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Neem contact op met uw beheerder voor de gegevens van uw account.",
        "appCenter.mdm.device.poll.error": "We kunnen uw werkplek momenteel niet voltooien. Probeer het opnieuw of neem contact op met uw beheerder.",
        "appCenter.device.status.notRegistered": "Toestel is niet geregistreerd.",
        "appCenter.device.status.blackListed": "Dit toestel staat op de zwarte lijst.",
        "appCenter.device.status.deviceInputError": "Dit toestel is ongeldig. Neem contact op met uw systeembeheerder a.u.b.",
        "appCenter.device.status.unknownError": "Er is een onbekende fout opgetreden.",

        "appCenter.device.register": "Toestel registreren",
        "appCenter.device.moreDetails": "Meer details",
        "appCenter.device.unEnrollWarningTitle": "Uw account verwijderen?",
        "appCenter.device.mdmUnEnrollMessage": "Als u uw account verwijdert, hebt u geen toegang meer tot bedrijfsbronnen en worden mogelijk zakelijke apps op dit toestel verwijderd.",
        "appCenter.device.getDeviceEnrollmentStatus": "Meer informatie krijgen",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Weet u zeker dat u wilt doorgaan?",
        "appCenter.device.remove": "Verwijderen",
        "appCenter.device.keep": "Behouden",
        "appCenter.device.disableWorkspaceMessage": "Als u uw account verwijdert, worden alle toegangsrechten die via de Workspace ONE-app zijn verleend ingetrokken. Applicaties die naar uw startscherm zijn gedownload blijven geïnstalleerd, maar u kunt ze wellicht niet meer openen. Wilt u verdergaan?",
        "appCenter.noAppsMsg": "Er zijn momenteel geen applicaties beschikbaar.",
        "appCenter.vppInviteTitle": "Registratie voor beheerde distributie",
        "appCenter.appInstallConfirmPromptTitle": "Bevestig installatie",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Goedkeuring nodig voor",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Uw aanvraag is eerder geweigerd",
        "appCenter.mdmAppRequestConfirmPromptMessage": "De applicatie waartoe u toegang probeert te krijgen, moet worden goedgekeurd door uw beheerder",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "U heeft al goedkeuring aangevraagd voor deze applicatie en uw aanvraag is geweigerd. Weet u zeker dat u het opnieuw wilt proberen?",
        "appCenter.acceptInvite": "Accepteer uitnodiging",
        "appCenter.install": "Installeren",
        "appCenter.proceed": "Workspace Services inschakelen",
        "appCenter.cancel": "Annuleren",
        "appCenter.confirm": "Bevestigen",
        "appCenter.searchApps": "Zoeken naar apps.",
        "appCenter.welcomeMsg": "Installeer nieuwe applicaties: waar dan ook en op elk toestel!",
        "appCenter.done": "Gereed",
        "appCenter.nav.privacyPage": "Pagina met privacybeleid",
        "appCenter.nav.catalog": "Catalogus",
        "appCenter.nav.myApps": "Mijn applicaties",
        "appCenter.nav.favorites": "Favorieten",
        "appCenter.nav.categories": "Categorieën",
        "appCenter.nav.filterby": "Filteren op",
        "appCenter.nav.show": "Weergeven",
        "appCenter.nav.settings": "Instellingen",
        "appCenter.nav.sortBy": "Sorteren op",
        "appCenter.nav.sortBy.alpha": "Sorteren van A tot Z",
        "appCenter.nav.sortBy.inverseAlpha": "Sorteren van Z tot A",
        "appCenter.nav.sortBy.customView": "Aangepaste weergave",
        "appCenter.nav.arrange": "Rangschikken",
        "appCenter.nav.arrange.saved": "Aangepaste weergave is opgeslagen.",
        "appCenter.nav.arrange.tooltip": "Alleen beschikbaar in Windows.",
        "appCenter.nav.arrange.saving": "Opslaan...",
        "appCenter.nav.arrange.error": "Opslaan van aangepaste weergave niet mogelijk",
        "appCenter.nav.filter": "Filter",
        "appCenter.installFailedTitle": "Probleem met installatie van app",
        "appCenter.uccConflict": "Er is iets misgegaan met de huidige sessie. Log opnieuw in.",

        "appCenter.search.placeholder": "Zoeken",
        "appCenter.search.noResults": "Geen resultaten gevonden.",

        "appCenter.action.open": "Openen",
        "appCenter.action.install": "Installeren",
        "appCenter.action.installing": "Installeren",
        "appCenter.action.installed": "Geïnstalleerd",
        "appCenter.action.reinstall": "Opnieuw installeren",
        "appCenter.action.add": "Toevoegen",
        "appCenter.action.added": "Toegevoegd",
        "appCenter.action.processing": "Verwerken",
        "appCenter.action.update": "Bijwerken",
        "appCenter.action.request": "Aanvragen",
        "appCenter.action.pending": "In behandeling",
        "appCenter.action.view": "View",
        "appCenter.action.favorite": "Fav. toev.",
        "appCenter.action.unfavorite": "Fav. verw.",

        "appCenter.internalApp.installtionModalTitle": "Installatiestappen voor app",
        "appCenter.internalApp.installationStepTitle": "Volg deze stappen na installatie om de applicatie te openen.",
        "appCenter.internalApp.step1": "Open Instellingen vanaf het startscherm op uw iOS-toestel.",
        "appCenter.internalApp.step2": "Klik op Algemeen.",
        "appCenter.internalApp.step3": "Tik op Beheer profielen en apparaten.",
        "appCenter.internalApp.step4": "Klik op de naam van een ontwikkelaar onder de kop Bedrijfsapp. ",
        "appCenter.internalApp.step5": "App controleren of vertrouwen",
        "appCenter.internalApp.watchTutorial": "Bekijk de stapsgewijze instructies.",

        "appCenter.type.web": "Website",
        "appCenter.type.native": "Systeemeigen app",
        "appCenter.type.native.platform": "{0}-app",
        "appCenter.type.virtual": "Virtuele app",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "Appbundel",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Categorieën",
        "myapp.nav.favorites": "Favorieten",
        "myapp.nav.allApps": "Alle apps",
        "myapp.nav.recommendedApps": "Aanbevolen",
        "myapp.nav.newlyEntitledApps": "Nieuw",
        "myapp.nav.webApps": "Websites",
        "myapp.nav.mobileApps": "Mobiele apps",
        "myapp.nav.macApps": "Mac-apps",
        "myapp.nav.windowsApps": "Windows-apps",
        "myapp.nav.virtualApps": "Virtueel",
        "myapp.label.new": "Nieuw",
        "myapp.nav.filterby": "Filteren op",
        "myapp.nav.mobile.filter.pagetitle": "Filteren op categorieën",
        "appCenter.nav.browseBy": "Bladeren op",

        "appCenter.catalog.empty": "Er zijn blijkbaar nog geen apps aan u toegewezen. U mag ze binnenkort verwachten. Kom dus snel terug.",

        "userInfo.adminConsole": "Beheerdersconsole",
        "userInfo.settings": "Instellingen",
        "userInfo.notifications": "Meldingen",
        "userInfo.support": "Ondersteuning",
        "userInfo.preferences": "Voorkeuren",
        "userInfo.about": "Info",
        "userInfo.devices": "Toestellen",
        "userInfo.settings.promo.title": "Workspace ONE-app downloaden",
        "userInfo.settings.promo.message": "Workspace ONE zorgt voor een betere ervaring in de app. Nu proberen?",

        "userInfo.tips": "Apptips",
        "userInfo.tips.description": "Krijg hulp bij het gebruik van de app.",

        "userInfo.tips.bookmarks": "Hoe kunt u bladwijzers gebruiken?",
        "userInfo.tips.catalog": "Hoe kunt u de catalogus gebruiken?",
        "userInfo.tips.people": "Nieuw: Hoe kunt u contacten gebruiken?",
        "userInfo.tips.notification": "Nieuw: Hoe kunt u meldingen gebruiken?",

        "userInfo.tips.catalog.desktop1": "Klik op Openen om een website in de browser te openen. Gebruik {0} om deze als bladwijzer te markeren.",
        "userInfo.tips.catalog.desktop2": "Klik op het pictogram of de naam van de app voor meer informatie.",
        "userInfo.tips.catalog.mobile1": "Gebruik {0} om een website in de browser te openen. Gebruik {1} om deze als bladwijzer te markeren.",
        "userInfo.tips.catalog.mobile2": "Gebruik {0} om een systeemeigen app op uw toestel te installeren. {1} betekent dat u uw toestel moet registreren om deze apps te kunnen gebruiken.",
        "userInfo.tips.catalog.mobile3": "Tik op het pictogram of de naam van de app voor meer informatie.",

        "userInfo.tips.bookmarks.desktop1": "Klik op de tegel om de website in uw browser te starten.",
        "userInfo.tips.bookmarks.desktop2": "Wijs de tegel aan om meer acties in het menu '...' te bekijken.",

        "userInfo.tips.bookmarks.mobile": "Tik op de tegel om een website in uw browser te openen. Ingedrukt houden voor meer acties.",

        "userInfo.tips.catalog.download.phone": "Tik op het pictogram {0} om een systeemeigen app op uw toestel te installeren. Het pictogram {1} betekent dat u uw toestel moet registreren om deze apps te kunnen gebruiken.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Tik op het pictogram {0} om een website in de browser te openen. Tik op het pictogram {1} om een bladwijzer voor deze website te maken. Tik op het pictogram of de naam van de app voor meer informatie.",

        "userInfo.tips.catalog.download.tablet": "Download apps door op de downloadknop te klikken. Voor meer informatie tikt u op de app",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Start apps door op de startknop te klikken. Als u bladwijzers voor apps wilt aanmaken, klikt u op de bladwijzerknop",

        "userInfo.tips.people.mobile": "Klik op {0} om van een profiel terug te gaan naar de voornaamste beginpagina voor Contacten zoeken.",
        "userInfo.tips.notification.mobile": "Klik op {0} voor toegang tot uw meldingen. De meldingenbadge blijft actief totdat u alle meldingen heeft verwijderd of actie heeft ondernomen.",

        "userInfo.tips.title": "Apptips",
        "userInfo.tips.intro": "Krijg hulp bij het gebruik van de app.",
        "userInfo.tips.desktop": "Desktop",
        "userInfo.tips.reordering.title": "Pas uw bladwijzers aan.",
        "userInfo.tips.reordering.text1": "1. Ga naar de aangepaste weergave met de vervolgkeuzelijst in de rechterbovenhoek.",
        "userInfo.tips.reordering.text2": "2. Kies Rangschikken. ",
        "userInfo.tips.reordering.text3": "3. Versleep uw bladwijzers om ze opnieuw te rangschikken. Klik op Opslaan wanneer u klaar bent.",
        "userInfo.tips.mobile": "Mobiele toestellen",

        "userInfo.removeAccount": "Account verwijderen",
        "userInfo.account": "Account",
        "userInfo.profile": "Profiel",
        "userInfo.profile.name": "Naam:",
        "userInfo.profile.email": "E-mailadres:",
        "userInfo.profile.username": "Gebruikersnaam:",
        "userInfo.profile.picture": "Profielfoto",
        "userInfo.profile.password": "Wachtwoord",
        "userInfo.profile.passwordchange": "Wijzigen",
        "userInfo.profile.passwordprompt": "Uw wachtwoord voor het bedrijfssysteem beheren.",
        "userInfo.password": "Wachtwoord",
        "userInfo.termsofuse": "Gebruikersovereenkomst",
        "userInfo.signout": "Uitloggen",
        "userInfo.tryAgain": "Opnieuw",
        "userInfo.managedevicesettings": "Toestelinstellingen beheren",
        "userInfo.notification": "Pushmelding",
        "userInfo.passcode": "Touch ID of toegangscode",

        "appCenter.support.selfservice": "Selfservice",
        "appCenter.support.managedevices": "Toestellen",
        "appCenter.support.managedevicestext": "Bekijk uw toestelgegevens.",
        "appCenter.support.managepassword": "Wachtwoord wijzigen",
        "appCenter.support.managepasswordtext": "Wachtwoord voor uw bedrijfsaccount wijzigen",
        "appCenter.support.gethelp": "Hulp vragen",
        "appCenter.support.appstips": "Apps en tips",
        "appCenter.support.appstipstext": "Zie Help-knopinfo in deze app",
        "appCenter.support.sendReportTitle": "Rapport verzenden",
        "appCenter.support.sendReportDetails": "Ontdek hoe u diagnostische gegevens van de app kunt verzenden.",
        "appCenter.support.helpdesk": "Helpdesk",
        "appCenter.support.contacthelpdesk": "Contact opnemen met helpdesk",
        "appCenter.reportProblems.ios.sendLogInstruction": "Schud dit toestel wanneer er een fout optreedt, om eenvoudig diagnostische gegevens van de app te verzenden of om feedback te geven.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "U kunt deze functie in- of uitschakelen in de instellingen voor uw toestel.",

        // App Details Page
        "app.details.link.back": "Terug",
        "app.details.nav.details": "Gegevens",
        "app.details.nav.reviews": "Beoordelingen",
        "app.details.label.description": "Beschrijving",
        "app.details.label.noDescription": "Geen omschrijving beschikbaar",
        "app.details.label.seeFullDetails": "Detail weergeven",
        "app.details.label.removeBookmark": "Verwijderen",
        "app.details.label.resetDektop": "Resetten",
        "app.details.label.information": "Informatie",
        "app.details.label.category": "Categorieën",
        "app.details.label.version": "Versie",
        "app.details.label.type": "Type",
        "app.details.label.type.SAML11": "Webapplicatie",
        "app.details.label.type.SAML20": "Webapplicatie",
        "app.details.label.type.WEBAPPLINK": "Webapplicatie",
        "app.details.label.type.MDMWEB": "Webapplicatie",
        "app.details.label.type.WSFED12": "Webapplicatie",
        "app.details.label.type.XENAPP": "Xen App",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix Desktop",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Profiel",
        "app.details.label.type.VIEWPOOL": "Horizon-desktop",
        "app.details.label.type.VIEWAPP": "Horizon-applicatie",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud-desktop",
        "app.details.label.type.DESKTONEAPPLICATION": "Horizon Cloud-app",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Webapplicatie",
        "app.details.label.type.PUBLIC": "Openbare app",
        "app.details.label.type.INTERNAL": "Intern",
        "app.details.label.size": "Omvang",
        "app.details.label.price": "Prijs",
        "app.details.label.screenshots": "Schermafdrukken",
        "app.details.label.showMore": "Meer weergeven",
        "app.details.label.showLess": "Minder weergeven",
        "app.details.label.setAppPassword": "Wachtwoord",
        "app.details.label.sendFeedback": "Feedback verzenden",
        "app.details.label.feedbackSubject": "Feedback voor app {0}",
        "app.details.label.support": "Ondersteuning",
        "app.details.label.developer": "Ontwikkelaar",
        "app.details.label.email": "E-mail",
        "app.details.label.phone": "Telefoon",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "Alle mobiele apps kunnen vanaf het startscherm worden gestart.",

        "app.details.label.requirement": "Vereisten:",
        "app.details.label.packageName": "Pakketnaam:",
        "app.details.thinapp.requirement": "Deze applicatie werkt alleen op een Windows-computer met Identity Manager Desktop geïnstalleerd.",
        "app.details.viewDesktop.requirement": "Voor deze Horizon-desktop moet {0} Horizon Client{1} 3.0 of recenter op uw computer zijn geïnstalleerd.",
        "app.details.viewapp.requirement": "Voor deze gehoste Horizon-applicatie moet {0} Horizon Client{1} 3.0 of recenter zijn geïnstalleerd op uw computer.",
        "app.details.xenapp.requirement": "Voor deze applicatie moet {0} Citrix Receiver {1} zijn geïnstalleerd.",
        "app.details.xenapp.msg.IE8OrLower": "Voor deze applicatie moet Citrix Receiver geïnstalleerd zijn. N.B: deze applicatie kan niet in Internet Explorer 8 worden geopend.",
        "app.details.xenappsDeliveryGroup.requirement": "Voor deze Citrix-desktop moet {0} Citrix Receiver {1} zijn geïnstalleerd.",
        "app.details.desktoneDesktop.requirement": "Voor deze Horizon Cloud-desktop moet {0}Horizon Client{1} op uw computer zijn geïnstalleerd.",
        "app.details.desktoneApp.requirement": "Voor deze Horizon Cloud-applicatie moet {0}Horizon Client{1} op uw computer zijn geïnstalleerd.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "Geen informatie beschikbaar",
        "app.details.noScreenshots": "Geen schermafdrukken beschikbaar",
        "app.details.noDescription": "De beschrijving wordt binnenkort verwacht.",
        "app.details.needsDeviceEnrollment": "Toestel moet zijn geregistreerd",
        "app.details.label.addToHomeScreen": "Toevoegen aan startscherm",
        "app.details.action.open": "Openen",
        "app.details.action.bookmark": "Bladwijzer",
        "app.details.action.bookmarked": "Bladwijzer gemaakt",
        "app.details.action.launch": "Starten",
        "app.details.action.setPassword": "Wachtwoord instellen",
        "app.details.action.pvAppCredentials": "Inloggegevens",
        "app.details.info.msg.missingInfo": "Er ontbreekt bepaalde informatie. Probeer het later opnieuw om alle details te bekijken.",
        "app.details.wsrequired.msg": "Workspace Services vereist.",
        "app.details.label.addedFavorites": "Toegevoegd aan favorieten",

        "app.rating.label": "Gebruikersbeoordeling",

        "app.settings.label.settings": "Instellingen",
        "app.settings.link.back": "Terug",
        "app.settings.managedDevices": "Beheerde toestellen",
        "app.nav.tab.bookmark": "Bladwijzers",
        "app.nav.tab.catalog": "Catalogus",
        "app.nav.tab.people": "Mensen",
        "app.nav.tab.support": "Ondersteuning",
        "app.nav.tab.apps": "Apps",
        "app.nav.tab.settings": "Instellingen",
        "app.about.heading": "Over Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc. Alle rechten voorbehouden. Dit product wordt beschermd door auteursrechten en wetten voor intellectuele eigendomsrechten in de Verenigde Staten en in andere landen, en door internationale verdragen. VMware-producten worden gedekt door een of meer octrooien.",
        "app.about.button.label.privacyPolicy": "Privacybeleid",
        "app.about.button.label.patents": "Patent",
        "app.about.button.label.licenseAgreement": "Licentieovereenkomst",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-nl",
        "app.about.licenseAgreementLink": "http://www.vmware.com/nl/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/nl/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Toestellen",
        "app.devices.tableColumn.deviceName": "Toestelnaam",
        "app.devices.tableColumn.userDeviceId": "Toestel-ID",
        "app.devices.tableColumn.lastLoginTime": "Laatste keer ingelogd",
        "app.devices.unlinkDevice": "Koppeling verwijderen",
        "app.devices.unlinkedDevice": "Koppeling verwijderd",
        "app.devices.emptyDeviceListMessage": "Er is geen toestel gekoppeld aan uw account.",

        "app.thinappMultiDeviceAct.heading": "Deze applicatie wordt toegevoegd aan de goedgekeurde toestellen. Als u {0} ook op andere toestellen wilt gebruiken, zoekt u de naam van het toestel in de lijst hieronder en klikt u vervolgens op de knop Aanvragen.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Toestelnaam",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Status",
        "app.thinappMultiDeviceAct.button.request": "Aanvragen",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Afgewezen",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "In behandeling",
        "app.thinappMultiDeviceAct.activationState.activated": "Goedgekeurd",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Niet-geactiveerd",

        "app.thinappsInPackage.button.done": "Gereed",
        "app.thinappsInPackage.button.bookmarkAll": "Bladwijzer maken voor alle apps",
        "app.thinappsInPackage.info": "Appbundel",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} apps",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} overeenkomst gevonden.",
        "app.thinappsInPackage.action.instruction": "Kies het bladwijzerpictogram om een bladwijzer voor één app aan te maken of kies de knop om voor alle apps een bladwijzer te maken.",
        "app.thinappsInPackage.search.placeholder": "Zoeken in pakket",

        "app.setAppPassword.heading": "Wachtwoord instellen",
        "app.setAppPassword.instruction": "Gebruik het formulier hieronder om een wachtwoord voor deze applicatie in. Het wachtwoord moet uit ten minste drie tekens bestaan.",
        "app.setAppPassword.label.password": "Wachtwoord",
        "app.setAppPassword.label.confirmPassword": "Wachtwoord bevestigen",
        "app.setAppPassword.label.generate": "Wachtwoord genereren",
        "app.setAppPassword.error.passwordsNoMatch": "Wachtwoorden komen niet overeen.",
        "app.setAppPassword.msg.success": "Uw applicatiewachtwoord is met succes ingesteld.",
        "app.setAppPassword.msg.fail": "Er is een fout opgetreden tijdens de poging om uw wachtwoord in te stellen. Probeer het opnieuw.",

        "pvapp.setAppPassword.heading": "Opgeslagen inloggegevens voor {0} instellen",
        "pvapp.setAppPassword.instruction": "Gebruik het ondersteunde formulier om opgeslagen inloggegevens voor deze applicatie in te stellen.",
        "pvapp.setAppPassword.label.username": "Gebruikersnaam",
        "pvapp.setAppPassword.label.password": "Wachtwoord",
        "pvapp.setAppPassword.error.userNameEmpty": "Gebruikersnaam is leeg.",
        "pvapp.setAppPassword.error.passwordEmpty": "Wachtwoord is leeg.",
        "pvapp.setAppPassword.msg.success": "De inloggegevens voor de applicatie zijn ingesteld.",
        "pvapp.setAppPassword.msg.fail": "Er is een fout opgetreden tijdens de poging om de inloggegevens voor de applicatie in te stellen. Probeer het opnieuw.",

        "app.launchPassword.heading": "Wachtwoordaanvraag",
        "app.launchPassword.view.instruction": "We hebben uw wachtwoord nodig om in te loggen bij deze Windows-resource {0}.",
        "app.launchPassword.label.userName": "Gebruiker",
        "app.launchPassword.label.password": "Wachtwoord",
        "app.launchPassword.button.label.signin": "Inloggen",

        "app.changePassword.title": "Wachtwoord wijzigen",
        "app.changePassword.enterCurrentPassword": "Huidig wachtwoord invoeren",
        "app.changePassword.enterNewPassword": "Nieuw wachtwoord invoeren",
        "app.changePassword.confirmNewPassword": "Nieuw wachtwoord bevestigen",
        "app.changePassword.error.passwordsNoMatch": "Nieuw wachtwoord onjuist ingevoerd.",
        "app.changePassword.error.requirementsNoMatch": "Nieuw wachtwoord voldoet niet aan vereisten.",
        "app.changePassword.success": "Nieuw wachtwoord opgeslagen.",
        "app.changePassword.label.email": "E-mail",
        "app.changePassword.label.phone": "Telefoon",

        "app.passwordPolicy.passwordRequirements": "Wachtwoordvereisten",
        "app.passwordPolicy.label.currentpassword": "Huidig wachtwoord",
        "app.passwordPolicy.label.newpassword": "Nieuw wachtwoord",
        "app.passwordPolicy.label.confirmpassword": "Nieuw wachtwoord bevestigen",
        "app.passwordPolicy.minLength": "Minimaal {0} cijfers",
        "app.passwordPolicy.leastIncludes": "bevat ten minste:",
        "app.passwordPolicy.minLower": "{0} letter",
        "app.passwordPolicy.minUpper": "{0} hoofdletter",
        "app.passwordPolicy.minDigit": "{0} cijfer",
        "app.passwordPolicy.minSpecial": "{0} speciaal teken",

        "app.coachmarks.bookmarkTitle": "Hoe u bladwijzers kunt gebruiken",
        "app.coachmarks.bookmarkMessage": "Tik om websites te starten. Druk en houd vast om meer te ontdekken.",
        "app.coachmarks.catalogTitle": "Hoe u Catalog kunt gebruiken",
        "app.coachmarks.catalogMessage": "Installeer of update apps. Voeg bladwijzers toe of open ze meteen hier.",
        "app.coachmarks.buttonText": "Ok, ik snap het",

        "app.logout.confirm.msg": "Als u uit Workspace ONE uitlogt, wordt uw huidige sessie beëindigd. Alle apps die uit de catalogus zijn gedownload blijven op het toestel aanwezig, maar nieuwe apps worden niet beschikbaar gesteld totdat u weer inlogt.",
        "app.logout.title": "WAARSCHUWING",

        "app.passwordVault.banner.msg": "U hebt apps die gebruik kunnen maken van de Workspace ONE-extensie.",
        "app.passwordVault.banner.button.install": "Installeren",
        "app.passwordVault.banner.setPreference": "U kunt deze later ophalen bij Instellingen - Voorkeuren.",
        "app.passwordVault.banner.donotshowagain": "Dit niet opnieuw weergeven",
        "app.passwordVault.banner.button.later": "Later",
        "app.passwordVault.banner.button.get": "Ophalen",
        "app.passwordVault.preference.title": "Workspace ONE-extensie",
        "app.passwordVault.preference.instruction": "U hebt apps die gebruik kunnen maken van de Workspace ONE-extensie.",
        "app.passwordVault.preference.getextension": "Haal de extensie op.",
        "app.bookmarking.change.tab.title": "Rangschikt u uw bladwijzers nog?",
        "app.bookmarking.change.tab.body": "De wijzigingen die u hebt gemaakt, worden niet opgeslagen. Wilt u uw bladwijzers blijven rangschikken?",
        "app.bookmarking.touch.disabled": "U kunt apps opnieuw rangschikken met uw trackpad of muis.",
        "app.bookmarking.change.tab.exit": "Nee, afsluiten",
        "app.bookmarking.change.tab.stay": "Ja, hier blijven",
        "app.virtual.disabled": "Uitgeschakeld door beheerder",
        "app.virtual.unavailable": "Deze app is niet beschikbaar op dit toestel",
        "app.virtual.not.available": "Niet beschikbaar",

        "app.notification.type.NEW_ENTITLEMENTS": "Nu verkennen",
        "app.notification.type.PASSWORD_EXPIRING": "Wachtwoord bijwerken",
        "app.notification.action.delete": "Verwijderen",
        "notification.new.entitlements.heading": "Nieuwe rechten",
        "notification.new.entitlements.message": "U heeft {0} nieuwe entitlements toegewezen",
        "app.notification.delete.header": "Deze melding verwijderen?",
        "app.notification.delete.msg": "Weet u zeker dat u deze melding wilt verwijderen? U kunt Archiveren kiezen als u deze later wilt archiveren. ",
        "app.notification.delete.text": "Verwijderen",
        "app.notification.keep.text": "Behouden",
        "app.notification.restore.text": "Herstellen",
        "app.notification.delete.toast.msg": "Melding is verwijderd.",
        "app.notification.empty": "U bent weer helemaal bij.",
        "app.notification.more.actions": "Meer acties",
        "app.notification.archive.all": "Alles archiveren",

        "app.notification.bookmark.all.error": "Kan helaas geen bladwijzer toevoegen aan al uw nieuwe apps",
        "app.notification.bookmark.all.success": "Alle nieuwe apps zijn toegevoegd aan favorieten",
        "app.notification.delete.all": "Alles verwijderen",
        "app.notification.see.archived": "Gearchiveerd weergeven",
        "app.notification.see.all": "Alle meldingen weergeven",
        "app.notification.newApps.title": "U heeft nieuwe apps.",
        "app.notification.newApps.excessIconsMessage": "+ nog {0}",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Details weergeven",
        "app.tooltip.clicktolaunch": "Klik om te openen",

        "recommendedApps.install.proceed": "Doorgaan",
        "recommendedApps.install.title": "Aanbevolen apps installeren",
        "recommendedApps.install.confirm.msg": "U wordt gevraagd te bevestigen dat u wilt doorgaan met de installatie van uw apps.",
        "recommendedApps.text1": "Deze apps worden vaak gebruikt door uw collega's.",
        "recommendedApps.text2": "U kunt ze nu installeren of later opzoeken in uw catalogus.",
        "recommendedApps.selectAll": "Alles selecteren",
        "recommendedApps.apps": "apps",
        "recommendedApps.install": "Installeren",
        "recommendedApps.skip": "Overslaan",

        "app.desktopapp.settings.title.account": "Account",
        "app.desktopapp.settings.title.devices": "Toestellen",
        "app.desktopapp.settings.title.preferences": "Voorkeuren",

        "appCenter.peopleSearch.placeholder": "Contacten zoeken",
        "app.tooltip.copyEmail": "E-mail kopiëren",
        "app.peopleSearch.emailCopied": "E-mail gekopieerd",
        "appCenter.peopleSearch.noResults": "Geen resultaten gevonden",
        "appCenter.peopleSearch.tryNewSearch": "Probeer een nieuwe zoekopdracht.",
        "appCenter.peopleSearch.atLeastThreeChars": "Voer hierboven 3 of meer tekens in om te zoeken.",
        "appCenter.searchPeople": "Zoek naar personen.",
        "myapps.mobilepagetitle.people": "Mensen",
        "app.people.labels.team": "Mijn team",
        "app.people.labels.recent": "Recente items",
        "app.people.labels.manager": "Manager",
        "app.people.labels.peers": "Peers",
        "app.people.labels.directReports": "Directe ondergeschikten",
        "app.people.labels.profile": "Profiel",
        "app.people.labels.org": "Org",
        "app.people.labels.workEmail": "E-mailadres werk",
        "app.people.labels.workPhone": "Telefoon werk",
        "app.people.labels.alternateNumber": "Alternatieve telefoon",
        "app.people.labels.mobile": "Mobiel",
        "app.people.labels.address": "Adres",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Managers",
        "app.people.labels.skypeForBusiness": "Skype voor Bedrijven",
        "app.people.labels.employeeNumber": "Nummer van werknemer",
        "app.people.labels.skills": "Vaardigheden",
        "app.people.labels.businessUnit": "Bedrijfsunit",
        "app.people.labels.costCenter": "Kostenplaats",
        "app.people.labels.physicalDeliveryOfficeName": "Kantoorlocatie",

        "hub.apps": "Apps",
        "hub.notifications": "Meldingen",
        "hub.notifications.welcome": "Welkom!",
        "hub.notifications.first.time.message": "Hier worden meldingen weergegeven wanneer u begint met het gebruik van Hub.",
        "hub.notifications.new.apps.favorite.all": "Alle instellen als favoriet",
        "hub.notifications.congratulations": "Gefeliciteerd!",
        "hub.notifications.empty.description1": "Geen nieuwe meldingen.",
        "hub.notifications.empty.description2": "Profiteer van de extra schijfruimte.",
        "hub.v2.notifications.empty.description": "U wordt geheel in beslag genomen door uw meldingen",
        "hub.v2.notifications.first.time.description": "Hier worden meldingen weergegeven wanneer u begint met het gebruik van Hub.",
        "hub.notifications.empty.description.archived": "Geen gearchiveerde meldingen.",
        "hub.notifications.priority": "Prioriteit",
        "hub.notifications.today": "Vandaag",
        "hub.notifications.yesterday": "Gisteren",
        "hub.notifications.lastWeek": "Vorige week",
        "hub.notifications.lastMonth": "Vorige maand",
        "hub.notifications.older": "Ouder",
        "hub.notifications.archived.label": "Gearchiveerd",
        "hub.notifications.action.success": "Gelukt!",
        "hub.notifications.action.failure": "Er treedt een fout op bij het uitvoeren van die actie",
        "hub.notifications.moreDetails": "Meer details",
        "hub.notifications.dialog.action.completed": "Voltooid",
        "hub.notifications.dialog.action.needed": "In behandeling",
        "hub.notifications.dialog.action.all.notifications": "Alle meldingen",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Apps zoeken",
        "hub.apps.favorites": "Favorieten",
        "hub.apps.newApps": "Nieuw",
        "hub.apps.recommended": "Aanbevolen",
        "hub.apps.categories": "Categorieën",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Geweldig veel ruimte hier.",
        "hub.apps.no.apps.msg2": "Neem contact op met de beheerder om zakelijke apps op te halen.",
        "hub.apps.search.in.category": "{0} resultaten in categorie:",
        "hub.apps.search.in.app": "{0} resultaten in appnaam en beschrijving",
        "hub.apps.search.header": "Totaal aantal resultaten",
        "hub.apps.search.no.result.header": "Geen resultaten.",
        "hub.apps.search.no.result.msg": "Probeer het opnieuw met een andere term.",
        "hub.apps.searchpeople.no.result.msg": "Probeer het opnieuw met een andere naam.",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "Applicatie",
        "hub.apps.type.anyApp": "Elke app",
        "hub.people": "Mensen",
        "hub.people.search.text": "Contacten zoeken",
        "hub.people.labels.mypeers": "Mijn peers",
        "hub.people.labels.directreports": "Directe ondergeschikten",
        "hub.people.labels.manager": "Mijn manager",
        "hub.people.labels.organization": "Organisatie",
        "hub.people.search.result": "Resultaten",
        "hub.app.install.prompt.title": "Wilt u installeren",

        "hub.actionsheet.label.viewDetails": "Details weergeven",
        "hub.actionsheet.label.removeFavorites": "Verwijderen uit favorieten",
        "hub.actionsheet.label.addFavorites": "Toevoegen aan favorieten",
        "hub.password.done": "Gereed",

        "hub.placeholder.changepassword.username": "Gebruikersnaam",
        "hub.placeholder.changepassword.password": "Wachtwoord",
        "hub.placeholder.changepassword.confirmpassword": "Wachtwoord bevestigen",

        "hub.tunnel.text.line1": "Tunnel is vereist voor toegang ",
        "hub.tunnel.text.line2": "Tunnel-applicatie wordt automatisch samen met uw app gedownload.",

        "hub.promotions.banner.category.title": "Uitgelichte categorieën",
        "hub.promotions.banner.category.open": "Openen",
        "hub.promotions.banner.app.get": "Ophalen",
        "hub.promotions.banner.disabled": "Uitgeschakeld door beheerder",
        "hub.require.app.management": "Beheerd",
        "hub.app.installing.alert.mobile.message": "De applicatie {0} wordt geïnstalleerd. Controleer op updates in het startscherm van uw telefoon.",
        "hub.app.installing.alert.desktop.message": "De applicatie {0} wordt geïnstalleerd. Controleer op updates in het startprogramma voor apps van uw computer.",

        "hub.nav.label.apps": "Apps",
        "hub.nav.label.people": "Mensen",
        "hub.nav.label.notification": "Meldingen",
        "hub.nav.label.settings": "Instellingen",
        "hub.nav.label.account": "Account",
        "hub.nav.label.signout": "Uitloggen",
        "hub.userInfo.adminConsole": "Beheerdersconsole",
        "hub.userInfo.signout": "Uitloggen",
        "hub.userInfo.settings": "Instellingen",
        "hub.userInfo.account": "Account",
        "hub.userInfo.devices": "Toestellen",
        "hub.userInfo.whatsnew": "Nieuw",
        "hub.userInfo.about": "Info",
        "hub.download.ios": "Hub voor iOS",
        "hub.download.android": "Hub voor Android",
        "hub.download.mac": "Hub voor Mac",
        "hub.download.windows": "Hub voor Windows",
        "hub.download.subtitle.mobile": "Krijg op één locatie toegang tot Meldingen, Start en nog veel meer.",
        "hub.download.subtitle.desktop": "Ontvang desktopmeldingen en start direct vanuit uw dock.",
        "hub.preferences.title": "Voorkeuren",
        "hub.preferences.horizon.subtitle": "Externe Horizon-apps",
        "hub.preferences.launch.question": "Hoe wilt u externe Horizon-apps starten?",
        "hub.about.title": "Over VMware Intelligent Hub",
        "hub.apps.allApps": "Alle apps",
        "hub.apps.configure.favorites.msg": "Voeg hier uw favoriete apps toe voor snellere toegang",
        "hub.apps.configure.favorites": "Configureren",
        "hub.apps.edit.favorites": "Bewerken",

        "hub.contextDialog.label.removeFavorites": "Verwijderen uit favorieten",
        "hub.contextDialog.label.addFavorites": "Toevoegen aan favorieten",
        "hub.contextDialog.label.viewDetails": "Details weergeven",
        "hub.apps.edit.favorites.header": "Bewerkingsmodus voor favorieten",
        "hub.apps.edit.favorites.prompt": "Slepen en neerzetten om opnieuw te ordenen.",
        "hub.apps.edit.favorites.save": "Opslaan",
        "hub.apps.edit.favorites.cancel": "Wijzigingen annuleren",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "U heeft de volgorde bijgewerkt. Annuleer of sla op voordat u afsluit",
        "hub.apps.edit.favorites.savecustomordering": "Aangepaste volgorde wordt opgeslagen. Navigeer niet weg om verlies van resultaten te voorkomen",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Opnieuw rangschikken niet beschikbaar op aanraakschermen.",
        "hub.apps.edit.favorites.notify.success": "Nieuwe volgorde van favorieten is opgeslagen.",
        "hub.apps.edit.favorites.notify.error": "Er is een fout opgetreden. Kan nieuwe volgorde niet opslaan. Probeer het later.",

        "hub.nav.label.settings.settings": "Instellingen",
        "hub.nav.label.settings.account": "Account",
        "hub.nav.label.settings.about": "Info",
        "hub.nav.label.settings.devices": "Toestellen",
        "hub.nav.label.settings.preferences": "Voorkeuren",
        "hub.nav.label.settings.whatsnew": "Nieuw",

        "hub.apps.detail.back": "Terug naar Apps",
        "hub.people.detail.back": "Terug naar People",
        "hub.people.notifications.back": "Terug naar Meldingen",

        "hub.nav.label.notifications.filter": "Filter",
        "hub.nav.label.notifications.all.notifications": "Alle meldingen",
        "hub.nav.label.notifications.action.needed": "In behandeling",
        "hub.nav.label.notifications.completed": "Voltooid",
        "hub.long.card.description": "Beschrijving",
        "hub.long.card.Comment": "Opmerking",
        "hub.long.card.Comment.placeholder": "Een opmerking toevoegen",

        "hub.appLaunch.open": "Openen",
        "hub.appLaunch.cancel": "Annuleren"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "i",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Zainstaluj",
        "app.banner.open": "Otwórz",
        "app.promotion.banner.donotshowagain": "Nie pokazuj tych informacji ponownie. Można je wyświetlić w sekcji Ustawienia - Informacje.",
        "app.promotion.banner.open": "Otwórz w aplikacji",
        "app.promotion.banner.download": "Pobierz aplikację",
        "app.promotion.banner.message": "Uzyskaj lepsze działanie aplikacji.",
        "horizonDesktopNotDetected": "Aby otworzyć tę aplikację, na komputerze należy zainstalować program VMware Identity Manager Desktop. <a target='_blank' href='{0}'>Zainstaluj program VMware Identity Manager Desktop</a>, jeśli nie został on jeszcze zainstalowany.",
        "viewAppsTooltip": "Ta aplikacja hostowana na platformie Horizon wymaga zainstalowania na komputerze programu {0}Horizon Client{1} w wersji 3.0 lub nowszej.",
        "desktoneDesktopTooltip": "Ten pulpit Horizon Cloud wymaga zainstalowania na komputerze klienta {0} Horizon Client {1}.",
        "desktoneApplicationTooltip": "Ta aplikacja Horizon Cloud wymaga zainstalowania na komputerze klienta {0} Horizon Client {1}.",
        "xenAppsReceiverNotDetected": "Aby otworzyć tę aplikację, na komputerze należy zainstalować oprogramowanie Citrix Receiver. <a target='_blank' href='{0}'>Zainstaluj aplikację Citrix Receiver</a>, jeśli nie została jeszcze zainstalowana.",
        "button.save": "Zapisz",
        "button.update": "Aktualizuj",
        "button.openHorizonView": "Otwórz Horizon Client",
        "myapps.launch.openApp": "Otwórz {0}",
        "button.openApp": "Otwórz aplikację",
        "button.clear": "Wyczyść",
        "button.close": "Zamknij",
        "button.cancel": "Anuluj",
        "button.download": "Pobierz",
        "myapps.launch.title.launch": "Uruchom",
        "myapps.launch.title": "Uruchom aplikację",
        "myapps.launch.view.openWith": "Otwórz za pomocą",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Przeglądarka",
        "myapps.launch.view.preferredClient.isDefault": "(domyślnie)",
        "myapps.launch.view.selectPreferredLaunchClient": "Wybierz, jak chcesz uruchamiać pulpity i aplikacje Horizon",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Aplikacje zdalne Horizon",
        "myapps.launch.view.selectPreferredLaunchClientText": "Otwieranie aplikacji zdalnych Horizon w Horizon Client pozwala na wygodniejszą pracę niż otwieranie w przeglądarce.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "W jaki sposób uruchomić aplikacje zdalne Horizon?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "WYBIERZ URUCHAMIANIE DOMYŚLNE…",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Określa domyślny sposób uruchamiania pulpitu Horizon w przypadku otwierania go z poziomu urządzenia. Jeśli jako opcję domyślną wybrano klienta Horizon Client, wymagany jest zainstalowany klient Horizon Client. <a target='_blank' href='{0}'>Zainstaluj klienta Horizon Client</a>, jeśli nie został on jeszcze zainstalowany.",
        "myapps.launch.view.unknownClientType": "Nieznany typ klienta do otwarcia programu Horizon Client.",
        "myapps.launch.view.openWithView": "Otwórz za pomocą klienta Horizon Client",
        "myapps.launch.view.openWithBrowser": "Otwórz za pomocą przeglądarki",

        "myapps.launch.view.preferredClient.byBrowser.description": "Po wybraniu opcji przeglądarki pulpit lub aplikacja zostaną otwarte w nowym oknie przeglądarki.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Ta pozycja wymaga klienta Horizon Client w wersji 3.0 lub nowszej. <a target='_blank' href='{0}'>Zainstaluj klienta Horizon Client</a>, jeśli nie jest jeszcze zainstalowany.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Zawsze możesz zmienić to ustawienie w preferencjach.",
        "myapps.launch.view.preferredClient.saveSuccess": "Pomyślnie zapisano wybraną preferencję.",
        "myapps.launch.msg.launching.desktop": "Uruchamianie pulpitu <b>{0}</b> .....",
        "myapps.launch.msg.launching.application": "Uruchamianie aplikacji <b>{0}</b> .....",
        "myapps.noAppsMsg": "Nie dodano żadnych aplikacji. Aplikacje można dodać z poziomu programu {0}.",
        "myapps.noFavAppsMsg": "Nie dodano żadnych aplikacji do zakładek",
        "myapps.welcomeMsg": "Witaj, {0}! Oto Twoje aplikacje!",
        "myapps.bookmarks.empty.message": "Dodaj często używane aplikacje do zakładek, aby mieć do nich szybki dostęp.",
        "myapps.bookmarks.empty.hidecatalog.message": "Obecnie nie masz żadnych aplikacji dostępnych do użycia.",
        "myapps.bookmarks.empty.addbookmarks": "Dodaj zakładki",
        "myapps.bookmarks.organize.title": "Organizuj zakładki",
        "myapps.bookmarks.organize.addbookmarks": "Dodaj zakładki",
        "myapps.bookmarks.organize.batchremove": "Usuń",

        "myapps.mobilepagetitle.apps": "Aplikacje",
        "myapps.mobilepagetitle.details": "Szczegóły",
        "myapps.mobilepagetitle.support": "Pomoc techniczna",
        "myapps.mobilepagetitle.settings": "Ustawienia",
        "myapps.mobilepagetitle.recommendedapps": "Polecane dla Ciebie",
        "myapps.mobilepagetitle.notification": "Powiadomienia",
        "myapps.mobilepagetitle.archived": "Zarchiwizowano",
        "myapps.mobilepagetitle.notification.newapps": "Nowe aplikacje",

        "myapps.dialog.openApp": "Otwórz",
        "myapps.dialog.openAppWithViewClient": "Otwórz w kliencie",
        "myapps.dialog.openAppWithBrowser": "Otwórz w przeglądarce",

        "myapps.launch.passwordvault.installExtension.description": "W aplikacji można korzystać z rozszerzenia Password Vault. <a target='_blank' href='{0}'>Zainstaluj rozszerzenie</a>, jeśli nie jest jeszcze zainstalowane.",

        "deviceStatus.networkLost": "Utracono połączenie. Trwa próba ponownego nawiązania połączenia…",
        "deviceStatus.networkRestored": "Przywrócono połączenie z siecią",
        "api.session.expired.retry": "Sesja wygasła. Trwa próba odnowienia…",
        "api.entitlements.reload": "Odświeżanie widoku w celu aktualizacji aplikacji w katalogu.",
        "api.security.header.invalid.relogin": "Błąd sprawdzania nagłówka bezpieczeństwa. Trwa wylogowywanie...",
        "api.server.load.error": "Odnotowaliśmy większe obciążenie niż zazwyczaj. Spróbuj ponownie później.",
        "api.updateApps": "Aktualizowanie listy...",
        "api.error": "Wystąpił błąd. Spróbuj ponownie.",
        "installation.error": "Aplikacje natywne są tymczasowo niedostępne",
        "service.under.maintenance.error": "Workspace ONE jest tymczasowo w trybie konserwacji. Możesz uruchomić swoje aplikacje, ale niektóre funkcje mogą nie działać.",
        "api.timeout": "Przekroczono czas oczekiwania na połączenie. Spróbuj ponownie.",
        "favoriteStatus.favorite": "Dodaj",
        "favoriteStatus.unfavorite": "Usuń",
        "favoriteStatus.offlineFavoriteMessage": "Funkcja dodawania aplikacji do zakładek jest niedostępna w trybie offline. Połącz się ponownie i spróbuj jeszcze raz.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "Funkcja usuwania zakładki z aplikacji jest niedostępna w trybie offline. Połącz się ponownie i spróbuj jeszcze raz.",
        "error.failToFavoriteApp": "Aktualizacja stanu zakładki nie powiodła się.",
        "error.failedToResetApp": "Resetowanie aplikacji nie powiodło się",
        "error.failToHideApp": "Usuwanie aplikacji nie powiodło się.",
        "error.failToShowApp": "Dodawanie aplikacji do uruchamiacza nie powiodło się.",
        "error.failedToBookmarkApp": "Dodawanie do zakładek nie powiodło się.",
        "error.failedToLaunchApp": "Otwieranie aplikacji nie powiodło się.",
        "error.failedToRemoveAccount": "Usuwanie konta nie powiodło się. Spróbuj ponownie później.",
        "installStatus.enrollDevice": "Korzystanie z aplikacji {0} wymaga aktywacji usług Workspace Services w celu ochrony danych firmowych.",
        "installStatus.enrollDevice.learnMore": "Dowiedz się więcej",
        "installStatus.offlineInstallMessage": "Żądania instalacji są niedostępne w trybie offline. Połącz się ponownie i spróbuj jeszcze raz.",
        "installStatus.activated": "Aktywowane",
        "installStatus.notActivated": "Nieaktywowane",
        "installStatus.request": "Zażądaj",
        "installStatus.update": "Aktualizuj",
        "installStatus.processing": "Przetwarzanie",
        "installStatus.installFailedMessage": "Wystąpił błąd podczas instalacji aplikacji {0}. Spróbuj ponownie. Jeśli problem nie zniknie, skontaktuj się z administratorem IT.",
        "installStatus.unenrolledDevice": "Aplikacja ta nie jest już dla Ciebie dostępna. Naciśnij OK, aby zaktualizować listę.",
        "installMessage.continueInstall": "Już wcześniej próbowano zainstalować tę aplikację. ",
        "installMessage.proceedToInstall": "Kliknij, aby kontynuować.",
        "installMessage.installingOnDevice": "Instalowanie na urządzeniu...",

        "app.mobileApp.versionAndMBSize": "{0}MB | wer.{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | wer.{1}",
        "app.adaptivemanagement.ws1servicestitle": "Włącz usługi Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "Tę operację należy wykonać przed zainstalowaniem aplikacji. Użytkownik automatycznie uzyska:",
        "app.adaptivemanagement.valueproposition1": "Możliwość bezpośredniej instalacji wszystkich zasobów firmowych",
        "app.adaptivemanagement.valueproposition2": "Bezpieczny dostęp do sieci firmowej",
        "app.adaptivemanagement.valueproposition3": "Możliwość synchronizowania aplikacji i treści na wszystkich urządzeniach",
        "app.adaptivemanagement.valueproposition4": "Ulepszone działanie aplikacji, zwiększające wydajność pracy",
        "app.adaptivemanagement.privacylink": "Prywatność",

        "app.tunnel.continue": "Kontynuuj",
        "app.tunnel.text.line1": "Do uzyskania dostępu jest wymagana aplikacja VMware Tunnel",
        "app.tunnel.text.line2": "Aplikacja Tunnel zostanie pobrana automatycznie wraz z tą aplikacją.",
        "app.tunnel.header": "Aplikacja VMware Tunnel jest wymagana",
        "app.tunnel.message": "Do korzystania z tej aplikacji wymagana jest zainstalowana i uruchomiona aplikacja VMware Tunnel.",
        "recommendedApps.tunnel.text.line1": "Do uzyskania dostępu jest wymagana aplikacja VMware Tunnel",
        "recommendedApps.tunnel.text.line2": "Aplikacja Tunnel zostanie pobrana automatycznie wraz z tą aplikacją.",
        "app.tunnel.installHelpText": "Jeśli aplikacje nie rozpoczną instalacji automatycznie, wykonaj te czynności, aby uruchomić aplikację",
        "app.tunnel.installStep1": "Krok 1. Zainstaluj aplikację {0}",
        "app.tunnel.installStep2": "Krok 2. Zainstaluj aplikację {0}",

        "requestFailed": "Żądanie nie powiodło się",
        "changeOccurred": "Zaszła zmiana",
        "requestSuccessful": "Żądanie powiodło się",
        "accept": "Zaakceptuj",
        "decline": "Odrzuć",
        "termsOfUse": "Warunki użytkowania",
        "beforeInstallation": "Przed instalacją",
        "resetDesktopStatus.offlineMessage": "Resetowanie pulpitu jest niedostępne w trybie offline. Połącz się i spróbuj ponownie.",
        "resetDesktop.sucess": "Zresetowano pulpit",
        "appCenter.someAppsMissingMessage": "Nie można było teraz załadować wszystkich aplikacji",
        "appCenter.register.device": "Aktualizacja niektórych informacji o Twoim urządzeniu jest wymagana. Aby nadal korzystać z usługi Workspace ONE, naciśnij przycisk Aktualizuj.",
        "appCenter.mdm.device.error": "Nie masz już dostępu do usługi Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Skontaktuj się z administratorem, aby uzyskać dane konta.",
        "appCenter.mdm.device.poll.error": "Obecnie nie można ukończyć tworzenia dla Ciebie obszaru roboczego. Spróbuj ponownie lub skontaktuj się z administratorem.",
        "appCenter.device.status.notRegistered": "Urządzenie nie jest zarejestrowane",
        "appCenter.device.status.blackListed": "To urządzenie znajduje się na czarnej liście",
        "appCenter.device.status.deviceInputError": "To urządzenie jest nieprawidłowe! Skontaktuj się z administratorem IT",
        "appCenter.device.status.unknownError": "Wystąpił nieznany błąd",

        "appCenter.device.register": "Zarejestruj urządzenie",
        "appCenter.device.moreDetails": "Więcej szczegółów",
        "appCenter.device.unEnrollWarningTitle": "Usunąć Twoje konto?",
        "appCenter.device.mdmUnEnrollMessage": "Usunięcie konta spowoduje zablokowanie dostępu do zasobów firmowych i może spowodować usunięcie aplikacji roboczych na tym urządzeniu.",
        "appCenter.device.getDeviceEnrollmentStatus": "Pobieranie dodatkowych informacji",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Czy na pewno chcesz kontynuować?",
        "appCenter.device.remove": "Usuń",
        "appCenter.device.keep": "Zachowaj",
        "appCenter.device.disableWorkspaceMessage": "Usunięcie konta cofnie dostęp udzielony przez aplikację Workspace ONE. Aplikacje pobrane na Twój springboard pozostaną zainstalowane, lecz dostęp może zostać usunięty. Czy chcesz kontynuować?",
        "appCenter.noAppsMsg": "Obecnie żadne aplikacje nie są dostępne",
        "appCenter.vppInviteTitle": "Rejestracja dystrybucji zarządzanej",
        "appCenter.appInstallConfirmPromptTitle": "Potwierdź instalację",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Zatwierdzenie wymagane dla",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Twoje żądanie zostało wcześniej odrzucone",
        "appCenter.mdmAppRequestConfirmPromptMessage": "Aplikacja, do której próbujesz uzyskać dostęp, wymaga zatwierdzenia przez administratora",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Zgłoszono już żądanie dotyczące tej aplikacji i zostało ono odrzucone. Czy na pewno chcesz ponownie zgłosić żądanie",
        "appCenter.acceptInvite": "Zaakceptuj zaproszenie",
        "appCenter.install": "Zainstaluj",
        "appCenter.proceed": "Włącz usługi Workspace Services",
        "appCenter.cancel": "Anuluj",
        "appCenter.confirm": "Potwierdź",
        "appCenter.searchApps": "Wyszukaj aplikacje.",
        "appCenter.welcomeMsg": "Instaluj nowe aplikacje gdziekolwiek, na każdym urządzeniu!",
        "appCenter.done": "Gotowe",
        "appCenter.nav.privacyPage": "Strona prywatności",
        "appCenter.nav.catalog": "Katalog",
        "appCenter.nav.myApps": "Moje aplikacje",
        "appCenter.nav.favorites": "Ulubione",
        "appCenter.nav.categories": "Kategorie",
        "appCenter.nav.filterby": "Filtruj według",
        "appCenter.nav.show": "Pokaż",
        "appCenter.nav.settings": "Ustawienia",
        "appCenter.nav.sortBy": "Sortuj według",
        "appCenter.nav.sortBy.alpha": "Sortuj w kolejności A–Z",
        "appCenter.nav.sortBy.inverseAlpha": "Sortuj w kolejności Z–A",
        "appCenter.nav.sortBy.customView": "Niestandardowy widok",
        "appCenter.nav.arrange": "Zorganizuj",
        "appCenter.nav.arrange.saved": "Zapisano niestandardowy widok!",
        "appCenter.nav.arrange.tooltip": "Dostępne tylko dla okien.",
        "appCenter.nav.arrange.saving": "Zapisywanie…",
        "appCenter.nav.arrange.error": "Nie można zapisać niestandardowego widoku",
        "appCenter.nav.filter": "Filtr",
        "appCenter.installFailedTitle": "Problem podczas instalacji aplikacji",
        "appCenter.uccConflict": "Coś poszło nie tak podczas bieżącej sesji. Zaloguj się ponownie.",

        "appCenter.search.placeholder": "Wyszukaj",
        "appCenter.search.noResults": "Brak wyników.",

        "appCenter.action.open": "Otwórz",
        "appCenter.action.install": "Zainstaluj",
        "appCenter.action.installing": "Trwa instalacja",
        "appCenter.action.installed": "Zainstalowano",
        "appCenter.action.reinstall": "Zainstaluj ponownie",
        "appCenter.action.add": "Dodaj",
        "appCenter.action.added": "Dodano",
        "appCenter.action.processing": "Przetwarzanie",
        "appCenter.action.update": "Aktualizuj",
        "appCenter.action.request": "Zażądaj",
        "appCenter.action.pending": "Oczekujące",
        "appCenter.action.view": "Wyświetl",
        "appCenter.action.favorite": "Dodaj",
        "appCenter.action.unfavorite": "Usuń",

        "appCenter.internalApp.installtionModalTitle": "Instalacja aplikacji",
        "appCenter.internalApp.installationStepTitle": "Aby otworzyć tę aplikację, po instalacji wykonaj następujące czynności",
        "appCenter.internalApp.step1": "Z poziomu ekranu głównego systemu iOS otwórz Ustawienia",
        "appCenter.internalApp.step2": "Dotknij opcji Ogólne",
        "appCenter.internalApp.step3": "Dotknij pozycje Profil i Zarządzanie urządzeniem",
        "appCenter.internalApp.step4": "Dotknij nazwy dewelopera aplikacji pod Aplikacją firmową",
        "appCenter.internalApp.step5": "Zweryfikuj aplikację lub jej zaufaj",
        "appCenter.internalApp.watchTutorial": "Obejrzyj samouczek",

        "appCenter.type.web": "Witryna",
        "appCenter.type.native": "Aplikacja natywna",
        "appCenter.type.native.platform": "Aplikacja {0}",
        "appCenter.type.virtual": "Aplikacja wirtualna",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "Pakiet aplikacji",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Kategorie",
        "myapp.nav.favorites": "Ulubione",
        "myapp.nav.allApps": "Wszystkie aplikacje",
        "myapp.nav.recommendedApps": "Zalecane",
        "myapp.nav.newlyEntitledApps": "Nowy",
        "myapp.nav.webApps": "Witryny",
        "myapp.nav.mobileApps": "Aplikacje mobilne",
        "myapp.nav.macApps": "Aplikacje na komputery Mac",
        "myapp.nav.windowsApps": "Aplikacje do systemu Windows",
        "myapp.nav.virtualApps": "Wirtualne",
        "myapp.label.new": "Nowy",
        "myapp.nav.filterby": "Filtruj według",
        "myapp.nav.mobile.filter.pagetitle": "Filtruj wg kategorii",
        "appCenter.nav.browseBy": "Przeglądaj wg",

        "appCenter.catalog.empty": "Nie przypisano do Ciebie jeszcze żadnych aplikacji. Aplikacje powinny być wkrótce dostępne. Sprawdź później.",

        "userInfo.adminConsole": "Konsola administracji",
        "userInfo.settings": "Ustawienia",
        "userInfo.notifications": "Powiadomienia",
        "userInfo.support": "Pomoc techniczna",
        "userInfo.preferences": "Preferencje",
        "userInfo.about": "O programie",
        "userInfo.devices": "Urządzenia",
        "userInfo.settings.promo.title": "Pobierz aplikację Workspace ONE",
        "userInfo.settings.promo.message": "Workspace ONE zapewnia lepsze wrażenia z pracy z aplikacją. Czy chcesz ją wypróbować?",

        "userInfo.tips": "Porady dot. aplikacji",
        "userInfo.tips.description": "Uzyskaj pomoc dotyczącą korzystania z aplikacji.",

        "userInfo.tips.bookmarks": "Jak używać zakładek?",
        "userInfo.tips.catalog": "Jak używać katalogu?",
        "userInfo.tips.people": "Nowość: jak używać Kontaktów?",
        "userInfo.tips.notification": "Nowość: Jak używać powiadomień?",

        "userInfo.tips.catalog.desktop1": "Kliknij przycisk Otwórz, aby uruchomić witrynę w przeglądarce. Użyj opcji {0}, aby ją dodać do zakładek.",
        "userInfo.tips.catalog.desktop2": "Aby wyświetlić szczegółowe informacje, kliknij ikonę lub nazwę aplikacji.",
        "userInfo.tips.catalog.mobile1": "Użyj opcji {0}, aby otworzyć witrynę w przeglądarce. Użyj opcji {1}, aby ją dodać do zakładek.",
        "userInfo.tips.catalog.mobile2": "Użyj opcji {0}, aby zainstalować na urządzeniu aplikację natywną. {1} oznacza, że musisz zarejestrować swoje urządzenie, aby korzystać z tych aplikacji.",
        "userInfo.tips.catalog.mobile3": "Aby wyświetlić szczegółowe informacje, kliknij ikonę lub nazwę aplikacji.",

        "userInfo.tips.bookmarks.desktop1": "Kliknij kafelek, aby uruchomić witrynę w przeglądarce.",
        "userInfo.tips.bookmarks.desktop2": "Najedź wskaźnikiem myszy na kafelek, aby zobaczyć więcej działań dostępnych w menu „...”.",

        "userInfo.tips.bookmarks.mobile": "Kliknij kafelek, aby uruchomić witrynę w przeglądarce. Naciśnij i przytrzymaj, aby zobaczyć więcej możliwości.",

        "userInfo.tips.catalog.download.phone": "Kliknij ikonę {0}, aby zainstalować na urządzeniu aplikację natywną. Ikona {1} oznacza, że musisz zarejestrować swoje urządzenie, aby korzystać z tych aplikacji.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Kliknij ikonę {0}, aby otworzyć witrynę w przeglądarce. Kliknij ikonę {1}, aby dodać witrynę do zakładek. Kliknij ikonę aplikacji lub nazwę, aby uzyskać więcej informacji.",

        "userInfo.tips.catalog.download.tablet": "Pobierz aplikacje, klikając przycisk pobierania. Aby uzyskać więcej informacji, kliknij aplikację.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Uruchom aplikacje, klikając przycisk uruchomienia. Aby dodać ją do zakładek, kliknij ikonę zakładki.",

        "userInfo.tips.people.mobile": "Kliknij {0}, aby przejść z dowolnego profilu wstecz do głównej strony docelowej wyszukiwania osób.",
        "userInfo.tips.notification.mobile": "Kliknij {0}, aby przejść do powiadomień. Wskaźnik powiadomień będzie pozostawał aktywny do momentu odrzucenia wszystkich powiadomień lub zareagowania na nie.",

        "userInfo.tips.title": "Porady dot. aplikacji",
        "userInfo.tips.intro": "Uzyskaj pomoc dotyczącą korzystania z aplikacji.",
        "userInfo.tips.desktop": "Komputer",
        "userInfo.tips.reordering.title": "Dostosuj swoje zakładki!",
        "userInfo.tips.reordering.text1": "1. Włącz widok niestandardowy przy użyciu menu rozwijanego w prawym górnym rogu.",
        "userInfo.tips.reordering.text2": "2. Wybierz opcję Porządkuj. ",
        "userInfo.tips.reordering.text3": "3. Uporządkuj zakładki, przeciągając je i upuszczając. Po zakończeniu kliknij przycisk Zapisz.",
        "userInfo.tips.mobile": "Urządzenia mobilne",

        "userInfo.removeAccount": "Usuń konto",
        "userInfo.account": "Konto",
        "userInfo.profile": "Profil",
        "userInfo.profile.name": "Nazwa:",
        "userInfo.profile.email": "E-mail:",
        "userInfo.profile.username": "Nazwa użytkownika:",
        "userInfo.profile.picture": "Zdjęcie profilowe",
        "userInfo.profile.password": "Hasło",
        "userInfo.profile.passwordchange": "Zmień",
        "userInfo.profile.passwordprompt": "Zarządzanie hasłami do systemu firmowego.",
        "userInfo.password": "Hasło",
        "userInfo.termsofuse": "Warunki użytkowania",
        "userInfo.signout": "Wyloguj",
        "userInfo.tryAgain": "Spróbuj ponownie",
        "userInfo.managedevicesettings": "Zarządzanie ustawieniami urządzenia",
        "userInfo.notification": "Powiadomienie Push",
        "userInfo.passcode": "Touch ID lub hasło",

        "appCenter.support.selfservice": "Samoobsługa",
        "appCenter.support.managedevices": "Urządzenia",
        "appCenter.support.managedevicestext": "Wyświetl informacje o urządzeniu.",
        "appCenter.support.managepassword": "Zmień hasło",
        "appCenter.support.managepasswordtext": "Zmień hasło do konta firmowego",
        "appCenter.support.gethelp": "Uzyskaj pomoc",
        "appCenter.support.appstips": "Aplikacje i porady",
        "appCenter.support.appstipstext": "Pokazuj wskazówki w aplikacji",
        "appCenter.support.sendReportTitle": "Wyślij raport",
        "appCenter.support.sendReportDetails": "Dowiedz się, jak przesyłać informacje diagnostyczne o aplikacji.",
        "appCenter.support.helpdesk": "Centrum pomocy",
        "appCenter.support.contacthelpdesk": "Skontaktuj się z Centrum pomocy",
        "appCenter.reportProblems.ios.sendLogInstruction": "Potrząśnij urządzeniem, gdy wystąpi błąd, aby przesłać informacje diagnostyczne o aplikacji lub dodać opinię.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Tę funkcję można włączać i wyłączać w ustawieniach urządzenia.",

        // App Details Page
        "app.details.link.back": "Wstecz",
        "app.details.nav.details": "Szczegóły",
        "app.details.nav.reviews": "Opinie",
        "app.details.label.description": "Opis",
        "app.details.label.noDescription": "Brak opisu",
        "app.details.label.seeFullDetails": "Wyśw. szczegóły",
        "app.details.label.removeBookmark": "Usuń",
        "app.details.label.resetDektop": "Resetuj",
        "app.details.label.information": "Informacje",
        "app.details.label.category": "Kategorie",
        "app.details.label.version": "Wersja",
        "app.details.label.type": "Typ",
        "app.details.label.type.SAML11": "Aplikacja sieci Web",
        "app.details.label.type.SAML20": "Aplikacja sieci Web",
        "app.details.label.type.WEBAPPLINK": "Aplikacja sieci Web",
        "app.details.label.type.MDMWEB": "Aplikacja sieci Web",
        "app.details.label.type.WSFED12": "Aplikacja sieci Web",
        "app.details.label.type.XENAPP": "Aplikacja Xen",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Pulpit Citrix",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Profil",
        "app.details.label.type.VIEWPOOL": "Pulpit Horizon",
        "app.details.label.type.VIEWAPP": "Aplikacja Horizon",
        "app.details.label.type.DESKTONEDESKTOP": "Pulpit Horizon Cloud",
        "app.details.label.type.DESKTONEAPPLICATION": "Aplikacja Horizon Cloud",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Aplikacja sieci Web",
        "app.details.label.type.PUBLIC": "Aplikacja publiczna",
        "app.details.label.type.INTERNAL": "Wewnętrzne",
        "app.details.label.size": "Wymiary",
        "app.details.label.price": "Cena",
        "app.details.label.screenshots": "Zrzuty ekranu",
        "app.details.label.showMore": "Pokaż więcej",
        "app.details.label.showLess": "Pokaż mniej",
        "app.details.label.setAppPassword": "Ustaw hasło apl.",
        "app.details.label.sendFeedback": "Wyślij opinię",
        "app.details.label.feedbackSubject": "Opinia o aplikacji {0}",
        "app.details.label.support": "Pomoc techniczna",
        "app.details.label.developer": "Deweloper",
        "app.details.label.email": "Wiadomość e-mail",
        "app.details.label.phone": "Telefon",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "Wszystkie aplikacje mobilne można uruchomić z poziomu ekranu głównego.",

        "app.details.label.requirement": "Wymogi:",
        "app.details.label.packageName": "Nazwa pakietu:",
        "app.details.thinapp.requirement": "Ta aplikacja działa tylko na komputerze z systemem Windows i zainstalowanym programem Identity Manager Desktop.",
        "app.details.viewDesktop.requirement": "Ten pulpit Horizon wymaga zainstalowania na komputerze klienta {0}Horizon Client{1} 3.0 lub nowszego.",
        "app.details.viewapp.requirement": "Ta aplikacja hostowana na platformie Horizon wymaga zainstalowania na komputerze programu {0}Horizon Client{1} w wersji 3.0 lub nowszej.",
        "app.details.xenapp.requirement": "Ta aplikacja wymaga zainstalowania programu {0}Citrix Receiver{1}.",
        "app.details.xenapp.msg.IE8OrLower": "Ta aplikacja wymaga zainstalowania programu Citrix Receiver. Uwaga: nie można jej otworzyć w programie Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "Ten pulpit Citrix wymaga zainstalowania programu {0}Citrix Receiver{1}.",
        "app.details.desktoneDesktop.requirement": "Ten pulpit Horizon Cloud wymaga zainstalowania na komputerze klienta {0} Horizon Client {1}.",
        "app.details.desktoneApp.requirement": "Ta aplikacja Horizon Cloud wymaga zainstalowania na komputerze klienta {0} Horizon Client {1}.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "Brak dostępnych informacji",
        "app.details.noScreenshots": "Brak dostępnych zrzutów ekranu",
        "app.details.noDescription": "Opis będzie dostępny wkrótce.",
        "app.details.needsDeviceEnrollment": "Wymaga rejestracji urządzenia",
        "app.details.label.addToHomeScreen": "Dodaj do ekranu głównego",
        "app.details.action.open": "Otwórz",
        "app.details.action.bookmark": "Zakładka",
        "app.details.action.bookmarked": "Dodano do zakładek",
        "app.details.action.launch": "Uruchom",
        "app.details.action.setPassword": "Ustaw hasło",
        "app.details.action.pvAppCredentials": "Poświadczenia",
        "app.details.info.msg.missingInfo": "Brakuje niektórych informacji. Spróbuj ponownie później, aby zobaczyć wszystkie szczegóły.",
        "app.details.wsrequired.msg": "Wymagane usługi Workspace Services.",
        "app.details.label.addedFavorites": "Dodano do ulubionych",

        "app.rating.label": "Ocena użytkownika",

        "app.settings.label.settings": "Ustawienia",
        "app.settings.link.back": "Wstecz",
        "app.settings.managedDevices": "Zarządzane urządzenia",
        "app.nav.tab.bookmark": "Zakładki",
        "app.nav.tab.catalog": "Katalog",
        "app.nav.tab.people": "Ludzie",
        "app.nav.tab.support": "Pomoc techniczna",
        "app.nav.tab.apps": "Aplikacje",
        "app.nav.tab.settings": "Ustawienia",
        "app.about.heading": "Informacje o Workspace ONE",
        "app.about.copyright": "Copyright © 2013–2019 VMware, Inc. Wszelkie prawa zastrzeżone. Ten produkt jest chroniony prawem autorskim i prawem własności intelektualnej w Stanach Zjednoczonych i innych krajach, a także umowami międzynarodowymi. Produkty VMware są objęte co najmniej jednym patentem.",
        "app.about.button.label.privacyPolicy": "Zasady ochrony prywatności",
        "app.about.button.label.patents": "Patent",
        "app.about.button.label.licenseAgreement": "Umowa licencyjna",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/pl/go/patents",
        "app.about.licenseAgreementLink": "http://www.vmware.com/pl/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/pl/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Urządzenia",
        "app.devices.tableColumn.deviceName": "Nazwa urządzenia",
        "app.devices.tableColumn.userDeviceId": "Identyfikator urządzenia",
        "app.devices.tableColumn.lastLoginTime": "Godzina ostatniego logowania",
        "app.devices.unlinkDevice": "Odłącz",
        "app.devices.unlinkedDevice": "Odłączone",
        "app.devices.emptyDeviceListMessage": "Brak urządzenia powiązanego z kontem.",

        "app.thinappMultiDeviceAct.heading": "Ta aplikacja zostanie dodana do zatwierdzonych urządzeń. Aby używać programu \"{0}\" na dodatkowych urządzeniach, znajdź poniżej nazwę urządzenia, a następnie kliknij przycisk Zażądaj.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Nazwa urządzenia",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Stan",
        "app.thinappMultiDeviceAct.button.request": "Zażądaj",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Odrzucone",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "Oczekujące",
        "app.thinappMultiDeviceAct.activationState.activated": "Zatwierdzone",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Nieaktywowane",

        "app.thinappsInPackage.button.done": "Gotowe",
        "app.thinappsInPackage.button.bookmarkAll": "Dodaj wszystko do zakładek",
        "app.thinappsInPackage.info": "Pakiet aplikacji",
        "app.thinappsInPackage.noOfAppsInPackage": "Aplikacje: {0}",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "Znaleziono dopasowanie: {0}.",
        "app.thinappsInPackage.action.instruction": "Wybierz ikonę zakładki, aby dodać pojedynczą aplikację do zakładek, lub kliknij przycisk, aby dodać wszystkie aplikacje.",
        "app.thinappsInPackage.search.placeholder": "Szukaj w pakiecie",

        "app.setAppPassword.heading": "Ustaw hasło",
        "app.setAppPassword.instruction": "Skorzystaj z poniższego formularza, aby ustawić hasło tej aplikacji. Hasło musi składać się z co najmniej trzech znaków.",
        "app.setAppPassword.label.password": "Hasło",
        "app.setAppPassword.label.confirmPassword": "Potwierdź hasło",
        "app.setAppPassword.label.generate": "Wygeneruj hasło",
        "app.setAppPassword.error.passwordsNoMatch": "Hasła nie są zgodne.",
        "app.setAppPassword.msg.success": "Hasło aplikacji ustawiono pomyślnie.",
        "app.setAppPassword.msg.fail": "Podczas ustawiania hasła wystąpił błąd. Spróbuj ponownie.",

        "pvapp.setAppPassword.heading": "Ustaw zapisane poświadczenia dla {0}",
        "pvapp.setAppPassword.instruction": "Za pomocą poniższego formularza ustaw poświadczenia dla tej aplikacji.",
        "pvapp.setAppPassword.label.username": "Nazwa użytkownika",
        "pvapp.setAppPassword.label.password": "Hasło",
        "pvapp.setAppPassword.error.userNameEmpty": "Nazwa użytkownika jest pusta.",
        "pvapp.setAppPassword.error.passwordEmpty": "Hasło jest puste.",
        "pvapp.setAppPassword.msg.success": "Ustawiono poświadczenia aplikacji.",
        "pvapp.setAppPassword.msg.fail": "Podczas ustawiania poświadczeń aplikacji wystąpił błąd. Spróbuj ponownie.",

        "app.launchPassword.heading": "Żądanie hasła",
        "app.launchPassword.view.instruction": "Potrzebujemy Twojego hasła w celu zalogowania do tych zasobów systemu Windows {0}.",
        "app.launchPassword.label.userName": "Użytkownik",
        "app.launchPassword.label.password": "Hasło",
        "app.launchPassword.button.label.signin": "Zaloguj się",

        "app.changePassword.title": "Zmień hasło",
        "app.changePassword.enterCurrentPassword": "Wpisz aktualne hasło",
        "app.changePassword.enterNewPassword": "Wpisz nowe hasło",
        "app.changePassword.confirmNewPassword": "Potwierdź nowe hasło",
        "app.changePassword.error.passwordsNoMatch": "Nowe hasła nie pasują",
        "app.changePassword.error.requirementsNoMatch": "Nowe hasło nie spełnia wymagań.",
        "app.changePassword.success": "Zapisano nowe hasło!",
        "app.changePassword.label.email": "Wiadomość e-mail",
        "app.changePassword.label.phone": "Telefon",

        "app.passwordPolicy.passwordRequirements": "Wymagania dotyczące hasła",
        "app.passwordPolicy.label.currentpassword": "Bieżące hasło",
        "app.passwordPolicy.label.newpassword": "Nowe hasło",
        "app.passwordPolicy.label.confirmpassword": "Potwierdź nowe hasło",
        "app.passwordPolicy.minLength": "Minimalna liczba znaków: {0}.",
        "app.passwordPolicy.leastIncludes": "zawiera co najmniej:",
        "app.passwordPolicy.minLower": "Litery: {0}",
        "app.passwordPolicy.minUpper": "Wielkie litery: {0}",
        "app.passwordPolicy.minDigit": "Liczby: {0}",
        "app.passwordPolicy.minSpecial": "Znaki specjalne: {0}",

        "app.coachmarks.bookmarkTitle": "Używanie zakładek",
        "app.coachmarks.bookmarkMessage": "Dotknij, aby uruchomić witryny; naciśnij i przytrzymaj, aby odkryć więcej.",
        "app.coachmarks.catalogTitle": "Jak używać katalogu",
        "app.coachmarks.catalogMessage": "Zainstaluj lub zaktualizuj aplikacje, dodaj je do zakładek lub otwórz bezpośrednio z tego miejsca.",
        "app.coachmarks.buttonText": "Rozumiem!",

        "app.logout.confirm.msg": "Wylogowanie się z Workspace ONE zakończy aktualną sesję. Wszelkie aplikacje pobrane z katalogu pozostaną na urządzeniu, lecz żadne nowe aplikacje nie będą dostępne do momentu ponownego zalogowania się.",
        "app.logout.title": "OSTRZEŻENIE",

        "app.passwordVault.banner.msg": "Istnieją aplikacje, które mogą korzystać z rozszerzenia Workspace ONE.",
        "app.passwordVault.banner.button.install": "Zainstaluj",
        "app.passwordVault.banner.setPreference": "Możesz pobrać później, korzystając z opcji: Ustawienia – Preferencje.",
        "app.passwordVault.banner.donotshowagain": "Nie pokazuj tego ponownie.",
        "app.passwordVault.banner.button.later": "Później",
        "app.passwordVault.banner.button.get": "Pobierz",
        "app.passwordVault.preference.title": "Rozszerzenie Workspace ONE",
        "app.passwordVault.preference.instruction": "Istnieją aplikacje, które mogą korzystać z rozszerzenia Workspace ONE.",
        "app.passwordVault.preference.getextension": "Pobierz rozszerzenie.",
        "app.bookmarking.change.tab.title": "Nadal porządkujesz zakładki?",
        "app.bookmarking.change.tab.body": "Wprowadzone zmiany nie zostaną zapisane. Czy nadal chcesz porządkować swoje zakładki?",
        "app.bookmarking.touch.disabled": "Układ aplikacji możesz zmienić za pomocą płytki dotykowej lub myszy.",
        "app.bookmarking.change.tab.exit": "Nie, zakończ",
        "app.bookmarking.change.tab.stay": "Tak, pozostań na tej stronie",
        "app.virtual.disabled": "Wyłączone przez administratora",
        "app.virtual.unavailable": "Ta aplikacja jest niedostępna na tym urządzeniu",
        "app.virtual.not.available": "Niedostępne",

        "app.notification.type.NEW_ENTITLEMENTS": "Sprawdź je",
        "app.notification.type.PASSWORD_EXPIRING": "Zaktualizuj hasło",
        "app.notification.action.delete": "Usuń",
        "notification.new.entitlements.heading": "Nowe uprawnienia",
        "notification.new.entitlements.message": "Masz przypisane nowe uprawnienia: {0}",
        "app.notification.delete.header": "Usunąć to powiadomienie?",
        "app.notification.delete.msg": "Czy na pewno chcesz usunąć to powiadomienie? Możesz wybrać Archiwizuj, jeśli chcesz je zarchiwizować później. ",
        "app.notification.delete.text": "Usuń",
        "app.notification.keep.text": "Zachowaj",
        "app.notification.restore.text": "Przywróć",
        "app.notification.delete.toast.msg": "Powiadomienie zostało usunięte.",
        "app.notification.empty": "Jesteś na bieżąco!",
        "app.notification.more.actions": "Więcej działań",
        "app.notification.archive.all": "Zarchiwizuj wszystko",

        "app.notification.bookmark.all.error": "Nie można dodać wszystkich Twoich nowych aplikacji do zakładek",
        "app.notification.bookmark.all.success": "Wszystkie nowe aplikacje zostały dodane do ulubionych",
        "app.notification.delete.all": "Usuń wszystko",
        "app.notification.see.archived": "Wyświetl zarchiwizowane",
        "app.notification.see.all": "Zobacz wszystkie powiadomienia",
        "app.notification.newApps.title": "Masz nowe aplikacje!",
        "app.notification.newApps.excessIconsMessage": "+ jeszcze {0}",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Pokaż szczegóły",
        "app.tooltip.clicktolaunch": "Kliknij, aby uruchomić",

        "recommendedApps.install.proceed": "Kontynuuj",
        "recommendedApps.install.title": "Zainstaluj polecane aplikacje",
        "recommendedApps.install.confirm.msg": "Zobaczysz monity, aby kontynuować instalację aplikacji.",
        "recommendedApps.text1": "Twoi współpracownicy często używają tych aplikacji.",
        "recommendedApps.text2": "Możesz zainstalować aplikacje teraz lub znaleźć je później w swoim katalogu.",
        "recommendedApps.selectAll": "Wybierz wszystkie",
        "recommendedApps.apps": "aplikacje",
        "recommendedApps.install": "Zainstaluj",
        "recommendedApps.skip": "Pomiń",

        "app.desktopapp.settings.title.account": "Konto",
        "app.desktopapp.settings.title.devices": "Urządzenia",
        "app.desktopapp.settings.title.preferences": "Preferencje",

        "appCenter.peopleSearch.placeholder": "Wyszukaj osoby",
        "app.tooltip.copyEmail": "Kopiuj e-mail",
        "app.peopleSearch.emailCopied": "Skopiowano e-mail",
        "appCenter.peopleSearch.noResults": "Brak wyników",
        "appCenter.peopleSearch.tryNewSearch": "Spróbuj nowego wyszukiwania.",
        "appCenter.peopleSearch.atLeastThreeChars": "Wpisz powyżej przynajmniej 3 znaki, aby przeprowadzić wyszukiwanie.",
        "appCenter.searchPeople": "Wyszukaj osoby.",
        "myapps.mobilepagetitle.people": "Ludzie",
        "app.people.labels.team": "Mój zespół",
        "app.people.labels.recent": "Ostatnie",
        "app.people.labels.manager": "Menedżer",
        "app.people.labels.peers": "Współpracownicy równorzędni",
        "app.people.labels.directReports": "Bezpośredni podwładni",
        "app.people.labels.profile": "Profil",
        "app.people.labels.org": "Organizacja",
        "app.people.labels.workEmail": "Służbowy adres e-mail",
        "app.people.labels.workPhone": "Służbowy numer telefonu",
        "app.people.labels.alternateNumber": "Inny numer telefonu",
        "app.people.labels.mobile": "Komórka",
        "app.people.labels.address": "Adres",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Menedżerowie",
        "app.people.labels.skypeForBusiness": "Skype dla firm",
        "app.people.labels.employeeNumber": "Numer pracownika",
        "app.people.labels.skills": "Umiejętności",
        "app.people.labels.businessUnit": "Jednostka biznesowa",
        "app.people.labels.costCenter": "Centrum kosztów",
        "app.people.labels.physicalDeliveryOfficeName": "Lokalizacja biura",

        "hub.apps": "Aplikacje",
        "hub.notifications": "Powiadomienia",
        "hub.notifications.welcome": "Witamy!",
        "hub.notifications.first.time.message": "Tutaj będą wyświetlane powiadomienia po rozpoczęciu używania aplikacji Hub.",
        "hub.notifications.new.apps.favorite.all": "Dodaj wszystko do ulubionych",
        "hub.notifications.congratulations": "Gratulacje!",
        "hub.notifications.empty.description1": "Brak nowych powiadomień.",
        "hub.notifications.empty.description2": "Możesz teraz korzystać z dodatkowego wolnego miejsca.",
        "hub.v2.notifications.empty.description": "Jesteś na bieżąco z powiadomieniami",
        "hub.v2.notifications.first.time.description": "Tutaj będą wyświetlane powiadomienia po rozpoczęciu używania aplikacji Hub.",
        "hub.notifications.empty.description.archived": "Brak zarchiwizowanych powiadomień.",
        "hub.notifications.priority": "Priorytet",
        "hub.notifications.today": "Dzisiaj",
        "hub.notifications.yesterday": "Wczoraj",
        "hub.notifications.lastWeek": "Ostatni tydzień",
        "hub.notifications.lastMonth": "Ostatni miesiąc",
        "hub.notifications.older": "Starsze",
        "hub.notifications.archived.label": "Zarchiwizowano",
        "hub.notifications.action.success": "Sukces!",
        "hub.notifications.action.failure": "Przepraszamy, ale wygląda na to, że wystąpił problem z wykonaniem tej czynności",
        "hub.notifications.moreDetails": "Więcej szczegółów",
        "hub.notifications.dialog.action.completed": "Zakończone",
        "hub.notifications.dialog.action.needed": "Oczekujące",
        "hub.notifications.dialog.action.all.notifications": "Wszystkie powiadomienia",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Wyszukaj aplikacje",
        "hub.apps.favorites": "Ulubione",
        "hub.apps.newApps": "Nowy",
        "hub.apps.recommended": "Zalecane",
        "hub.apps.categories": "Kategorie",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "A niech mnie, ile tu miejsca!",
        "hub.apps.no.apps.msg2": "Skontaktuj się z administratorem, aby uzyskać aplikacje potrzebne do pracy.",
        "hub.apps.search.in.category": "Wyniki ({0}) w kategorii:",
        "hub.apps.search.in.app": "Wyniki ({0}) w kategoriach Nazwa aplikacji i Opis",
        "hub.apps.search.header": "Wyniki w sumie",
        "hub.apps.search.no.result.header": "Brak wyników.",
        "hub.apps.search.no.result.msg": "Spróbuj ponownie, używając innego terminu.",
        "hub.apps.searchpeople.no.result.msg": "Spróbuj ponownie, używając innej nazwy.",
        "hub.apps.type.web": "Sieć",
        "hub.apps.type.Virtual": "Sieć",
        "hub.apps.type.application": "Aplikacja",
        "hub.apps.type.anyApp": "Dowolna aplikacja",
        "hub.people": "Ludzie",
        "hub.people.search.text": "Wyszukaj osoby",
        "hub.people.labels.mypeers": "Moi współpracownicy równorzędni",
        "hub.people.labels.directreports": "Bezpośredni podwładni",
        "hub.people.labels.manager": "Mój menedżer",
        "hub.people.labels.organization": "Organizacja",
        "hub.people.search.result": "Wyniki",
        "hub.app.install.prompt.title": "Czy chcesz zainstalować",

        "hub.actionsheet.label.viewDetails": "Wyświetl szczegóły",
        "hub.actionsheet.label.removeFavorites": "Usuń z ulubionych",
        "hub.actionsheet.label.addFavorites": "Dodaj do ulubionych",
        "hub.password.done": "Gotowe",

        "hub.placeholder.changepassword.username": "Nazwa użytkownika",
        "hub.placeholder.changepassword.password": "Hasło",
        "hub.placeholder.changepassword.confirmpassword": "Potwierdź hasło",

        "hub.tunnel.text.line1": "W celu uzyskania dostępu wymagana jest aplikacja Tunnel ",
        "hub.tunnel.text.line2": "Aplikacja Tunnel zostanie pobrana automatycznie wraz z tą aplikacją.",

        "hub.promotions.banner.category.title": "Najważniejsze cechy kategorii",
        "hub.promotions.banner.category.open": "Otwórz",
        "hub.promotions.banner.app.get": "Pobierz",
        "hub.promotions.banner.disabled": "Wyłączone przez administratora",
        "hub.require.app.management": "Zarządzane",
        "hub.app.installing.alert.mobile.message": "Trwa instalowanie aplikacji {0}. Sprawdź dostępność aktualizacji na ekranie głównym telefonu.",
        "hub.app.installing.alert.desktop.message": "Trwa instalowanie aplikacji {0}. Sprawdź dostępność aktualizacji w narzędziu uruchamiania aplikacji na pulpicie.",

        "hub.nav.label.apps": "Aplikacje",
        "hub.nav.label.people": "Ludzie",
        "hub.nav.label.notification": "Powiadomienia",
        "hub.nav.label.settings": "Ustawienia",
        "hub.nav.label.account": "Konto",
        "hub.nav.label.signout": "Wyloguj",
        "hub.userInfo.adminConsole": "Konsola administracji",
        "hub.userInfo.signout": "Wyloguj",
        "hub.userInfo.settings": "Ustawienia",
        "hub.userInfo.account": "Konto",
        "hub.userInfo.devices": "Urządzenia",
        "hub.userInfo.whatsnew": "Nowości",
        "hub.userInfo.about": "Treści",
        "hub.download.ios": "Hub dla systemu iOS",
        "hub.download.android": "Hub dla systemu Android",
        "hub.download.mac": "Hub dla komputerów Mac",
        "hub.download.windows": "Hub dla systemu Windows",
        "hub.download.subtitle.mobile": "Korzystaj z powiadomień, ekranu głównego i wielu innych funkcji w jednym miejscu.",
        "hub.download.subtitle.desktop": "Otrzymuj powiadomienia bezpośrednio na pulpicie i uruchamiaj funkcje bezpośrednio z doku.",
        "hub.preferences.title": "Preferencje",
        "hub.preferences.horizon.subtitle": "Aplikacje zdalne Horizon",
        "hub.preferences.launch.question": "Jak chcesz uruchamiać aplikacje zdalne Horizon?",
        "hub.about.title": "VMware Intelligent Hub – informacje",
        "hub.apps.allApps": "Wszystkie aplikacje",
        "hub.apps.configure.favorites.msg": "W tym miejscu możesz dodać swoje ulubione aplikacje, aby mieć do nich szybszy dostęp",
        "hub.apps.configure.favorites": "Skonfiguruj",
        "hub.apps.edit.favorites": "Edytuj",

        "hub.contextDialog.label.removeFavorites": "Usuń z ulubionych",
        "hub.contextDialog.label.addFavorites": "Dodaj do ulubionych",
        "hub.contextDialog.label.viewDetails": "Wyświetl szczegóły",
        "hub.apps.edit.favorites.header": "Tryb edycji ulubionych",
        "hub.apps.edit.favorites.prompt": "Zmieniaj kolejność, przeciągając i upuszczając.",
        "hub.apps.edit.favorites.save": "Zapisz",
        "hub.apps.edit.favorites.cancel": "Anuluj zmiany",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Kolejność została zmieniona. Przed wyjściem anuluj lub zapisz zmiany.",
        "hub.apps.edit.favorites.savecustomordering": "Zapisywanie niestandardowej kolejności. Aby uniknąć utraty wyników, nie nawiguj do innego miejsca.",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Porządkowanie jest niedostępne na ekranach dotykowych.",
        "hub.apps.edit.favorites.notify.success": "Zmiana kolejności ulubionych została zapisana!",
        "hub.apps.edit.favorites.notify.error": "Wystąpił błąd. Nie można zapisać zmiany kolejności. Spróbuj później.",

        "hub.nav.label.settings.settings": "Ustawienia",
        "hub.nav.label.settings.account": "Konto",
        "hub.nav.label.settings.about": "O programie",
        "hub.nav.label.settings.devices": "Urządzenia",
        "hub.nav.label.settings.preferences": "Preferencje",
        "hub.nav.label.settings.whatsnew": "Nowości",

        "hub.apps.detail.back": "Wróć do aplikacji",
        "hub.people.detail.back": "Wstecz do kontaktów",
        "hub.people.notifications.back": "Wróć do powiadomień",

        "hub.nav.label.notifications.filter": "Filtr",
        "hub.nav.label.notifications.all.notifications": "Wszystkie powiadomienia",
        "hub.nav.label.notifications.action.needed": "Oczekujące",
        "hub.nav.label.notifications.completed": "Zakończone",
        "hub.long.card.description": "Opis",
        "hub.long.card.Comment": "Komentarz",
        "hub.long.card.Comment.placeholder": "Dodaj komentarz",

        "hub.appLaunch.open": "Otwórz",
        "hub.appLaunch.cancel": "Anuluj"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "e",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Instalar",
        "app.banner.open": "Abrir",
        "app.promotion.banner.donotshowagain": "Não mostrar esta mensagem novamente. Obtenha-o mais tarde em Configurações - Sobre.",
        "app.promotion.banner.open": "Abrir no aplicativo",
        "app.promotion.banner.download": "Fazer download do aplicativo",
        "app.promotion.banner.message": "Obtenha uma experiência melhor no aplicativo.",
        "horizonDesktopNotDetected": "Para abrir esse aplicativo, o VMware Identity Manager Desktop deve estar instalado no computador. <a target='_blank' href='{0}'>Instale o VMware Identity Manager Desktop</a> caso já não o tenha instalado.",
        "viewAppsTooltip": "Este Aplicativo hospedado Horizon requer a instalação do {0}Horizon Client{1} 3.0 ou posterior no computador.",
        "desktoneDesktopTooltip": "Este Desktop do Horizon Cloud requer a instalação do {0}Horizon Client{1} no computador.",
        "desktoneApplicationTooltip": "Este Aplicativo do Horizon Cloud requer a instalação do {0}Horizon Client{1} no computador.",
        "xenAppsReceiverNotDetected": "Para abrir este aplicativo, o Citrix Receiver deve estar instalado no computador. <a target='_blank' href='{0}'>Instale o Citrix Receiver</a> caso já não o tenha instalado.",
        "button.save": "Salvar",
        "button.update": "Atualizar",
        "button.openHorizonView": "Abrir Horizon Client",
        "myapps.launch.openApp": "Abrir o {0}",
        "button.openApp": "Abrir aplicativo",
        "button.clear": "Limpar",
        "button.close": "Fechar",
        "button.cancel": "Cancelar",
        "button.download": "Download",
        "myapps.launch.title.launch": "Inicializar",
        "myapps.launch.title": "Inicializar aplicativo",
        "myapps.launch.view.openWith": "Abrir com",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Navegador",
        "myapps.launch.view.preferredClient.isDefault": "(padrão)",
        "myapps.launch.view.selectPreferredLaunchClient": "Selecione como você gostaria de iniciar a área de trabalho e os aplicativos Horizon.",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Aplicativos remotos Horizon",
        "myapps.launch.view.selectPreferredLaunchClientText": "Quando os aplicativos remotos do Horizon são abertos no Horizon Client, a experiência é melhor do que o navegador.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Como você gostaria de inicializar os aplicativos remotos do Horizon?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "ESCOLHER UMA INICIALIZAÇÃO PADRÃO...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Isso determina o comportamento de inicialização padrão quando você decide abrir uma área de trabalho do Horizon a partir do seu dispositivo. Se você escolher o Horizon Client como padrão, precisará ter o Horizon Client instalado. <a target='_blank' href='{0}'>Instale o Horizon Client</a> caso ainda não o tenha instalado.",
        "myapps.launch.view.unknownClientType": "Tipo de cliente desconhecido para abrir o Horizon Client.",
        "myapps.launch.view.openWithView": "Abrir com o Horizon Client",
        "myapps.launch.view.openWithBrowser": "Abrir com o Navegador",

        "myapps.launch.view.preferredClient.byBrowser.description": "Após você selecionar Navegador, sua área de trabalho ou aplicativo abrirá em uma nova janela do navegador.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Este item requer o Horizon Client 3.0 ou posterior. <a target='_blank' href='{0}'>Instale o Horizon Client</a> caso ainda não o tenha instalado.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Você pode alterar esta configuração em Preferências.",
        "myapps.launch.view.preferredClient.saveSuccess": "Preferência selecionada salva com êxito.",
        "myapps.launch.msg.launching.desktop": "Inicializando a área de trabalho <b>{0}</b> .....",
        "myapps.launch.msg.launching.application": "Inicializando o aplicativo <b>{0}</b> .....",
        "myapps.noAppsMsg": "Você não adicionou nenhum aplicativo. Navegue até o {0} para adicionar aplicativos",
        "myapps.noFavAppsMsg": "Não há aplicativos marcados como favoritos",
        "myapps.welcomeMsg": "Olá, {0}. Aqui estão seus aplicativos!",
        "myapps.bookmarks.empty.message": "Marque os aplicativos usados com frequência como favoritos para ter acesso rápido.",
        "myapps.bookmarks.empty.hidecatalog.message": "No momento, você não tem aplicativos disponíveis para uso.",
        "myapps.bookmarks.empty.addbookmarks": "Adicionar favoritos",
        "myapps.bookmarks.organize.title": "Organizar favoritos",
        "myapps.bookmarks.organize.addbookmarks": "Adicionar favoritos",
        "myapps.bookmarks.organize.batchremove": "Remover",

        "myapps.mobilepagetitle.apps": "Aplicativos",
        "myapps.mobilepagetitle.details": "Detalhes",
        "myapps.mobilepagetitle.support": "Suporte",
        "myapps.mobilepagetitle.settings": "Configurações",
        "myapps.mobilepagetitle.recommendedapps": "Recomendados para Você",
        "myapps.mobilepagetitle.notification": "Notificações",
        "myapps.mobilepagetitle.archived": "Arquivado",
        "myapps.mobilepagetitle.notification.newapps": "Novos Aplicativos",

        "myapps.dialog.openApp": "Abrir",
        "myapps.dialog.openAppWithViewClient": "Abrir no Client",
        "myapps.dialog.openAppWithBrowser": "Abrir no Navegador",

        "myapps.launch.passwordvault.installExtension.description": "Este aplicativo pode utilizar a extensão do navegador do Password Vault. <a target='_blank' href='{0}'>Instale a extensão</a> caso ainda não a tenha instalado.",

        "deviceStatus.networkLost": "Conexão perdida. Tentando reconectar…",
        "deviceStatus.networkRestored": "A conexão com a rede foi restabelecida",
        "api.session.expired.retry": "A sessão expirou. Estamos tentando renová-la...",
        "api.entitlements.reload": "Atualizando sua exibição para atualizar os aplicativos no seu Catálogo.",
        "api.security.header.invalid.relogin": "Falha na validação do cabeçalho de segurança, fazendo logoff..",
        "api.server.load.error": "Estamos com uma carga mais pesada que o normal. Tente novamente mais tarde.",
        "api.updateApps": "Atualizando a lista...",
        "api.error": "Ocorreu um erro. Tente novamente.",
        "installation.error": "Os aplicativos nativos estão temporariamente indisponíveis",
        "service.under.maintenance.error": "O Workspace ONE se encontra temporariamente no modo de manutenção. Você pode iniciar seus aplicativos, mas alguns recursos talvez não funcionem.",
        "api.timeout": "O tempo limite da conexão foi atingido. Tente novamente.",
        "favoriteStatus.favorite": "Favorito",
        "favoriteStatus.unfavorite": "Rem favorit",
        "favoriteStatus.offlineFavoriteMessage": "Você não pode marcar um aplicativo como favorito enquanto estiver offline. Conecte novamente e tente outra vez.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "A retirada da marcação de favorito de um aplicativo não está disponível offline. Conecte novamente e tente outra vez.",
        "error.failToFavoriteApp": "Falha ao atualizar o status de favorito",
        "error.failedToResetApp": "Falha ao redefinir o aplicativo",
        "error.failToHideApp": "Falha ao remover o aplicativo",
        "error.failToShowApp": "Falha ao adicionar o aplicativo ao Inicializador",
        "error.failedToBookmarkApp": "Falha ao marcar o aplicativo como favorito",
        "error.failedToLaunchApp": "Falha ao abrir o aplicativo",
        "error.failedToRemoveAccount": "Falha durante a remoção da conta. Tente novamente mais tarde",
        "installStatus.enrollDevice": "O uso do {0} requer a ativação dos Workspace Services para proteger os dados da empresa",
        "installStatus.enrollDevice.learnMore": "Saiba mais",
        "installStatus.offlineInstallMessage": "Solicitações de instalação não estão disponíveis enquanto estiver offline. Conecte novamente e tente outra vez.",
        "installStatus.activated": "Ativado",
        "installStatus.notActivated": "Não ativado",
        "installStatus.request": "Solicitar",
        "installStatus.update": "Atualizar",
        "installStatus.processing": "Processando",
        "installStatus.installFailedMessage": "Algo deu errado ao instalar o aplicativo {0}. Tente novamente. Se esse problema persistir, entre em contato com o seu administrador de TI",
        "installStatus.unenrolledDevice": "Este aplicativo não está disponível para você. Pressione ok para atualizar a lista.",
        "installMessage.continueInstall": "Você tentou instalar este aplicativo antes. ",
        "installMessage.proceedToInstall": "Clique para continuar.",
        "installMessage.installingOnDevice": "Instalando no dispositivo...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Habilitar os Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "Isso é necessário para que o aplicativo possa ser instalado. Você recebe automaticamente:",
        "app.adaptivemanagement.valueproposition1": "Instalação direta de todos os recursos corporativos.",
        "app.adaptivemanagement.valueproposition2": "Acesso seguro à rede corporativa.",
        "app.adaptivemanagement.valueproposition3": "Aplicativos e conteúdo sincronizados em todos os seus dispositivos.",
        "app.adaptivemanagement.valueproposition4": "Uma experiência de aplicativo aprimorada que o tornará mais produtivo.",
        "app.adaptivemanagement.privacylink": "Sua privacidade",

        "app.tunnel.continue": "Continuar",
        "app.tunnel.text.line1": "O aplicativo VMware Tunnel é necessário para acesso",
        "app.tunnel.text.line2": "O aplicativo Tunnel será baixado automaticamente junto com seu aplicativo.",
        "app.tunnel.header": "Requer o VMware Tunnel",
        "app.tunnel.message": "Para utilizar este aplicativo, o VMware Tunnel deve estar instalado e em execução.",
        "recommendedApps.tunnel.text.line1": "O aplicativo VMware Tunnel é necessário para acesso",
        "recommendedApps.tunnel.text.line2": "O aplicativo Tunnel será baixado automaticamente junto com seu aplicativo.",
        "app.tunnel.installHelpText": "Se os aplicativos não começarem a instalação automaticamente, siga estas etapas para habilitar o aplicativo",
        "app.tunnel.installStep1": "Etapa 1: Instale o aplicativo {0}",
        "app.tunnel.installStep2": "Etapa 2: Instale o aplicativo {0}",

        "requestFailed": "Falha na solicitação",
        "changeOccurred": "Alteração ocorrida",
        "requestSuccessful": "Solicitação bem-sucedida",
        "accept": "Aceitar",
        "decline": "Recusar",
        "termsOfUse": "Termos de Uso",
        "beforeInstallation": "Antes da instalação",
        "resetDesktopStatus.offlineMessage": "A redefinição do desktop não está disponível enquanto estiver offline. Conecte-se novamente e tente outra vez",
        "resetDesktop.sucess": "Redefinição do desktop bem-sucedida",
        "appCenter.someAppsMissingMessage": "Nem todos os aplicativos puderam ser carregados desta vez",
        "appCenter.register.device": "Algumas informações sobre seu dispositivo precisam ser atualizadas. Pressione Atualizar para continuar com o Workspace ONE.",
        "appCenter.mdm.device.error": "Você não tem mais acesso ao Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Entre em contato com o administrador para obter os detalhes da sua conta.",
        "appCenter.mdm.device.poll.error": "Não conseguimos finalizar a compilação do seu espaço de trabalho neste momento. Tente novamente ou entre em contato com seu administrador.",
        "appCenter.device.status.notRegistered": "O dispositivo não está registrado",
        "appCenter.device.status.blackListed": "Este dispositivo está na lista de não autorizados",
        "appCenter.device.status.deviceInputError": "Este dispositivo é inválido! Entre em contato com seu administrador de TI",
        "appCenter.device.status.unknownError": "Ocorreu um erro desconhecido",

        "appCenter.device.register": "Registrar o dispositivo",
        "appCenter.device.moreDetails": "Mais detalhes",
        "appCenter.device.unEnrollWarningTitle": "Remover sua conta?",
        "appCenter.device.mdmUnEnrollMessage": "A remoção da sua conta desativará o acesso aos recursos da empresa e poderá remover os aplicativos de trabalho deste dispositivo.",
        "appCenter.device.getDeviceEnrollmentStatus": "Obtendo informações adicionais",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Tem certeza de que deseja continuar?",
        "appCenter.device.remove": "Remover",
        "appCenter.device.keep": "Manter",
        "appCenter.device.disableWorkspaceMessage": "A remoção da sua conta revogará o acesso concedido pelo aplicativo Workspace ONE. Os aplicativos baixados em seu springboard permanecerão instalados, mas o acesso poderá ser suspenso. Deseja continuar?",
        "appCenter.noAppsMsg": "Nenhum aplicativo está disponível no momento",
        "appCenter.vppInviteTitle": "Registro de Distribuição Gerenciada",
        "appCenter.appInstallConfirmPromptTitle": "Confirmar instalação",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Aprovação necessária para",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Sua Solicitação foi negada anteriormente",
        "appCenter.mdmAppRequestConfirmPromptMessage": "O aplicativo que você está tentando acessar precisa ser aprovado pelo seu administrador",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Você fez uma solicitação para este aplicativo, e sua solicitação foi negada. Tem certeza de que deseja fazer a solicitação novamente?",
        "appCenter.acceptInvite": "Aceitar convite",
        "appCenter.install": "Instalar",
        "appCenter.proceed": "Habilitar os Workspace Services",
        "appCenter.cancel": "Cancelar",
        "appCenter.confirm": "Confirmar",
        "appCenter.searchApps": "Procure os aplicativos.",
        "appCenter.welcomeMsg": "Instale aplicativos novos em qualquer lugar, em qualquer dispositivo!",
        "appCenter.done": "Concluído",
        "appCenter.nav.privacyPage": "Página de privacidade",
        "appCenter.nav.catalog": "Catálogo",
        "appCenter.nav.myApps": "Meus aplicativos",
        "appCenter.nav.favorites": "Favoritos",
        "appCenter.nav.categories": "Categorias",
        "appCenter.nav.filterby": "Filtrar por",
        "appCenter.nav.show": "Mostrar",
        "appCenter.nav.settings": "Configurações",
        "appCenter.nav.sortBy": "Classificar por:",
        "appCenter.nav.sortBy.alpha": "Classificar por A-Z",
        "appCenter.nav.sortBy.inverseAlpha": "Classificar por Z-A",
        "appCenter.nav.sortBy.customView": "Exibição personalizada",
        "appCenter.nav.arrange": "Organizar",
        "appCenter.nav.arrange.saved": "A exibição personalizada foi salva!",
        "appCenter.nav.arrange.tooltip": "Disponível apenas em janelas.",
        "appCenter.nav.arrange.saving": "Salvando...",
        "appCenter.nav.arrange.error": "Não é possível salvar a exibição personalizada",
        "appCenter.nav.filter": "Filtro",
        "appCenter.installFailedTitle": "Problema de instalação do aplicativo",
        "appCenter.uccConflict": "Aconteceu algo errado na sessão atual. Faça login novamente.",

        "appCenter.search.placeholder": "Pesquisar",
        "appCenter.search.noResults": "Nenhum resultado foi encontrado.",

        "appCenter.action.open": "Abrir",
        "appCenter.action.install": "Instalar",
        "appCenter.action.installing": "Instalando",
        "appCenter.action.installed": "Instalado",
        "appCenter.action.reinstall": "Reinstalar",
        "appCenter.action.add": "Adicionar",
        "appCenter.action.added": "Adicionado",
        "appCenter.action.processing": "Processando",
        "appCenter.action.update": "Atualizar",
        "appCenter.action.request": "Solicitar",
        "appCenter.action.pending": "Pendente",
        "appCenter.action.view": "Visualizar",
        "appCenter.action.favorite": "Favorito",
        "appCenter.action.unfavorite": "Rem favorit",

        "appCenter.internalApp.installtionModalTitle": "Etapas de instalação do aplicativo",
        "appCenter.internalApp.installationStepTitle": "Para abrir este aplicativo, será preciso seguir estas etapas após sua instalação.",
        "appCenter.internalApp.step1": "Abra Configurações na tela inicial do seu iOS",
        "appCenter.internalApp.step2": "Toque em Geral",
        "appCenter.internalApp.step3": "Toque em Perfis e Gerenciamento de dispositivo",
        "appCenter.internalApp.step4": "Toque no nome do desenvolvedor do aplicativo em Aplicativo empresarial",
        "appCenter.internalApp.step5": "Verifique ou Confie no aplicativo",
        "appCenter.internalApp.watchTutorial": "Assista ao tutorial passo a passo",

        "appCenter.type.web": "Site",
        "appCenter.type.native": "Aplicativo nativo",
        "appCenter.type.native.platform": "Aplicativo do {0}",
        "appCenter.type.virtual": "Aplicativo Virtuais",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "Pacote de aplicativos",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Categorias",
        "myapp.nav.favorites": "Favoritos",
        "myapp.nav.allApps": "Todos os aplicativos",
        "myapp.nav.recommendedApps": "Recomendado",
        "myapp.nav.newlyEntitledApps": "Novo",
        "myapp.nav.webApps": "Sites",
        "myapp.nav.mobileApps": "Aplicativos Móveis",
        "myapp.nav.macApps": "Aplicativos do Mac",
        "myapp.nav.windowsApps": "Aplicativos do Windows",
        "myapp.nav.virtualApps": "Virtual",
        "myapp.label.new": "Novo",
        "myapp.nav.filterby": "Filtrar por",
        "myapp.nav.mobile.filter.pagetitle": "Filtrar por categorias",
        "appCenter.nav.browseBy": "Pesquisar por",

        "appCenter.catalog.empty": "Parece que ainda não lhe foi atribuído nenhum aplicativo. A atribuição deve acontecer em breve. Portanto, confira novamente em breve.",

        "userInfo.adminConsole": "Console de administração",
        "userInfo.settings": "Configurações",
        "userInfo.notifications": "Notificações",
        "userInfo.support": "Suporte",
        "userInfo.preferences": "Preferências",
        "userInfo.about": "Sobre",
        "userInfo.devices": "Dispositivos",
        "userInfo.settings.promo.title": "Fazer download do aplicativo Workspace ONE",
        "userInfo.settings.promo.message": "O Workspace ONE proporciona uma melhor experiência no aplicativo. Deseja experimentar agora?",

        "userInfo.tips": "Dicas para aplicativos",
        "userInfo.tips.description": "Obtenha ajuda sobre como usar o aplicativo.",

        "userInfo.tips.bookmarks": "Como usar os Favoritos?",
        "userInfo.tips.catalog": "Como usar o Catálogo?",
        "userInfo.tips.people": "Novo: como usar Pessoas?",
        "userInfo.tips.notification": "Novo: como usar Notificação?",

        "userInfo.tips.catalog.desktop1": "Clique em Abrir para inicializar um site no navegador; use {0} para marcá-lo como favorito.",
        "userInfo.tips.catalog.desktop2": "Clique no ícone do aplicativo ou no nome para saber mais detalhes.",
        "userInfo.tips.catalog.mobile1": "Use {0} para abrir um site no navegador; use {1} para marcá-lo como favorito.",
        "userInfo.tips.catalog.mobile2": "Use {0} para instalar um aplicativo nativo no seu dispositivo. {1} significa que você precisa inscrever seu dispositivo para usar esses aplicativos.",
        "userInfo.tips.catalog.mobile3": "Toque no ícone do aplicativo ou no nome para saber mais detalhes.",

        "userInfo.tips.bookmarks.desktop1": "Clique na organização lado a lado para inicializar o site no seu navegador.",
        "userInfo.tips.bookmarks.desktop2": "Passe o cursor sobre a organização lado a lado para ver mais ações no menu '...'.",

        "userInfo.tips.bookmarks.mobile": "Toque no ícone de detalhes para inicializar um site no seu navegador. Pressione e segure para obter mais ações.",

        "userInfo.tips.catalog.download.phone": "Toque no ícone {0} para instalar um aplicativo nativo no seu dispositivo. O ícone {1} significa que você precisa inscrever seu dispositivo para usar esses aplicativos.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Toque no ícone {0} para abrir um site no navegador e depois toque no ícone {1} para marcá-lo como favorito. Em seguida, toque no ícone do aplicativo ou no nome para obter mais detalhes",

        "userInfo.tips.catalog.download.tablet": "Faça download de aplicativos clicando no botão de download. Para obter mais detalhes, basta clicar no aplicativo",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Inicialize aplicativos clicando no botão de inicialização. Marque aplicativos como favoritos clicando no botão de favoritos",

        "userInfo.tips.people.mobile": "Clique em {0} para navegar de qualquer perfil para voltar à página de destino principal da pesquisa de pessoas.",
        "userInfo.tips.notification.mobile": "Clique em {0} para acessar suas notificações. O selo de notificação permanecerá ativo até que você tenha descartado ou agido em todas as notificações.",

        "userInfo.tips.title": "Dicas para aplicativos",
        "userInfo.tips.intro": "Obtenha ajuda sobre como usar o aplicativo.",
        "userInfo.tips.desktop": "Desktop",
        "userInfo.tips.reordering.title": "Personalize seus favoritos!",
        "userInfo.tips.reordering.text1": "1. Vá para Exibição Personalizada usando o menu suspenso no canto superior direito.",
        "userInfo.tips.reordering.text2": "2. Escolha Organizar. ",
        "userInfo.tips.reordering.text3": "3. Arraste e solte para reorganizar seus favoritos. Depois de terminar, clique em Salvar.",
        "userInfo.tips.mobile": "Dispositivos móveis",

        "userInfo.removeAccount": "Remover Conta",
        "userInfo.account": "Conta",
        "userInfo.profile": "Perfil",
        "userInfo.profile.name": "Nome:",
        "userInfo.profile.email": "E-mail:",
        "userInfo.profile.username": "Nome de usuário:",
        "userInfo.profile.picture": "Imagem do perfil",
        "userInfo.profile.password": "Senha",
        "userInfo.profile.passwordchange": "Alterar",
        "userInfo.profile.passwordprompt": "Gerencie sua senha para o sistema da empresa.",
        "userInfo.password": "Senha",
        "userInfo.termsofuse": "Termos de Uso",
        "userInfo.signout": "Fazer logout",
        "userInfo.tryAgain": "Tentar novamente",
        "userInfo.managedevicesettings": "Gerenciar configurações do dispositivo",
        "userInfo.notification": "Notificação push",
        "userInfo.passcode": "Touch ID ou senha",

        "appCenter.support.selfservice": "Autoatendimento",
        "appCenter.support.managedevices": "Dispositivos",
        "appCenter.support.managedevicestext": "Veja as informações do dispositivo.",
        "appCenter.support.managepassword": "Alterar senha",
        "appCenter.support.managepasswordtext": "Alterar a senha da conta de sua empresa",
        "appCenter.support.gethelp": "Obter ajuda",
        "appCenter.support.appstips": "Aplicativos e dicas",
        "appCenter.support.appstipstext": "Ver as dicas de ferramenta de ajuda neste aplicativo",
        "appCenter.support.sendReportTitle": "Enviar relatório",
        "appCenter.support.sendReportDetails": "Saiba como enviar diagnósticos de aplicativo.",
        "appCenter.support.helpdesk": "Central de Ajuda",
        "appCenter.support.contacthelpdesk": "Entrar em contato com a Central de Ajuda",
        "appCenter.reportProblems.ios.sendLogInstruction": "Agite este dispositivo quando ocorrer um erro para enviar com facilidade o diagnóstico de aplicativo ou dar seu feedback. ",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Você pode ativar/desativar esse recurso nas configurações do dispositivo.",

        // App Details Page
        "app.details.link.back": "Voltar",
        "app.details.nav.details": "Detalhes",
        "app.details.nav.reviews": "Resenhas",
        "app.details.label.description": "Descrição",
        "app.details.label.noDescription": "Nenhuma descrição disponível",
        "app.details.label.seeFullDetails": "Ver os detalhes",
        "app.details.label.removeBookmark": "Remover",
        "app.details.label.resetDektop": "Redefinir",
        "app.details.label.information": "Informação",
        "app.details.label.category": "Categorias",
        "app.details.label.version": "Versão",
        "app.details.label.type": "Tipo",
        "app.details.label.type.SAML11": "Aplicativo da Web",
        "app.details.label.type.SAML20": "Aplicativo da Web",
        "app.details.label.type.WEBAPPLINK": "Aplicativo da Web",
        "app.details.label.type.MDMWEB": "Aplicativo da Web",
        "app.details.label.type.WSFED12": "Aplicativo da Web",
        "app.details.label.type.XENAPP": "Aplicativo Xen",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Área de trabalho da Citrix",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Perfil",
        "app.details.label.type.VIEWPOOL": "Área de trabalho do Horizon",
        "app.details.label.type.VIEWAPP": "Aplicativo Horizon",
        "app.details.label.type.DESKTONEDESKTOP": "Desktop do Horizon Cloud",
        "app.details.label.type.DESKTONEAPPLICATION": "Aplicativo do Horizon Cloud",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Aplicativo da Web",
        "app.details.label.type.PUBLIC": "Aplicativo público",
        "app.details.label.type.INTERNAL": "Interno",
        "app.details.label.size": "Tamanho",
        "app.details.label.price": "Preço",
        "app.details.label.screenshots": "Capturas de tela",
        "app.details.label.showMore": "Mostrar mais",
        "app.details.label.showLess": "Mostrar menos",
        "app.details.label.setAppPassword": "Definir senha",
        "app.details.label.sendFeedback": "Enviar Feedback",
        "app.details.label.feedbackSubject": "Feedback para o aplicativo {0}",
        "app.details.label.support": "Suporte",
        "app.details.label.developer": "Desenvolvedor",
        "app.details.label.email": "E-mail",
        "app.details.label.phone": "Telefone",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "Todos os aplicativos móveis podem ser executados na sua tela inicial.",

        "app.details.label.requirement": "Requisitos:",
        "app.details.label.packageName": "Nome do pacote:",
        "app.details.thinapp.requirement": "Este aplicativo só funciona em um computador executando o Windows, com o Identity Manager Desktop instalado.",
        "app.details.viewDesktop.requirement": "Esta área de trabalho do Horizon requer a instalação do {0}Horizon Client{1} 3.0 ou posterior no computador.",
        "app.details.viewapp.requirement": "Este Aplicativo hospedado Horizon requer a instalação do {0}Horizon Client{1} 3.0 ou posterior no computador.",
        "app.details.xenapp.requirement": "Este aplicativo requer a instalação do {0}Citrix Receiver{1}.",
        "app.details.xenapp.msg.IE8OrLower": "Este aplicativo requer que o Citrix Receiver esteja instalado. Observação: este aplicativo não pode ser aberto no Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "Esta área de trabalho da Citrix requer a instalação do {0}Citrix Receiver{1}.",
        "app.details.desktoneDesktop.requirement": "Este Desktop do Horizon Cloud requer a instalação do {0}Horizon Client{1} no computador.",
        "app.details.desktoneApp.requirement": "Este Aplicativo do Horizon Cloud requer a instalação do {0}Horizon Client{1} no computador.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "Nenhuma informação disponível",
        "app.details.noScreenshots": "Nenhuma captura de tela disponível",
        "app.details.noDescription": "A descrição estará disponível em breve.",
        "app.details.needsDeviceEnrollment": "Requer a inscrição do dispositivo",
        "app.details.label.addToHomeScreen": "Adicionar à tela inicial",
        "app.details.action.open": "Abrir",
        "app.details.action.bookmark": "Favorito",
        "app.details.action.bookmarked": "Marcado como favorito",
        "app.details.action.launch": "Inicializar",
        "app.details.action.setPassword": "Definir senha",
        "app.details.action.pvAppCredentials": "Credenciais",
        "app.details.info.msg.missingInfo": "Faltam algumas informações. Tente novamente mais tarde para ver todos os detalhes.",
        "app.details.wsrequired.msg": "O Workspace Services é obrigatório.",
        "app.details.label.addedFavorites": "Adicionado aos favoritos",

        "app.rating.label": "Avaliação do Usuário",

        "app.settings.label.settings": "Configurações",
        "app.settings.link.back": "Voltar",
        "app.settings.managedDevices": "Dispositivos gerenciados",
        "app.nav.tab.bookmark": "Favoritos",
        "app.nav.tab.catalog": "Catálogo",
        "app.nav.tab.people": "Pessoas",
        "app.nav.tab.support": "Suporte",
        "app.nav.tab.apps": "Aplicativos",
        "app.nav.tab.settings": "Configurações",
        "app.about.heading": "Sobre o Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc. Todos os direitos reservados. Este produto é protegido por leis de direitos autorais e de propriedade intelectual nos Estados Unidos e em outros países, bem como por tratados internacionais. Os produtos da VMware são cobertos por uma ou mais patentes.",
        "app.about.button.label.privacyPolicy": "Política de Privacidade",
        "app.about.button.label.patents": "Patente",
        "app.about.button.label.licenseAgreement": "Contrato de licença",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-br",
        "app.about.licenseAgreementLink": "http://www.vmware.com/br/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/br/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Dispositivos",
        "app.devices.tableColumn.deviceName": "Nome do dispositivo",
        "app.devices.tableColumn.userDeviceId": "ID do dispositivo",
        "app.devices.tableColumn.lastLoginTime": "Horário do último login",
        "app.devices.unlinkDevice": "Desvincular",
        "app.devices.unlinkedDevice": "Desvinculado",
        "app.devices.emptyDeviceListMessage": "Você não tem um dispositivo associado à sua conta.",

        "app.thinappMultiDeviceAct.heading": "Este aplicativo será adicionado aos dispositivos aprovados. Para usar o(a) \"{0}\" em outros dispositivos, encontre abaixo o nome do dispositivo e clique no botão Solicitar.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Nome do dispositivo",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Status",
        "app.thinappMultiDeviceAct.button.request": "Solicitar",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Recusado",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "Pendente",
        "app.thinappMultiDeviceAct.activationState.activated": "Aprovado",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Não ativado",

        "app.thinappsInPackage.button.done": "Concluído",
        "app.thinappsInPackage.button.bookmarkAll": "Marcar Tudo como Favorito",
        "app.thinappsInPackage.info": "Pacote de aplicativos",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} aplicativos",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} correspondência encontrada.",
        "app.thinappsInPackage.action.instruction": "Escolha o ícone de favoritos para marcar o aplicativo individual como favorito ou escolha o botão para marcar todos os aplicativos como favoritos.",
        "app.thinappsInPackage.search.placeholder": "Pesquisar no pacote",

        "app.setAppPassword.heading": "Definir senha",
        "app.setAppPassword.instruction": "Utilize o formulário abaixo para definir uma senha para esse aplicativo. A senha deve ter pelo menos três caracteres de comprimento.",
        "app.setAppPassword.label.password": "Senha",
        "app.setAppPassword.label.confirmPassword": "Confirmar senha",
        "app.setAppPassword.label.generate": "Gerar uma senha",
        "app.setAppPassword.error.passwordsNoMatch": "As senhas não coincidem.",
        "app.setAppPassword.msg.success": "Sua senha do aplicativo foi criada com êxito.",
        "app.setAppPassword.msg.fail": "Houve um erro ao tentar definir a sua senha. Tente novamente.",

        "pvapp.setAppPassword.heading": "Configurar credenciais salvas para {0}",
        "pvapp.setAppPassword.instruction": "Use o formulário abaixo para configurar as credenciais salvas para este aplicativo.",
        "pvapp.setAppPassword.label.username": "Nome de usuário",
        "pvapp.setAppPassword.label.password": "Senha",
        "pvapp.setAppPassword.error.userNameEmpty": "O nome de usuário está vazio.",
        "pvapp.setAppPassword.error.passwordEmpty": "A senha está vazia.",
        "pvapp.setAppPassword.msg.success": "As suas credenciais do aplicativo foram criadas com êxito.",
        "pvapp.setAppPassword.msg.fail": "Houve um erro ao tentar definir as suas credenciais do aplicativo. Tente novamente.",

        "app.launchPassword.heading": "Solicitação de senha",
        "app.launchPassword.view.instruction": "Precisamos da sua senha para fazer logon neste recurso do Windows{0}.",
        "app.launchPassword.label.userName": "Usuário",
        "app.launchPassword.label.password": "senha",
        "app.launchPassword.button.label.signin": "Entrar",

        "app.changePassword.title": "Alterar senha",
        "app.changePassword.enterCurrentPassword": "Digitar a senha atual",
        "app.changePassword.enterNewPassword": "Digitar a nova senha",
        "app.changePassword.confirmNewPassword": "Confirmar a nova senha",
        "app.changePassword.error.passwordsNoMatch": "As senhas novas não conferem",
        "app.changePassword.error.requirementsNoMatch": "A nova senha não atende aos requisitos.",
        "app.changePassword.success": "A nova senha foi salva!",
        "app.changePassword.label.email": "E-mail",
        "app.changePassword.label.phone": "Telefone",

        "app.passwordPolicy.passwordRequirements": "Requisitos de senha",
        "app.passwordPolicy.label.currentpassword": "Senha atual",
        "app.passwordPolicy.label.newpassword": "Nova senha",
        "app.passwordPolicy.label.confirmpassword": "Confirmar a nova senha",
        "app.passwordPolicy.minLength": "No mínimo {0} dígitos",
        "app.passwordPolicy.leastIncludes": "deve ter pelo menos:",
        "app.passwordPolicy.minLower": "{0} letra",
        "app.passwordPolicy.minUpper": "{0} letra maiúscula",
        "app.passwordPolicy.minDigit": "{0} número",
        "app.passwordPolicy.minSpecial": "{0} caractere especial",

        "app.coachmarks.bookmarkTitle": "Como usar os favoritos",
        "app.coachmarks.bookmarkMessage": "Toque para abrir sites; pressione e segure para descobrir mais.",
        "app.coachmarks.catalogTitle": "Como usar o Catálogo",
        "app.coachmarks.catalogMessage": "Instale ou atualize aplicativos; adicione aos Favoritos ou abra diretamente aqui.",
        "app.coachmarks.buttonText": "OK!",

        "app.logout.confirm.msg": "Efetuar o logout do Workspace ONE encerrará esta sessão. Qualquer aplicativo baixado do catálogo permanecerá no dispositivo, mas nenhum aplicativo novo estará disponível até que faça o login outra vez.",
        "app.logout.title": "AVISO",

        "app.passwordVault.banner.msg": "Você tem aplicativos que podem utilizar a extensão do Workspace ONE.",
        "app.passwordVault.banner.button.install": "Instalar",
        "app.passwordVault.banner.setPreference": "Você pode obtê-lo mais tarde em Configurações - Preferências",
        "app.passwordVault.banner.donotshowagain": "Não mostrar esta mensagem novamente",
        "app.passwordVault.banner.button.later": "Mais tarde",
        "app.passwordVault.banner.button.get": "Obter",
        "app.passwordVault.preference.title": "Extensão do Workspace ONE",
        "app.passwordVault.preference.instruction": "Você tem aplicativos que podem utilizar a extensão do Workspace ONE.",
        "app.passwordVault.preference.getextension": "Obter a extensão.",
        "app.bookmarking.change.tab.title": "Ainda está organizando seus favoritos?",
        "app.bookmarking.change.tab.body": "As alterações feitas não serão salvas. Deseja manter a organização dos seus favoritos?",
        "app.bookmarking.touch.disabled": "Você pode Reorganizar aplicativos ao usar o trackpad ou o mouse.",
        "app.bookmarking.change.tab.exit": "Não, quero sair",
        "app.bookmarking.change.tab.stay": "Sim, quero continuar aqui",
        "app.virtual.disabled": "Desabilitado pelo administrador",
        "app.virtual.unavailable": "Este aplicativo não está disponível neste dispositivo",
        "app.virtual.not.available": "Não Disponível",

        "app.notification.type.NEW_ENTITLEMENTS": "Confira-os",
        "app.notification.type.PASSWORD_EXPIRING": "Atualizar Senha",
        "app.notification.action.delete": "Excluir",
        "notification.new.entitlements.heading": "Novos Direitos",
        "notification.new.entitlements.message": "Você tem {0} novos direitos atribuídos",
        "app.notification.delete.header": "Excluir esta Notificação?",
        "app.notification.delete.msg": "Tem certeza de que deseja excluir esta notificação? Você pode escolher Arquivar, caso deseje arquivá-la mais tarde. ",
        "app.notification.delete.text": "Excluir",
        "app.notification.keep.text": "Manter",
        "app.notification.restore.text": "Restaurar",
        "app.notification.delete.toast.msg": "A notificação foi excluída.",
        "app.notification.empty": "Você já leu tudo!",
        "app.notification.more.actions": "Mais ações",
        "app.notification.archive.all": "Arquivar Tudo",

        "app.notification.bookmark.all.error": "Infelizmente não foi possível marcar todos os seus novos aplicativos como favoritos",
        "app.notification.bookmark.all.success": "Todos os novos aplicativos foram adicionados aos favoritos",
        "app.notification.delete.all": "Excluir tudo",
        "app.notification.see.archived": "Visualizar Arquivado",
        "app.notification.see.all": "Ver todas as notificações",
        "app.notification.newApps.title": "Você tem novos aplicativos!",
        "app.notification.newApps.excessIconsMessage": "+ mais {0}",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Visualizar detalhes",
        "app.tooltip.clicktolaunch": "Clicar para inicializar",

        "recommendedApps.install.proceed": "Prosseguir",
        "recommendedApps.install.title": "Instalar aplicativos recomendados",
        "recommendedApps.install.confirm.msg": "Você receberá avisos para continuar a instalação dos seus aplicativos.",
        "recommendedApps.text1": "Esses aplicativos são comumente usados por seus colegas.",
        "recommendedApps.text2": "Você pode instalá-los agora ou encontrá-los mais tarde no seu catálogo.",
        "recommendedApps.selectAll": "Selecionar tudo",
        "recommendedApps.apps": "aplicativos",
        "recommendedApps.install": "Instalar",
        "recommendedApps.skip": "Ignorar",

        "app.desktopapp.settings.title.account": "Conta",
        "app.desktopapp.settings.title.devices": "Dispositivos",
        "app.desktopapp.settings.title.preferences": "Preferências",

        "appCenter.peopleSearch.placeholder": "Procurar Pessoas",
        "app.tooltip.copyEmail": "Copiar E-mail",
        "app.peopleSearch.emailCopied": "E-mail copiado",
        "appCenter.peopleSearch.noResults": "Nenhum resultado encontrado",
        "appCenter.peopleSearch.tryNewSearch": "Tente fazer uma nova pesquisa.",
        "appCenter.peopleSearch.atLeastThreeChars": "Digite 3 ou mais caracteres acima para pesquisar.",
        "appCenter.searchPeople": "Procure por pessoas.",
        "myapps.mobilepagetitle.people": "Pessoas",
        "app.people.labels.team": "Minha Equipe",
        "app.people.labels.recent": "Recentes",
        "app.people.labels.manager": "Gerente",
        "app.people.labels.peers": "Colegas",
        "app.people.labels.directReports": "Relatórios Diretos",
        "app.people.labels.profile": "Perfil",
        "app.people.labels.org": "Org",
        "app.people.labels.workEmail": "E-mail comercial",
        "app.people.labels.workPhone": "Telefone comercial",
        "app.people.labels.alternateNumber": "Telefone alternativo",
        "app.people.labels.mobile": "Celular",
        "app.people.labels.address": "Endereço",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Gerentes",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "Número do funcionário",
        "app.people.labels.skills": "Habilidades",
        "app.people.labels.businessUnit": "Unidade de Negócios",
        "app.people.labels.costCenter": "Centro de custo",
        "app.people.labels.physicalDeliveryOfficeName": "Localização do Escritório",

        "hub.apps": "Aplicativos",
        "hub.notifications": "Notificações",
        "hub.notifications.welcome": "Bem-vindo!",
        "hub.notifications.first.time.message": "As notificações serão exibidas aqui quando você começar a usar o Hub.",
        "hub.notifications.new.apps.favorite.all": "Marcar Todos como Favorito",
        "hub.notifications.congratulations": "Parabéns!",
        "hub.notifications.empty.description1": "Nenhuma notificação nova.",
        "hub.notifications.empty.description2": "Aproveite o espaço extra.",
        "hub.v2.notifications.empty.description": "Você já está pronto com suas notificações",
        "hub.v2.notifications.first.time.description": "As notificações serão exibidas aqui quando você começar a usar o Hub.",
        "hub.notifications.empty.description.archived": "Nenhuma notificação arquivada.",
        "hub.notifications.priority": "Prioridade",
        "hub.notifications.today": "Hoje",
        "hub.notifications.yesterday": "Ontem",
        "hub.notifications.lastWeek": "Última Semana",
        "hub.notifications.lastMonth": "Último Mês",
        "hub.notifications.older": "Mais antigo",
        "hub.notifications.archived.label": "Arquivado",
        "hub.notifications.action.success": "Êxito!",
        "hub.notifications.action.failure": "Infelizmente parece que há um erro na execução dessa ação",
        "hub.notifications.moreDetails": "Mais detalhes",
        "hub.notifications.dialog.action.completed": "Concluído",
        "hub.notifications.dialog.action.needed": "Pendente",
        "hub.notifications.dialog.action.all.notifications": "Todas as Notificações",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Procurar aplicativos",
        "hub.apps.favorites": "Favoritos",
        "hub.apps.newApps": "Novo",
        "hub.apps.recommended": "Recomendado",
        "hub.apps.categories": "Categorias",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Uau, tem muito espaço aqui.",
        "hub.apps.no.apps.msg2": "Entre em contato com o administrador para obter os aplicativos de trabalho.",
        "hub.apps.search.in.category": "{0} resultados em Categoria:",
        "hub.apps.search.in.app": "{0} resultados em Nome do Aplicativo e Descrição",
        "hub.apps.search.header": "Total de Resultados",
        "hub.apps.search.no.result.header": "Nenhum resultado.",
        "hub.apps.search.no.result.msg": "Tente novamente usando um termo diferente.",
        "hub.apps.searchpeople.no.result.msg": "Tente novamente usando um nome diferente.",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "Aplicativo",
        "hub.apps.type.anyApp": "QualquerAplicativo",
        "hub.people": "Pessoas",
        "hub.people.search.text": "Procurar pessoas",
        "hub.people.labels.mypeers": "Meus Colegas",
        "hub.people.labels.directreports": "Relatórios Diretos",
        "hub.people.labels.manager": "Meu Gerente",
        "hub.people.labels.organization": "Organização",
        "hub.people.search.result": "Resultados",
        "hub.app.install.prompt.title": "Deseja instalar",

        "hub.actionsheet.label.viewDetails": "Exibir Detalhes",
        "hub.actionsheet.label.removeFavorites": "Remover dos Favoritos",
        "hub.actionsheet.label.addFavorites": "Adicionar aos Favoritos",
        "hub.password.done": "Concluído",

        "hub.placeholder.changepassword.username": "Nome de Usuário",
        "hub.placeholder.changepassword.password": "Senha",
        "hub.placeholder.changepassword.confirmpassword": "Confirmar senha",

        "hub.tunnel.text.line1": "O Tunnel é necessário para acessar ",
        "hub.tunnel.text.line2": "O aplicativo Tunnel será baixado automaticamente junto com seu aplicativo.",

        "hub.promotions.banner.category.title": "Destaques da Categoria",
        "hub.promotions.banner.category.open": "Abrir",
        "hub.promotions.banner.app.get": "Obter",
        "hub.promotions.banner.disabled": "Desabilitado pelo administrador",
        "hub.require.app.management": "Gerenciado(s)",
        "hub.app.installing.alert.mobile.message": "O aplicativo {0} está sendo instalado. Verifique se há atualizações na tela inicial do seu telefone.",
        "hub.app.installing.alert.desktop.message": "O aplicativo {0} está sendo instalado. Verifique se há atualizações no inicializador de aplicativos da área de trabalho.",

        "hub.nav.label.apps": "Aplicativos",
        "hub.nav.label.people": "Pessoas",
        "hub.nav.label.notification": "Notificações",
        "hub.nav.label.settings": "Configurações",
        "hub.nav.label.account": "Conta",
        "hub.nav.label.signout": "Fazer logout",
        "hub.userInfo.adminConsole": "Console de administração",
        "hub.userInfo.signout": "Fazer logout",
        "hub.userInfo.settings": "Configurações",
        "hub.userInfo.account": "Conta",
        "hub.userInfo.devices": "Dispositivos",
        "hub.userInfo.whatsnew": "Novidades",
        "hub.userInfo.about": "Sobre",
        "hub.download.ios": "Hub para iOS",
        "hub.download.android": "Hub para Android",
        "hub.download.mac": "Hub para Mac",
        "hub.download.windows": "Hub para Windows",
        "hub.download.subtitle.mobile": "Obtenha acesso a Notificações, Página Inicial e muito mais em um único lugar.",
        "hub.download.subtitle.desktop": "Receba notificações da área de trabalho e inicie diretamente da sua plataforma.",
        "hub.preferences.title": "Preferências",
        "hub.preferences.horizon.subtitle": "Aplicativos remotos Horizon",
        "hub.preferences.launch.question": "Como você gostaria de inicializar os aplicativos remotos do Horizon?",
        "hub.about.title": "Sobre o Intelligent Hub da VMware",
        "hub.apps.allApps": "Todos os aplicativos",
        "hub.apps.configure.favorites.msg": "Adicione seus aplicativos favoritos para acesso mais rápido",
        "hub.apps.configure.favorites": "Configurar",
        "hub.apps.edit.favorites": "Editar",

        "hub.contextDialog.label.removeFavorites": "Remover dos Favoritos",
        "hub.contextDialog.label.addFavorites": "Adicionar aos Favoritos",
        "hub.contextDialog.label.viewDetails": "Exibir Detalhes",
        "hub.apps.edit.favorites.header": "Modo de edição de favoritos",
        "hub.apps.edit.favorites.prompt": "Arraste e solte para reordenar.",
        "hub.apps.edit.favorites.save": "Salvar",
        "hub.apps.edit.favorites.cancel": "Cancelar alterações",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Você atualizou a ordem; cancele ou salve antes de sair",
        "hub.apps.edit.favorites.savecustomordering": "Salvando a ordenação personalizada; para evitar perda de resultados, não saia",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Reorganização indisponível nas telas sensíveis ao toque.",
        "hub.apps.edit.favorites.notify.success": "A reordenação dos favoritos foi salva.",
        "hub.apps.edit.favorites.notify.error": "Ocorreu um erro, não é possível salvar a reordenação. Tente mais tarde",

        "hub.nav.label.settings.settings": "Configurações",
        "hub.nav.label.settings.account": "Conta",
        "hub.nav.label.settings.about": "Sobre",
        "hub.nav.label.settings.devices": "Dispositivos",
        "hub.nav.label.settings.preferences": "Preferências",
        "hub.nav.label.settings.whatsnew": "Novidades",

        "hub.apps.detail.back": "Voltar para Aplicativos",
        "hub.people.detail.back": "Voltar para Pessoas",
        "hub.people.notifications.back": "Voltar para as Notificações",

        "hub.nav.label.notifications.filter": "Filtro",
        "hub.nav.label.notifications.all.notifications": "Todas as Notificações",
        "hub.nav.label.notifications.action.needed": "Pendente",
        "hub.nav.label.notifications.completed": "Concluído",
        "hub.long.card.description": "Descrição",
        "hub.long.card.Comment": "Comentário",
        "hub.long.card.Comment.placeholder": "Adicionar um comentário",

        "hub.appLaunch.open": "Abrir",
        "hub.appLaunch.cancel": "Cancelar"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "ОК",
        "and": "и",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Установить",
        "app.banner.open": "Открыть",
        "app.promotion.banner.donotshowagain": "Больше не показывать. Ознакомиться позже в разделе «Настройки» — «О программе».",
        "app.promotion.banner.open": "Открыть в приложении",
        "app.promotion.banner.download": "Загрузить приложение",
        "app.promotion.banner.message": "Более удобная работа с приложением.",
        "horizonDesktopNotDetected": "Чтобы открыть это приложение, необходимо установить на компьютере VMware Identity Manager Desktop. <a target='_blank' href='{0}'>Установите ПО VMware Identity Manager Desktop</a>, если оно еще не установлено.",
        "viewAppsTooltip": "Для использования этого размещенного приложения Horizon необходимо установить на компьютере {0} Horizon Client{1} версии 3.0 или более поздней.",
        "desktoneDesktopTooltip": "Для использования рабочего стола Horizon Cloud необходимо установить на компьютере {0} Horizon Client{1}.",
        "desktoneApplicationTooltip": "Для использования приложения Horizon Cloud необходимо установить на компьютере {0} Horizon Client{1}.",
        "xenAppsReceiverNotDetected": "Чтобы открыть это приложение, необходимо установить на компьютере Citrix Receiver. <a target='_blank' href='{0}'>Установите Citrix Receiver</a>, если эта программа еще не установлена.",
        "button.save": "Сохранить",
        "button.update": "Обновление",
        "button.openHorizonView": "Открыть Horizon Client",
        "myapps.launch.openApp": "Открыть {0}",
        "button.openApp": "Открыть прилож.",
        "button.clear": "Очистить",
        "button.close": "Закрыть",
        "button.cancel": "Отмена",
        "button.download": "Загрузить",
        "myapps.launch.title.launch": "Запустить",
        "myapps.launch.title": "Запустить приложение",
        "myapps.launch.view.openWith": "Открыть с помощью",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Браузер",
        "myapps.launch.view.preferredClient.isDefault": "(по умолчанию)",
        "myapps.launch.view.selectPreferredLaunchClient": "Выберите метод запуска рабочих столов и приложений Horizon",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Удаленные приложения Horizon",
        "myapps.launch.view.selectPreferredLaunchClientText": "Для более эффективного использования возможностей лучше открывать удаленные приложения Horizon в Horizon Client, а не в браузере.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Как следует запускать удаленные приложения Horizon?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "ВЫБРАТЬ МЕТОД ЗАПУСКА ПО УМОЛЧАНИЮ...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Этот параметр определяет метод запуска рабочего стола Horizon по умолчанию для вашего устройства. Если вы выбираете запуск по умолчанию через Horizon Client, у вас должна быть установлена эта программа. <a target='_blank' href='{0}'>Установите Horizon Client</a>, если эта программа еще не установлена.",
        "myapps.launch.view.unknownClientType": "Для открытия Horizon Client используется неизвестный тип клиента.",
        "myapps.launch.view.openWithView": "Открыть с помощью Horizon Client",
        "myapps.launch.view.openWithBrowser": "Открыть с помощью браузера",

        "myapps.launch.view.preferredClient.byBrowser.description": "Если выбрать запуск через браузер, рабочий стол или приложение откроются в новом окне браузера.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Для работы с этим элементом требуется Horizon Client версии 3.0 или более поздней. <a target='_blank' href='{0}'>Установите Horizon Client</a>, если эта программа еще не установлена.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Этот параметр всегда можно изменить в настройках.",
        "myapps.launch.view.preferredClient.saveSuccess": "Выбранный параметр сохранен.",
        "myapps.launch.msg.launching.desktop": "Запуск рабочего стола <b>{0}</b> .....",
        "myapps.launch.msg.launching.application": "Запуск приложения <b>{0}</b> .....",
        "myapps.noAppsMsg": "Не добавлено ни одного приложения. Для добавления приложений перейдите к {0}",
        "myapps.noFavAppsMsg": "В закладках нет ни одного приложения",
        "myapps.welcomeMsg": "Добро пожаловать, {0}! Вот ваши приложения.",
        "myapps.bookmarks.empty.message": "Добавьте часто используемые приложения в закладки для быстрого доступа.",
        "myapps.bookmarks.empty.hidecatalog.message": "В настоящее время нет доступных приложений для использования.",
        "myapps.bookmarks.empty.addbookmarks": "Добавить закладки",
        "myapps.bookmarks.organize.title": "Упорядочить закладки",
        "myapps.bookmarks.organize.addbookmarks": "Добавить закладки",
        "myapps.bookmarks.organize.batchremove": "Удалить",

        "myapps.mobilepagetitle.apps": "Приложения",
        "myapps.mobilepagetitle.details": "Подробности",
        "myapps.mobilepagetitle.support": "Поддержка",
        "myapps.mobilepagetitle.settings": "Параметры",
        "myapps.mobilepagetitle.recommendedapps": "Рекомендованные для вас приложения",
        "myapps.mobilepagetitle.notification": "Уведомления",
        "myapps.mobilepagetitle.archived": "Заархивировано",
        "myapps.mobilepagetitle.notification.newapps": "Новые приложения",

        "myapps.dialog.openApp": "Открыть",
        "myapps.dialog.openAppWithViewClient": "Откр. в Client",
        "myapps.dialog.openAppWithBrowser": "Откр. в браузере",

        "myapps.launch.passwordvault.installExtension.description": "Это приложение может использовать браузерное расширение Password Vault. <a target='_blank' href='{0}'>Установите это расширение</a>, если оно еще не установлено.",

        "deviceStatus.networkLost": "Подключение потеряно. Попытка подключения…",
        "deviceStatus.networkRestored": "Сетевое подключение восстановлено",
        "api.session.expired.retry": "Срок действия сеанса истек. Попытка обновления сеанса...",
        "api.entitlements.reload": "Обновление представления для обновления приложений в каталоге.",
        "api.security.header.invalid.relogin": "Не удалось проверить заголовок безопасности. Выполняется выход из системы...",
        "api.server.load.error": "Наблюдается очень высокая загрузка. Повторите попытку позже.",
        "api.updateApps": "Обновление списка...",
        "api.error": "Произошла ошибка. Повторите попытку.",
        "installation.error": "Внутренние приложения временно недоступны.",
        "service.under.maintenance.error": "Workspace ONE временно находится в режиме обслуживания. Приложения можно запускать, но некоторые функции могут быть недоступны.",
        "api.timeout": "Превышен интервал ожидания для подключения. Повторите попытку.",
        "favoriteStatus.favorite": "Избранное",
        "favoriteStatus.unfavorite": "Удал. из избр.",
        "favoriteStatus.offlineFavoriteMessage": "Для добавления приложения в закладки необходимо подключение к Интернету. Повторно подключитесь и повторите попытку.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "Функция удаления закладки из приложения недоступна в автономном режиме. Повторно подключитесь и повторите попытку.",
        "error.failToFavoriteApp": "Не удалось обновить статус закладки",
        "error.failedToResetApp": "Не удалось сбросить приложение",
        "error.failToHideApp": "Не удалось удалить приложение",
        "error.failToShowApp": "Не удалось добавить приложение в Launcher",
        "error.failedToBookmarkApp": "Не удалось добавить приложение в закладки",
        "error.failedToLaunchApp": "Не удалось открыть приложение",
        "error.failedToRemoveAccount": "Не удалось удалить учетную запись. Повторите попытку позже.",
        "installStatus.enrollDevice": "При работе с {0} необходимо активировать Workspace Services для защиты данных компании",
        "installStatus.enrollDevice.learnMore": "Подробнее",
        "installStatus.offlineInstallMessage": "Запросы на установку недоступны в автономном режиме. Повторно подключитесь и повторите попытку.",
        "installStatus.activated": "Активировано",
        "installStatus.notActivated": "Не активировано",
        "installStatus.request": "Запрос",
        "installStatus.update": "Обновление",
        "installStatus.processing": "Обработка",
        "installStatus.installFailedMessage": "Что-то пошло не так во время установки приложения {0}. Повторите попытку. Если проблему не удалось устранить, свяжитесь с IT-администратором.",
        "installStatus.unenrolledDevice": "Это приложение больше не доступно. Нажмите ОК, чтобы обновить список.",
        "installMessage.continueInstall": "Вы уже ранее пытались установить это приложение. ",
        "installMessage.proceedToInstall": "Нажмите, чтобы продолжить.",
        "installMessage.installingOnDevice": "Выполняется установка на устройство...",

        "app.mobileApp.versionAndMBSize": "{0}МБ | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}ГБ | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Включить Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "Это необходимо выполнить перед установкой приложения. Вы автоматически получите следующие преимущества.",
        "app.adaptivemanagement.valueproposition1": "Установка всех ресурсов компании напрямую.",
        "app.adaptivemanagement.valueproposition2": "Защищенный доступ к корпоративной сети.",
        "app.adaptivemanagement.valueproposition3": "Синхронизированные приложения и содержимое на всех ваших устройствах.",
        "app.adaptivemanagement.valueproposition4": "Удобный интерфейс для повышения производительности.",
        "app.adaptivemanagement.privacylink": "Конфиденциальность",

        "app.tunnel.continue": "Далее",
        "app.tunnel.text.line1": "Для доступа требуется приложение VMware Tunnel",
        "app.tunnel.text.line2": "Tunnel загружается автоматически вместе с приложением.",
        "app.tunnel.header": "Требуется VMware Tunnel",
        "app.tunnel.message": "Для использования этого приложения требуется установить и запустить VMware Tunnel.",
        "recommendedApps.tunnel.text.line1": "Для доступа требуется приложение VMware Tunnel",
        "recommendedApps.tunnel.text.line2": "Tunnel загружается автоматически вместе с приложением.",
        "app.tunnel.installHelpText": "Если установка приложений не началась автоматически, выполните следующие шаги, чтобы включить приложение",
        "app.tunnel.installStep1": "Шаг 1. Установите приложение {0}",
        "app.tunnel.installStep2": "Шаг 2. Установите приложение {0}",

        "requestFailed": "Ошибка запроса",
        "changeOccurred": "Произошло изменение",
        "requestSuccessful": "Запрос успешно выполнен",
        "accept": "Принять",
        "decline": "Отклонить",
        "termsOfUse": "Условия использования",
        "beforeInstallation": "Перед установкой",
        "resetDesktopStatus.offlineMessage": "Сброс рабочего стола недоступен в автономном режиме. Повторно подключитесь и повторите попытку.",
        "resetDesktop.sucess": "Сброс рабочего стола выполнен успешно.",
        "appCenter.someAppsMissingMessage": "В настоящий момент не удалось загрузить все приложения.",
        "appCenter.register.device": "Необходимо обновить некоторые сведения об устройстве. Для продолжения работы в Workspace ONE нажмите кнопку \"Обновить\".",
        "appCenter.mdm.device.error": "У вас больше нет доступа к Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Для получения подробной информации об учетной записи свяжитесь с администратором.",
        "appCenter.mdm.device.poll.error": "В настоящее время не удается завершить создание рабочего пространства. Повторите попытку или обратитесь к администратору.",
        "appCenter.device.status.notRegistered": "Устройство не зарегистрировано",
        "appCenter.device.status.blackListed": "Это устройство внесено в черный список",
        "appCenter.device.status.deviceInputError": "Это неправильное устройство. Свяжитесь с IT-администратором.",
        "appCenter.device.status.unknownError": "Произошла неизвестная ошибка",

        "appCenter.device.register": "Зарегистрировать устройство",
        "appCenter.device.moreDetails": "Дополнительные сведения",
        "appCenter.device.unEnrollWarningTitle": "Удалить учетную запись?",
        "appCenter.device.mdmUnEnrollMessage": "При удалении учетной записи доступ к ресурсам компании будет запрещен, также с этого устройства могут быть удалены приложения, используемые для работы.",
        "appCenter.device.getDeviceEnrollmentStatus": "Получение дополнительных сведений",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Вы действительно хотите продолжить?",
        "appCenter.device.remove": "Удалить",
        "appCenter.device.keep": "Сохранить",
        "appCenter.device.disableWorkspaceMessage": "Удаление учетной записи приведет к отмене доступа, предоставленного через приложение Workspace ONE. Ранее загруженные и установленные приложения останутся установленными, но доступ к ним может быть ограничен. Продолжить?",
        "appCenter.noAppsMsg": "На данный момент нет доступных приложений",
        "appCenter.vppInviteTitle": "Регистрация управляемого распределения",
        "appCenter.appInstallConfirmPromptTitle": "Подтвердить установку",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Требуется одобрение для",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Запрос был отклонен ранее",
        "appCenter.mdmAppRequestConfirmPromptMessage": "Администратор должен одобрить приложение, к которому вы пытаетесь получить доступ",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Вы уже отправляли запрос на это приложение, и он был отклонен. Повторить запрос?",
        "appCenter.acceptInvite": "Принять приглашение",
        "appCenter.install": "Установить",
        "appCenter.proceed": "Включить Workspace Services",
        "appCenter.cancel": "Отмена",
        "appCenter.confirm": "Подтвердить",
        "appCenter.searchApps": "Поиск приложений.",
        "appCenter.welcomeMsg": "Установка новых приложений в любом месте и на любое устройство!",
        "appCenter.done": "Готово",
        "appCenter.nav.privacyPage": "Вкладка \"Конфиденциальность\"",
        "appCenter.nav.catalog": "Каталог",
        "appCenter.nav.myApps": "Мои приложения",
        "appCenter.nav.favorites": "Избранное",
        "appCenter.nav.categories": "Категории",
        "appCenter.nav.filterby": "Фильтровать по",
        "appCenter.nav.show": "Показать",
        "appCenter.nav.settings": "Параметры",
        "appCenter.nav.sortBy": "Сортировать по",
        "appCenter.nav.sortBy.alpha": "Сортировка по алфавиту",
        "appCenter.nav.sortBy.inverseAlpha": "Обратная сортировка по алфавиту",
        "appCenter.nav.sortBy.customView": "Пользовательское представление",
        "appCenter.nav.arrange": "Упорядочить",
        "appCenter.nav.arrange.saved": "Пользовательское представление сохранено.",
        "appCenter.nav.arrange.tooltip": "Доступно только в Windows.",
        "appCenter.nav.arrange.saving": "Сохранение...",
        "appCenter.nav.arrange.error": "Не удается сохранить пользовательское представление.",
        "appCenter.nav.filter": "Фильтр",
        "appCenter.installFailedTitle": "Ошибка установки приложения",
        "appCenter.uccConflict": "Что-то пошло не так в текущем сеансе. Выполните вход повторно.",

        "appCenter.search.placeholder": "Поиск",
        "appCenter.search.noResults": "Нет результатов.",

        "appCenter.action.open": "Открыть",
        "appCenter.action.install": "Установить",
        "appCenter.action.installing": "Установка",
        "appCenter.action.installed": "Установлено",
        "appCenter.action.reinstall": "Переустановить",
        "appCenter.action.add": "Добавить",
        "appCenter.action.added": "Добавлено",
        "appCenter.action.processing": "Обработка",
        "appCenter.action.update": "Обновление",
        "appCenter.action.request": "Запрос",
        "appCenter.action.pending": "Ожидание",
        "appCenter.action.view": "Просмотр",
        "appCenter.action.favorite": "Избранное",
        "appCenter.action.unfavorite": "Удал. из избр.",

        "appCenter.internalApp.installtionModalTitle": "Действия по установке приложения",
        "appCenter.internalApp.installationStepTitle": "Чтобы открыть приложение, после установки выполните следующее.",
        "appCenter.internalApp.step1": "На домашнем экране iOS откройте \"Настройки\".",
        "appCenter.internalApp.step2": "Нажмите \"Основные\".",
        "appCenter.internalApp.step3": "Откройте \"Профили\" и \"Управление устройством\".",
        "appCenter.internalApp.step4": "Выберите имя разработчика в разделе \"Корпоративное приложение\".",
        "appCenter.internalApp.step5": "Проверьте приложение или сделайте его доверенным.",
        "appCenter.internalApp.watchTutorial": "См. пошаговую инструкцию",

        "appCenter.type.web": "Веб-сайт",
        "appCenter.type.native": "Внутреннее приложение",
        "appCenter.type.native.platform": "Приложение {0}",
        "appCenter.type.virtual": "Виртуальное приложение",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "Пакет приложений",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Категории",
        "myapp.nav.favorites": "Избранное",
        "myapp.nav.allApps": "Все приложения",
        "myapp.nav.recommendedApps": "Рекомендуется",
        "myapp.nav.newlyEntitledApps": "Создать",
        "myapp.nav.webApps": "Веб-сайты",
        "myapp.nav.mobileApps": "Мобильные приложения",
        "myapp.nav.macApps": "Приложения Mac",
        "myapp.nav.windowsApps": "Приложения Windows",
        "myapp.nav.virtualApps": "Виртуальные",
        "myapp.label.new": "Создать",
        "myapp.nav.filterby": "Фильтровать по",
        "myapp.nav.mobile.filter.pagetitle": "Фильтровать по категориям",
        "appCenter.nav.browseBy": "Поиск по",

        "appCenter.catalog.empty": "Похоже, вам еще не назначено ни одного приложения. Они будут назначены в ближайшее время. Проверьте позже.",

        "userInfo.adminConsole": "Консоль администрирования",
        "userInfo.settings": "Параметры",
        "userInfo.notifications": "Уведомления",
        "userInfo.support": "Поддержка",
        "userInfo.preferences": "Параметры",
        "userInfo.about": "О программе",
        "userInfo.devices": "Устройства",
        "userInfo.settings.promo.title": "Загрузить приложение Workspace ONE",
        "userInfo.settings.promo.message": "Workspace ONE обеспечивает возможность более удобной работы с приложением. Попробовать сейчас?",

        "userInfo.tips": "Советы по приложениям",
        "userInfo.tips.description": "Помощь по использованию приложения",

        "userInfo.tips.bookmarks": "Использование закладок",
        "userInfo.tips.catalog": "Использование каталога",
        "userInfo.tips.people": "Новое. Использование функции \"Люди\"",
        "userInfo.tips.notification": "Новое. Использование функции \"Уведомление\"",

        "userInfo.tips.catalog.desktop1": "Щелкните «Открыть», чтобы открыть веб-сайт в браузере; используйте {0}, чтобы добавить его в закладки.",
        "userInfo.tips.catalog.desktop2": "Щелкните значок или название приложения, чтобы получить дополнительные сведения.",
        "userInfo.tips.catalog.mobile1": "Используйте {0}, чтобы открыть веб-сайт в браузере; используйте {1}, чтобы добавить его в закладки.",
        "userInfo.tips.catalog.mobile2": "Используйте {0}, чтобы установить нативное приложение на устройство. {1} означает, что для использования этих приложений необходимо зарегистрировать устройство.",
        "userInfo.tips.catalog.mobile3": "Коснитесь значка или названия приложения, чтобы получить дополнительные сведения.",

        "userInfo.tips.bookmarks.desktop1": "Коснитесь плитки, чтобы открыть веб-сайт в браузере.",
        "userInfo.tips.bookmarks.desktop2": "Наведите курсор на плитку, чтобы увидеть больше действий в меню «...».",

        "userInfo.tips.bookmarks.mobile": "Нажмите плитку, чтобы открыть веб-сайт в браузере. Для дополнительных действий нажмите и удерживайте плитку.",

        "userInfo.tips.catalog.download.phone": "Коснитесь значка {0}, чтобы установить нативное приложение на устройство. Значок {1} означает, что для использования этих приложений необходимо зарегистрировать устройство.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Коснитесь значка {0}, чтобы открыть веб-сайт в браузере. Коснитесь значка {1}, чтобы добавить его в закладки. Коснитесь значка или названия приложения, чтобы получить дополнительные сведения.",

        "userInfo.tips.catalog.download.tablet": "Нажмите кнопку загрузки, чтобы загрузить приложения. Для получения дополнительных сведений просто щелкните приложение.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Для запуска приложений нажмите кнопку запуска. Для добавления приложений в закладки нажмите кнопку закладок.",

        "userInfo.tips.people.mobile": "Щелкните {0}, чтобы перейти из любого профиля на основную начальную страницу поиска людей.",
        "userInfo.tips.notification.mobile": "Щелкните {0}, чтобы перейти к уведомлениям. Значок уведомлений останется активным, пока все уведомления не будут отклонены или по ним не будут выполнены действия.",

        "userInfo.tips.title": "Советы по приложениям",
        "userInfo.tips.intro": "Помощь по использованию приложения",
        "userInfo.tips.desktop": "Компьютер",
        "userInfo.tips.reordering.title": "Настройте закладки.",
        "userInfo.tips.reordering.text1": "1. Перейдите в «Настраиваемый просмотр» с помощью выпадающего меню в правом верхнем углу.",
        "userInfo.tips.reordering.text2": "2. Выберите «Упорядочить». ",
        "userInfo.tips.reordering.text3": "3. Перетащите закладки, чтобы упорядочить их. Затем щелкните «Сохранить».",
        "userInfo.tips.mobile": "Мобильные устройства",

        "userInfo.removeAccount": "Удалить учетную запись",
        "userInfo.account": "Учетная запись",
        "userInfo.profile": "Профиль",
        "userInfo.profile.name": "Имя:",
        "userInfo.profile.email": "Эл. почта:",
        "userInfo.profile.username": "Имя пользователя:",
        "userInfo.profile.picture": "Изображение профиля",
        "userInfo.profile.password": "Пароль",
        "userInfo.profile.passwordchange": "Изменить",
        "userInfo.profile.passwordprompt": "Управление паролем для входа в корпоративную систему.",
        "userInfo.password": "Пароль",
        "userInfo.termsofuse": "Условия использования",
        "userInfo.signout": "Выход",
        "userInfo.tryAgain": "Повторить попытку",
        "userInfo.managedevicesettings": "Управление настройками устройства",
        "userInfo.notification": "Push-уведомление",
        "userInfo.passcode": "Touch ID или код доступа",

        "appCenter.support.selfservice": "Самообслуживание",
        "appCenter.support.managedevices": "Устройства",
        "appCenter.support.managedevicestext": "Просмотреть сведения об устройстве",
        "appCenter.support.managepassword": "Сменить пароль",
        "appCenter.support.managepasswordtext": "Изменить пароль корпоративной учетной записи",
        "appCenter.support.gethelp": "Помощь",
        "appCenter.support.appstips": "Приложения и подсказки",
        "appCenter.support.appstipstext": "Включить всплывающие подсказки в приложении",
        "appCenter.support.sendReportTitle": "Отправить отчет",
        "appCenter.support.sendReportDetails": "Узнать, как отправить сведения о диагностике приложения.",
        "appCenter.support.helpdesk": "Служба поддержки",
        "appCenter.support.contacthelpdesk": "Обратиться в службу поддержки",
        "appCenter.reportProblems.ios.sendLogInstruction": "При возникновении ошибки встряхните устройство, чтобы отправить сведения о диагностике приложения или предоставить отзыв.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Эту функцию можно включить или отключить в настройках устройства.",

        // App Details Page
        "app.details.link.back": "Назад",
        "app.details.nav.details": "Подробности",
        "app.details.nav.reviews": "Отзывы",
        "app.details.label.description": "Описание",
        "app.details.label.noDescription": "Нет описания",
        "app.details.label.seeFullDetails": "Просм. сведения",
        "app.details.label.removeBookmark": "Удалить",
        "app.details.label.resetDektop": "Сбросить",
        "app.details.label.information": "Сведения",
        "app.details.label.category": "Категории",
        "app.details.label.version": "Версия",
        "app.details.label.type": "Тип",
        "app.details.label.type.SAML11": "Веб-приложение",
        "app.details.label.type.SAML20": "Веб-приложение",
        "app.details.label.type.WEBAPPLINK": "Веб-приложение",
        "app.details.label.type.MDMWEB": "Веб-приложение",
        "app.details.label.type.WSFED12": "Веб-приложение",
        "app.details.label.type.XENAPP": "XenApp",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix Desktop",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Профиль",
        "app.details.label.type.VIEWPOOL": "Рабочий стол Horizon",
        "app.details.label.type.VIEWAPP": "Приложение Horizon",
        "app.details.label.type.DESKTONEDESKTOP": "Рабочий стол Horizon Cloud",
        "app.details.label.type.DESKTONEAPPLICATION": "Приложение Horizon Cloud",
        "app.details.label.type.APPV": "App-V",
        "app.details.label.type.PASSWORDVAULT": "Веб-приложение",
        "app.details.label.type.PUBLIC": "Общедоступное приложение",
        "app.details.label.type.INTERNAL": "Внутренние",
        "app.details.label.size": "Размер",
        "app.details.label.price": "Цена",
        "app.details.label.screenshots": "Снимки экрана",
        "app.details.label.showMore": "Развернуть",
        "app.details.label.showLess": "Свернуть",
        "app.details.label.setAppPassword": "Задать пароль",
        "app.details.label.sendFeedback": "Отправить отзыв",
        "app.details.label.feedbackSubject": "Отзыв о приложении {0}",
        "app.details.label.support": "Поддержка",
        "app.details.label.developer": "Разработчик",
        "app.details.label.email": "Адрес эл. почты",
        "app.details.label.phone": "Телефон",
        "app.details.appSize": "{0} МБ",
        "app.details.label.launchMessage": "Все мобильные приложения можно запускать с домашнего экрана.",

        "app.details.label.requirement": "Требование:",
        "app.details.label.packageName": "Название пакета:",
        "app.details.thinapp.requirement": "Это приложение работает только на компьютере под управлением Windows с установленным ПО Identity Manager Desktop.",
        "app.details.viewDesktop.requirement": "Для использования рабочего стола Horizon необходимо установить на компьютере {0} Horizon Client{1} версии 3.0 или более поздней.",
        "app.details.viewapp.requirement": "Для использования этого размещенного приложения Horizon необходимо установить на компьютере {0} Horizon Client{1} версии 3.0 или более поздней.",
        "app.details.xenapp.requirement": "Для работы с приложением необходимо установить {0} Citrix Receiver {1}.",
        "app.details.xenapp.msg.IE8OrLower": "Для этого приложения необходимо установить Citrix Receiver. Примечание. Данное приложение нельзя открыть в Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "Для работы с рабочим столом Citrix необходимо установить {0} Citrix Receiver {1}.",
        "app.details.desktoneDesktop.requirement": "Для использования рабочего стола Horizon Cloud необходимо установить на компьютере {0} Horizon Client{1}.",
        "app.details.desktoneApp.requirement": "Для использования приложения Horizon Cloud необходимо установить на компьютере {0} Horizon Client{1}.",
        "app.details.abbrev.megabytes": "МБ",
        "app.details.abbrev.gigabytes": "ГБ",
        "app.details.noData": "Нет данных",
        "app.details.noScreenshots": "Нет снимков экрана",
        "app.details.noDescription": "Описание появится в ближайшее время.",
        "app.details.needsDeviceEnrollment": "Необходима регистрация устройства.",
        "app.details.label.addToHomeScreen": "Добавить на домашний экран",
        "app.details.action.open": "Открыть",
        "app.details.action.bookmark": "Закладка",
        "app.details.action.bookmarked": "В закладках",
        "app.details.action.launch": "Запустить",
        "app.details.action.setPassword": "Установить пароль",
        "app.details.action.pvAppCredentials": "Учетные данные",
        "app.details.info.msg.missingInfo": "Отсутствуют некоторые сведения. Для просмотра полных сведений повторите попытку позже.",
        "app.details.wsrequired.msg": "Требуется Workspace Services",
        "app.details.label.addedFavorites": "Добавлено в избранное",

        "app.rating.label": "Оценка пользователей",

        "app.settings.label.settings": "Параметры",
        "app.settings.link.back": "Назад",
        "app.settings.managedDevices": "Управляемые устройства",
        "app.nav.tab.bookmark": "Закладки",
        "app.nav.tab.catalog": "Каталог",
        "app.nav.tab.people": "Люди",
        "app.nav.tab.support": "Поддержка",
        "app.nav.tab.apps": "Приложения",
        "app.nav.tab.settings": "Параметры",
        "app.about.heading": "Сведения о Workspace ONE",
        "app.about.copyright": "© VMware, Inc., 2013–2019. Все права защищены. Этот продукт защищен законами США и международными законами об авторских правах и интеллектуальной собственности. Продукты VMware защищены одним или несколькими патентами.",
        "app.about.button.label.privacyPolicy": "Политика конфиденциальности",
        "app.about.button.label.patents": "Патент",
        "app.about.button.label.licenseAgreement": "Лицензионное соглашение",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-ru",
        "app.about.licenseAgreementLink": "http://www.vmware.com/ru/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/ru/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Устройства",
        "app.devices.tableColumn.deviceName": "Имя устройства",
        "app.devices.tableColumn.userDeviceId": "ID устройства",
        "app.devices.tableColumn.lastLoginTime": "Время последнего входа",
        "app.devices.unlinkDevice": "Разорвать связь",
        "app.devices.unlinkedDevice": "Связь разорвана",
        "app.devices.emptyDeviceListMessage": "Нет устройств, связанных с вашей учетной записью.",

        "app.thinappMultiDeviceAct.heading": "Это приложение будет добавлено на разрешенные устройства. Чтобы использовать \"{0}\" на дополнительных устройствах, найдите название устройства ниже и затем нажмите кнопку \"Запрос\".",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Имя устройства",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Состояние",
        "app.thinappMultiDeviceAct.button.request": "Запрос",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Отклонено",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "Ожидание",
        "app.thinappMultiDeviceAct.activationState.activated": "Утверждено",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Не активировано",

        "app.thinappsInPackage.button.done": "Готово",
        "app.thinappsInPackage.button.bookmarkAll": "Добавить все в закладки",
        "app.thinappsInPackage.info": "Пакет приложений",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} приложения",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} совпадение найдено.",
        "app.thinappsInPackage.action.instruction": "Нажмите кнопку закладок, чтобы добавить в закладки отдельное приложение, либо нажмите соответствующую кнопку, чтобы добавить в закладки все приложения.",
        "app.thinappsInPackage.search.placeholder": "Поиск в пакете",

        "app.setAppPassword.heading": "Установить пароль",
        "app.setAppPassword.instruction": "Используйте форму ниже, чтобы установить пароль для этого приложения. Пароль должен содержать минимум 3 символа.",
        "app.setAppPassword.label.password": "Пароль",
        "app.setAppPassword.label.confirmPassword": "Подтвердите пароль",
        "app.setAppPassword.label.generate": "Создать пароль",
        "app.setAppPassword.error.passwordsNoMatch": "Пароли не совпадают.",
        "app.setAppPassword.msg.success": "Пароль для приложения успешно установлен.",
        "app.setAppPassword.msg.fail": "Произошла ошибка при установке пароля. Повторите попытку.",

        "pvapp.setAppPassword.heading": "Установить сохраненные учетные данные для {0}",
        "pvapp.setAppPassword.instruction": "Используйте приведенную ниже форму, чтобы установить сохраненные учетные данные для этого приложения.",
        "pvapp.setAppPassword.label.username": "Имя пользователя",
        "pvapp.setAppPassword.label.password": "Пароль",
        "pvapp.setAppPassword.error.userNameEmpty": "Имя пользователя не содержит символов.",
        "pvapp.setAppPassword.error.passwordEmpty": "Пароль не содержит символов.",
        "pvapp.setAppPassword.msg.success": "Учетные данные для приложения успешно установлены.",
        "pvapp.setAppPassword.msg.fail": "Произошла ошибка при установке учетных данных для приложения. Повторите попытку.",

        "app.launchPassword.heading": "Запрос пароля",
        "app.launchPassword.view.instruction": "Необходимо ввести пароль для входа в этот ресурс Windows {0}.",
        "app.launchPassword.label.userName": "Пользователь",
        "app.launchPassword.label.password": "пароль",
        "app.launchPassword.button.label.signin": "Войти",

        "app.changePassword.title": "Сменить пароль",
        "app.changePassword.enterCurrentPassword": "Введите текущий пароль",
        "app.changePassword.enterNewPassword": "Введите новый пароль",
        "app.changePassword.confirmNewPassword": "Подтвердите новый пароль",
        "app.changePassword.error.passwordsNoMatch": "Новые пароли не совпадают.",
        "app.changePassword.error.requirementsNoMatch": "Новый пароль не соответствует требованиям.",
        "app.changePassword.success": "Новый пароль сохранен.",
        "app.changePassword.label.email": "Адрес эл. почты",
        "app.changePassword.label.phone": "Телефон",

        "app.passwordPolicy.passwordRequirements": "Требования к паролю",
        "app.passwordPolicy.label.currentpassword": "Текущий пароль",
        "app.passwordPolicy.label.newpassword": "Новый пароль",
        "app.passwordPolicy.label.confirmpassword": "Подтвердите новый пароль",
        "app.passwordPolicy.minLength": "Минимальное число символов: {0}",
        "app.passwordPolicy.leastIncludes": "содержит как минимум:",
        "app.passwordPolicy.minLower": "букв: {0}",
        "app.passwordPolicy.minUpper": "заглавных букв: {0}",
        "app.passwordPolicy.minDigit": "цифр: {0}",
        "app.passwordPolicy.minSpecial": "специальных символов: {0}",

        "app.coachmarks.bookmarkTitle": "Использование закладок",
        "app.coachmarks.bookmarkMessage": "Нажмите для открытия веб-сайтов. Нажмите и удерживайте для получения дополнительных сведений.",
        "app.coachmarks.catalogTitle": "Использование каталога",
        "app.coachmarks.catalogMessage": "Установите или обновите приложения. Добавьте их в закладки или откройте прямо отсюда.",
        "app.coachmarks.buttonText": "Понятно.",

        "app.logout.confirm.msg": "При выходе из Workspace ONE текущий сеанс будет завершен. Приложения, загруженные из каталога, останутся на устройстве, но новые приложения не будут доступны, пока вы снова не войдете в Workspace ONE.",
        "app.logout.title": "ВНИМАНИЕ!",

        "app.passwordVault.banner.msg": "Некоторые установленные приложения могут использовать расширение Workspace ONE.",
        "app.passwordVault.banner.button.install": "Установить",
        "app.passwordVault.banner.setPreference": "Его можно получить позже в разделе \"Настройки\" — \"Параметры\".",
        "app.passwordVault.banner.donotshowagain": "Больше не показывать",
        "app.passwordVault.banner.button.later": "Позже",
        "app.passwordVault.banner.button.get": "Получить",
        "app.passwordVault.preference.title": "Расширение Workspace ONE",
        "app.passwordVault.preference.instruction": "Некоторые установленные приложения могут использовать расширение Workspace ONE.",
        "app.passwordVault.preference.getextension": "Получить расширение",
        "app.bookmarking.change.tab.title": "Все еще упорядочиваете закладки?",
        "app.bookmarking.change.tab.body": "Сделанные изменения не будут сохранены. Хотите продолжить упорядочивание закладок?",
        "app.bookmarking.touch.disabled": "Можно упорядочить приложения с помощью трекпада или мыши.",
        "app.bookmarking.change.tab.exit": "Нет, выйти",
        "app.bookmarking.change.tab.stay": "Остаться",
        "app.virtual.disabled": "Отключено администратором",
        "app.virtual.unavailable": "Это приложение недоступно на данном устройстве",
        "app.virtual.not.available": "Недоступно",

        "app.notification.type.NEW_ENTITLEMENTS": "Посмотреть",
        "app.notification.type.PASSWORD_EXPIRING": "Обновить пароль",
        "app.notification.action.delete": "Удалить",
        "notification.new.entitlements.heading": "Новые права",
        "notification.new.entitlements.message": "Вам назначены новые права ({0})",
        "app.notification.delete.header": "Удалить это уведомление?",
        "app.notification.delete.msg": "Действительно удалить это уведомление? Можно выбрать вариант архивирования, чтобы заархивировать его позднее. ",
        "app.notification.delete.text": "Удалить",
        "app.notification.keep.text": "Сохранить",
        "app.notification.restore.text": "Восстановить",
        "app.notification.delete.toast.msg": "Уведомление удалено.",
        "app.notification.empty": "Теперь вы в курсе.",
        "app.notification.more.actions": "Дополнительные действия",
        "app.notification.archive.all": "Архивировать все",

        "app.notification.bookmark.all.error": "К сожалению, не удалось добавить все новые приложения в закладки",
        "app.notification.bookmark.all.success": "Все новые приложения добавлены в избранное",
        "app.notification.delete.all": "Удалить все",
        "app.notification.see.archived": "Просмотреть заархивированные",
        "app.notification.see.all": "Посмотреть все уведомления",
        "app.notification.newApps.title": "У вас новые приложения!",
        "app.notification.newApps.excessIconsMessage": "еще + {0}",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Подробнее",
        "app.tooltip.clicktolaunch": "Щелкните для запуска",

        "recommendedApps.install.proceed": "Продолжить",
        "recommendedApps.install.title": "Установить рекомендуемые приложения",
        "recommendedApps.install.confirm.msg": "Появится запрос на продолжение установки приложений.",
        "recommendedApps.text1": "Ваши коллеги обычно используют эти приложения.",
        "recommendedApps.text2": "Можно установить их сейчас или позже найти в каталоге.",
        "recommendedApps.selectAll": "Выбрать все",
        "recommendedApps.apps": "приложения",
        "recommendedApps.install": "Установить",
        "recommendedApps.skip": "Пропустить",

        "app.desktopapp.settings.title.account": "Учетная запись",
        "app.desktopapp.settings.title.devices": "Устройства",
        "app.desktopapp.settings.title.preferences": "Параметры",

        "appCenter.peopleSearch.placeholder": "Поиск людей",
        "app.tooltip.copyEmail": "Копировать сообщение",
        "app.peopleSearch.emailCopied": "Сообщение скопировано",
        "appCenter.peopleSearch.noResults": "Результаты не найдены",
        "appCenter.peopleSearch.tryNewSearch": "Попробуйте выполнить новый поиск.",
        "appCenter.peopleSearch.atLeastThreeChars": "Выше введите не менее трех символов для поиска.",
        "appCenter.searchPeople": "Поиск людей.",
        "myapps.mobilepagetitle.people": "Люди",
        "app.people.labels.team": "Моя команда",
        "app.people.labels.recent": "Последние",
        "app.people.labels.manager": "Руководитель",
        "app.people.labels.peers": "Коллеги",
        "app.people.labels.directReports": "Непосредственные подчиненные",
        "app.people.labels.profile": "Профиль",
        "app.people.labels.org": "Организация",
        "app.people.labels.workEmail": "Рабочий адрес электронной почты",
        "app.people.labels.workPhone": "Рабочий телефон",
        "app.people.labels.alternateNumber": "Дополнительный телефон",
        "app.people.labels.mobile": "Мобильный телефон",
        "app.people.labels.address": "Адрес",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Руководители",
        "app.people.labels.skypeForBusiness": "Skype для бизнеса",
        "app.people.labels.employeeNumber": "Номер сотрудника",
        "app.people.labels.skills": "Навыки",
        "app.people.labels.businessUnit": "Бизнес-подразделение",
        "app.people.labels.costCenter": "Источник расходов",
        "app.people.labels.physicalDeliveryOfficeName": "Адрес офиса",

        "hub.apps": "Приложения",
        "hub.notifications": "Уведомления",
        "hub.notifications.welcome": "Добро пожаловать!",
        "hub.notifications.first.time.message": "Когда вы начнете использовать Hub, здесь будут появляться уведомления.",
        "hub.notifications.new.apps.favorite.all": "Добавить все в избранное",
        "hub.notifications.congratulations": "Поздравляем!",
        "hub.notifications.empty.description1": "Нет новых уведомлений.",
        "hub.notifications.empty.description2": "Появилось дополнительное пространство.",
        "hub.v2.notifications.empty.description": "Все уведомления прочитаны",
        "hub.v2.notifications.first.time.description": "Когда вы начнете использовать Hub, здесь будут появляться уведомления.",
        "hub.notifications.empty.description.archived": "Нет заархивированных уведомлений.",
        "hub.notifications.priority": "Приоритет",
        "hub.notifications.today": "Сегодня",
        "hub.notifications.yesterday": "Вчера",
        "hub.notifications.lastWeek": "Последняя неделя",
        "hub.notifications.lastMonth": "Последний месяц",
        "hub.notifications.older": "Ранее",
        "hub.notifications.archived.label": "Заархивировано",
        "hub.notifications.action.success": "Выполнено",
        "hub.notifications.action.failure": "Возможно, произошла ошибка при выполнении этого действия",
        "hub.notifications.moreDetails": "Дополнительные сведения",
        "hub.notifications.dialog.action.completed": "Завершено",
        "hub.notifications.dialog.action.needed": "Ожидание",
        "hub.notifications.dialog.action.all.notifications": "Все уведомления",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Поиск приложений",
        "hub.apps.favorites": "Избранное",
        "hub.apps.newApps": "Создать",
        "hub.apps.recommended": "Рекомендуется",
        "hub.apps.categories": "Категории",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Здесь много свободного пространства.",
        "hub.apps.no.apps.msg2": "Обратитесь к администратору для получения рабочих приложений.",
        "hub.apps.search.in.category": "Результаты ({0}) по категории:",
        "hub.apps.search.in.app": "Результаты ({0}) по имени приложения и описанию",
        "hub.apps.search.header": "Всего результатов",
        "hub.apps.search.no.result.header": "Нет результатов.",
        "hub.apps.search.no.result.msg": "Повторите попытку, используя другое условие.",
        "hub.apps.searchpeople.no.result.msg": "Повторите попытку с использованием другого имени.",
        "hub.apps.type.web": "Веб",
        "hub.apps.type.Virtual": "Веб",
        "hub.apps.type.application": "Приложение",
        "hub.apps.type.anyApp": "AnyApp",
        "hub.people": "Люди",
        "hub.people.search.text": "Поиск людей",
        "hub.people.labels.mypeers": "Мои коллеги",
        "hub.people.labels.directreports": "Непосредственные подчиненные",
        "hub.people.labels.manager": "Мой руководитель",
        "hub.people.labels.organization": "Организация",
        "hub.people.search.result": "Результаты",
        "hub.app.install.prompt.title": "Установить",

        "hub.actionsheet.label.viewDetails": "Просмотреть сведения",
        "hub.actionsheet.label.removeFavorites": "Удалить из избранного",
        "hub.actionsheet.label.addFavorites": "Добавить в избранное",
        "hub.password.done": "Готово",

        "hub.placeholder.changepassword.username": "Имя пользователя",
        "hub.placeholder.changepassword.password": "Пароль",
        "hub.placeholder.changepassword.confirmpassword": "Подтвердите пароль",

        "hub.tunnel.text.line1": "Для доступа требуется Tunnel ",
        "hub.tunnel.text.line2": "Приложение Tunnel загрузится автоматически вместе с вашим приложением.",

        "hub.promotions.banner.category.title": "Главное в категориях",
        "hub.promotions.banner.category.open": "Открыть",
        "hub.promotions.banner.app.get": "Получить",
        "hub.promotions.banner.disabled": "Отключено администратором",
        "hub.require.app.management": "Под управлением",
        "hub.app.installing.alert.mobile.message": "Выполняется установка приложения {0}. Проверьте наличие обновлений на домашнем экране телефона.",
        "hub.app.installing.alert.desktop.message": "Выполняется установка приложения {0}. Проверьте наличие обновлений в средстве запуска приложений на настольном компьютере.",

        "hub.nav.label.apps": "Приложения",
        "hub.nav.label.people": "Люди",
        "hub.nav.label.notification": "Уведомления",
        "hub.nav.label.settings": "Параметры",
        "hub.nav.label.account": "Учетная запись",
        "hub.nav.label.signout": "Выход",
        "hub.userInfo.adminConsole": "Консоль администрирования",
        "hub.userInfo.signout": "Выход",
        "hub.userInfo.settings": "Параметры",
        "hub.userInfo.account": "Учетная запись",
        "hub.userInfo.devices": "Устройства",
        "hub.userInfo.whatsnew": "Новые возможности",
        "hub.userInfo.about": "Сведения",
        "hub.download.ios": "Hub для iOS",
        "hub.download.android": "Hub для Android",
        "hub.download.mac": "Hub для Mac",
        "hub.download.windows": "Hub для Windows",
        "hub.download.subtitle.mobile": "Получите доступ к уведомлениям, домашней странице и многим другим функциям в одном месте.",
        "hub.download.subtitle.desktop": "Получайте уведомления на настольном компьютере и выполняйте запуск прямо из Dock.",
        "hub.preferences.title": "Параметры",
        "hub.preferences.horizon.subtitle": "Удаленные приложения Horizon",
        "hub.preferences.launch.question": "Как следует запускать удаленные приложения Horizon?",
        "hub.about.title": "Сведения о VMware Intelligent Hub",
        "hub.apps.allApps": "Все приложения",
        "hub.apps.configure.favorites.msg": "Добавьте избранные приложения здесь для быстрого доступа",
        "hub.apps.configure.favorites": "Настроить",
        "hub.apps.edit.favorites": "Изменить",

        "hub.contextDialog.label.removeFavorites": "Удалить из избранного",
        "hub.contextDialog.label.addFavorites": "Добавить в избранное",
        "hub.contextDialog.label.viewDetails": "Просмотреть сведения",
        "hub.apps.edit.favorites.header": "Режим изменения избранного",
        "hub.apps.edit.favorites.prompt": "Перетащите для изменения порядка.",
        "hub.apps.edit.favorites.save": "Сохранить",
        "hub.apps.edit.favorites.cancel": "Отменить изменения",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Порядок изменен. Отмените это действие или выполните сохранение перед завершением работы",
        "hub.apps.edit.favorites.savecustomordering": "Выполняется сохранение настраиваемого порядка. Во избежание потери результатов не покидайте эту страницу",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Изменение порядка недоступно для сенсорных экранов.",
        "hub.apps.edit.favorites.notify.success": "Изменение порядка избранного сохранено.",
        "hub.apps.edit.favorites.notify.error": "Произошла ошибка. Не удалось сохранить изменение порядка. Повторите попытку позже",

        "hub.nav.label.settings.settings": "Параметры",
        "hub.nav.label.settings.account": "Учетная запись",
        "hub.nav.label.settings.about": "О программе",
        "hub.nav.label.settings.devices": "Устройства",
        "hub.nav.label.settings.preferences": "Параметры",
        "hub.nav.label.settings.whatsnew": "Новые возможности",

        "hub.apps.detail.back": "Вернуться к приложениям",
        "hub.people.detail.back": "Вернуться к людям",
        "hub.people.notifications.back": "Вернуться к уведомлениям",

        "hub.nav.label.notifications.filter": "Фильтр",
        "hub.nav.label.notifications.all.notifications": "Все уведомления",
        "hub.nav.label.notifications.action.needed": "Ожидание",
        "hub.nav.label.notifications.completed": "Завершено",
        "hub.long.card.description": "Описание",
        "hub.long.card.Comment": "Комментарий",
        "hub.long.card.Comment.placeholder": "Добавить комментарий",

        "hub.appLaunch.open": "Открыть",
        "hub.appLaunch.cancel": "Отмена"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "OK",
        "and": "och",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Installera",
        "app.banner.open": "Öppna",
        "app.promotion.banner.donotshowagain": "Visa inte detta igen. Skaffa det senare i Inställningar – Om.",
        "app.promotion.banner.open": "Öppna i app",
        "app.promotion.banner.download": "Hämta app",
        "app.promotion.banner.message": "Få en bättre upplevelse i appen.",
        "horizonDesktopNotDetected": "För att öppna applikationen måste VMware Identity Manager Desktop vara installerad på den här datorn. <a target='_blank' href='{0}'>Installera VMware Identity Manager Desktop</a> om du inte redan gjort det.",
        "viewAppsTooltip": "Den här Horizon-hostade applikationen kräver att {0} Horizon Client{1} 3.0 eller senare finns installerad på datorn.",
        "desktoneDesktopTooltip": "Detta Horizon Cloud-skrivbord kräver att {0} Horizon Client {1} är installerat på din dator.",
        "desktoneApplicationTooltip": "Denna Horizon Cloud-applikation kräver att {0} Horizon Client {1} är installerat på din dator.",
        "xenAppsReceiverNotDetected": "Citrix Receiver måste installeras på den här datorn för att kunna öppna applikationen. <a target='_blank' href='{0}'>Installera Citrix Receiver</a> om du inte redan gjort det.",
        "button.save": "Spara",
        "button.update": "Uppdatering",
        "button.openHorizonView": "Öppna Horizon Client",
        "myapps.launch.openApp": "Öppna {0}",
        "button.openApp": "Öppna app",
        "button.clear": "Rensa",
        "button.close": "Stäng",
        "button.cancel": "Avbryt",
        "button.download": "Hämta",
        "myapps.launch.title.launch": "Starta",
        "myapps.launch.title": "Starta appen",
        "myapps.launch.view.openWith": "Öppna med",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Webbläsare",
        "myapps.launch.view.preferredClient.isDefault": "(förval)",
        "myapps.launch.view.selectPreferredLaunchClient": "Välj hur du vill starta Horizon-skrivbordet och applikationer",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Horizon Remote-appar",
        "myapps.launch.view.selectPreferredLaunchClientText": "Öppnar du Horizon fjärrappar i Horizon Client blir upplevelsen bättre än i webbläsaren.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Hur vill du öppna Horizon fjärrappar?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "VÄLJ STANDARDSTART ...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Det här avgör beteendet vid start när du väljer att öppna en Horizon-skrivbordet från din enhet. Om du väljer Horizon Client som standard måste du ha Horizon Client installerad. <a target='_blank' href='{0}'>Installera Horizon Client </a> om du inte redan gjort det.",
        "myapps.launch.view.unknownClientType": "Okänd klienttyp för att öppna Horizon Client.",
        "myapps.launch.view.openWithView": "Öppna med Horizon Client",
        "myapps.launch.view.openWithBrowser": "Öppna med webbläsare",

        "myapps.launch.view.preferredClient.byBrowser.description": "Om du väljer webbläsare kommer ditt skrivbord eller din app att öppnas i ett nytt fönster.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Objektet kräver Horizon Client 3.0 eller senare. <a target='_blank' href='{0}'>Installera Horizon Client</a> om du inte redan gjort det.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Du kan alltid ändra inställningen i Inställningar.",
        "myapps.launch.view.preferredClient.saveSuccess": "Valda inställningar har sparats.",
        "myapps.launch.msg.launching.desktop": "Startar Desktop<b>{0}</b> ...",
        "myapps.launch.msg.launching.application": "Startar appen <b>{0}</b> ...",
        "myapps.noAppsMsg": "Du har inte lagt till några appar. Du kan gå till {0} för att lägga till appar.",
        "myapps.noFavAppsMsg": "Du har inte bokmärkt några appar",
        "myapps.welcomeMsg": "Hej {0}. Här är dina appar!",
        "myapps.bookmarks.empty.message": "Bokmärk appar du ofta använder så att du snabbt kommer åt dem.",
        "myapps.bookmarks.empty.hidecatalog.message": "Du har för närvarande inga appar som du kan använda.",
        "myapps.bookmarks.empty.addbookmarks": "Lägg till bokmärken",
        "myapps.bookmarks.organize.title": "Ordna dina bokmärken",
        "myapps.bookmarks.organize.addbookmarks": "Lägg till bokmärken",
        "myapps.bookmarks.organize.batchremove": "Ta bort",

        "myapps.mobilepagetitle.apps": "Appar",
        "myapps.mobilepagetitle.details": "Information",
        "myapps.mobilepagetitle.support": "Stöd",
        "myapps.mobilepagetitle.settings": "Inställningar",
        "myapps.mobilepagetitle.recommendedapps": "Rekommenderas för dig",
        "myapps.mobilepagetitle.notification": "Notiser",
        "myapps.mobilepagetitle.archived": "Arkiverat",
        "myapps.mobilepagetitle.notification.newapps": "Nya appar",

        "myapps.dialog.openApp": "Öppna",
        "myapps.dialog.openAppWithViewClient": "Öppna i Client",
        "myapps.dialog.openAppWithBrowser": "Öppna i Webbläsare",

        "myapps.launch.passwordvault.installExtension.description": "Appen kan använda webbläsartillägget Password Vault. <a target='_blank' href='{0}'>Installera tillägget</a> om du inte har gjort det tidigare.",

        "deviceStatus.networkLost": "Anslutningen bröts. Försöker ansluta på nytt ...",
        "deviceStatus.networkRestored": "Nätverksanslutningen har återställts",
        "api.session.expired.retry": "Sessionen har förfallit. Försöker förnya...",
        "api.entitlements.reload": "Uppdaterar din vy för att uppdatera programmen i din katalog.",
        "api.security.header.invalid.relogin": "Validering av säkerhetsrubrik misslyckades, loggar ut.",
        "api.server.load.error": "Vi har just nu större belastning än vanligt. Försök igen senare.",
        "api.updateApps": "Uppdaterar listan ...",
        "api.error": "Ett fel har uppstått. Försök igen.",
        "installation.error": "Ursprungliga appar är för tillfället inte tillgängliga",
        "service.under.maintenance.error": "Workspace ONE befinner sig för tillfället i underhållsläge. Du kan starta dina appar, men vissa funktioner kanske inte fungerar",
        "api.timeout": "Tidsgränsen för anslutningen har uppnåtts, försök igen",
        "favoriteStatus.favorite": "Favorit",
        "favoriteStatus.unfavorite": "Ta bort som favorit",
        "favoriteStatus.offlineFavoriteMessage": "Det går inte att bokmärka en app som favorit offline. Anslut och försök igen.",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "Det går inte att ta bort bokmärken från en app offline. Anslut och försök igen.",
        "error.failToFavoriteApp": "Kunde inte uppdatera status för bokmärke",
        "error.failedToResetApp": "Kunde inte återställa appen",
        "error.failToHideApp": "Det gick inte att ta bort appen",
        "error.failToShowApp": "Det gick inte att lägga till appen i Launcher",
        "error.failedToBookmarkApp": "Kunde inte bokmärka appen",
        "error.failedToLaunchApp": "Kunde inte öppna appen",
        "error.failedToRemoveAccount": "Kunde inte ta bort kontot, försök igen senare",
        "installStatus.enrollDevice": "Aktivering av Workspace Services krävs för användning av {0} för att skydda företagsdata",
        "installStatus.enrollDevice.learnMore": "Läs mer",
        "installStatus.offlineInstallMessage": "Det går inte att skicka installationsförfrågningar offline. Anslut och försök igen.",
        "installStatus.activated": "Aktiverad",
        "installStatus.notActivated": "Inte aktiverad",
        "installStatus.request": "Förfrågan",
        "installStatus.update": "Uppdatering",
        "installStatus.processing": "Bearbetar",
        "installStatus.installFailedMessage": "Någonting blev fel vid installation av appen {0}. Försök igen. Kontakta IT-administratören om problemet kvarstår",
        "installStatus.unenrolledDevice": "Appen är inte längre tillgänglig. Tryck på OK för att uppdatera listan.",
        "installMessage.continueInstall": "Du har tidigare försökt installera appen. ",
        "installMessage.proceedToInstall": "Klicka för att fortsätta.",
        "installMessage.installingOnDevice": "Installerar på enhet ...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Aktivera Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "Detta krävs innan appen kan installeras. Du får automatiskt:",
        "app.adaptivemanagement.valueproposition1": "Direktinstallation av alla företagsresurser.",
        "app.adaptivemanagement.valueproposition2": "Säker företagsnätverksåtkomst.",
        "app.adaptivemanagement.valueproposition3": "Synkroniserade appar och synkroniserat innehåll på alla dina enheter.",
        "app.adaptivemanagement.valueproposition4": "En bättre appupplevelse som gör dig mer produktiv.",
        "app.adaptivemanagement.privacylink": "Din integritet",

        "app.tunnel.continue": "Fortsätt",
        "app.tunnel.text.line1": "VMware Tunnel-app krävs för åtkomst",
        "app.tunnel.text.line2": "Tunnel-appen hämtas automatiskt tillsammans med din app.",
        "app.tunnel.header": "VMware Tunnel krävs",
        "app.tunnel.message": "För att använda denna app måste VMware Tunnel vara installerat och igång.",
        "recommendedApps.tunnel.text.line1": "VMware Tunnel-app krävs för åtkomst",
        "recommendedApps.tunnel.text.line2": "Tunnel-appen hämtas automatiskt tillsammans med din app.",
        "app.tunnel.installHelpText": "Om apparna inte börjat installeras automatiskt ska du följa dessa steg för att aktivera appen",
        "app.tunnel.installStep1": "Steg 1: Installera appen {0}",
        "app.tunnel.installStep2": "Steg 2: Installera appen {0}",

        "requestFailed": "Förfrågan misslyckades",
        "changeOccurred": "Ändring inträffade",
        "requestSuccessful": "Förfrågan lyckades",
        "accept": "Godkänn",
        "decline": "Förkasta",
        "termsOfUse": "Användarvillkor",
        "beforeInstallation": "Före installationen",
        "resetDesktopStatus.offlineMessage": "Det går inte att återställa skrivbordet offline. Anslut och försök igen.",
        "resetDesktop.sucess": "Skrivbordet har återställts",
        "appCenter.someAppsMissingMessage": "Det gick inte att ladda alla appar just nu",
        "appCenter.register.device": "Viss information om din enhet behöver uppdateras. Tryck på Uppdatera för att fortsätta med Workspace ONE.",
        "appCenter.mdm.device.error": "Du har inte längre åtkomst till Workspace ONE.",
        "appCenter.mdm.device.error.contact": "Kontakta din administratör för din kontoinformation.",
        "appCenter.mdm.device.poll.error": "Vi kan inte göra klar din arbetsstation just nu. Förök igen eller kontakta din admin.",
        "appCenter.device.status.notRegistered": "Enheten har inte registrerats",
        "appCenter.device.status.blackListed": "Enheten är svartlistad",
        "appCenter.device.status.deviceInputError": "Enheten är ogiltig! Kontakta din it-administratör",
        "appCenter.device.status.unknownError": "Ett okänt fel inträffade",

        "appCenter.device.register": "Registrera enhet",
        "appCenter.device.moreDetails": "Mer info",
        "appCenter.device.unEnrollWarningTitle": "Vill du ta bort ditt konto?",
        "appCenter.device.mdmUnEnrollMessage": "Tar du bort ditt konto inaktiverar du åtkomst till företagets resurser och det kan ta bort arbetsappar från denna enhet.",
        "appCenter.device.getDeviceEnrollmentStatus": "Skaffar ytterligare information",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Är du säker på att du vill fortsätta?",
        "appCenter.device.remove": "Ta bort",
        "appCenter.device.keep": "Behåll",
        "appCenter.device.disableWorkspaceMessage": "Om du tar bort ditt konto förlorar du åtkomst till apparna via Workspace ONE. Apparna som hämtats till startsidan förblir installerade men åtkomsten kan påverkas. Vill du fortsätta?",
        "appCenter.noAppsMsg": "Inga appar är tillgängliga just nu",
        "appCenter.vppInviteTitle": "Registrering för hanterad distribution",
        "appCenter.appInstallConfirmPromptTitle": "Bekräfta installering",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Godkännande krävs för",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "Din förfrågan har tidigare nekats",
        "appCenter.mdmAppRequestConfirmPromptMessage": "Programmet som du försöker komma åt måste godkännas av administratören",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Du har gjort en förfrågan om detta program och din förfrågan nekades. Vill du ändå göra en förfrågan igen?",
        "appCenter.acceptInvite": "Godkänn inbjudan",
        "appCenter.install": "Installera",
        "appCenter.proceed": "Aktivera Workspace Services",
        "appCenter.cancel": "Avbryt",
        "appCenter.confirm": "Bekräfta",
        "appCenter.searchApps": "Sök efter appar.",
        "appCenter.welcomeMsg": "Installera nya appar när som helst, på vilken enhet som helst!",
        "appCenter.done": "Klar",
        "appCenter.nav.privacyPage": "Integritetssida",
        "appCenter.nav.catalog": "Katalog",
        "appCenter.nav.myApps": "Mina appar",
        "appCenter.nav.favorites": "Favoriter",
        "appCenter.nav.categories": "Kategorier",
        "appCenter.nav.filterby": "Filtrera efter",
        "appCenter.nav.show": "Visa",
        "appCenter.nav.settings": "Inställningar",
        "appCenter.nav.sortBy": "Sortera efter",
        "appCenter.nav.sortBy.alpha": "Sortera efter A-Z",
        "appCenter.nav.sortBy.inverseAlpha": "Sortera efter Z-A",
        "appCenter.nav.sortBy.customView": "Anpassad översikt",
        "appCenter.nav.arrange": "Ordna",
        "appCenter.nav.arrange.saved": "Anpassad översikt har sparats!",
        "appCenter.nav.arrange.tooltip": "Bara tillgänglig på windows.",
        "appCenter.nav.arrange.saving": "Sparar...",
        "appCenter.nav.arrange.error": "Kan inte spara anpassad översikt",
        "appCenter.nav.filter": "Filter",
        "appCenter.installFailedTitle": "Problem vid appinstallation",
        "appCenter.uccConflict": "Något gick fel med den pågående sessionen. Logga in på nytt.",

        "appCenter.search.placeholder": "Sök",
        "appCenter.search.noResults": "Hittade inga resultat.",

        "appCenter.action.open": "Öppna",
        "appCenter.action.install": "Installera",
        "appCenter.action.installing": "Installerar",
        "appCenter.action.installed": "Installerad",
        "appCenter.action.reinstall": "Installera på nytt",
        "appCenter.action.add": "Lägg till",
        "appCenter.action.added": "Tillagd",
        "appCenter.action.processing": "Bearbetar",
        "appCenter.action.update": "Uppdatering",
        "appCenter.action.request": "Förfrågan",
        "appCenter.action.pending": "Väntar",
        "appCenter.action.view": "Översikt",
        "appCenter.action.favorite": "Favorit",
        "appCenter.action.unfavorite": "Ta bort som favorit",

        "appCenter.internalApp.installtionModalTitle": "Appinstallationssteg",
        "appCenter.internalApp.installationStepTitle": "Följ anvisningarna efter installationen för att öppna appen.",
        "appCenter.internalApp.step1": "Öppna Inställningar från iOS hemskärm",
        "appCenter.internalApp.step2": "Tryck på Allmänt",
        "appCenter.internalApp.step3": "Tryck på Hantering av profiler och enheter",
        "appCenter.internalApp.step4": "Tryck på en apputvecklare under Företagsapp",
        "appCenter.internalApp.step5": "Bekräfta eller lita på appen",
        "appCenter.internalApp.watchTutorial": "Se instruktionsfilmen",

        "appCenter.type.web": "Webbplats",
        "appCenter.type.native": "Ursprunglig app",
        "appCenter.type.native.platform": "{0} App",
        "appCenter.type.virtual": "Virtuell app",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "App Paket",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Kategorier",
        "myapp.nav.favorites": "Favoriter",
        "myapp.nav.allApps": "Alla appar",
        "myapp.nav.recommendedApps": "Rekommenderas",
        "myapp.nav.newlyEntitledApps": "Nytt",
        "myapp.nav.webApps": "Webbplatser",
        "myapp.nav.mobileApps": "Mobilappar",
        "myapp.nav.macApps": "Mac-appar",
        "myapp.nav.windowsApps": "Windows-appar",
        "myapp.nav.virtualApps": "Virtuell",
        "myapp.label.new": "Nytt",
        "myapp.nav.filterby": "Filtrera efter",
        "myapp.nav.mobile.filter.pagetitle": "Filtrera efter kategorier",
        "appCenter.nav.browseBy": "Bläddra efter",

        "appCenter.catalog.empty": "Det verkar som om du inte har tilldelats några appar ännu. De bör komma snart, försök igen om en stund.",

        "userInfo.adminConsole": "Adminkonsol",
        "userInfo.settings": "Inställningar",
        "userInfo.notifications": "Notiser",
        "userInfo.support": "Stöd",
        "userInfo.preferences": "Preferenser",
        "userInfo.about": "Om",
        "userInfo.devices": "Enheter",
        "userInfo.settings.promo.title": "Hämta Workspace ONE-appen",
        "userInfo.settings.promo.message": "Workspace ONE ger bättre upplevelse i appen. Vill du prova nu?",

        "userInfo.tips": "Apptips",
        "userInfo.tips.description": "Få hjälp med att använda appen.",

        "userInfo.tips.bookmarks": "Hur använder man bokmärken?",
        "userInfo.tips.catalog": "Hur använder man katalogen?",
        "userInfo.tips.people": "Nytt: Hur använder man personer?",
        "userInfo.tips.notification": "Nytt: Hur använder man notiser?",

        "userInfo.tips.catalog.desktop1": "Klicka på Öppna för att öppna en webbplats i webbläsaren; använd {0} för att bokmärka den.",
        "userInfo.tips.catalog.desktop2": "Klicka på appens ikon eller namn för att få mer information.",
        "userInfo.tips.catalog.mobile1": "Använd {0} för att öppna en webbplats i webbläsaren; använd {1} för att bokmärka den.",
        "userInfo.tips.catalog.mobile2": "Använd {0} för att installera en inbyggd app på din enhet. {1} innebär att du måste registrera din enhet för att använda dessa appar.",
        "userInfo.tips.catalog.mobile3": "Tryck på appens ikon eller namn för mer information.",

        "userInfo.tips.bookmarks.desktop1": "Klicka på brickan för att öppna webbplatsen i din webbläsare.",
        "userInfo.tips.bookmarks.desktop2": "Håll muspekaren över brickan för att visa fler åtgärder från menyn \"...\".",

        "userInfo.tips.bookmarks.mobile": "Tryck på brickan för att starta en webbplats i din webbläsare. Tryck och håll ned för fler åtgärder.",

        "userInfo.tips.catalog.download.phone": "Tryck på ikonen {0} för att installera en inbyggd app på din enhet. Ikonen {1} betyder att du måste registrera din enhet för att använda dessa appar.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Tryck på ikonen {0} för att öppna en webbplats i webbläsaren. Tryck på ikonen {1} för att bokmärka den. Tryck på appens ikon eller namn för mer information.",

        "userInfo.tips.catalog.download.tablet": "Hämta appar genom att klicka på hämtningsknappen. Klicka på appen för fler detaljer.",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Starta appar genom att klicka på startknappen  och klicka på bokmärkesknappen",

        "userInfo.tips.people.mobile": "Klicka på {0} för att navigera tillbaka till startsidan från en profil för att söka personer.",
        "userInfo.tips.notification.mobile": "Klicka på {0} för att komma åt dina notiser. Notissymbolen förblir aktiv tills du har kastat eller åtgärdat samtliga notiser.",

        "userInfo.tips.title": "Apptips",
        "userInfo.tips.intro": "Få hjälp med att använda appen.",
        "userInfo.tips.desktop": "Skrivbord",
        "userInfo.tips.reordering.title": "Anpassa dina bokmärken!",
        "userInfo.tips.reordering.text1": "1. Gå till Anpassad översikt i rullmenyn längst upp till höger.",
        "userInfo.tips.reordering.text2": "2. Välj Ordna. ",
        "userInfo.tips.reordering.text3": "3. Dra och släpp för att ordna om dina bokmärken. När du är klar ska du klicka på Spara.",
        "userInfo.tips.mobile": "Mobil enheter",

        "userInfo.removeAccount": "Ta bort konto",
        "userInfo.account": "Konto",
        "userInfo.profile": "Profil",
        "userInfo.profile.name": "Namn:",
        "userInfo.profile.email": "E-postadress:",
        "userInfo.profile.username": "Användarnamn:",
        "userInfo.profile.picture": "Profilbild",
        "userInfo.profile.password": "Lösenord",
        "userInfo.profile.passwordchange": "Byt",
        "userInfo.profile.passwordprompt": "Hantera ditt lösenord för företagssystemet.",
        "userInfo.password": "Lösenord",
        "userInfo.termsofuse": "Användarvillkor",
        "userInfo.signout": "Logga ut",
        "userInfo.tryAgain": "Försök igen",
        "userInfo.managedevicesettings": "Hantera enhetsinställningar",
        "userInfo.notification": "Push-notis",
        "userInfo.passcode": "Touch ID eller lösenkod",

        "appCenter.support.selfservice": "Självbetjäning",
        "appCenter.support.managedevices": "Enheter",
        "appCenter.support.managedevicestext": "Visa din enhetsinformation.",
        "appCenter.support.managepassword": "Ändra lösenord",
        "appCenter.support.managepasswordtext": "Ändra lösenord för ditt företagskonto",
        "appCenter.support.gethelp": "Skaffa hjälp",
        "appCenter.support.appstips": "Appar och tips",
        "appCenter.support.appstipstext": "Visa verktygtipshjälp i appen",
        "appCenter.support.sendReportTitle": "Skicka rapport",
        "appCenter.support.sendReportDetails": "Läs om hur du skickar appdiagnostik.",
        "appCenter.support.helpdesk": "Helpdesk",
        "appCenter.support.contacthelpdesk": "Kontakta Helpdesk",
        "appCenter.reportProblems.ios.sendLogInstruction": "Skaka enheten när problem uppstår för att enkelt skicka appdiagnostik eller lämna feedback.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Du kan slå på/stänga av funktionen i enhetens inställningar.",

        // App Details Page
        "app.details.link.back": "Tillbaka",
        "app.details.nav.details": "Information",
        "app.details.nav.reviews": "Omdömen",
        "app.details.label.description": "Beskrivning",
        "app.details.label.noDescription": "Det finns ingen beskrivning",
        "app.details.label.seeFullDetails": "Visa information",
        "app.details.label.removeBookmark": "Ta bort",
        "app.details.label.resetDektop": "Återställ",
        "app.details.label.information": "Information",
        "app.details.label.category": "Kategorier",
        "app.details.label.version": "Version",
        "app.details.label.type": "Typ",
        "app.details.label.type.SAML11": "Webbapplikation",
        "app.details.label.type.SAML20": "Webbapplikation",
        "app.details.label.type.WEBAPPLINK": "Webbapplikation",
        "app.details.label.type.MDMWEB": "Webbapplikation",
        "app.details.label.type.WSFED12": "Webbapplikation",
        "app.details.label.type.XENAPP": "Xen-appen",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix Skrivbord",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Profil",
        "app.details.label.type.VIEWPOOL": "Horizon-skrivbordet",
        "app.details.label.type.VIEWAPP": "Horizon-applikationen",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud-skrivbordet",
        "app.details.label.type.DESKTONEAPPLICATION": "Horizon Cloud App",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Webbapplikation",
        "app.details.label.type.PUBLIC": "Offentlig app",
        "app.details.label.type.INTERNAL": "Intern",
        "app.details.label.size": "Storlek",
        "app.details.label.price": "Pris",
        "app.details.label.screenshots": "Skärmavbilder",
        "app.details.label.showMore": "Visa mer",
        "app.details.label.showLess": "Visa mindre",
        "app.details.label.setAppPassword": "Ange lösenord till appen",
        "app.details.label.sendFeedback": "Skicka feedback",
        "app.details.label.feedbackSubject": "Feedback på appen {0}",
        "app.details.label.support": "Stöd",
        "app.details.label.developer": "Utvecklare",
        "app.details.label.email": "E-postadress",
        "app.details.label.phone": "Telefon",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "Alla mobilappar kan startas från hemskärmen.",

        "app.details.label.requirement": "Krav:",
        "app.details.label.packageName": "Paketnamn:",
        "app.details.thinapp.requirement": "Den här applikationen fungerar endast på en Windows-dator med Identity Manager Desktop installerad.",
        "app.details.viewDesktop.requirement": "Horizon-skrivbordet kräver att {0} Horizon Client{1} 3.0 eller senare finns installerad på datorn.",
        "app.details.viewapp.requirement": "Den här Horizon-hostade applikationen kräver att {0} Horizon Client{1} 3.0 eller senare finns installerad på datorn.",
        "app.details.xenapp.requirement": "Applikationen kräver att {0} Citrix Receiver {1} finns installerad.",
        "app.details.xenapp.msg.IE8OrLower": "Applikationen kräver att Citrix Receiver installeras. Observera: Den här applikationen kan inte öppnas i Internet Explorer 8.",
        "app.details.xenappsDeliveryGroup.requirement": "Citrix Desktop kräver att {0} Citrix Receiver {1} finns installerad.",
        "app.details.desktoneDesktop.requirement": "Detta Horizon Cloud-skrivbord kräver att {0} Horizon Client {1} är installerat på din dator.",
        "app.details.desktoneApp.requirement": "Denna Horizon Cloud-applikation kräver att {0} Horizon Client {1} är installerat på din dator.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "Ingen information tillgänglig",
        "app.details.noScreenshots": "Inga skärmavbilder tillgängliga",
        "app.details.noDescription": "Beskrivningen kommer snart.",
        "app.details.needsDeviceEnrollment": "Kräver enhetsregistrering",
        "app.details.label.addToHomeScreen": "Lägg till på startskärmen",
        "app.details.action.open": "Öppna",
        "app.details.action.bookmark": "Bokmärk",
        "app.details.action.bookmarked": "Bokmärkt",
        "app.details.action.launch": "Starta",
        "app.details.action.setPassword": "Ställ in lösenord",
        "app.details.action.pvAppCredentials": "Autentiseringsuppgifter",
        "app.details.info.msg.missingInfo": "En del information saknas. Försök igen för att visa alla uppgifter.",
        "app.details.wsrequired.msg": "Workspace Services är obligatoriskt.",
        "app.details.label.addedFavorites": "Tillagd i favoriter",

        "app.rating.label": "Användaromdöme",

        "app.settings.label.settings": "Inställningar",
        "app.settings.link.back": "Tillbaka",
        "app.settings.managedDevices": "Hanterade enheter",
        "app.nav.tab.bookmark": "Bokmärken",
        "app.nav.tab.catalog": "Katalog",
        "app.nav.tab.people": "Personer",
        "app.nav.tab.support": "Stöd",
        "app.nav.tab.apps": "Appar",
        "app.nav.tab.settings": "Inställningar",
        "app.about.heading": "Om Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc. Alla rättigheter förbehålls. Den här produkten skyddas av US- och internationella lagar om upphovsrätt och immateriella rättigheter. VMware-produkter omfattas av ett eller flera patent.",
        "app.about.button.label.privacyPolicy": "Integritetspolicy",
        "app.about.button.label.patents": "Patent",
        "app.about.button.label.licenseAgreement": "Licensavtal",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/se/go/patents",
        "app.about.licenseAgreementLink": "http://www.vmware.com/se/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/se/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Enheter",
        "app.devices.tableColumn.deviceName": "Enhetens namn",
        "app.devices.tableColumn.userDeviceId": "Enhets-ID",
        "app.devices.tableColumn.lastLoginTime": "Senaste inloggning",
        "app.devices.unlinkDevice": "Avlänka",
        "app.devices.unlinkedDevice": "Olänkad",
        "app.devices.emptyDeviceListMessage": "Du har ingen enhet som är associerad till ditt konto.",

        "app.thinappMultiDeviceAct.heading": "Appen läggs till på godkända enheter. För att använda \"{0}\" på ytterligare enheter söker du reda på enhetens namn nedan och klickar på Förfrågan.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Enhetens namn",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Status",
        "app.thinappMultiDeviceAct.button.request": "Förfrågan",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Förkastad",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "Väntar",
        "app.thinappMultiDeviceAct.activationState.activated": "Godkänt",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Inte aktiverad",

        "app.thinappsInPackage.button.done": "Klar",
        "app.thinappsInPackage.button.bookmarkAll": "Bokmärk alla",
        "app.thinappsInPackage.info": "App Paket",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} appar",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} match funnen.",
        "app.thinappsInPackage.action.instruction": "Välj bokmärkesikon för att bokmärka individuella appar eller välj knapp för att bokmärka alla appar.",
        "app.thinappsInPackage.search.placeholder": "Sök i paket",

        "app.setAppPassword.heading": "Ställ in lösenord",
        "app.setAppPassword.instruction": "Använd formuläret nedan till att ställa in ett lösenord för applikationen. Lösenordet måste bestå av minst tre tecken.",
        "app.setAppPassword.label.password": "Lösenord",
        "app.setAppPassword.label.confirmPassword": "Bekräfta lösenord",
        "app.setAppPassword.label.generate": "Skapa lösenord",
        "app.setAppPassword.error.passwordsNoMatch": "Lösenorden matchar inte.",
        "app.setAppPassword.msg.success": "Ditt lösenord har skapats.",
        "app.setAppPassword.msg.fail": "Det uppstod ett fel när lösenordet skulle skapas. Försök igen.",

        "pvapp.setAppPassword.heading": "Skapa sparade autentiseringsuppgifter för {0}",
        "pvapp.setAppPassword.instruction": "Använd formuläret nedan för att skapa sparade autentiseringsuppgifter för appen.",
        "pvapp.setAppPassword.label.username": "Användarnamn",
        "pvapp.setAppPassword.label.password": "Lösenord",
        "pvapp.setAppPassword.error.userNameEmpty": "Användarnamn är tomt.",
        "pvapp.setAppPassword.error.passwordEmpty": "Lösenord är tomt.",
        "pvapp.setAppPassword.msg.success": "Dina autentiseringsuppgifter för appen har skapats.",
        "pvapp.setAppPassword.msg.fail": "Det uppstod ett fel när autentiseringsuppgifterna skulle skapas. Försök igen.",

        "app.launchPassword.heading": "Lösenordsförfrågan",
        "app.launchPassword.view.instruction": "Vi behöver ditt lösenord för att logga in på den här Windows-resursen {0}.",
        "app.launchPassword.label.userName": "Användare",
        "app.launchPassword.label.password": "Lösenord",
        "app.launchPassword.button.label.signin": "Logga in",

        "app.changePassword.title": "Ändra lösenord",
        "app.changePassword.enterCurrentPassword": "Ange nuvarande lösenord",
        "app.changePassword.enterNewPassword": "Ange nytt lösenord",
        "app.changePassword.confirmNewPassword": "Bekräfta nytt lösenord",
        "app.changePassword.error.passwordsNoMatch": "De nya lösenorden matchar inte.",
        "app.changePassword.error.requirementsNoMatch": "Nytt lösenord uppfyller inte kraven.",
        "app.changePassword.success": "Det nya lösenordet har sparats!",
        "app.changePassword.label.email": "E-postadress",
        "app.changePassword.label.phone": "Telefon",

        "app.passwordPolicy.passwordRequirements": "Lösenordskrav",
        "app.passwordPolicy.label.currentpassword": "Nuvarande lösenord",
        "app.passwordPolicy.label.newpassword": "Nytt lösenord",
        "app.passwordPolicy.label.confirmpassword": "Bekräfta nytt lösenord",
        "app.passwordPolicy.minLength": "Minst {0} siffror",
        "app.passwordPolicy.leastIncludes": "minst inkludera:",
        "app.passwordPolicy.minLower": "{0} bokstav",
        "app.passwordPolicy.minUpper": "{0} versal",
        "app.passwordPolicy.minDigit": "{0} siffra",
        "app.passwordPolicy.minSpecial": "{0} specialtecken",

        "app.coachmarks.bookmarkTitle": "Så här använder du bokmärken",
        "app.coachmarks.bookmarkMessage": "Tryck för att öppna webbplatser, tryck och håll nertryckt för att få veta mer.",
        "app.coachmarks.catalogTitle": "Så här använder du katalogen",
        "app.coachmarks.catalogMessage": "Installera eller uppdatera appar, lägg till i Bokmärken eller öppna direkt härifrån.",
        "app.coachmarks.buttonText": "Jag förstår!",

        "app.logout.confirm.msg": "Sessionen avslutas om du loggar ut ur Workspace ONE. Appar som laddats ner från katalogen finns kvar på enheten men nya inga nya appar finns tillgängliga förrän du loggar in igen.",
        "app.logout.title": "VARNING",

        "app.passwordVault.banner.msg": "Du har appar som kan använda tillägget Workspace One.",
        "app.passwordVault.banner.button.install": "Installera",
        "app.passwordVault.banner.setPreference": "Du kan få det senare i Inställningar - Preferenser.",
        "app.passwordVault.banner.donotshowagain": "Vis inte det här igen",
        "app.passwordVault.banner.button.later": "Senare",
        "app.passwordVault.banner.button.get": "Få",
        "app.passwordVault.preference.title": "Workspace ONE-tillägg",
        "app.passwordVault.preference.instruction": "Du har appar som kan använda tillägget Workspace ONE.",
        "app.passwordVault.preference.getextension": "Få tillägget",
        "app.bookmarking.change.tab.title": "Arrangerer du fortfarande dina bokmärken?",
        "app.bookmarking.change.tab.body": "Ändringarna du har gjort vill inte sparats. Vill du fortsätta arangera dina bokmärken?",
        "app.bookmarking.touch.disabled": "Du kan ordna om apparna när du använder styrplatta eller mus.",
        "app.bookmarking.change.tab.exit": "Nej, avslut",
        "app.bookmarking.change.tab.stay": "Ja, stanna kvar",
        "app.virtual.disabled": "Avaktiverad av admin",
        "app.virtual.unavailable": "Appen är inte tillgänglig på enheten",
        "app.virtual.not.available": "Ej tillgänglig",

        "app.notification.type.NEW_ENTITLEMENTS": "Titta närmare på dem",
        "app.notification.type.PASSWORD_EXPIRING": "Uppdatera lösenord",
        "app.notification.action.delete": "Radera",
        "notification.new.entitlements.heading": "Nya rättigheter",
        "notification.new.entitlements.message": "Du har {0} nya rättigheter tilldelade",
        "app.notification.delete.header": "Radera denna notis?",
        "app.notification.delete.msg": "Vill du verkligen radera denna notis? Du kan välja arkiv om du vill arkivera den senare. ",
        "app.notification.delete.text": "Radera",
        "app.notification.keep.text": "Behåll",
        "app.notification.restore.text": "Återställ",
        "app.notification.delete.toast.msg": "Notisen har raderats.",
        "app.notification.empty": "Ni har fångats upp!",
        "app.notification.more.actions": "Fler åtgärder",
        "app.notification.archive.all": "Arkivera alla",

        "app.notification.bookmark.all.error": "Tyvärr kunde vi inte bokmärka alla dina nya appar",
        "app.notification.bookmark.all.success": "Alla nya appar lades till i favoriter",
        "app.notification.delete.all": "Radera allt",
        "app.notification.see.archived": "Visa arkiverade",
        "app.notification.see.all": "Visa alla notiser",
        "app.notification.newApps.title": "Du har nya appar!",
        "app.notification.newApps.excessIconsMessage": "+ {0} fler",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Se detaljer",
        "app.tooltip.clicktolaunch": "Klick för start",

        "recommendedApps.install.proceed": "Fortsätt",
        "recommendedApps.install.title": "Installera rekommenderade appar",
        "recommendedApps.install.confirm.msg": "Du kommer att få uppmaningar att fortsätta med installation av dina appar.",
        "recommendedApps.text1": "Dessa appar används mycket av dina kollegor.",
        "recommendedApps.text2": "Du kan installera dem nu eller ta fram dem senare i din katalog.",
        "recommendedApps.selectAll": "Markera alla",
        "recommendedApps.apps": "Appar",
        "recommendedApps.install": "Installera",
        "recommendedApps.skip": "Hoppa över",

        "app.desktopapp.settings.title.account": "Konto",
        "app.desktopapp.settings.title.devices": "Enheter",
        "app.desktopapp.settings.title.preferences": "Preferenser",

        "appCenter.peopleSearch.placeholder": "Sök personer",
        "app.tooltip.copyEmail": "Kopiera e-post",
        "app.peopleSearch.emailCopied": "E-post kopierad",
        "appCenter.peopleSearch.noResults": "Hittade inga resultat",
        "appCenter.peopleSearch.tryNewSearch": "Försök med en ny sökning.",
        "appCenter.peopleSearch.atLeastThreeChars": "Ange tre eller fler tecken ovan för att söka.",
        "appCenter.searchPeople": "Sök efter personer.",
        "myapps.mobilepagetitle.people": "Personer",
        "app.people.labels.team": "Mitt team",
        "app.people.labels.recent": "Senaste",
        "app.people.labels.manager": "Hanterare",
        "app.people.labels.peers": "Kollegor",
        "app.people.labels.directReports": "Direktrapporter",
        "app.people.labels.profile": "Profil",
        "app.people.labels.org": "Org",
        "app.people.labels.workEmail": "E-post, arbete",
        "app.people.labels.workPhone": "Telefon, arbete",
        "app.people.labels.alternateNumber": "Alternativ telefon",
        "app.people.labels.mobile": "Mobil",
        "app.people.labels.address": "Adress",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Chefer",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "Anställningsnummer",
        "app.people.labels.skills": "Färdigheter",
        "app.people.labels.businessUnit": "Affärsenhet",
        "app.people.labels.costCenter": "Kostnadsställe",
        "app.people.labels.physicalDeliveryOfficeName": "Kontorsplacering",

        "hub.apps": "Appar",
        "hub.notifications": "Notiser",
        "hub.notifications.welcome": "Välkommen!",
        "hub.notifications.first.time.message": "Notiser visas här när du börjar använda Hub.",
        "hub.notifications.new.apps.favorite.all": "Favoritmarkera alla",
        "hub.notifications.congratulations": "Slutfört!",
        "hub.notifications.empty.description1": "Inga nya notiser.",
        "hub.notifications.empty.description2": "Nu får du extra plats.",
        "hub.v2.notifications.empty.description": "Du är ikapp med dina notiser",
        "hub.v2.notifications.first.time.description": "Notiser visas här när du börjar använda Hub.",
        "hub.notifications.empty.description.archived": "Inga arkiverade notiser.",
        "hub.notifications.priority": "Prioritet",
        "hub.notifications.today": "Idag",
        "hub.notifications.yesterday": "Igår",
        "hub.notifications.lastWeek": "Senaste veckan",
        "hub.notifications.lastMonth": "Senaste månaden",
        "hub.notifications.older": "Äldre",
        "hub.notifications.archived.label": "Arkiverat",
        "hub.notifications.action.success": "Lyckades!",
        "hub.notifications.action.failure": "Ett fel verkar ha uppstått när åtgärden utfördes",
        "hub.notifications.moreDetails": "Mer info",
        "hub.notifications.dialog.action.completed": "Utfört",
        "hub.notifications.dialog.action.needed": "Väntar",
        "hub.notifications.dialog.action.all.notifications": "Samtliga notiser",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Sök appar",
        "hub.apps.favorites": "Favoriter",
        "hub.apps.newApps": "Nytt",
        "hub.apps.recommended": "Rekommenderas",
        "hub.apps.categories": "Kategorier",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Wow, det är gott om plats härinne.",
        "hub.apps.no.apps.msg2": "Kontakta administratören för att hämta arbetsappar.",
        "hub.apps.search.in.category": "{0} Resultat i kategori:",
        "hub.apps.search.in.app": "{0} Resultat i appnamn och beskrivning",
        "hub.apps.search.header": "Totala resultat",
        "hub.apps.search.no.result.header": "Inga resultat",
        "hub.apps.search.no.result.msg": "Försök igen med en annan term.",
        "hub.apps.searchpeople.no.result.msg": "Försök igen med ett annat namn.",
        "hub.apps.type.web": "Webb",
        "hub.apps.type.Virtual": "Webb",
        "hub.apps.type.application": "Applikation",
        "hub.apps.type.anyApp": "AnyApp",
        "hub.people": "Personer",
        "hub.people.search.text": "Sök personer",
        "hub.people.labels.mypeers": "Mina kollegor",
        "hub.people.labels.directreports": "Direktrapporter",
        "hub.people.labels.manager": "Min chef",
        "hub.people.labels.organization": "Organisation",
        "hub.people.search.result": "Resultat",
        "hub.app.install.prompt.title": "Vill du installera",

        "hub.actionsheet.label.viewDetails": "Visa information",
        "hub.actionsheet.label.removeFavorites": "Ta bort från favoriter",
        "hub.actionsheet.label.addFavorites": "Lägg till i favoriter",
        "hub.password.done": "Klar",

        "hub.placeholder.changepassword.username": "Användarnamn",
        "hub.placeholder.changepassword.password": "Lösenord",
        "hub.placeholder.changepassword.confirmpassword": "Bekräfta lösenord",

        "hub.tunnel.text.line1": "Tunnel krävs för åtkomst till ",
        "hub.tunnel.text.line2": "Tunnel-programmet hämtas automatiskt tillsammans med din app.",

        "hub.promotions.banner.category.title": "Kategorihöjdpunkter",
        "hub.promotions.banner.category.open": "Öppna",
        "hub.promotions.banner.app.get": "Få",
        "hub.promotions.banner.disabled": "Avaktiverad av admin",
        "hub.require.app.management": "Hanterad",
        "hub.app.installing.alert.mobile.message": "Applikationen {0} håller på att installeras, kontrollera telefonens hemskärm efter uppdateringar.",
        "hub.app.installing.alert.desktop.message": "Applikationen {0} håller på att installeras, kontrollera appstartaren på datorns skrivbord efter uppdateringar.",

        "hub.nav.label.apps": "Appar",
        "hub.nav.label.people": "Personer",
        "hub.nav.label.notification": "Notiser",
        "hub.nav.label.settings": "Inställningar",
        "hub.nav.label.account": "Konto",
        "hub.nav.label.signout": "Logga ut",
        "hub.userInfo.adminConsole": "Adminkonsol",
        "hub.userInfo.signout": "Logga ut",
        "hub.userInfo.settings": "Inställningar",
        "hub.userInfo.account": "Konto",
        "hub.userInfo.devices": "Enheter",
        "hub.userInfo.whatsnew": "Nyheter",
        "hub.userInfo.about": "Om",
        "hub.download.ios": "Hub för iOS",
        "hub.download.android": "Hub för Android",
        "hub.download.mac": "Hub för Mac",
        "hub.download.windows": "Hub för Windows",
        "hub.download.subtitle.mobile": "Få tillgång till notiser, hem och mycket mer på en plats.",
        "hub.download.subtitle.desktop": "Få skrivbordsnotiser och starta direkt från din dockningsstation.",
        "hub.preferences.title": "Preferenser",
        "hub.preferences.horizon.subtitle": "Horizon Remote-appar",
        "hub.preferences.launch.question": "Hur vill du öppna Horizon-fjärrappar?",
        "hub.about.title": "Om VMware Intelligent Hub",
        "hub.apps.allApps": "Alla appar",
        "hub.apps.configure.favorites.msg": "Lägg till dina favoritappar här för snabbare åtkomst",
        "hub.apps.configure.favorites": "Konfigurera",
        "hub.apps.edit.favorites": "Redigera",

        "hub.contextDialog.label.removeFavorites": "Ta bort från favoriter",
        "hub.contextDialog.label.addFavorites": "Lägg till i favoriter",
        "hub.contextDialog.label.viewDetails": "Visa information",
        "hub.apps.edit.favorites.header": "Favoritredigeringsläge",
        "hub.apps.edit.favorites.prompt": "Dra och släpp för att ändra ordning.",
        "hub.apps.edit.favorites.save": "Spara",
        "hub.apps.edit.favorites.cancel": "Avbryt ändringar",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Du har uppdaterat ordningen, avbryt eller spara innan du avslutar",
        "hub.apps.edit.favorites.savecustomordering": "Sparar anpassad ordning, lämna inte den här sidan för att undvika att resultaten går förlorade",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Det går inte att ändra ordning på pekskärmar.",
        "hub.apps.edit.favorites.notify.success": "Den ändrade ordningen på favoriterna har sparats!",
        "hub.apps.edit.favorites.notify.error": "Ett fel uppstod, det gick inte att spara den ändrade ordningen, försök igen senare",

        "hub.nav.label.settings.settings": "Inställningar",
        "hub.nav.label.settings.account": "Konto",
        "hub.nav.label.settings.about": "Om",
        "hub.nav.label.settings.devices": "Enheter",
        "hub.nav.label.settings.preferences": "Preferenser",
        "hub.nav.label.settings.whatsnew": "Nyheter",

        "hub.apps.detail.back": "Tillbaka till appar",
        "hub.people.detail.back": "Tillbaka till personer",
        "hub.people.notifications.back": "Tillbaka till notiser",

        "hub.nav.label.notifications.filter": "Filter",
        "hub.nav.label.notifications.all.notifications": "Samtliga notiser",
        "hub.nav.label.notifications.action.needed": "Väntar",
        "hub.nav.label.notifications.completed": "Utfört",
        "hub.long.card.description": "Beskrivning",
        "hub.long.card.Comment": "Kommentar",
        "hub.long.card.Comment.placeholder": "Lägg till en kommentar",

        "hub.appLaunch.open": "Öppna",
        "hub.appLaunch.cancel": "Avbryt"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "Tamam",
        "and": "ve",
        "fullname": "{0} {1}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "Yükle",
        "app.banner.open": "Aç",
        "app.promotion.banner.donotshowagain": "Bunu tekrar gösterme. Daha sonra Ayarlar - Hakkında bölümünden ulaşın.",
        "app.promotion.banner.open": "Uygulamada aç",
        "app.promotion.banner.download": "Uygulamayı indir",
        "app.promotion.banner.message": "Uygulamada daha iyi bir deneyim elde edin.",
        "horizonDesktopNotDetected": "Bu uygulamayı açmak için VMware Identity Manager Desktop'ın bu bilgisayara yüklenmesi gereklidir. Henüz yüklemediyseniz lütfen <a target='_blank' href='{0}'>VMware Identity Manager Desktop'ı yükleyin</a>.",
        "viewAppsTooltip": "Bu Horizon’da Barındırılan Uygulama, {0} Horizon Client{1} 3.0 veya sonraki sürümünün bilgisayarınıza yüklenmesini gerektirir.",
        "desktoneDesktopTooltip": "Bu Horizon Cloud Masaüstü, bilgisayarınıza {0}Horizon Client{1}'ın yüklenmesini gerektirir.",
        "desktoneApplicationTooltip": "Bu Horizon Cloud Uygulaması, bilgisayarınıza {0}Horizon Client{1}'ın yüklenmesini gerektirir.",
        "xenAppsReceiverNotDetected": "Bu uygulamayı açmak için Citrix Receiver'ın bu bilgisayara yüklenmesi gereklidir. Henüz yüklemediyseniz lütfen <a target='_blank' href='{0}'>Citrix Receiver'ı yükleyin</a>.",
        "button.save": "Kaydet",
        "button.update": "Güncelle",
        "button.openHorizonView": "Horizon Client’ı Aç",
        "myapps.launch.openApp": "Aç: {0}",
        "button.openApp": "Uygulamayı Aç",
        "button.clear": "Temizle",
        "button.close": "Kapat",
        "button.cancel": "İptal",
        "button.download": "İndir",
        "myapps.launch.title.launch": "Başlat",
        "myapps.launch.title": "Uygulamayı Başlat",
        "myapps.launch.view.openWith": "Birlikte Aç",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "Tarayıcı",
        "myapps.launch.view.preferredClient.isDefault": "(varsayılan)",
        "myapps.launch.view.selectPreferredLaunchClient": "Horizon Masaüstlerini ve Uygulamalarını nasıl başlatmak istediğinizi seçin.",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Horizon Remote Uygulamaları",
        "myapps.launch.view.selectPreferredLaunchClientText": "Horizon remote uygulamalarını Horizon Client'ta açmanız size tarayıcıdan daha iyi bir deneyim sunar.",
        "myapps.launch.view.selectPreferredLaunchClientText2": "Horizon remote uygulamalarını nasıl başlatmak istiyorsunuz?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "VARSAYILAN BİR BAŞLATICI SEÇİN...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "Bu, aygıtınızdan bir Horizon Masaüstü açtığınızda varsayılan başlatma davranışını belirler. Horizon Client’ı varsayılanınız olarak seçerseniz, Horizon Client’ı yüklemiş olmanız gerekir. Henüz yüklemediyseniz lütfen <a target='_blank' href='{0}'>Horizon Client'ı yükleyin</a>.",
        "myapps.launch.view.unknownClientType": "Horizon Client’ı açmak için bilinmeyen istemci türü.",
        "myapps.launch.view.openWithView": "Horizon Client ile Aç",
        "myapps.launch.view.openWithBrowser": "Tarayıcı ile Aç",

        "myapps.launch.view.preferredClient.byBrowser.description": "Tarayıcıyı seçtiğinizde, Masaüstünüz veya Uygulamanız yeni bir tarayıcı penceresinde açılacaktır.",
        "myapps.launch.view.preferredClient.byViewClient.description": "Bu öğe için Horizon Client 3.0 veya sonrası gerekir. Henüz yüklemediyseniz lütfen <a target='_blank' href='{0}'>Horizon Client'ı yükleyin</a>.",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "Bu ayarı tercihlerden her zaman değiştirebilirsiniz.",
        "myapps.launch.view.preferredClient.saveSuccess": "Seçilen tercih başarıyla kaydedildi.",
        "myapps.launch.msg.launching.desktop": "Masaüstü Başlatılıyor <b>{0}</b> .....",
        "myapps.launch.msg.launching.application": "Uygulama Başlatılıyor <b>{0}</b> .....",
        "myapps.noAppsMsg": "Herhangi bir uygulama eklememişsiniz. Uygulama eklemek için şuraya gidebilirsiniz: {0}",
        "myapps.noFavAppsMsg": "Herhangi bir uygulamaya yer işareti eklememişsiniz",
        "myapps.welcomeMsg": "Merhaba {0}, işte uygulamalarınız!",
        "myapps.bookmarks.empty.message": "Hızlı erişim için sık kullanılan uygulamalara yer işareti ekleyin.",
        "myapps.bookmarks.empty.hidecatalog.message": "Şu anda kullanılabilir bir uygulamanız yok.",
        "myapps.bookmarks.empty.addbookmarks": "Yer İşaretleri Ekle",
        "myapps.bookmarks.organize.title": "Yer İşaretlerini Düzenle",
        "myapps.bookmarks.organize.addbookmarks": "Yer İşaretleri Ekle",
        "myapps.bookmarks.organize.batchremove": "Kaldır",

        "myapps.mobilepagetitle.apps": "Uygulamalar",
        "myapps.mobilepagetitle.details": "Detaylar",
        "myapps.mobilepagetitle.support": "Destek",
        "myapps.mobilepagetitle.settings": "Ayarlar",
        "myapps.mobilepagetitle.recommendedapps": "Sizin için Öneriliyor",
        "myapps.mobilepagetitle.notification": "Bildirimler",
        "myapps.mobilepagetitle.archived": "Arşivlendi",
        "myapps.mobilepagetitle.notification.newapps": "Yeni Uygulamalar",

        "myapps.dialog.openApp": "Aç",
        "myapps.dialog.openAppWithViewClient": "İstemcide Aç",
        "myapps.dialog.openAppWithBrowser": "Tarayıcıda Aç",

        "myapps.launch.passwordvault.installExtension.description": "Bu uygulama, Password Vault tarayıcı uzantısını kullanabilir. Henüz yüklemediyseniz <a target='_blank' href='{0}'>Uzantıyı yükleyin</a>.",

        "deviceStatus.networkLost": "Bağlantı kesildi. Yeniden bağlanılmaya çalışılıyor...",
        "deviceStatus.networkRestored": "Ağ bağlantısı geri yüklendi",
        "api.session.expired.retry": "Oturumun süresi doldu, yenilemeye çalışıyor...",
        "api.entitlements.reload": "Kataloğunuzdaki uygulamaları güncellemek için görünümünüz yenileniyor.",
        "api.security.header.invalid.relogin": "Güvenlik üstbilgisi doğrulaması başarısız oldu, oturum kapatılıyor...",
        "api.server.load.error": "Yükleme her zamankinden daha yavaş ilerliyor. Lütfen daha sonra tekrar deneyin.",
        "api.updateApps": "Liste güncelleniyor...",
        "api.error": "Bir hata oluştu. Lütfen yeniden deneyin.",
        "installation.error": "Yerel uygulamalar geçici olarak kullanılamıyor",
        "service.under.maintenance.error": "Workspace ONE geçici olarak bakım modundadır. Uygulamalarınızı başlatabilirsiniz fakat bazı özellikler çalışmayabilir.",
        "api.timeout": "Bağlantı zaman aşımına uğradı. Lütfen tekrar deneyin",
        "favoriteStatus.favorite": "SK’ya Ekle",
        "favoriteStatus.unfavorite": "SK’dan Çıkar",
        "favoriteStatus.offlineFavoriteMessage": "Çevrimdışıyken bir uygulamaya yer işareti eklenemez. Lütfen yeniden bağlanın ve tekrar deneyin",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "Çevrimdışıyken bir uygulamadan yer işareti kaldırılamaz. Lütfen yeniden bağlanın ve tekrar deneyin",
        "error.failToFavoriteApp": "Yer işareti durumu güncellenemedi",
        "error.failedToResetApp": "Uygulama sıfırlanamadı",
        "error.failToHideApp": "Uygulama kaldırılamadı",
        "error.failToShowApp": "Uygulamayı Launcher’a yükleme işlemi başarısız oldu",
        "error.failedToBookmarkApp": "Uygulamaya yer işareti eklenemedi",
        "error.failedToLaunchApp": "Uygulama açılamadı",
        "error.failedToRemoveAccount": "Hesap kaldırılamadı, lütfen daha sonra yeniden deneyin",
        "installStatus.enrollDevice": "{0} kullanımı, şirket verilerini korumak için Workspace Services’ın etkinleştirilmesini gerektirir",
        "installStatus.enrollDevice.learnMore": "Daha Fazla Bilgi",
        "installStatus.offlineInstallMessage": "Çevrimdışıyken, yükleme istekleri kullanılamaz. Lütfen yeniden bağlanın ve tekrar deneyin.",
        "installStatus.activated": "Etkinleştirildi",
        "installStatus.notActivated": "Etkin Değil",
        "installStatus.request": "İstek",
        "installStatus.update": "Güncelle",
        "installStatus.processing": "İşleniyor",
        "installStatus.installFailedMessage": "{0} uygulaması kurulurken bir sorun oluştu. Lütfen tekrar deneyin. Bu sorun devam ederse IT yöneticinizle görüşün.",
        "installStatus.unenrolledDevice": "Bu uygulamayı artık kullanamazsınız. Listeyi güncellemek için lütfen tamam’a tıklayın.",
        "installMessage.continueInstall": "Bu uygulamayı daha önce yüklemeye çalıştınız. ",
        "installMessage.proceedToInstall": "Devam etmek için tıklayın.",
        "installMessage.installingOnDevice": "Aygıta yükleniyor...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "Workspace Services'ı Etkinleştir",
        "app.adaptivemanagement.ws1servicessubtitle": "Uygulamanın yüklenebilmesi için bu gereklidir. Otomatik olarak yararlanabileceğiniz hizmetler:",
        "app.adaptivemanagement.valueproposition1": "Tüm kurumsal kaynakların doğrudan yüklemesi.",
        "app.adaptivemanagement.valueproposition2": "Güvenli kurumsal ağ erişimi.",
        "app.adaptivemanagement.valueproposition3": "Tüm aygıtlarınızda eşitlenen uygulamalar ve içerikler.",
        "app.adaptivemanagement.valueproposition4": "Daha üretken olmanızı sağlayacak gelişmiş bir uygulama deneyimi.",
        "app.adaptivemanagement.privacylink": "Gizliliğiniz",

        "app.tunnel.continue": "Devam Et",
        "app.tunnel.text.line1": "Erişim için VMware Tunnel uygulaması gerekli",
        "app.tunnel.text.line2": "Tunnel uygulaması uygulamanız ile birlikte otomatik olarak indirilecektir.",
        "app.tunnel.header": "VMware Tunnel gerekiyor",
        "app.tunnel.message": "Bu uygulamayı kullanmak için VMware Tunnel'ın yüklü ve çalışıyor olması gerekir.",
        "recommendedApps.tunnel.text.line1": "Erişim için VMware Tunnel uygulaması gerekli",
        "recommendedApps.tunnel.text.line2": "Tunnel uygulaması uygulamanız ile birlikte otomatik olarak indirilecektir.",
        "app.tunnel.installHelpText": "Uygulamalar otomatik olarak yüklenmeye başlamadıysa uygulamayı etkinleştirmek için lütfen şu adımları izleyin",
        "app.tunnel.installStep1": "1. Adım: {0} uygulamasını yükleyin",
        "app.tunnel.installStep2": "2. Adım: {0} uygulamasını yükleyin",

        "requestFailed": "İstek Başarısız",
        "changeOccurred": "Değişiklik Oluştu",
        "requestSuccessful": "İstek Başarılı",
        "accept": "Kabul Et",
        "decline": "Reddet",
        "termsOfUse": "Kullanım Şartları",
        "beforeInstallation": "Yüklemeden Önce",
        "resetDesktopStatus.offlineMessage": "Çevrimdışıyken masaüstünü sıfırlama işlemi kullanılamaz. Lütfen yeniden bağlanın ve tekrar deneyin",
        "resetDesktop.sucess": "Masaüstünü sıfırlama işlemi başarılı",
        "appCenter.someAppsMissingMessage": "Tüm uygulamalar şu anda yüklenemedi",
        "appCenter.register.device": "Aygıtınızla ilgili bazı bilgilerin güncellenmesi gerekiyor. Workspace ONE ile devam etmek için güncelle düğmesine basın.",
        "appCenter.mdm.device.error": "Artık Workspace ONE'a erişiminiz yok.",
        "appCenter.mdm.device.error.contact": "Hesap ayrıntılarınız için yöneticinizle iletişim kurun.",
        "appCenter.mdm.device.poll.error": "Şu anda çalışma alanınızın oluşturulmasını bitiremedik. Tekrar deneyin veya yöneticiniz ile iletişime geçin.",
        "appCenter.device.status.notRegistered": "Aygıt kayıtlı değil",
        "appCenter.device.status.blackListed": "Bu aygıt kara listeye alındı",
        "appCenter.device.status.deviceInputError": "Bu aygıt geçersiz! Lütfen IT Yöneticinizle iletişime geçin.",
        "appCenter.device.status.unknownError": "Bilinmeyen bir hata oluştu",

        "appCenter.device.register": "Aygıtı Kaydet",
        "appCenter.device.moreDetails": "Daha Fazla Detay",
        "appCenter.device.unEnrollWarningTitle": "Hesabınız Kaldırılsın mı?",
        "appCenter.device.mdmUnEnrollMessage": "Hesabınızı kaldırırsanız, şirket kaynaklarına erişim devre dışı bırakılır ve bu aygıttaki çalışma uygulamaları kaldırılabilir.",
        "appCenter.device.getDeviceEnrollmentStatus": "Ek bilgi alma",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "Devam etmek istediğinizden emin misiniz?",
        "appCenter.device.remove": "Kaldır",
        "appCenter.device.keep": "Sakla",
        "appCenter.device.disableWorkspaceMessage": "Hesabınızı kaldırma, Workspace ONE uygulamasına erişim yetkisini iptal edecektir. Springboard’unuza indirilen uygulamalar yüklenmiş olarak kalacaktır fakat erişim kesilebilir. Devam etmek istiyor musunuz?",
        "appCenter.noAppsMsg": "Şu anda kullanılabilir uygulama yok",
        "appCenter.vppInviteTitle": "Yönetimli Dağıtım Kaydı",
        "appCenter.appInstallConfirmPromptTitle": "Yükleme İşlemini Onayla",
        "appCenter.mdmAppRequestConfirmPromptTitle": "Şunun için onay gerekiyor:",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "İsteğiniz önceden reddedildi",
        "appCenter.mdmAppRequestConfirmPromptMessage": "Erişmeye çalıştığınız uygulamanın, yöneticiniz tarafından onaylanması gerekiyor",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "Bu uygulamayı istediniz ve isteğiniz reddedildi, tekrar istemek istediğinizden emin misiniz?",
        "appCenter.acceptInvite": "Daveti Kabul Et",
        "appCenter.install": "Yükle",
        "appCenter.proceed": "Workspace Services'ı Etkinleştir",
        "appCenter.cancel": "İptal",
        "appCenter.confirm": "Onayla",
        "appCenter.searchApps": "Uygulama arayın.",
        "appCenter.welcomeMsg": "Yeni uygulamaları, herhangi bir aygıtta herhangi bir yere yükleyin!",
        "appCenter.done": "Bitti",
        "appCenter.nav.privacyPage": "Gizlilik Sayfası",
        "appCenter.nav.catalog": "Katalog",
        "appCenter.nav.myApps": "Uygulamalarım",
        "appCenter.nav.favorites": "Sık Kullanılanlar",
        "appCenter.nav.categories": "Kategoriler",
        "appCenter.nav.filterby": "Şuna Göre Filtrele:",
        "appCenter.nav.show": "Göster",
        "appCenter.nav.settings": "Ayarlar",
        "appCenter.nav.sortBy": "Şuna Göre Sırala:",
        "appCenter.nav.sortBy.alpha": "A'dan Z'ye sırala",
        "appCenter.nav.sortBy.inverseAlpha": "Z'den A'ya sırala",
        "appCenter.nav.sortBy.customView": "Özel görünüm",
        "appCenter.nav.arrange": "Düzenle",
        "appCenter.nav.arrange.saved": "Özel görünüm kaydedildi!",
        "appCenter.nav.arrange.tooltip": "Yalnızca pencerelerde kullanılabilir.",
        "appCenter.nav.arrange.saving": "Kaydediliyor...",
        "appCenter.nav.arrange.error": "Özel görünüm kaydedilemedi",
        "appCenter.nav.filter": "Filtre",
        "appCenter.installFailedTitle": "Uygulama Yükleme Sorunu",
        "appCenter.uccConflict": "Geçerli oturumda bir sorun oluştu. Lütfen yeniden oturum açın.",

        "appCenter.search.placeholder": "Ara",
        "appCenter.search.noResults": "Bir sonuç bulunamadı.",

        "appCenter.action.open": "Aç",
        "appCenter.action.install": "Yükle",
        "appCenter.action.installing": "Yükleniyor",
        "appCenter.action.installed": "Yüklendi",
        "appCenter.action.reinstall": "Tekrar Yükle",
        "appCenter.action.add": "Ekle",
        "appCenter.action.added": "Eklendi",
        "appCenter.action.processing": "İşleniyor",
        "appCenter.action.update": "Güncelle",
        "appCenter.action.request": "İstek",
        "appCenter.action.pending": "Beklemede",
        "appCenter.action.view": "Görüntüle",
        "appCenter.action.favorite": "SK’ya Ekle",
        "appCenter.action.unfavorite": "SK’dan Çıkar",

        "appCenter.internalApp.installtionModalTitle": "Uygulama yükleme adımları",
        "appCenter.internalApp.installationStepTitle": "Bu uygulamayı açmak için yükleme işleminden sonra takip eden bu adımları izleyin:",
        "appCenter.internalApp.step1": "iOS giriş ekranınızdan Ayarlar’ı başlatın",
        "appCenter.internalApp.step2": "Genel'e dokunun",
        "appCenter.internalApp.step3": "Profiller ve Aygıt yönetimine dokunun",
        "appCenter.internalApp.step4": "Kurumsal Uygulama altında yer alan uygulama geliştirici adına dokunun",
        "appCenter.internalApp.step5": "Uygulamayı onaylayın ya da uygulamaya güvenin",
        "appCenter.internalApp.watchTutorial": "Adım adım bilgilendirici rehberi takip edin",

        "appCenter.type.web": "Web sitesi",
        "appCenter.type.native": "Yerel Uygulama",
        "appCenter.type.native.platform": "{0} Uygulaması",
        "appCenter.type.virtual": "Sanal Uygulama",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "Uygulama Paketi",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "Kategoriler",
        "myapp.nav.favorites": "Sık Kullanılanlar",
        "myapp.nav.allApps": "Tüm Uygulamalar",
        "myapp.nav.recommendedApps": "Önerilen",
        "myapp.nav.newlyEntitledApps": "Yeni",
        "myapp.nav.webApps": "Web Siteleri",
        "myapp.nav.mobileApps": "Mobil Uygulamalar",
        "myapp.nav.macApps": "Mac Uygulamaları",
        "myapp.nav.windowsApps": "Windows Uygulamaları",
        "myapp.nav.virtualApps": "Sanal",
        "myapp.label.new": "Yeni",
        "myapp.nav.filterby": "Şuna Göre Filtrele:",
        "myapp.nav.mobile.filter.pagetitle": "Kategorilere Göre Filtrele",
        "appCenter.nav.browseBy": "Şuna göre gözat:",

        "appCenter.catalog.empty": "Görünen o ki henüz size herhangi bir uygulama atanmamış. Yakında olmalı, kısa süre sonra tekrar kontrol edin.",

        "userInfo.adminConsole": "Yönetim Konsolu",
        "userInfo.settings": "Ayarlar",
        "userInfo.notifications": "Bildirimler",
        "userInfo.support": "Destek",
        "userInfo.preferences": "Tercihler",
        "userInfo.about": "Hakkında",
        "userInfo.devices": "Aygıtlar",
        "userInfo.settings.promo.title": "Workspace ONE uygulamasını indirin",
        "userInfo.settings.promo.message": "Workspace ONE size uygulama içinde daha iyi bir deneyim sunuyor. Şimdi denemek ister misiniz?",

        "userInfo.tips": "Uygulama İpuçları",
        "userInfo.tips.description": "Uygulamayı nasıl kullanacağınız hakkında yardım alın.",

        "userInfo.tips.bookmarks": "Yer İşaretleri nasıl kullanılır?",
        "userInfo.tips.catalog": "Katalog nasıl kullanılır?",
        "userInfo.tips.people": "Yeni: Kişiler nasıl kullanılır?",
        "userInfo.tips.notification": "Yeni: Bildirim nasıl kullanılır?",

        "userInfo.tips.catalog.desktop1": "Tarayıcıda bir web sitesini başlatmak için Aç üzerine tıklayın ve yer işareti eklemek için {0} öğesini kullanın.",
        "userInfo.tips.catalog.desktop2": "Daha fazla ayrıntıyı öğrenmek için uygulama simgesine veya adına tıklayın.",
        "userInfo.tips.catalog.mobile1": "Tarayıcıda bir web sitesini açmak için {0} öğesini kullanın; yer işareti eklemek için {1} öğesini kullanın.",
        "userInfo.tips.catalog.mobile2": "Aygıtınıza yerel bir uygulamayı kurmak için {0} öğesini kullanın. {1}, bu uygulamaları kullanmak için aygıtınızı kaydettirmeniz gerektiği anlamına gelir.",
        "userInfo.tips.catalog.mobile3": "Daha fazla ayrıntıyı öğrenmek için uygulama simgesine veya adına tıklayın.",

        "userInfo.tips.bookmarks.desktop1": "Tarayıcınızda web sitesini başlatmak için karo üzerine tıklayın.",
        "userInfo.tips.bookmarks.desktop2": "'...' Menüsünden daha fazla eylemi görmek için karo üzerine tıklayın.",

        "userInfo.tips.bookmarks.mobile": "Tarayıcınızda bir web sitesi başlatmak için bir kutucuğa tıklayın. Daha fazla işlem için basın ve tutun.",

        "userInfo.tips.catalog.download.phone": "Aygıtınıza yerel bir uygulamayı kurmak için {0} simgesine dokunun. {1} simgesi, bu uygulamaları kurmak için aygıtınızı kaydettirmeniz gerektiği anlamına gelir.",
        "userInfo.tips.catalog.bookmark.launch.phone": "Tarayıcınızda bir web sitesini açmak için {0} simgesine dokunun. Yer işareti eklemek için {1} simgesine dokunun. Daha fazla ayrıntı için uygulama simgesine veya adına dokunun",

        "userInfo.tips.catalog.download.tablet": "İndirme düğmesine tıklayarak uygulamaları indirin, daha fazla ayrıntı için yalnızca uygulamaya tıklayın",
        "userInfo.tips.catalog.bookmark.launch.tablet": "Başlat düğmesine tıklayarak uygulamaları başlatın, yer işareti düğmesine tıklayarak uygulamaların yerini işaretleyin",

        "userInfo.tips.people.mobile": "Herhangi bir profilden kişilerin arandığı giriş sayfasına geri dönmek için {0} öğesine tıklayın.",
        "userInfo.tips.notification.mobile": "Bildirimlerinize erişmek için {0} öğesine tıklayın. Bildirim göstergesi, siz tüm bildirimlerinizi kapatıncaya veya bunlara yönelik bir işlem yapıncaya kadar aktif kalır.",

        "userInfo.tips.title": "Uygulama İpuçları",
        "userInfo.tips.intro": "Uygulamayı nasıl kullanacağınız hakkında yardım alın.",
        "userInfo.tips.desktop": "Masaüstü",
        "userInfo.tips.reordering.title": "Yer işaretlerinizi özelleştirin!",
        "userInfo.tips.reordering.text1": "1. Sağ üstteki açılır menüyü kullanarak Özel Görünüm'e gidin.",
        "userInfo.tips.reordering.text2": "2. Düzenle öğesini seçin. ",
        "userInfo.tips.reordering.text3": "3. Yer işaretini yeniden düzenlemek için sürükleyin ve bırakın. Bittiğinde, Kaydet üzerine tıklayın.",
        "userInfo.tips.mobile": "Mobil Cihazlar",

        "userInfo.removeAccount": "Hesabı Kaldır",
        "userInfo.account": "Hesap",
        "userInfo.profile": "Profil",
        "userInfo.profile.name": "Ad:",
        "userInfo.profile.email": "E-posta:",
        "userInfo.profile.username": "Kullanıcı Adı:",
        "userInfo.profile.picture": "Profil Resmi",
        "userInfo.profile.password": "Parola",
        "userInfo.profile.passwordchange": "Değiştir",
        "userInfo.profile.passwordprompt": "Şirket sistemi parolanızı yönetin.",
        "userInfo.password": "Parola",
        "userInfo.termsofuse": "Kullanım Şartları",
        "userInfo.signout": "Oturumu Kapat",
        "userInfo.tryAgain": "Tekrar deneyin",
        "userInfo.managedevicesettings": "Aygıt Ayarlarını Yönet",
        "userInfo.notification": "Anında Bildirim",
        "userInfo.passcode": "Touch ID veya Şifre",

        "appCenter.support.selfservice": "Self Servis",
        "appCenter.support.managedevices": "Aygıtlar",
        "appCenter.support.managedevicestext": "Aygıt bilgilerinizi görüntüleyin.",
        "appCenter.support.managepassword": "Parolayı Değiştir",
        "appCenter.support.managepasswordtext": "Şirket hesabınızın parolasını değiştirin",
        "appCenter.support.gethelp": "Yardım Al",
        "appCenter.support.appstips": "Uygulamalar ve İpuçları",
        "appCenter.support.appstipstext": "Bu uygulamadaki yardım ipuçlarına bakın",
        "appCenter.support.sendReportTitle": "Rapor Gönder",
        "appCenter.support.sendReportDetails": "Uygulama tanılamalarının nasıl gönderileceğini öğrenin.",
        "appCenter.support.helpdesk": "Yardım Masası",
        "appCenter.support.contacthelpdesk": "Yardım Masası ile İletişim Kur",
        "appCenter.reportProblems.ios.sendLogInstruction": "Bir hata oluştuğunda uygulama tanılamalarını kolayca göndermek veya geri bildirim sağlamak için aygıtınızı sallayın.",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "Aygıt ayarlarınızda bu özelliği açabilir/kapatabilirsiniz.",

        // App Details Page
        "app.details.link.back": "Geri",
        "app.details.nav.details": "Detaylar",
        "app.details.nav.reviews": "Yorumlar",
        "app.details.label.description": "Açıklama",
        "app.details.label.noDescription": "Açıklama Yok",
        "app.details.label.seeFullDetails": "Ayrıntı göster",
        "app.details.label.removeBookmark": "Kaldır",
        "app.details.label.resetDektop": "Sıfırla",
        "app.details.label.information": "Bilgiler",
        "app.details.label.category": "Kategoriler",
        "app.details.label.version": "Sürüm",
        "app.details.label.type": "Tür",
        "app.details.label.type.SAML11": "Web Uygulaması",
        "app.details.label.type.SAML20": "Web Uygulaması",
        "app.details.label.type.WEBAPPLINK": "Web Uygulaması",
        "app.details.label.type.MDMWEB": "Web Uygulaması",
        "app.details.label.type.WSFED12": "Web Uygulaması",
        "app.details.label.type.XENAPP": "Xen Uygulaması",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix Desktop",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "Profil",
        "app.details.label.type.VIEWPOOL": "Horizon Masaüstü",
        "app.details.label.type.VIEWAPP": "Horizon Uygulaması",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud Masaüstü",
        "app.details.label.type.DESKTONEAPPLICATION": "Horizon Cloud Uygulaması",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Web Uygulaması",
        "app.details.label.type.PUBLIC": "Genel Uygulama",
        "app.details.label.type.INTERNAL": "Dahili",
        "app.details.label.size": "Boyut",
        "app.details.label.price": "Fiyat",
        "app.details.label.screenshots": "Ekran Görüntüleri",
        "app.details.label.showMore": "Daha Fazla Göster",
        "app.details.label.showLess": "Daha Az Göster",
        "app.details.label.setAppPassword": "Uyg.Parola.Ayrla",
        "app.details.label.sendFeedback": "Geri Bildirim Gönder",
        "app.details.label.feedbackSubject": "{0} uygulaması için geri bildirim",
        "app.details.label.support": "Destek",
        "app.details.label.developer": "Geliştirici",
        "app.details.label.email": "E-posta",
        "app.details.label.phone": "Telefon",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "Tüm mobil uygulamalar ana ekranınızdan başlatılabilir.",

        "app.details.label.requirement": "Gereklilikler:",
        "app.details.label.packageName": "Paket Adı:",
        "app.details.thinapp.requirement": "Bu uygulama, sadece Identity Manager Desktop’ın yüklü olduğu bir Windows bilgisayarında çalışır.",
        "app.details.viewDesktop.requirement": "Bu Horizon Masaüstü, bilgisayarınıza {0}Horizon Client{1} 3.0 veya sonraki sürümünün yüklenmesini gerektirir.",
        "app.details.viewapp.requirement": "Bu Horizon’da Barındırılan Uygulama, {0} Horizon Client{1} 3.0 veya sonraki sürümünün bilgisayarınıza yüklenmesini gerektirir.",
        "app.details.xenapp.requirement": "Bu uygulama, bilgisayarınıza {0}Citrix Receiver{1}'ın yüklenmesini gerektirir.",
        "app.details.xenapp.msg.IE8OrLower": "Bu uygulama için Citrix Receiver'ın yüklenmesi gerekir. Not: Bu uygulama Internet Explorer 8'de açılamaz.",
        "app.details.xenappsDeliveryGroup.requirement": "Bu Citrix Desktop, bilgisayarınıza {0}Citrix Receiver{1}'ın yüklenmesini gerektirir.",
        "app.details.desktoneDesktop.requirement": "Bu Horizon Cloud Masaüstü, bilgisayarınıza {0}Horizon Client{1}'ın yüklenmesini gerektirir.",
        "app.details.desktoneApp.requirement": "Bu Horizon Cloud Uygulaması, bilgisayarınıza {0}Horizon Client{1}'ın yüklenmesini gerektirir.",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "Bilgi yok",
        "app.details.noScreenshots": "Ekran görüntüsü yok",
        "app.details.noDescription": "Açıklama çok yakında.",
        "app.details.needsDeviceEnrollment": "Aygıt Kaydı Gerektirir",
        "app.details.label.addToHomeScreen": "Ana Ekrana Ekle",
        "app.details.action.open": "Aç",
        "app.details.action.bookmark": "Yer İşareti",
        "app.details.action.bookmarked": "Yer işareti eklendi",
        "app.details.action.launch": "Başlat",
        "app.details.action.setPassword": "Parola ayarla",
        "app.details.action.pvAppCredentials": "Kimlik Bilgileri",
        "app.details.info.msg.missingInfo": "Bazı bilgiler eksik. Ayrıntıların tamamını görmek için daha sonra tekrar deneyin.",
        "app.details.wsrequired.msg": "Workspace Services gerekli.",
        "app.details.label.addedFavorites": "Sık kullanılanlara eklendi",

        "app.rating.label": "Kullanıcı Derecelendirmesi",

        "app.settings.label.settings": "Ayarlar",
        "app.settings.link.back": "Geri",
        "app.settings.managedDevices": "Yönetilen Aygıtlar",
        "app.nav.tab.bookmark": "Yer İşaretleri",
        "app.nav.tab.catalog": "Katalog",
        "app.nav.tab.people": "Kişiler",
        "app.nav.tab.support": "Destek",
        "app.nav.tab.apps": "Uygulamalar",
        "app.nav.tab.settings": "Ayarlar",
        "app.about.heading": "Workspace ONE Hakkında",
        "app.about.copyright": "Telif Hakkı ©2013-2019 VMware, Inc. Tüm hakları saklıdır. Bu ürün, Birleşik Devletler'deki ve diğer ülkelerdeki telif hakkı ve fikri mülkiyet yasalarıyla ve uluslararası anlaşmalarla korunmaktadır. VMware ürünleri bir veya daha fazla patent ile korunmaktadır.",
        "app.about.button.label.privacyPolicy": "Gizlilik İlkesi",
        "app.about.button.label.patents": "Patent",
        "app.about.button.label.licenseAgreement": "Lisans Anlaşması",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/tr/go/patents",
        "app.about.licenseAgreementLink": "http://www.vmware.com/tr/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/tr/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "Aygıtlar",
        "app.devices.tableColumn.deviceName": "Aygıt Adı",
        "app.devices.tableColumn.userDeviceId": "Aygıt Kimliği",
        "app.devices.tableColumn.lastLoginTime": "Son Oturum Açma Zamanı",
        "app.devices.unlinkDevice": "Bağlantıyı kaldırmak",
        "app.devices.unlinkedDevice": "Bağlantısız",
        "app.devices.emptyDeviceListMessage": "Hesabınızla ilişkilendirilmiş bir aygıt yok.",

        "app.thinappMultiDeviceAct.heading": "Bu uygulama, onaylanan aygıtlara eklenecektir. İlave aygıtlarda \"{0}\" kullanmak için aşağıdan aygıt adını bulun ve sonrasında İste düğmesine tıklayın.",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "Aygıt Adı",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "Durum",
        "app.thinappMultiDeviceAct.button.request": "İstek",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "Reddedildi",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "Beklemede",
        "app.thinappMultiDeviceAct.activationState.activated": "Onaylandı",
        "app.thinappMultiDeviceAct.activationState.notActivated": "Etkin Değil",

        "app.thinappsInPackage.button.done": "Bitti",
        "app.thinappsInPackage.button.bookmarkAll": "Tümünü Yer İşaretiyle İşaretle",
        "app.thinappsInPackage.info": "Uygulama Paketi",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} uygulama",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "{0} eşleşme bulundu.",
        "app.thinappsInPackage.action.instruction": "Bireysel uygulamayı işaretlemek için yer işareti simgesi seçin veya tüm uygulamaları işaretlemek için düğmeyi seçin.",
        "app.thinappsInPackage.search.placeholder": "Pakette ara",

        "app.setAppPassword.heading": "Parola ayarla",
        "app.setAppPassword.instruction": "Bu uygulamaya bir parola ayarlamak için aşağıdaki formu kullanın. Parola en az üç karakter uzunluğunda olmalıdır.",
        "app.setAppPassword.label.password": "Parola",
        "app.setAppPassword.label.confirmPassword": "Parolayı Onayla",
        "app.setAppPassword.label.generate": "Parola Oluştur",
        "app.setAppPassword.error.passwordsNoMatch": "Parolalar eşleşmiyor.",
        "app.setAppPassword.msg.success": "Uygulama parolanız başarılı bir şekilde kurulmuş.",
        "app.setAppPassword.msg.fail": "Parolanızı ayarlarken bir hata oluştu. Lütfen tekrar deneyin.",

        "pvapp.setAppPassword.heading": "{0} için kayıtlı kimlik bilgileri ayarla",
        "pvapp.setAppPassword.instruction": "Bu uygulamaya ilişkin kayıtlı kimlik bilgileri ayarlamak için aşağıdaki formu kullanın.",
        "pvapp.setAppPassword.label.username": "Kullanıcı Adı",
        "pvapp.setAppPassword.label.password": "Parola",
        "pvapp.setAppPassword.error.userNameEmpty": "Kullanıcı Adı boş.",
        "pvapp.setAppPassword.error.passwordEmpty": "Parola boş.",
        "pvapp.setAppPassword.msg.success": "Uygulama kimlik bilgileriniz başarılı şekilde ayarlandı.",
        "pvapp.setAppPassword.msg.fail": "Uygulama kimlik bilgileriniz ayarlanırken bir hata oluştu. Lütfen tekrar deneyin.",

        "app.launchPassword.heading": "Parola İsteği",
        "app.launchPassword.view.instruction": "Bu Windows kaynağında {0} oturum açmak için parolanıza ihtiyacımız var.",
        "app.launchPassword.label.userName": "Kullanıcı",
        "app.launchPassword.label.password": "parolası",
        "app.launchPassword.button.label.signin": "Oturum Aç",

        "app.changePassword.title": "Parolayı Değiştir",
        "app.changePassword.enterCurrentPassword": "Güncel parolayı gir",
        "app.changePassword.enterNewPassword": "Yeni parola gir",
        "app.changePassword.confirmNewPassword": "Yeni parolayı onayla",
        "app.changePassword.error.passwordsNoMatch": "Yeni parolalar eşleşmiyor.",
        "app.changePassword.error.requirementsNoMatch": "Yeni parola, gereksinimleri karşılamıyor.",
        "app.changePassword.success": "Yeni parola kaydedildi!",
        "app.changePassword.label.email": "E-posta",
        "app.changePassword.label.phone": "Telefon",

        "app.passwordPolicy.passwordRequirements": "Parola gereksinimleri",
        "app.passwordPolicy.label.currentpassword": "Güncel parola",
        "app.passwordPolicy.label.newpassword": "Yeni parola",
        "app.passwordPolicy.label.confirmpassword": "Yeni parolayı onayla",
        "app.passwordPolicy.minLength": "En az {0} basamak",
        "app.passwordPolicy.leastIncludes": "en azından şunları içerir:",
        "app.passwordPolicy.minLower": "{0} Harf",
        "app.passwordPolicy.minUpper": "{0} Büyük Harf",
        "app.passwordPolicy.minDigit": "{0} Rakam",
        "app.passwordPolicy.minSpecial": "{0} Özel karakter",

        "app.coachmarks.bookmarkTitle": "Yer İşaretlerini kullanma",
        "app.coachmarks.bookmarkMessage": "Web sitelerini başlatmak için dokunun, daha fazlasını keşfetmek için basılı tutun.",
        "app.coachmarks.catalogTitle": "Kataloğu kullanma",
        "app.coachmarks.catalogMessage": "Uygulamaları yükleyin veya güncelleyin, Yer İşaretlerine ekleyin ya da doğrudan buradan açın.",
        "app.coachmarks.buttonText": "Anlaşıldı!",

        "app.logout.confirm.msg": "Workspace ONE'daki oturumunuzu kapatma işlemi güncel oturumunuzu sonlandıracaktır. Katalog'tan indirilmiş herhangi bir uygulama aygıtta kalacaktır fakat siz tekrar giriş yapana kadar yeni uygulamalar kullanılamayacaktır.",
        "app.logout.title": "UYARI",

        "app.passwordVault.banner.msg": "Workspace ONE uzantısını kullanabileceğiniz uygulamalarınız var.",
        "app.passwordVault.banner.button.install": "Yükle",
        "app.passwordVault.banner.setPreference": "Ayarlar-Tercihler ile daha sonra alabilirsiniz.",
        "app.passwordVault.banner.donotshowagain": "Bunu tekrar gösterme",
        "app.passwordVault.banner.button.later": "Daha Sonra",
        "app.passwordVault.banner.button.get": "Al",
        "app.passwordVault.preference.title": "Workspace ONE Uzantısı",
        "app.passwordVault.preference.instruction": "Workspace ONE uzantısını kullanabileceğiniz uygulamalarınız var.",
        "app.passwordVault.preference.getextension": "Uzantıyı Al.",
        "app.bookmarking.change.tab.title": "Hala yer işaretlerinizi mi düzenliyorsunuz?",
        "app.bookmarking.change.tab.body": "Yaptığınız değişiklikler kaydedilmeyecek. Yer işaretlerini düzenlemeye devam etmek istiyor musunuz?",
        "app.bookmarking.touch.disabled": "Trackpad veya fare kullandığınızda uygulamaları Yeniden Düzenleyebilirsiniz.",
        "app.bookmarking.change.tab.exit": "Hayır, çık",
        "app.bookmarking.change.tab.stay": "Evet, burada kal",
        "app.virtual.disabled": "Yönetici tarafından devre dışı bırakıldı",
        "app.virtual.unavailable": "Bu uygulama, bu aygıtta kullanılamıyor",
        "app.virtual.not.available": "Kullanılamıyor",

        "app.notification.type.NEW_ENTITLEMENTS": "Bunlara göz atın",
        "app.notification.type.PASSWORD_EXPIRING": "Parolayı Güncelle",
        "app.notification.action.delete": "Sil",
        "notification.new.entitlements.heading": "Yeni Destek Hakları",
        "notification.new.entitlements.message": "Atanan {0} yeni destek hakkınız var",
        "app.notification.delete.header": "Bu Bildirim silinsin mi?",
        "app.notification.delete.msg": "Bu bildirimi silmek istediğinizden emin misiniz? Bildirimi daha sonra arşivlemek isterseniz Arşivle'yi seçebilirsiniz. ",
        "app.notification.delete.text": "Sil",
        "app.notification.keep.text": "Sakla",
        "app.notification.restore.text": "Geri Yükle",
        "app.notification.delete.toast.msg": "Bildirim silindi.",
        "app.notification.empty": "Hepsini okudunuz!",
        "app.notification.more.actions": "Daha fazla eylem",
        "app.notification.archive.all": "Tümünü Arşivle",

        "app.notification.bookmark.all.error": "Üzgünüz, tüm yeni uygulamalarınızı yer işaretleriyle işaretleyemedik",
        "app.notification.bookmark.all.success": "Yeni uygulamaların hepsi sık kullanılanlara eklendi",
        "app.notification.delete.all": "Tümünü sil",
        "app.notification.see.archived": "Arşivlenenleri Görüntüle",
        "app.notification.see.all": "Tüm bildirimlere bak",
        "app.notification.newApps.title": "Yeni uygulamalarınız var!",
        "app.notification.newApps.excessIconsMessage": "+ {0} adet daha",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "Ayrıntıları görüntüle",
        "app.tooltip.clicktolaunch": "Başlatmak için tıkla",

        "recommendedApps.install.proceed": "Devam Et",
        "recommendedApps.install.title": "Önerilen uygulamaları yükle",
        "recommendedApps.install.confirm.msg": "Uygulamalarınızın yüklenmeye devam etmesi için yönlendirileceksiniz.",
        "recommendedApps.text1": "Bu uygulamalar meslektaşlarınız tarafından yaygın şekilde kullanılıyor.",
        "recommendedApps.text2": "Bunları şimdi kurabilir veya daha sonra kataloğunuzda bulabilirsiniz.",
        "recommendedApps.selectAll": "Tümünü Seç",
        "recommendedApps.apps": "uygulamalar",
        "recommendedApps.install": "Yükle",
        "recommendedApps.skip": "Atla",

        "app.desktopapp.settings.title.account": "Hesap",
        "app.desktopapp.settings.title.devices": "Aygıtlar",
        "app.desktopapp.settings.title.preferences": "Tercihler",

        "appCenter.peopleSearch.placeholder": "Kişi Ara",
        "app.tooltip.copyEmail": "E-postayı Kopyala",
        "app.peopleSearch.emailCopied": "E-posta kopyalandı",
        "appCenter.peopleSearch.noResults": "Hiç sonuç bulunamadı",
        "appCenter.peopleSearch.tryNewSearch": "Yeni bir arama deneyin.",
        "appCenter.peopleSearch.atLeastThreeChars": "Arama yapmak için yukarıya 3 veya daha fazla karakter girin.",
        "appCenter.searchPeople": "Kişi arayın.",
        "myapps.mobilepagetitle.people": "Kişiler",
        "app.people.labels.team": "Ekibim",
        "app.people.labels.recent": "Son Kullanılanlar",
        "app.people.labels.manager": "Yönetici",
        "app.people.labels.peers": "Eşler",
        "app.people.labels.directReports": "Bağlı Çalışanlar",
        "app.people.labels.profile": "Profil",
        "app.people.labels.org": "Kuruluş",
        "app.people.labels.workEmail": "İş e-postası",
        "app.people.labels.workPhone": "İş telefonu",
        "app.people.labels.alternateNumber": "Alternatif telefon",
        "app.people.labels.mobile": "Mobil",
        "app.people.labels.address": "Adres",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "Yöneticiler",
        "app.people.labels.skypeForBusiness": "Skype Kurumsal",
        "app.people.labels.employeeNumber": "Çalışan Numarası",
        "app.people.labels.skills": "Beceriler",
        "app.people.labels.businessUnit": "İş Birimi",
        "app.people.labels.costCenter": "Maliyet Merkezi",
        "app.people.labels.physicalDeliveryOfficeName": "Ofisin Konumu",

        "hub.apps": "Uygulamalar",
        "hub.notifications": "Bildirimler",
        "hub.notifications.welcome": "Hoş Geldiniz!",
        "hub.notifications.first.time.message": "Hub'ı kullanmaya başladığınızda bildirimler burada görünecek.",
        "hub.notifications.new.apps.favorite.all": "Tümünü Sık Kullanılanlara Ekle",
        "hub.notifications.congratulations": "Tebrikler!",
        "hub.notifications.empty.description1": "Yeni bildirim yok.",
        "hub.notifications.empty.description2": "Ekstra alanın tadını çıkarın.",
        "hub.v2.notifications.empty.description": "Bildirimlerinizin tamamını okudunuz",
        "hub.v2.notifications.first.time.description": "Hub'ı kullanmaya başladığınızda bildirimler burada görünecek.",
        "hub.notifications.empty.description.archived": "Arşivlenen bildirim yok.",
        "hub.notifications.priority": "Öncelik",
        "hub.notifications.today": "Bugün",
        "hub.notifications.yesterday": "Dün",
        "hub.notifications.lastWeek": "Geçen Hafta",
        "hub.notifications.lastMonth": "Geçen Ay",
        "hub.notifications.older": "Daha Eski",
        "hub.notifications.archived.label": "Arşivlendi",
        "hub.notifications.action.success": "Başarılı!",
        "hub.notifications.action.failure": "Üzgünüz, bu işlem yürütülürken bir hata oluştu gibi görünüyor",
        "hub.notifications.moreDetails": "Daha Fazla Detay",
        "hub.notifications.dialog.action.completed": "Tamamlandı",
        "hub.notifications.dialog.action.needed": "Beklemede",
        "hub.notifications.dialog.action.all.notifications": "Tüm Bildirimler",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "Uygulama ara",
        "hub.apps.favorites": "Sık Kullanılanlar",
        "hub.apps.newApps": "Yeni",
        "hub.apps.recommended": "Önerilen",
        "hub.apps.categories": "Kategoriler",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "Vay canına, burada bir sürü alan var.",
        "hub.apps.no.apps.msg2": "Çalışma uygulamalarını edinmek için yöneticiyle iletişime geçin.",
        "hub.apps.search.in.category": "Kategoride {0} Sonuç:",
        "hub.apps.search.in.app": "Uygulama Adı ve Açıklamada {0} Sonuç",
        "hub.apps.search.header": "Tüm Sonuçlar",
        "hub.apps.search.no.result.header": "Sonuç yok.",
        "hub.apps.search.no.result.msg": "Farklı bir terim kullanarak tekrar deneyin.",
        "hub.apps.searchpeople.no.result.msg": "Farklı bir ad kullanarak tekrar deneyin.",
        "hub.apps.type.web": "Ağ",
        "hub.apps.type.Virtual": "Ağ",
        "hub.apps.type.application": "Uygulama",
        "hub.apps.type.anyApp": "Herhangi Bir Uygulama",
        "hub.people": "Kişiler",
        "hub.people.search.text": "Kişi ara",
        "hub.people.labels.mypeers": "Eşlerim",
        "hub.people.labels.directreports": "Bağlı Çalışanlar",
        "hub.people.labels.manager": "Yöneticim",
        "hub.people.labels.organization": "Kurum",
        "hub.people.search.result": "Sonuçlar",
        "hub.app.install.prompt.title": "Şunu yüklemek istiyor musunuz?",

        "hub.actionsheet.label.viewDetails": "Ayrıntıları Görüntüle",
        "hub.actionsheet.label.removeFavorites": "Sık Kullanılanlardan Kaldır",
        "hub.actionsheet.label.addFavorites": "Sık Kullanılanlara Ekle",
        "hub.password.done": "Bitti",

        "hub.placeholder.changepassword.username": "Kullanıcı Adı",
        "hub.placeholder.changepassword.password": "Parola",
        "hub.placeholder.changepassword.confirmpassword": "Parolayı Onayla",

        "hub.tunnel.text.line1": "Erişmek için Tunnel gerekli ",
        "hub.tunnel.text.line2": "Tunnel uygulaması, uygulamanız ile birlikte otomatik olarak indirilecektir.",

        "hub.promotions.banner.category.title": "Kategoride Öne Çıkanlar",
        "hub.promotions.banner.category.open": "Aç",
        "hub.promotions.banner.app.get": "Al",
        "hub.promotions.banner.disabled": "Yönetici tarafından devre dışı bırakıldı",
        "hub.require.app.management": "Yönetilen",
        "hub.app.installing.alert.mobile.message": "{0} uygulaması yükleniyor, lütfen güncellemeler için telefonunuzun giriş ekranını kontrol edin.",
        "hub.app.installing.alert.desktop.message": "{0} uygulaması yükleniyor, lütfen güncellemeler için masaüstünüzün uygulama başlatıcısını kontrol edin.",

        "hub.nav.label.apps": "Uygulamalar",
        "hub.nav.label.people": "Kişiler",
        "hub.nav.label.notification": "Bildirimler",
        "hub.nav.label.settings": "Ayarlar",
        "hub.nav.label.account": "Hesap",
        "hub.nav.label.signout": "Oturumu Kapat",
        "hub.userInfo.adminConsole": "Yönetim Konsolu",
        "hub.userInfo.signout": "Oturumu Kapat",
        "hub.userInfo.settings": "Ayarlar",
        "hub.userInfo.account": "Hesap",
        "hub.userInfo.devices": "Aygıtlar",
        "hub.userInfo.whatsnew": "Yenilikler",
        "hub.userInfo.about": "Hakkında",
        "hub.download.ios": "iOS İçin Hub",
        "hub.download.android": "Android İçin Hub",
        "hub.download.mac": "Mac İçin Hub",
        "hub.download.windows": "Windows İçin Hub",
        "hub.download.subtitle.mobile": "Tek bir yerden Bildirimlere, Ana Sayfaya ve çok daha fazlasına erişim sağlayın.",
        "hub.download.subtitle.desktop": "Masaüstü bildirimlerini alın ve kendi dokunuzdan hemen başlatın.",
        "hub.preferences.title": "Tercihler",
        "hub.preferences.horizon.subtitle": "Horizon Remote Uygulamaları",
        "hub.preferences.launch.question": "Horizon remote uygulamalarını nasıl başlatmak istersiniz?",
        "hub.about.title": "VMware Intelligent Hub Hakkında",
        "hub.apps.allApps": "Tüm Uygulamalar",
        "hub.apps.configure.favorites.msg": "Daha hızlı erişim için sık kullanılan uygulamalarınızı buraya ekleyin",
        "hub.apps.configure.favorites": "Yapılandır",
        "hub.apps.edit.favorites": "Düzenle",

        "hub.contextDialog.label.removeFavorites": "Sık Kullanılanlardan Kaldır",
        "hub.contextDialog.label.addFavorites": "Sık Kullanılanlara Ekle",
        "hub.contextDialog.label.viewDetails": "Ayrıntıları Görüntüle",
        "hub.apps.edit.favorites.header": "Sık Kullanılanlar Düzenleme Modu",
        "hub.apps.edit.favorites.prompt": "Yeniden sıralamak için sürükleyip bırakın.",
        "hub.apps.edit.favorites.save": "Kaydet",
        "hub.apps.edit.favorites.cancel": "Değişiklikleri İptal Et",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "Sırayı güncellediniz, lütfen çıkmadan önce iptal edin veya kaydedin",
        "hub.apps.edit.favorites.savecustomordering": "Özel sıralama kaydediliyor, sonuçların kaybedilmesini önlemek için lütfen bu sayfadan çıkmayın",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "Dokunmatik ekranlarda yeniden düzenleme kullanılamıyor.",
        "hub.apps.edit.favorites.notify.success": "Sık kullanılanların yeniden sıralanması kaydedildi!",
        "hub.apps.edit.favorites.notify.error": "Bir hata oluştu, yeniden sıralama kaydedilemiyor, daha sonra deneyin",

        "hub.nav.label.settings.settings": "Ayarlar",
        "hub.nav.label.settings.account": "Hesap",
        "hub.nav.label.settings.about": "Hakkında",
        "hub.nav.label.settings.devices": "Aygıtlar",
        "hub.nav.label.settings.preferences": "Tercihler",
        "hub.nav.label.settings.whatsnew": "Yenilikler",

        "hub.apps.detail.back": "Uygulamalara Geri Dön",
        "hub.people.detail.back": "Kişilere Geri Dön",
        "hub.people.notifications.back": "Bildirimlere Geri Dön",

        "hub.nav.label.notifications.filter": "Filtre",
        "hub.nav.label.notifications.all.notifications": "Tüm Bildirimler",
        "hub.nav.label.notifications.action.needed": "Beklemede",
        "hub.nav.label.notifications.completed": "Tamamlandı",
        "hub.long.card.description": "Açıklama",
        "hub.long.card.Comment": "Yorum",
        "hub.long.card.Comment.placeholder": "Yorum ekle",

        "hub.appLaunch.open": "Aç",
        "hub.appLaunch.cancel": "İptal"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "确定",
        "and": "和",
        "fullname": "{1}{0}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "安装",
        "app.banner.open": "打开",
        "app.promotion.banner.donotshowagain": "不再显示。稍后在“设置”-“关于”中获取此信息。",
        "app.promotion.banner.open": "在应用程序中打开",
        "app.promotion.banner.download": "下载应用程序",
        "app.promotion.banner.message": "获得更好的应用程序体验。",
        "horizonDesktopNotDetected": "必须在这台计算机上安装 VMware Identity Manager Desktop 才能打开此应用程序。如果您尚未安装，请<a target='_blank' href='{0}'>安装 VMware Identity Manager Desktop</a>。",
        "viewAppsTooltip": "这款 Horizon 托管的应用程序需要在您的计算机上安装 {0} Horizon Client{1} 3.0 或更高版本。",
        "desktoneDesktopTooltip": "此 Horizon Cloud 桌面需要在您的计算机上安装 {0} Horizon Client {1}。",
        "desktoneApplicationTooltip": "此 Horizon Cloud 应用程序需要在您的计算机上安装 {0} Horizon Client {1}。",
        "xenAppsReceiverNotDetected": "必须在这台计算机上安装 Citrix Receiver 才能打开此应用程序。如果您尚未安装，请<a target='_blank' href='{0}'>安装 Citrix Receiver</a>。",
        "button.save": "保存",
        "button.update": "更新",
        "button.openHorizonView": "打开 Horizon Client",
        "myapps.launch.openApp": "打开 {0}",
        "button.openApp": "打开应用程序",
        "button.clear": "清除",
        "button.close": "关闭",
        "button.cancel": "取消",
        "button.download": "下载",
        "myapps.launch.title.launch": "启动",
        "myapps.launch.title": "启动应用程序",
        "myapps.launch.view.openWith": "打开方式",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "浏览器",
        "myapps.launch.view.preferredClient.isDefault": "(默认)",
        "myapps.launch.view.selectPreferredLaunchClient": "选择您要启动 Horizon 桌面和应用程序的方式",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Horizon 远程应用程序",
        "myapps.launch.view.selectPreferredLaunchClientText": "在 Horizon Client 中打开 Horizon 远程应用程序会为您提供比浏览器更好的使用体验。",
        "myapps.launch.view.selectPreferredLaunchClientText2": "要如何启动 Horizon 远程应用程序?",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "选择启动的默认方式...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "当您从设备上选择打开 Horizon 桌面时，这将决定您的默认启动行为。如果您将 Horizon Client 选为默认方式，则必须安装 Horizon Client。如果您尚未安装，请<a target='_blank' href='{0}'>安装 Horizon Client</a>。",
        "myapps.launch.view.unknownClientType": "打开 Horizon Client 的客户端类型未知。",
        "myapps.launch.view.openWithView": "使用 Horizon Client 打开",
        "myapps.launch.view.openWithBrowser": "使用浏览器打开",

        "myapps.launch.view.preferredClient.byBrowser.description": "通过选择“浏览器”，您的桌面或应用程序将在一个新的浏览器窗口中打开。",
        "myapps.launch.view.preferredClient.byViewClient.description": "此项需要 Horizon Client 3.0 或更高版本。如果您尚未安装，<a target='_blank' href='{0}'>安装 Horizon Client</a>。",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "您始终可以在偏好设置中更改此设置。",
        "myapps.launch.view.preferredClient.saveSuccess": "已成功保存所选的偏好设置。",
        "myapps.launch.msg.launching.desktop": "正在启动桌面 <b>{0}</b>...",
        "myapps.launch.msg.launching.application": "正在启动应用程序 <b>{0}</b>...",
        "myapps.noAppsMsg": "您尚未添加任何应用程序。您可以导航到 {0} 添加应用程序",
        "myapps.noFavAppsMsg": "您尚未将任何应用程序加入书签",
        "myapps.welcomeMsg": "您好，{0}。这是您的应用程序!",
        "myapps.bookmarks.empty.message": "将常用应用程序加入书签以便快速访问。",
        "myapps.bookmarks.empty.hidecatalog.message": "目前您没有可供使用的应用程序。",
        "myapps.bookmarks.empty.addbookmarks": "添加书签",
        "myapps.bookmarks.organize.title": "组织书签",
        "myapps.bookmarks.organize.addbookmarks": "添加书签",
        "myapps.bookmarks.organize.batchremove": "移除",

        "myapps.mobilepagetitle.apps": "应用程序",
        "myapps.mobilepagetitle.details": "详细信息",
        "myapps.mobilepagetitle.support": "支持",
        "myapps.mobilepagetitle.settings": "设置",
        "myapps.mobilepagetitle.recommendedapps": "推荐使用",
        "myapps.mobilepagetitle.notification": "通知",
        "myapps.mobilepagetitle.archived": "已存档",
        "myapps.mobilepagetitle.notification.newapps": "新应用程序",

        "myapps.dialog.openApp": "打开",
        "myapps.dialog.openAppWithViewClient": "在 Client 中打开",
        "myapps.dialog.openAppWithBrowser": "在浏览器中打开",

        "myapps.launch.passwordvault.installExtension.description": "此应用程序可以利用 Password Vault 浏览器扩展程序。如果您尚未安装，请<a target='_blank' href='{0}'>安装该扩展程序</a>。",

        "deviceStatus.networkLost": "连接断开。正在尝试重新连接...",
        "deviceStatus.networkRestored": "网络连接已恢复",
        "api.session.expired.retry": "会话已过期，正在尝试续订...",
        "api.entitlements.reload": "正在刷新您的视图以更新您目录中的应用程序。",
        "api.security.header.invalid.relogin": "安全标头验证失败，正在注销...",
        "api.server.load.error": "我们遇到了高于正常负载的情况。请稍后重试。",
        "api.updateApps": "正在更新列表...",
        "api.error": "发生错误。请重试。",
        "installation.error": "本机应用程序暂时不可用",
        "service.under.maintenance.error": "Workspace ONE 暂时处于维护模式。您可以启动您的应用，但可能无法使用某些功能",
        "api.timeout": "连接超时，请重试",
        "favoriteStatus.favorite": "收藏",
        "favoriteStatus.unfavorite": "取消收藏",
        "favoriteStatus.offlineFavoriteMessage": "离线时无法将应用程序加入书签，请重新连接，然后重试",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "离线时无法从应用程序中移除书签，请重新连接，然后重试",
        "error.failToFavoriteApp": "无法更新书签状态",
        "error.failedToResetApp": "无法重置应用程序",
        "error.failToHideApp": "无法移除应用程序",
        "error.failToShowApp": "无法向启动程序添加应用程序",
        "error.failedToBookmarkApp": "无法将应用程序加入书签",
        "error.failedToLaunchApp": "无法打开应用程序",
        "error.failedToRemoveAccount": "无法移除帐户，请稍后重试",
        "installStatus.enrollDevice": "需要激活 Workspace Services 才能使用 {0} 保护企业数据。",
        "installStatus.enrollDevice.learnMore": "了解更多",
        "installStatus.offlineInstallMessage": "离线时无法发出安装请求，请重新连接，然后重试",
        "installStatus.activated": "激活",
        "installStatus.notActivated": "未激活",
        "installStatus.request": "请求",
        "installStatus.update": "更新",
        "installStatus.processing": "正在处理",
        "installStatus.installFailedMessage": "安装应用程序 {0} 时发生错误。请重试。如果此问题仍然存在，请联系 IT 管理员",
        "installStatus.unenrolledDevice": "此应用程序不再可用。请按“确定”更新列表。",
        "installMessage.continueInstall": "您之前曾尝试安装此应用程序。",
        "installMessage.proceedToInstall": "单击以继续。",
        "installMessage.installingOnDevice": "正在设备上安装...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "启用 Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "需要完成此项才能安装应用程序。您将自动获取:",
        "app.adaptivemanagement.valueproposition1": "所有企业资源的直接安装。",
        "app.adaptivemanagement.valueproposition2": "安全的企业网络访问。",
        "app.adaptivemanagement.valueproposition3": "您所有设备上同步的应用程序和内容。",
        "app.adaptivemanagement.valueproposition4": "可提高工作效率的增强应用程序体验。",
        "app.adaptivemanagement.privacylink": "您的隐私",

        "app.tunnel.continue": "继续",
        "app.tunnel.text.line1": "需要 VMware Tunnel 应用程序以进行访问",
        "app.tunnel.text.line2": "Tunnel 应用程序将随您的应用程序一同自动下载。",
        "app.tunnel.header": "需要 VMware Tunnel",
        "app.tunnel.message": "要使用此应用程序，VMware Tunnel 必须已安装且正在运行。",
        "recommendedApps.tunnel.text.line1": "需要 VMware Tunnel 应用程序以进行访问",
        "recommendedApps.tunnel.text.line2": "Tunnel 应用程序将随您的应用程序一同自动下载。",
        "app.tunnel.installHelpText": "如果应用程序没有自动开始安装，请按照以下步骤启用应用程序",
        "app.tunnel.installStep1": "步骤 1: 安装 {0} 应用程序",
        "app.tunnel.installStep2": "步骤 2: 安装 {0} 应用程序",

        "requestFailed": "请求失败",
        "changeOccurred": "发生更改",
        "requestSuccessful": "请求成功",
        "accept": "接受",
        "decline": "拒绝",
        "termsOfUse": "使用条款",
        "beforeInstallation": "安装前",
        "resetDesktopStatus.offlineMessage": "离线时无法重置桌面，请重新连接并重试",
        "resetDesktop.sucess": "重置桌面成功",
        "appCenter.someAppsMissingMessage": "所有应用程序此时均无法加载",
        "appCenter.register.device": "有关您设备的部分信息需要更新。请更新以继续使用 Workspace ONE。",
        "appCenter.mdm.device.error": "您今后无权再访问 Workspace ONE。",
        "appCenter.mdm.device.error.contact": "有关您帐户的详细信息，请联系您的管理员。",
        "appCenter.mdm.device.poll.error": "此时无法完成工作区的构建，请重试或联系您的管理员。",
        "appCenter.device.status.notRegistered": "设备尚未注册",
        "appCenter.device.status.blackListed": "此设备已被列入黑名单",
        "appCenter.device.status.deviceInputError": "此设备无效! 请联系您的 IT 管理员",
        "appCenter.device.status.unknownError": "出现未知错误",

        "appCenter.device.register": "注册设备",
        "appCenter.device.moreDetails": "更多详细信息",
        "appCenter.device.unEnrollWarningTitle": "移除帐户?",
        "appCenter.device.mdmUnEnrollMessage": "移除帐户后，您将无法访问公司资源，并且此设备上的工作应用程序也可能会被移除。",
        "appCenter.device.getDeviceEnrollmentStatus": "正在获取其他信息",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "您确定要继续吗?",
        "appCenter.device.remove": "移除",
        "appCenter.device.keep": "保留",
        "appCenter.device.disableWorkspaceMessage": "移除您的帐户将会撤销通过 Workspace ONE 应用程序授予的访问权限。下载到 Springboard 的应用程序仍会安装，但可能无法访问。您要继续吗?",
        "appCenter.noAppsMsg": "目前没有应用程序可用",
        "appCenter.vppInviteTitle": "受管分发注册",
        "appCenter.appInstallConfirmPromptTitle": "确认安装",
        "appCenter.mdmAppRequestConfirmPromptTitle": "需要批准",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "您的请求之前已被拒绝",
        "appCenter.mdmAppRequestConfirmPromptMessage": "您正在尝试访问的应用程序需要获得您的管理员的批准",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "您之前请求过此应用程序，但被拒绝了，您确定要重新请求吗",
        "appCenter.acceptInvite": "接受邀请",
        "appCenter.install": "安装",
        "appCenter.proceed": "启用 Workspace Services",
        "appCenter.cancel": "取消",
        "appCenter.confirm": "确认",
        "appCenter.searchApps": "搜索应用程序。",
        "appCenter.welcomeMsg": "随时随地在任何设备上安装新应用程序!",
        "appCenter.done": "完成",
        "appCenter.nav.privacyPage": "“隐私”页面",
        "appCenter.nav.catalog": "目录",
        "appCenter.nav.myApps": "我的应用程序",
        "appCenter.nav.favorites": "收藏夹",
        "appCenter.nav.categories": "类别",
        "appCenter.nav.filterby": "过滤方式",
        "appCenter.nav.show": "显示",
        "appCenter.nav.settings": "设置",
        "appCenter.nav.sortBy": "排序方式",
        "appCenter.nav.sortBy.alpha": "按升序排序",
        "appCenter.nav.sortBy.inverseAlpha": "按降序排序",
        "appCenter.nav.sortBy.customView": "自定义视图",
        "appCenter.nav.arrange": "排列",
        "appCenter.nav.arrange.saved": "自定义视图已保存!",
        "appCenter.nav.arrange.tooltip": "仅在 Windows 上可用。",
        "appCenter.nav.arrange.saving": "正在保存...",
        "appCenter.nav.arrange.error": "无法保存自定义视图",
        "appCenter.nav.filter": "筛选器",
        "appCenter.installFailedTitle": "应用程序安装问题",
        "appCenter.uccConflict": "当前会话出现问题，请重新登录。",

        "appCenter.search.placeholder": "搜索",
        "appCenter.search.noResults": "未找到结果。",

        "appCenter.action.open": "打开",
        "appCenter.action.install": "安装",
        "appCenter.action.installing": "正在安装",
        "appCenter.action.installed": "已安装",
        "appCenter.action.reinstall": "重新安装",
        "appCenter.action.add": "添加",
        "appCenter.action.added": "已添加",
        "appCenter.action.processing": "正在处理",
        "appCenter.action.update": "更新",
        "appCenter.action.request": "请求",
        "appCenter.action.pending": "待确定",
        "appCenter.action.view": "查看",
        "appCenter.action.favorite": "收藏",
        "appCenter.action.unfavorite": "取消收藏",

        "appCenter.internalApp.installtionModalTitle": "应用程序安装步骤",
        "appCenter.internalApp.installationStepTitle": "要打开此应用程序，请在安装后执行以下步骤",
        "appCenter.internalApp.step1": "从 iOS 主屏幕启动设置",
        "appCenter.internalApp.step2": "轻按“通用”",
        "appCenter.internalApp.step3": "轻按“配置文件和设备管理”",
        "appCenter.internalApp.step4": "轻按“企业应用程序”下的应用程序开发人员姓名",
        "appCenter.internalApp.step5": "验证或信任应用程序",
        "appCenter.internalApp.watchTutorial": "观看分步教程",

        "appCenter.type.web": "网站",
        "appCenter.type.native": "本机应用程序",
        "appCenter.type.native.platform": "{0} 应用程序",
        "appCenter.type.virtual": "虚拟应用程序",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "应用程序软件包",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "类别",
        "myapp.nav.favorites": "收藏夹",
        "myapp.nav.allApps": "所有应用程序",
        "myapp.nav.recommendedApps": "推荐",
        "myapp.nav.newlyEntitledApps": "新建",
        "myapp.nav.webApps": "网站",
        "myapp.nav.mobileApps": "移动应用程序",
        "myapp.nav.macApps": "Mac 应用程序",
        "myapp.nav.windowsApps": "Windows 应用程序",
        "myapp.nav.virtualApps": "虚拟",
        "myapp.label.new": "新建",
        "myapp.nav.filterby": "过滤方式",
        "myapp.nav.mobile.filter.pagetitle": "按类别过滤",
        "appCenter.nav.browseBy": "浏览方式",

        "appCenter.catalog.empty": "似乎仍未向您分配任何应用程序。应当很快会分配，因此请稍后检查。",

        "userInfo.adminConsole": "管理控制台",
        "userInfo.settings": "设置",
        "userInfo.notifications": "通知",
        "userInfo.support": "支持",
        "userInfo.preferences": "偏好设置",
        "userInfo.about": "关于",
        "userInfo.devices": "设备",
        "userInfo.settings.promo.title": "下载 Workspace ONE 应用程序",
        "userInfo.settings.promo.message": "Workspace ONE 将为您提供更好的应用程序体验。立即试用?",

        "userInfo.tips": "应用程序提示",
        "userInfo.tips.description": "获取关于如何使用应用程序的帮助。",

        "userInfo.tips.bookmarks": "如何使用书签?",
        "userInfo.tips.catalog": "如何使用目录?",
        "userInfo.tips.people": "新增功能: 如何使用人员?",
        "userInfo.tips.notification": "新增功能: 如何使用通知?",

        "userInfo.tips.catalog.desktop1": "单击“打开”，在浏览器中启动一个网站，使用 {0} 将该网站加入书签。",
        "userInfo.tips.catalog.desktop2": "单击应用程序图标或名称以了解更多详细信息。",
        "userInfo.tips.catalog.mobile1": "使用 {0}，在浏览器中打开一个网站，使用 {1} 将该网站加入书签。",
        "userInfo.tips.catalog.mobile2": "使用 {0} 将本机应用程序安装到您的设备上。{1} 表示您需要注册设备才能使用这些应用程序。",
        "userInfo.tips.catalog.mobile3": "轻按应用程序图标或名称以了解更多详细信息。",

        "userInfo.tips.bookmarks.desktop1": "单击该磁贴，在浏览器中启动网站。",
        "userInfo.tips.bookmarks.desktop2": "将鼠标悬停在磁贴上可查看来自“...”菜单的更多操作。",

        "userInfo.tips.bookmarks.mobile": "轻按该磁贴，在浏览器中启动一个网站。长按可获得更多操作。",

        "userInfo.tips.catalog.download.phone": "轻按 {0} 图标，将本机应用程序安装到您的设备上。{1} 图标表示您需要注册设备才能使用这些应用程序。",
        "userInfo.tips.catalog.bookmark.launch.phone": "轻按 {0} 图标，在浏览器中打开一个网站。轻按 {1} 图标将该网站加入书签。轻按应用程序图标或名称以获得更多详细信息",

        "userInfo.tips.catalog.download.tablet": "通过单击“下载”按钮下载应用程序，只需单击应用程序即可获得更多详细信息",
        "userInfo.tips.catalog.bookmark.launch.tablet": "通过单击“启动”按钮启动应用程序，通过单击“书签”按钮将应用程序加入书签",

        "userInfo.tips.people.mobile": "单击 {0} 从任何配置文件导航回到主要人员搜索登录页面。",
        "userInfo.tips.notification.mobile": "单击 {0} 访问您的通知。在您解除或处理所有通知之前，通知标志将保持活动状态。",

        "userInfo.tips.title": "应用程序提示",
        "userInfo.tips.intro": "获取关于如何使用应用程序的帮助。",
        "userInfo.tips.desktop": "桌面",
        "userInfo.tips.reordering.title": "自定义您的书签!",
        "userInfo.tips.reordering.text1": "1. 使用右上方的下拉菜单转至“自定义视图”。",
        "userInfo.tips.reordering.text2": "2. 选择“排列”。",
        "userInfo.tips.reordering.text3": "3. 通过拖放来重新排列您的书签。完成后，单击“保存”。",
        "userInfo.tips.mobile": "移动设备",

        "userInfo.removeAccount": "移除帐户",
        "userInfo.account": "帐户",
        "userInfo.profile": "配置文件",
        "userInfo.profile.name": "名称：",
        "userInfo.profile.email": "电子邮件:",
        "userInfo.profile.username": "用户名：",
        "userInfo.profile.picture": "配置文件图片",
        "userInfo.profile.password": "密码",
        "userInfo.profile.passwordchange": "更改",
        "userInfo.profile.passwordprompt": "管理您的公司系统密码。",
        "userInfo.password": "密码",
        "userInfo.termsofuse": "使用条款",
        "userInfo.signout": "注销",
        "userInfo.tryAgain": "重试",
        "userInfo.managedevicesettings": "管理设备设置",
        "userInfo.notification": "推送通知",
        "userInfo.passcode": "Touch ID 或密码",

        "appCenter.support.selfservice": "自助服务",
        "appCenter.support.managedevices": "设备",
        "appCenter.support.managedevicestext": "查看设备信息。",
        "appCenter.support.managepassword": "更改密码",
        "appCenter.support.managepasswordtext": "更改您的公司帐户密码",
        "appCenter.support.gethelp": "获取帮助",
        "appCenter.support.appstips": "应用程序和提示",
        "appCenter.support.appstipstext": "在此应用程序中查看帮助工具提示",
        "appCenter.support.sendReportTitle": "发送报告",
        "appCenter.support.sendReportDetails": "了解如何发送应用程序诊断信息。",
        "appCenter.support.helpdesk": "帮助台",
        "appCenter.support.contacthelpdesk": "联系帮助台",
        "appCenter.reportProblems.ios.sendLogInstruction": "发生错误时，请晃动设备以便轻松发送应用程序诊断信息或提供反馈。",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "您可以在设备设置中打开/关闭此功能。",

        // App Details Page
        "app.details.link.back": "返回",
        "app.details.nav.details": "详细信息",
        "app.details.nav.reviews": "评论",
        "app.details.label.description": "描述",
        "app.details.label.noDescription": "无可用描述",
        "app.details.label.seeFullDetails": "查看详细信息",
        "app.details.label.removeBookmark": "移除",
        "app.details.label.resetDektop": "重置",
        "app.details.label.information": "信息",
        "app.details.label.category": "类别",
        "app.details.label.version": "版本",
        "app.details.label.type": "类型",
        "app.details.label.type.SAML11": "Web 应用程序",
        "app.details.label.type.SAML20": "Web 应用程序",
        "app.details.label.type.WEBAPPLINK": "Web 应用程序",
        "app.details.label.type.MDMWEB": "Web 应用程序",
        "app.details.label.type.WSFED12": "Web 应用程序",
        "app.details.label.type.XENAPP": "Xen 应用程序",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix Desktop",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "配置文件",
        "app.details.label.type.VIEWPOOL": "Horizon 桌面",
        "app.details.label.type.VIEWAPP": "Horizon 应用程序",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud 桌面",
        "app.details.label.type.DESKTONEAPPLICATION": "Horizon Cloud 应用程序",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Web 应用程序",
        "app.details.label.type.PUBLIC": "公共应用程序",
        "app.details.label.type.INTERNAL": "内部",
        "app.details.label.size": "大小",
        "app.details.label.price": "价格",
        "app.details.label.screenshots": "屏幕截图",
        "app.details.label.showMore": "显示更多",
        "app.details.label.showLess": "显示更少",
        "app.details.label.setAppPassword": "设置应用程序密码",
        "app.details.label.sendFeedback": "发送反馈",
        "app.details.label.feedbackSubject": "应用程序 {0} 的反馈",
        "app.details.label.support": "支持",
        "app.details.label.developer": "开发人员",
        "app.details.label.email": "电子邮件",
        "app.details.label.phone": "电话",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "可以从主屏幕启动所有移动应用程序。",

        "app.details.label.requirement": "要求:",
        "app.details.label.packageName": "软件包名称:",
        "app.details.thinapp.requirement": "此应用程序仅在安装了 Identity Manager Desktop 的 Windows 计算机上运行。",
        "app.details.viewDesktop.requirement": "此 Horizon 桌面需要在您的计算机上安装 {0} Horizon Client{1} 3.0 或更高版本。",
        "app.details.viewapp.requirement": "这款 Horizon 托管的应用程序需要在您的计算机上安装 {0} Horizon Client{1} 3.0 或更高版本。",
        "app.details.xenapp.requirement": "此应用程序需要安装 {0} Citrix Receiver {1}。",
        "app.details.xenapp.msg.IE8OrLower": "此应用程序需要安装 Citrix Receiver。注: 此应用程序无法在 Internet Explorer 8 中打开。",
        "app.details.xenappsDeliveryGroup.requirement": "此 Citrix 桌面需要安装 {0} Citrix Receiver {1}。",
        "app.details.desktoneDesktop.requirement": "此 Horizon Cloud 桌面需要在您的计算机上安装 {0} Horizon Client {1}。",
        "app.details.desktoneApp.requirement": "此 Horizon Cloud 应用程序需要在您的计算机上安装 {0} Horizon Client {1}。",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "无可用信息",
        "app.details.noScreenshots": "无可用屏幕截图",
        "app.details.noDescription": "即将推出描述。",
        "app.details.needsDeviceEnrollment": "需要注册设备",
        "app.details.label.addToHomeScreen": "添加到主屏幕",
        "app.details.action.open": "打开",
        "app.details.action.bookmark": "书签",
        "app.details.action.bookmarked": "已加入书签",
        "app.details.action.launch": "启动",
        "app.details.action.setPassword": "设置密码",
        "app.details.action.pvAppCredentials": "凭证",
        "app.details.info.msg.missingInfo": "缺少部分信息。请稍后重试以查看完整详细信息。",
        "app.details.wsrequired.msg": "需要使用 Workspace Services。",
        "app.details.label.addedFavorites": "已添加到收藏夹",

        "app.rating.label": "用户评级",

        "app.settings.label.settings": "设置",
        "app.settings.link.back": "返回",
        "app.settings.managedDevices": "受管设备",
        "app.nav.tab.bookmark": "书签",
        "app.nav.tab.catalog": "目录",
        "app.nav.tab.people": "人员",
        "app.nav.tab.support": "支持",
        "app.nav.tab.apps": "应用程序",
        "app.nav.tab.settings": "设置",
        "app.about.heading": "关于 Workspace ONE",
        "app.about.copyright": "版权所有 ©2013-2019 VMware, Inc. 保留所有权利。此产品受美国及其他国家或地区的版权法和知识产权法及国际条约的保护。VMware 产品获得一项或多项专利。",
        "app.about.button.label.privacyPolicy": "隐私策略",
        "app.about.button.label.patents": "专利",
        "app.about.button.label.licenseAgreement": "许可协议",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-cn",
        "app.about.licenseAgreementLink": "http://www.vmware.com/cn/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/cn/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "设备",
        "app.devices.tableColumn.deviceName": "设备名称",
        "app.devices.tableColumn.userDeviceId": "设备 ID",
        "app.devices.tableColumn.lastLoginTime": "上次登录时间",
        "app.devices.unlinkDevice": "取消链接",
        "app.devices.unlinkedDevice": "未链接",
        "app.devices.emptyDeviceListMessage": "您没有与帐户关联的设备。",

        "app.thinappMultiDeviceAct.heading": "此应用程序将会添加到已批准的设备。要在其他设备上使用“{0}”，请在下方找到设备名称，然后单击“请求”按钮。",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "设备名称",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "状态",
        "app.thinappMultiDeviceAct.button.request": "请求",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "已拒绝",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "待确定",
        "app.thinappMultiDeviceAct.activationState.activated": "已批准",
        "app.thinappMultiDeviceAct.activationState.notActivated": "未激活",

        "app.thinappsInPackage.button.done": "完成",
        "app.thinappsInPackage.button.bookmarkAll": "全部加入书签",
        "app.thinappsInPackage.info": "应用程序软件包",
        "app.thinappsInPackage.noOfAppsInPackage": "{0}应用程序",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "已找到 {0} 个匹配项。",
        "app.thinappsInPackage.action.instruction": "选择“书签”图标将单个应用程序加入书签，或选择相应按钮将所有应用程序加入书签。",
        "app.thinappsInPackage.search.placeholder": "在软件包中搜索",

        "app.setAppPassword.heading": "设置密码",
        "app.setAppPassword.instruction": "使用以下表单为此应用程序设置一个密码。密码的长度至少是三个字符。",
        "app.setAppPassword.label.password": "密码",
        "app.setAppPassword.label.confirmPassword": "确认密码",
        "app.setAppPassword.label.generate": "生成密码",
        "app.setAppPassword.error.passwordsNoMatch": "密码不匹配。",
        "app.setAppPassword.msg.success": "您已成功设置应用程序密码。",
        "app.setAppPassword.msg.fail": "尝试设置密码时出错。请重试。",

        "pvapp.setAppPassword.heading": "为 {0} 设置已保存的凭证",
        "pvapp.setAppPassword.instruction": "使用以下表单为此应用程序设置已保存的凭证。",
        "pvapp.setAppPassword.label.username": "用户名",
        "pvapp.setAppPassword.label.password": "密码",
        "pvapp.setAppPassword.error.userNameEmpty": "“用户名”为空白。",
        "pvapp.setAppPassword.error.passwordEmpty": "“密码”为空白。",
        "pvapp.setAppPassword.msg.success": "您已成功设置应用程序凭证。",
        "pvapp.setAppPassword.msg.fail": "尝试设置应用程序凭证时出错。请重试。",

        "app.launchPassword.heading": "密码请求",
        "app.launchPassword.view.instruction": "我们需要您的密码才能登录此 Windows 资源 {0}。",
        "app.launchPassword.label.userName": "用户",
        "app.launchPassword.label.password": "密码",
        "app.launchPassword.button.label.signin": "登录",

        "app.changePassword.title": "更改密码",
        "app.changePassword.enterCurrentPassword": "输入当前密码",
        "app.changePassword.enterNewPassword": "输入新密码",
        "app.changePassword.confirmNewPassword": "确认新密码",
        "app.changePassword.error.passwordsNoMatch": "新密码不匹配。",
        "app.changePassword.error.requirementsNoMatch": "新密码不符合要求。",
        "app.changePassword.success": "已保存新密码!",
        "app.changePassword.label.email": "电子邮件",
        "app.changePassword.label.phone": "电话",

        "app.passwordPolicy.passwordRequirements": "密码要求",
        "app.passwordPolicy.label.currentpassword": "当前密码",
        "app.passwordPolicy.label.newpassword": "新密码",
        "app.passwordPolicy.label.confirmpassword": "确认新密码",
        "app.passwordPolicy.minLength": "最少 {0} 位",
        "app.passwordPolicy.leastIncludes": "至少包含:",
        "app.passwordPolicy.minLower": "{0} 个字母",
        "app.passwordPolicy.minUpper": "{0} 个大写字母",
        "app.passwordPolicy.minDigit": "{0} 个数字",
        "app.passwordPolicy.minSpecial": "{0} 个特殊字符",

        "app.coachmarks.bookmarkTitle": "如何使用书签",
        "app.coachmarks.bookmarkMessage": "轻按以启动网站，长按以发现更多内容。",
        "app.coachmarks.catalogTitle": "如何使用目录",
        "app.coachmarks.catalogMessage": "安装或更新应用程序，添加到书签或从此处直接打开。",
        "app.coachmarks.buttonText": "知道了!",

        "app.logout.confirm.msg": "从 Workspace ONE 注销将结束您当前的会话。凡已从目录下载的应用程序均会保留在设备上，但在您重新登录前不会有新的可用应用程序。",
        "app.logout.title": "警告",

        "app.passwordVault.banner.msg": "您的应用程序可以利用 Workspace ONE 扩展程序。",
        "app.passwordVault.banner.button.install": "安装",
        "app.passwordVault.banner.setPreference": "稍后可在“设置 - 偏好设置”中获取该扩展程序。",
        "app.passwordVault.banner.donotshowagain": "不再显示",
        "app.passwordVault.banner.button.later": "稍后",
        "app.passwordVault.banner.button.get": "获取",
        "app.passwordVault.preference.title": "Workspace ONE 扩展程序",
        "app.passwordVault.preference.instruction": "您的应用程序可以利用 Workspace ONE 扩展程序。",
        "app.passwordVault.preference.getextension": "获取该扩展程序。",
        "app.bookmarking.change.tab.title": "您仍要排列书签吗?",
        "app.bookmarking.change.tab.body": "将不会保存您所做的更改。您仍要排列书签吗?",
        "app.bookmarking.touch.disabled": "您可以使用触控板或鼠标重新排列应用程序。",
        "app.bookmarking.change.tab.exit": "不，退出",
        "app.bookmarking.change.tab.stay": "是，留在此页",
        "app.virtual.disabled": "已被管理员禁用",
        "app.virtual.unavailable": "该应用程序在此设备上不可用",
        "app.virtual.not.available": "不可用",

        "app.notification.type.NEW_ENTITLEMENTS": "将其签出",
        "app.notification.type.PASSWORD_EXPIRING": "更新密码",
        "app.notification.action.delete": "删除",
        "notification.new.entitlements.heading": "新授权",
        "notification.new.entitlements.message": "向您分配了 {0} 个新授权",
        "app.notification.delete.header": "删除此通知?",
        "app.notification.delete.msg": "您确定要删除此通知吗? 如果要稍后存档，可以选择“存档”。",
        "app.notification.delete.text": "删除",
        "app.notification.keep.text": "保留",
        "app.notification.restore.text": "还原",
        "app.notification.delete.toast.msg": "通知已删除。",
        "app.notification.empty": "您已完成了所有任务!",
        "app.notification.more.actions": "更多操作",
        "app.notification.archive.all": "全部存档",

        "app.notification.bookmark.all.error": "抱歉，我们无法将您的所有新应用程序都加入书签",
        "app.notification.bookmark.all.success": "所有新应用程序均已添加到收藏夹",
        "app.notification.delete.all": "全部删除",
        "app.notification.see.archived": "查看已存档",
        "app.notification.see.all": "查看所有通知",
        "app.notification.newApps.title": "您获得了新应用程序!",
        "app.notification.newApps.excessIconsMessage": "另外 {0} 个",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "查看详细信息",
        "app.tooltip.clicktolaunch": "单击以启动",

        "recommendedApps.install.proceed": "继续",
        "recommendedApps.install.title": "安装推荐的应用程序",
        "recommendedApps.install.confirm.msg": "系统将提示您继续安装应用程序。",
        "recommendedApps.text1": "这些应用程序是您同事常用的应用程序。",
        "recommendedApps.text2": "您可以立即安装它们，或者稍后在目录中查找它们。",
        "recommendedApps.selectAll": "全选",
        "recommendedApps.apps": "应用程序",
        "recommendedApps.install": "安装",
        "recommendedApps.skip": "跳过",

        "app.desktopapp.settings.title.account": "帐户",
        "app.desktopapp.settings.title.devices": "设备",
        "app.desktopapp.settings.title.preferences": "偏好设置",

        "appCenter.peopleSearch.placeholder": "搜索人员",
        "app.tooltip.copyEmail": "复制电子邮件",
        "app.peopleSearch.emailCopied": "电子邮件已复制",
        "appCenter.peopleSearch.noResults": "未找到结果",
        "appCenter.peopleSearch.tryNewSearch": "尝试进行新搜索。",
        "appCenter.peopleSearch.atLeastThreeChars": "在上方输入 3 个或更多字符进行搜索。",
        "appCenter.searchPeople": "搜索人员。",
        "myapps.mobilepagetitle.people": "人员",
        "app.people.labels.team": "我的小组",
        "app.people.labels.recent": "最近使用",
        "app.people.labels.manager": "经理",
        "app.people.labels.peers": "同事",
        "app.people.labels.directReports": "直接下属",
        "app.people.labels.profile": "配置文件",
        "app.people.labels.org": "组织",
        "app.people.labels.workEmail": "工作电子邮件",
        "app.people.labels.workPhone": "工作电话",
        "app.people.labels.alternateNumber": "备用电话",
        "app.people.labels.mobile": "手机",
        "app.people.labels.address": "地址",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "经理",
        "app.people.labels.skypeForBusiness": "Skype for Business",
        "app.people.labels.employeeNumber": "员工编号",
        "app.people.labels.skills": "技能",
        "app.people.labels.businessUnit": "业务单位",
        "app.people.labels.costCenter": "成本中心",
        "app.people.labels.physicalDeliveryOfficeName": "办公地点",

        "hub.apps": "应用程序",
        "hub.notifications": "通知",
        "hub.notifications.welcome": "欢迎使用!",
        "hub.notifications.first.time.message": "您开始使用 Hub 后，通知将显示在此处。",
        "hub.notifications.new.apps.favorite.all": "全部收藏",
        "hub.notifications.congratulations": "祝贺您!",
        "hub.notifications.empty.description1": "无新通知。",
        "hub.notifications.empty.description2": "请尽情享受额外的空间吧!",
        "hub.v2.notifications.empty.description": "您已阅读所有通知",
        "hub.v2.notifications.first.time.description": "您开始使用 Hub 后，通知将显示在此处。",
        "hub.notifications.empty.description.archived": "无已存档的通知。",
        "hub.notifications.priority": "优先级",
        "hub.notifications.today": "今天",
        "hub.notifications.yesterday": "昨天",
        "hub.notifications.lastWeek": "上周",
        "hub.notifications.lastMonth": "上个月",
        "hub.notifications.older": "更早",
        "hub.notifications.archived.label": "已存档",
        "hub.notifications.action.success": "成功!",
        "hub.notifications.action.failure": "抱歉，似乎在执行该操作时出错",
        "hub.notifications.moreDetails": "更多详细信息",
        "hub.notifications.dialog.action.completed": "已完成",
        "hub.notifications.dialog.action.needed": "待确定",
        "hub.notifications.dialog.action.all.notifications": "所有通知",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "搜索应用程序",
        "hub.apps.favorites": "收藏夹",
        "hub.apps.newApps": "新建",
        "hub.apps.recommended": "推荐",
        "hub.apps.categories": "类别",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "喔，这里有很大的空间。",
        "hub.apps.no.apps.msg2": "请联系管理员以获取工作应用程序。",
        "hub.apps.search.in.category": "{0} 个类别结果:",
        "hub.apps.search.in.app": "{0} 个应用程序名称和描述结果",
        "hub.apps.search.header": "总结果数",
        "hub.apps.search.no.result.header": "无结果。",
        "hub.apps.search.no.result.msg": "请使用其他搜索词再试一次。",
        "hub.apps.searchpeople.no.result.msg": "请使用其他名称再试一次。",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "应用程序",
        "hub.apps.type.anyApp": "任意应用程序",
        "hub.people": "人员",
        "hub.people.search.text": "搜索人员",
        "hub.people.labels.mypeers": "我的同事",
        "hub.people.labels.directreports": "直接下属",
        "hub.people.labels.manager": "我的经理",
        "hub.people.labels.organization": "组织",
        "hub.people.search.result": "结果",
        "hub.app.install.prompt.title": "是否安装",

        "hub.actionsheet.label.viewDetails": "查看详细信息",
        "hub.actionsheet.label.removeFavorites": "从收藏夹中移除",
        "hub.actionsheet.label.addFavorites": "添加到收藏夹",
        "hub.password.done": "完成",

        "hub.placeholder.changepassword.username": "用户名",
        "hub.placeholder.changepassword.password": "密码",
        "hub.placeholder.changepassword.confirmpassword": "确认密码",

        "hub.tunnel.text.line1": "需要 Tunnel 才能访问",
        "hub.tunnel.text.line2": "Tunnel 应用程序将随您的应用程序一同自动下载。",

        "hub.promotions.banner.category.title": "类别亮点",
        "hub.promotions.banner.category.open": "打开",
        "hub.promotions.banner.app.get": "获取",
        "hub.promotions.banner.disabled": "已被管理员禁用",
        "hub.require.app.management": "受管",
        "hub.app.installing.alert.mobile.message": "正在安装应用程序 {0}，请查看您手机主屏幕以了解相关更新。",
        "hub.app.installing.alert.desktop.message": "正在安装应用程序 {0}，请查看您桌面的应用程序启动程序以了解相关更新。",

        "hub.nav.label.apps": "应用程序",
        "hub.nav.label.people": "人员",
        "hub.nav.label.notification": "通知",
        "hub.nav.label.settings": "设置",
        "hub.nav.label.account": "帐户",
        "hub.nav.label.signout": "注销",
        "hub.userInfo.adminConsole": "管理控制台",
        "hub.userInfo.signout": "注销",
        "hub.userInfo.settings": "设置",
        "hub.userInfo.account": "帐户",
        "hub.userInfo.devices": "设备",
        "hub.userInfo.whatsnew": "新增功能",
        "hub.userInfo.about": "功能简介",
        "hub.download.ios": "适用于 iOS 的 Hub",
        "hub.download.android": "适用于 Android 的 Hub",
        "hub.download.mac": "适用于 Mac 的 Hub",
        "hub.download.windows": "适用于 Windows 的 Hub",
        "hub.download.subtitle.mobile": "在一个位置访问通知、主页和更多功能。",
        "hub.download.subtitle.desktop": "从您的 Dock 中获取桌面通知并启动。",
        "hub.preferences.title": "偏好设置",
        "hub.preferences.horizon.subtitle": "Horizon 远程应用程序",
        "hub.preferences.launch.question": "要如何启动 Horizon 远程应用程序?",
        "hub.about.title": "关于 VMware Intelligent Hub",
        "hub.apps.allApps": "所有应用程序",
        "hub.apps.configure.favorites.msg": "在此处添加您的收藏应用程序以快速访问",
        "hub.apps.configure.favorites": "配置",
        "hub.apps.edit.favorites": "编辑",

        "hub.contextDialog.label.removeFavorites": "从收藏夹中移除",
        "hub.contextDialog.label.addFavorites": "添加到收藏夹",
        "hub.contextDialog.label.viewDetails": "查看详细信息",
        "hub.apps.edit.favorites.header": "收藏夹编辑模式",
        "hub.apps.edit.favorites.prompt": "拖放以重新排序。",
        "hub.apps.edit.favorites.save": "保存",
        "hub.apps.edit.favorites.cancel": "取消更改",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "您已更新顺序，请先取消或保存，然后再退出",
        "hub.apps.edit.favorites.savecustomordering": "正在保存自定义排序，为了避免结果丢失，请勿跳转",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "无法在触摸屏上重新排列。",
        "hub.apps.edit.favorites.notify.success": "已保存收藏夹的重新排序!",
        "hub.apps.edit.favorites.notify.error": "发生错误，无法保存所做的重新排序，请稍后再试",

        "hub.nav.label.settings.settings": "设置",
        "hub.nav.label.settings.account": "帐户",
        "hub.nav.label.settings.about": "关于",
        "hub.nav.label.settings.devices": "设备",
        "hub.nav.label.settings.preferences": "偏好设置",
        "hub.nav.label.settings.whatsnew": "新增功能",

        "hub.apps.detail.back": "返回到应用程序",
        "hub.people.detail.back": "返回到人员",
        "hub.people.notifications.back": "返回到通知",

        "hub.nav.label.notifications.filter": "筛选器",
        "hub.nav.label.notifications.all.notifications": "所有通知",
        "hub.nav.label.notifications.action.needed": "待确定",
        "hub.nav.label.notifications.completed": "已完成",
        "hub.long.card.description": "描述",
        "hub.long.card.Comment": "注释",
        "hub.long.card.Comment.placeholder": "添加注释",

        "hub.appLaunch.open": "打开",
        "hub.appLaunch.cancel": "取消"
    });
})(angular.module('com.vmware.greenbox.l10n'));

// (c) 2014 VMware, Inc.  All rights reserved.
/* jshint -W100: true */
(function(module) {
    module.constant('l10n', {
        "appCenter": "Workspace ONE",
        "hub": "Intelligent Hub",
        "ok": "確定",
        "and": "和",
        "fullname": "{1}{0}", // {0} is given name, {1} is family name
        "viewDownloadUrl": "http://www.vmware.com/go/viewclients",
        "viewDownloadUrlIOS": "itms-apps://itunes.apple.com/app/vmware-horizon-view-client/id417993697?mt=8",
        "viewDownloadUrlAndroid": "http://play.google.com/store/apps/details?id=com.vmware.view.client.android",
        "citrixReceiverDownloadUrl": "http://receiver.citrix.com",
        "workspaceDownloadUrl": "/download",
        "app.store.app.name": "VMware Workspace ONE",
        "app.banner.install": "安裝",
        "app.banner.open": "開啟",
        "app.promotion.banner.donotshowagain": "不再顯示此訊息。稍後可在「設定」-「關於」中查看此訊息。",
        "app.promotion.banner.open": "在 APP 中開啟",
        "app.promotion.banner.download": "下載 APP",
        "app.promotion.banner.message": "取得更好的 APP 體驗。",
        "horizonDesktopNotDetected": "必須在此電腦上安裝 VMware Identity Manager Desktop，才能開啟此應用程式。<a target='_blank' href='{0}'>安裝 VMware Identity Manager Desktop</a> (如果尚未安裝的話)。",
        "viewAppsTooltip": "此由 Horizon 主控的應用程式需要在您的電腦上安裝 {0}Horizon Client{1} 3.0 或更新版本。",
        "desktoneDesktopTooltip": "此 Horizon Cloud 桌面需要在您的電腦上安裝 {0}Horizon Client{1}。",
        "desktoneApplicationTooltip": "此 Horizon Cloud 應用程式需要在您的電腦上安裝 {0}Horizon Client{1}。",
        "xenAppsReceiverNotDetected": "必須在此電腦上安裝 Citrix Receiver 才能開啟此應用程式。<a target='_blank' href='{0}'>安裝 Citrix Receiver</a> (如果尚未安裝的話)。",
        "button.save": "儲存",
        "button.update": "更新",
        "button.openHorizonView": "開啟 Horizon Client",
        "myapps.launch.openApp": "開啟 {0}",
        "button.openApp": "開啟 APP",
        "button.clear": "清除",
        "button.close": "關閉",
        "button.cancel": "取消",
        "button.download": "下載",
        "myapps.launch.title.launch": "啟動",
        "myapps.launch.title": "啟動應用程式",
        "myapps.launch.view.openWith": "開啟方式",
        "myapps.launch.view.preferredClient.horizonView": "Horizon Client",
        "myapps.launch.view.preferredClient.browser": "瀏覽器",
        "myapps.launch.view.preferredClient.isDefault": "(預設)",
        "myapps.launch.view.selectPreferredLaunchClient": "選取您要啟動 Horizon 桌面和應用程式的方式",
        "myapps.launch.view.selectPreferredLaunchClientTitle": "Horizon 遠端 APP",
        "myapps.launch.view.selectPreferredLaunchClientText": "與瀏覽器比較，在 Horizon Client 中開啟 Horizon 遠端 APP 將為您提供更佳體驗。",
        "myapps.launch.view.selectPreferredLaunchClientText2": "您想如何啟動 Horizon 遠端 APP？",
        "myapps.launch.view.selectPreferredLaunchClientMobile": "選擇啟動預設...",
        "myapps.launch.view.mobileDefaultViewClientDesc": "這會決定在您選擇從裝置上開啟 Horizon 桌面時的預設啟動行為。如果您選擇 Horizon Client 作為預設，就必須安裝 Horizon Client。<a target='_blank' href='{0}'>安裝 Horizon Client</a> (如果尚未安裝的話)。",
        "myapps.launch.view.unknownClientType": "用於開啟 Horizon Client 的用戶端類型不明。",
        "myapps.launch.view.openWithView": "透過 Horizon Client 開啟",
        "myapps.launch.view.openWithBrowser": "透過瀏覽器開啟",

        "myapps.launch.view.preferredClient.byBrowser.description": "選取瀏覽器，您的桌面或應用程式就會在新瀏覽器視窗中開啟。",
        "myapps.launch.view.preferredClient.byViewClient.description": "此項目需要 Horizon Client 3.0 或以上版本。<a target='_blank' href='{0}'>安裝 Horizon Client</a> (如果尚未安裝的話)。",
        "myapps.launch.view.preferredClient.changeLaunchPrefTip": "可始終在「偏好設定」中變更此設定。",
        "myapps.launch.view.preferredClient.saveSuccess": "已成功儲存選取的偏好。",
        "myapps.launch.msg.launching.desktop": "正在啟動桌面 <b>{0}</b>.....",
        "myapps.launch.msg.launching.application": "正在啟動應用程式 <b>{0}</b>.....",
        "myapps.noAppsMsg": "您尚未新增任何 APP。您可導覽至 {0} 來新增應用程式。",
        "myapps.noFavAppsMsg": "您尚未將任何 APP 加入書籤",
        "myapps.welcomeMsg": "您好 {0}，這些是您的 APP！",
        "myapps.bookmarks.empty.message": "將常用 APP 加入書籤，以便快速存取。",
        "myapps.bookmarks.empty.hidecatalog.message": "目前，您沒有可供使用的應用程式。",
        "myapps.bookmarks.empty.addbookmarks": "新增書籤",
        "myapps.bookmarks.organize.title": "組織整理您的書籤",
        "myapps.bookmarks.organize.addbookmarks": "新增書籤",
        "myapps.bookmarks.organize.batchremove": "移除",

        "myapps.mobilepagetitle.apps": "APP",
        "myapps.mobilepagetitle.details": "詳細資料",
        "myapps.mobilepagetitle.support": "支援",
        "myapps.mobilepagetitle.settings": "設定",
        "myapps.mobilepagetitle.recommendedapps": "建議使用",
        "myapps.mobilepagetitle.notification": "通知",
        "myapps.mobilepagetitle.archived": "已封存",
        "myapps.mobilepagetitle.notification.newapps": "新增 APP",

        "myapps.dialog.openApp": "開啟",
        "myapps.dialog.openAppWithViewClient": "在 Client 中開啟",
        "myapps.dialog.openAppWithBrowser": "在瀏覽器中開啟",

        "myapps.launch.passwordvault.installExtension.description": "此應用程式可使用 Password Vault 瀏覽器延伸。<a target='_blank' href='{0}'>安裝延伸</a> (如果尚未安裝的話)。",

        "deviceStatus.networkLost": "連線中斷。正在嘗試重新連線…",
        "deviceStatus.networkRestored": "已恢復網路連線",
        "api.session.expired.retry": "工作階段已過期，正在嘗試更新...",
        "api.entitlements.reload": "重新整理您的視圖以更新 [目錄] 中的應用程式。",
        "api.security.header.invalid.relogin": "安全性標頭驗證失敗，正在登出...",
        "api.server.load.error": "我們遇到高於一般的負載。請稍後再試一次。",
        "api.updateApps": "正在更新清單...",
        "api.error": "出現錯誤。請重試。",
        "installation.error": "原生 APP 暫時不可用",
        "service.under.maintenance.error": "Workspace ONE 暫時處於維護模式。您可以啟動 APP，但可能無法使用部分功能",
        "api.timeout": "連線逾時，請重試",
        "favoriteStatus.favorite": "我的最愛",
        "favoriteStatus.unfavorite": "解除我的最愛",
        "favoriteStatus.offlineFavoriteMessage": "離線時無法將 APP 加入書籤，請重新連線後再試一次",
        "bookmarkStatus.offlineRemoveBookmarkMessage": "離線時無法從 APP 中移除書籤，請重新連線後再試一次",
        "error.failToFavoriteApp": "無法更新書籤狀態",
        "error.failedToResetApp": "無法重設 APP",
        "error.failToHideApp": "無法移除 APP",
        "error.failToShowApp": "無法將 APP 新增至啟動器",
        "error.failedToBookmarkApp": "無法將 APP 加入書籤",
        "error.failedToLaunchApp": "無法開啟 APP",
        "error.failedToRemoveAccount": "無法移除帳戶，請稍後再試一次",
        "installStatus.enrollDevice": "使用 {0} 需要啟動 Workspace Services 來保護公司資料",
        "installStatus.enrollDevice.learnMore": "深入暸解",
        "installStatus.offlineInstallMessage": "離線時無法處理安裝要求，請重新連線後再試一次",
        "installStatus.activated": "已啟用",
        "installStatus.notActivated": "未啟用",
        "installStatus.request": "要求",
        "installStatus.update": "更新",
        "installStatus.processing": "處理中",
        "installStatus.installFailedMessage": "安裝 APP {0} 時發生錯誤。請再試一次。若此問題依然存在，請聯絡您的 IT 管理員",
        "installStatus.unenrolledDevice": "您無法再使用此 APP。請點選「OK」來更新清單。",
        "installMessage.continueInstall": "您之前嘗試過安裝此 APP。",
        "installMessage.proceedToInstall": "按一下以繼續。",
        "installMessage.installingOnDevice": "正在裝置上安裝...",

        "app.mobileApp.versionAndMBSize": "{0}MB | v{1}",
        "app.mobileApp.versionAndGBSize": "{0}GB | v{1}",
        "app.adaptivemanagement.ws1servicestitle": "啟用 Workspace Services",
        "app.adaptivemanagement.ws1servicessubtitle": "需要進行此操作才能安裝 APP。您將自動獲得：",
        "app.adaptivemanagement.valueproposition1": "所有公司資源的直接安裝。",
        "app.adaptivemanagement.valueproposition2": "安全的公司網路存取權。",
        "app.adaptivemanagement.valueproposition3": "所有裝置上同步的 APP 和內容。",
        "app.adaptivemanagement.valueproposition4": "可提高生產力的增強型 APP 體驗。",
        "app.adaptivemanagement.privacylink": "您的隱私權",

        "app.tunnel.continue": "繼續",
        "app.tunnel.text.line1": "需要 VMware Tunnel APP 才能存取",
        "app.tunnel.text.line2": "Tunnel APP 將自動隨您的 APP 一起下載。",
        "app.tunnel.header": "需要 VMware Tunnel",
        "app.tunnel.message": "如需使用此 APP，VMware Tunnel 必須已安裝且正在執行中。",
        "recommendedApps.tunnel.text.line1": "需要 VMware Tunnel APP 才能存取",
        "recommendedApps.tunnel.text.line2": "Tunnel APP 將自動隨您的 APP 一起下載。",
        "app.tunnel.installHelpText": "若 APP 沒有自動開始安裝，請依照下列步驟啟用 APP",
        "app.tunnel.installStep1": "步驟 1：安裝 {0} APP",
        "app.tunnel.installStep2": "步驟 2：安裝 {0} APP",

        "requestFailed": "要求失敗",
        "changeOccurred": "已發生變更",
        "requestSuccessful": "要求成功",
        "accept": "接受",
        "decline": "拒絕",
        "termsOfUse": "使用條款",
        "beforeInstallation": "安裝前",
        "resetDesktopStatus.offlineMessage": "離線時無法重設桌面，請重新連線後再試一次",
        "resetDesktop.sucess": "成功重設桌面",
        "appCenter.someAppsMissingMessage": "目前無法載入所有 APP",
        "appCenter.register.device": "需要更新一些與您裝置相關的資訊。按「更新」以繼續使用 Workspace ONE。",
        "appCenter.mdm.device.error": "您無法再存取 Workspace ONE。",
        "appCenter.mdm.device.error.contact": "如需您帳戶的詳細資料，請聯絡管理員。",
        "appCenter.mdm.device.poll.error": "我們目前無法完成工作區的建立。請再試一次或聯絡管理員。",
        "appCenter.device.status.notRegistered": "裝置尚未登記",
        "appCenter.device.status.blackListed": "此裝置已被列入黑名單",
        "appCenter.device.status.deviceInputError": "此裝置無效！請聯絡您的 IT 管理員",
        "appCenter.device.status.unknownError": "發生未知錯誤",

        "appCenter.device.register": "登記裝置",
        "appCenter.device.moreDetails": "更多詳細資料",
        "appCenter.device.unEnrollWarningTitle": "是否移除帳戶？",
        "appCenter.device.mdmUnEnrollMessage": "移除帳戶將會停用公司資源存取權，並且可能會移除此裝置上的工作 APP。",
        "appCenter.device.getDeviceEnrollmentStatus": "正在取得其他資訊",
        "appCenter.device.mdmUnEnrollConfirmationMessage": "您要繼續嗎？",
        "appCenter.device.remove": "移除",
        "appCenter.device.keep": "保留",
        "appCenter.device.disableWorkspaceMessage": "移除帳戶會撤銷透過 Workspace ONE APP 授與的存取權。已下載至跳板中的 APP 仍會加以安裝，但可能無法存取。您要繼續嗎？",
        "appCenter.noAppsMsg": "目前沒有可用的 APP",
        "appCenter.vppInviteTitle": "受管分配登記",
        "appCenter.appInstallConfirmPromptTitle": "確認安裝",
        "appCenter.mdmAppRequestConfirmPromptTitle": "需要核准",
        "appCenter.mdmAppRequestConfirmPromptTitleDenied": "您的要求先前已遭到拒絕",
        "appCenter.mdmAppRequestConfirmPromptMessage": "您正嘗試存取的應用程式需要管理員核准",
        "appCenter.mdmAppRequestConfirmPromptMessageDenied": "您已針對此應用程式提出要求且要求已遭到拒絕，您確定要再次要求嗎",
        "appCenter.acceptInvite": "接受邀請",
        "appCenter.install": "安裝",
        "appCenter.proceed": "啟用 Workspace Services",
        "appCenter.cancel": "取消",
        "appCenter.confirm": "確認",
        "appCenter.searchApps": "搜尋 APP。",
        "appCenter.welcomeMsg": "隨時隨地皆可將新的 APP 安裝在任何裝置上！",
        "appCenter.done": "完成",
        "appCenter.nav.privacyPage": "隱私權頁面",
        "appCenter.nav.catalog": "目錄",
        "appCenter.nav.myApps": "我的 APP",
        "appCenter.nav.favorites": "我的最愛",
        "appCenter.nav.categories": "類別",
        "appCenter.nav.filterby": "篩選方式",
        "appCenter.nav.show": "顯示",
        "appCenter.nav.settings": "設定",
        "appCenter.nav.sortBy": "排序方式",
        "appCenter.nav.sortBy.alpha": "依 A-Z 排序",
        "appCenter.nav.sortBy.inverseAlpha": "依 Z-A 排序",
        "appCenter.nav.sortBy.customView": "自訂檢視",
        "appCenter.nav.arrange": "排列",
        "appCenter.nav.arrange.saved": "已儲存自訂檢視！",
        "appCenter.nav.arrange.tooltip": "僅適用於 Windows。",
        "appCenter.nav.arrange.saving": "正在儲存...",
        "appCenter.nav.arrange.error": "無法儲存自訂檢視",
        "appCenter.nav.filter": "篩選條件",
        "appCenter.installFailedTitle": "APP 安裝問題",
        "appCenter.uccConflict": "目前工作階段發生錯誤。請重新登入。",

        "appCenter.search.placeholder": "搜尋",
        "appCenter.search.noResults": "沒有找到任何結果。",

        "appCenter.action.open": "開啟",
        "appCenter.action.install": "安裝",
        "appCenter.action.installing": "正在安裝",
        "appCenter.action.installed": "已安裝",
        "appCenter.action.reinstall": "重新安裝",
        "appCenter.action.add": "新增",
        "appCenter.action.added": "已新增",
        "appCenter.action.processing": "處理中",
        "appCenter.action.update": "更新",
        "appCenter.action.request": "要求",
        "appCenter.action.pending": "擱置中",
        "appCenter.action.view": "檢視",
        "appCenter.action.favorite": "我的最愛",
        "appCenter.action.unfavorite": "解除我的最愛",

        "appCenter.internalApp.installtionModalTitle": "APP 安裝步驟",
        "appCenter.internalApp.installationStepTitle": "安裝之後，請依下列步驟進行以開啟此 APP",
        "appCenter.internalApp.step1": "從 iOS 主畫面啟動設定",
        "appCenter.internalApp.step2": "點選「一般」",
        "appCenter.internalApp.step3": "點選「設定檔和裝置管理」",
        "appCenter.internalApp.step4": "點選「Enterprise APP」下的 APP 開發人員名稱",
        "appCenter.internalApp.step5": "驗證或信任該 APP",
        "appCenter.internalApp.watchTutorial": "觀看逐步教學",

        "appCenter.type.web": "網站",
        "appCenter.type.native": "原生 APP",
        "appCenter.type.native.platform": "{0} APP",
        "appCenter.type.virtual": "虛擬 APP",
        "appCenter.type.citrixResource": "Citrix",
        "appCenter.type.HorizonResource": "Horizon",
        "appCenter.type.HorizonAirResource": "Horizon Cloud",
        "appCenter.type.appPackage": "APP 套件",
        "appCenter.type.thinapp": "ThinApp",
        "myapp.nav.categories": "類別",
        "myapp.nav.favorites": "我的最愛",
        "myapp.nav.allApps": "所有 APP",
        "myapp.nav.recommendedApps": "建議",
        "myapp.nav.newlyEntitledApps": "新增",
        "myapp.nav.webApps": "網站",
        "myapp.nav.mobileApps": "行動 APP",
        "myapp.nav.macApps": "Mac APP",
        "myapp.nav.windowsApps": "Windows App",
        "myapp.nav.virtualApps": "虛擬",
        "myapp.label.new": "新增",
        "myapp.nav.filterby": "篩選方式",
        "myapp.nav.mobile.filter.pagetitle": "依類別篩選",
        "appCenter.nav.browseBy": "瀏覽方式",

        "appCenter.catalog.empty": "似乎尚未給您指派任何 APP。即將為您提供，因此，請盡快返回查看。",

        "userInfo.adminConsole": "管理主控台",
        "userInfo.settings": "設定",
        "userInfo.notifications": "通知",
        "userInfo.support": "支援",
        "userInfo.preferences": "偏好設定",
        "userInfo.about": "關於",
        "userInfo.devices": "裝置",
        "userInfo.settings.promo.title": "下載 Workspace ONE App",
        "userInfo.settings.promo.message": "Workspace ONE 將為您提供更好的 APP 體驗。要立即試用嗎？",

        "userInfo.tips": "APP 提示",
        "userInfo.tips.description": "取得有關如何使用 APP 的說明。",

        "userInfo.tips.bookmarks": "如何使用書籤？",
        "userInfo.tips.catalog": "如何使用目錄？",
        "userInfo.tips.people": "新增：如何使用人員？",
        "userInfo.tips.notification": "新增：如何使用通知？",

        "userInfo.tips.catalog.desktop1": "按一下「開啟」在瀏覽器中啟動網站；使用 {0} 將其加入書籤。",
        "userInfo.tips.catalog.desktop2": "按一下 APP 圖示或名稱以瞭解更多詳細資料。",
        "userInfo.tips.catalog.mobile1": "使用 {0} 在瀏覽器中開啟網站；使用 {1} 將其加入書籤。",
        "userInfo.tips.catalog.mobile2": "使用 {0} 在您的裝置上安裝原生 APP。{1} 表示若要使用這些 APP，您必須註冊裝置。",
        "userInfo.tips.catalog.mobile3": "點選 APP 圖示或名稱以瞭解更多詳細資料。",

        "userInfo.tips.bookmarks.desktop1": "按一下動態磚以在瀏覽器中啟動網站。",
        "userInfo.tips.bookmarks.desktop2": "暫留在動態磚上方以從「...」選單查看更多動作。",

        "userInfo.tips.bookmarks.mobile": "點選圖標可在瀏覽器中啟動網站。按住可查看更多動作。",

        "userInfo.tips.catalog.download.phone": "點選 {0} 圖示可在您的裝置上安裝原生 APP。{1} 圖示表示若要使用這些 APP，您必須註冊裝置。",
        "userInfo.tips.catalog.bookmark.launch.phone": "點選 {0} 圖示可在瀏覽器中開啟網站。點選 {1} 圖示可將其加入書籤。如需更多詳細資料，請點選 APP 圖示或名稱",

        "userInfo.tips.catalog.download.tablet": "按一下「下載」按鈕可下載 APP，如需更多詳細資料，只需按一下 APP",
        "userInfo.tips.catalog.bookmark.launch.tablet": "按一下「啟動」按鈕可啟動 APP，按一下「書籤」按鈕可將 APP 加入書籤",

        "userInfo.tips.people.mobile": "按一下 {0} 可從任一設定檔導覽回到主要人員搜尋登陸頁面。",
        "userInfo.tips.notification.mobile": "按一下 {0} 可存取您的通知。關閉所有通知或採取相應的行動之前，[通知] 徽章會保持作用中狀態。",

        "userInfo.tips.title": "APP 提示",
        "userInfo.tips.intro": "取得有關如何使用 APP 的說明。",
        "userInfo.tips.desktop": "桌面",
        "userInfo.tips.reordering.title": "自訂您的書籤！",
        "userInfo.tips.reordering.text1": "1. 使用右上方的下拉選單前往「自訂視圖」。",
        "userInfo.tips.reordering.text2": "2. 選擇「排列」。",
        "userInfo.tips.reordering.text3": "3. 拖放以重新排列書籤。完成之後，按一下「儲存」。",
        "userInfo.tips.mobile": "行動裝置",

        "userInfo.removeAccount": "移除帳戶",
        "userInfo.account": "帳戶",
        "userInfo.profile": "設定檔",
        "userInfo.profile.name": "名稱：",
        "userInfo.profile.email": "電子郵件：",
        "userInfo.profile.username": "使用者名稱：",
        "userInfo.profile.picture": "設定檔圖片",
        "userInfo.profile.password": "密碼",
        "userInfo.profile.passwordchange": "變更",
        "userInfo.profile.passwordprompt": "管理公司系統的密碼。",
        "userInfo.password": "密碼",
        "userInfo.termsofuse": "使用條款",
        "userInfo.signout": "登出",
        "userInfo.tryAgain": "再試一次",
        "userInfo.managedevicesettings": "管理裝置設定",
        "userInfo.notification": "推播通知",
        "userInfo.passcode": "Touch ID 或密碼",

        "appCenter.support.selfservice": "自助服務",
        "appCenter.support.managedevices": "裝置",
        "appCenter.support.managedevicestext": "檢視您的裝置資訊。",
        "appCenter.support.managepassword": "變更密碼",
        "appCenter.support.managepasswordtext": "變更公司帳戶的密碼",
        "appCenter.support.gethelp": "取得說明",
        "appCenter.support.appstips": "APP 及提示",
        "appCenter.support.appstipstext": "請參閱此 APP 中的說明工具提示",
        "appCenter.support.sendReportTitle": "傳送報告",
        "appCenter.support.sendReportDetails": "暸解如何傳送 APP 診斷。",
        "appCenter.support.helpdesk": "服務台",
        "appCenter.support.contacthelpdesk": "聯絡服務台",
        "appCenter.reportProblems.ios.sendLogInstruction": "發生錯誤時搖晃您的裝置以輕鬆傳送 APP 診斷或提供意見反應。",
        "appCenter.reportProblems.ios.turnOnOffInstruction": "您可以在裝置設定中開啟/關閉此功能。",

        // App Details Page
        "app.details.link.back": "返回",
        "app.details.nav.details": "詳細資料",
        "app.details.nav.reviews": "評論",
        "app.details.label.description": "說明",
        "app.details.label.noDescription": "無可用的描述",
        "app.details.label.seeFullDetails": "檢視詳細資料",
        "app.details.label.removeBookmark": "移除",
        "app.details.label.resetDektop": "重設",
        "app.details.label.information": "資訊",
        "app.details.label.category": "類別",
        "app.details.label.version": "版本",
        "app.details.label.type": "類型",
        "app.details.label.type.SAML11": "Web APP",
        "app.details.label.type.SAML20": "Web APP",
        "app.details.label.type.WEBAPPLINK": "Web APP",
        "app.details.label.type.MDMWEB": "Web APP",
        "app.details.label.type.WSFED12": "Web APP",
        "app.details.label.type.XENAPP": "Xen APP",
        "app.details.label.type.XENAPPDELIVERYGROUP": "Citrix 桌面",
        "app.details.label.type.THINAPP": "ThinApp",
        "app.details.label.type.PROFILE": "設定檔",
        "app.details.label.type.VIEWPOOL": "Horizon 桌面",
        "app.details.label.type.VIEWAPP": "Horizon APP",
        "app.details.label.type.DESKTONEDESKTOP": "Horizon Cloud 桌面",
        "app.details.label.type.DESKTONEAPPLICATION": "Horizon Cloud APP",
        "app.details.label.type.APPV": "AppV",
        "app.details.label.type.PASSWORDVAULT": "Web APP",
        "app.details.label.type.PUBLIC": "公用 APP",
        "app.details.label.type.INTERNAL": "內部",
        "app.details.label.size": "大小",
        "app.details.label.price": "價格",
        "app.details.label.screenshots": "螢幕擷取畫面",
        "app.details.label.showMore": "顯示更多",
        "app.details.label.showLess": "顯示更少",
        "app.details.label.setAppPassword": "設定 APP 密碼",
        "app.details.label.sendFeedback": "傳送意見反應",
        "app.details.label.feedbackSubject": "APP {0} 的意見反應",
        "app.details.label.support": "支援",
        "app.details.label.developer": "開發者",
        "app.details.label.email": "電子郵件",
        "app.details.label.phone": "電話",
        "app.details.appSize": "{0} MB",
        "app.details.label.launchMessage": "所有的行動 APP 可從您的主畫面啟動。",

        "app.details.label.requirement": "需求：",
        "app.details.label.packageName": "套件名稱：",
        "app.details.thinapp.requirement": "此應用程式僅適用於已安裝 Identity Manager Desktop 的 Windows 電腦。",
        "app.details.viewDesktop.requirement": "此 Horizon 桌面需要在您的電腦上安裝 {0}Horizon Client{1} 3.0 或以上版本。",
        "app.details.viewapp.requirement": "此由 Horizon 主控的應用程式需要在您的電腦上安裝 {0}Horizon Client{1} 3.0 或更新版本。",
        "app.details.xenapp.requirement": "此應用程式需要安裝 {0} Citrix Receiver {1}。",
        "app.details.xenapp.msg.IE8OrLower": "此應用程式需要安裝 Citrix Receiver。附註：此應用程式無法在 Internet Explorer 8 中開啟。",
        "app.details.xenappsDeliveryGroup.requirement": "此 Citrix 桌面需要安裝 {0} Citrix Receiver {1}。",
        "app.details.desktoneDesktop.requirement": "此 Horizon Cloud 桌面需要在您的電腦上安裝 {0}Horizon Client{1}。",
        "app.details.desktoneApp.requirement": "此 Horizon Cloud 應用程式需要在您的電腦上安裝 {0}Horizon Client{1}。",
        "app.details.abbrev.megabytes": "MB",
        "app.details.abbrev.gigabytes": "GB",
        "app.details.noData": "沒有可用的資訊",
        "app.details.noScreenshots": "沒有可用的螢幕擷取畫面",
        "app.details.noDescription": "描述即將提供。",
        "app.details.needsDeviceEnrollment": "需要裝置註冊",
        "app.details.label.addToHomeScreen": "新增至主畫面",
        "app.details.action.open": "開啟",
        "app.details.action.bookmark": "書籤",
        "app.details.action.bookmarked": "已加入書籤",
        "app.details.action.launch": "啟動",
        "app.details.action.setPassword": "設定密碼",
        "app.details.action.pvAppCredentials": "認證",
        "app.details.info.msg.missingInfo": "部分資訊遺失。請稍後再試，以查看完整詳細資料。",
        "app.details.wsrequired.msg": "需要 Workspace Services。",
        "app.details.label.addedFavorites": "已新增至我的最愛",

        "app.rating.label": "使用者評等",

        "app.settings.label.settings": "設定",
        "app.settings.link.back": "返回",
        "app.settings.managedDevices": "受管裝置",
        "app.nav.tab.bookmark": "書籤",
        "app.nav.tab.catalog": "目錄",
        "app.nav.tab.people": "人員",
        "app.nav.tab.support": "支援",
        "app.nav.tab.apps": "APP",
        "app.nav.tab.settings": "設定",
        "app.about.heading": "關於 Workspace ONE",
        "app.about.copyright": "Copyright ©2013-2019 VMware, Inc. 版權所有。本產品受美國及其他國家/地區的著作權和知識產權法以及國際條約保護。VMware 產品受一項或多項專利保護。",
        "app.about.button.label.privacyPolicy": "隱私權原則",
        "app.about.button.label.patents": "專利",
        "app.about.button.label.licenseAgreement": "授權合約",
        "app.about.privactPolicyLink": "http://www.vmware.com/help/horizon-workspace-privacy-supplement.html",
        "app.about.patentsLink": "http://www.vmware.com/go/patents-tw",
        "app.about.licenseAgreementLink": "http://www.vmware.com/tw/download/eula/universal_eula.html",
        "app.about.saasLicenseAgreementLink": "http://www.vmware.com/tw/download/eula/identity-manager-terms-of-service.html",

        "app.devices.heading": "裝置",
        "app.devices.tableColumn.deviceName": "裝置名稱",
        "app.devices.tableColumn.userDeviceId": "裝置 ID",
        "app.devices.tableColumn.lastLoginTime": "上次登入時間",
        "app.devices.unlinkDevice": "取消連結",
        "app.devices.unlinkedDevice": "已取消連結",
        "app.devices.emptyDeviceListMessage": "您的裝置尚未與您的帳戶相關聯。",

        "app.thinappMultiDeviceAct.heading": "此應用程式將會新增至核准的裝置。若要在其他裝置上使用「{0}」，請在下方找到裝置名稱，然後按一下「請求」按鍵。",
        "app.thinappMultiDeviceAct.tableColumn.deviceName": "裝置名稱",
        "app.thinappMultiDeviceAct.tableColumn.requestStatus": "狀態",
        "app.thinappMultiDeviceAct.button.request": "要求",
        "app.thinappMultiDeviceAct.activationState.deniedActivation": "已拒絕",
        "app.thinappMultiDeviceAct.activationState.awaitingActivation": "擱置中",
        "app.thinappMultiDeviceAct.activationState.activated": "已核准",
        "app.thinappMultiDeviceAct.activationState.notActivated": "未啟用",

        "app.thinappsInPackage.button.done": "完成",
        "app.thinappsInPackage.button.bookmarkAll": "全部加入書籤",
        "app.thinappsInPackage.info": "APP 套件",
        "app.thinappsInPackage.noOfAppsInPackage": "{0} 個 APP",
        "app.thinappsInPackage.noOfFilteredAppsInPackage": "已找到 {0} 個相符項。",
        "app.thinappsInPackage.action.instruction": "選擇書籤圖示將個別 APP 加入書籤，或選擇按鈕將所有 APP 加入書籤。",
        "app.thinappsInPackage.search.placeholder": "在套件中搜尋",

        "app.setAppPassword.heading": "設定密碼",
        "app.setAppPassword.instruction": "使用下方表單設定此應用程式的密碼。密碼長度必須至少為 3 個字元。",
        "app.setAppPassword.label.password": "密碼",
        "app.setAppPassword.label.confirmPassword": "確認密碼",
        "app.setAppPassword.label.generate": "產生密碼",
        "app.setAppPassword.error.passwordsNoMatch": "密碼不符。",
        "app.setAppPassword.msg.success": "已成功設定您的應用程式密碼。",
        "app.setAppPassword.msg.fail": "嘗試設定您的密碼時發生錯誤。請再試一次。",

        "pvapp.setAppPassword.heading": "為 {0} 設定已儲存的認證",
        "pvapp.setAppPassword.instruction": "使用下方表單為此應用程式設定已儲存的認證。",
        "pvapp.setAppPassword.label.username": "使用者名稱",
        "pvapp.setAppPassword.label.password": "密碼",
        "pvapp.setAppPassword.error.userNameEmpty": "「使用者名稱」為空白。",
        "pvapp.setAppPassword.error.passwordEmpty": "「密碼」為空白。",
        "pvapp.setAppPassword.msg.success": "已成功設定您的應用程式認證。",
        "pvapp.setAppPassword.msg.fail": "在嘗試設定您的應用程式認證時發生錯誤。請再試一次。",

        "app.launchPassword.heading": "密碼請求",
        "app.launchPassword.view.instruction": "我們需要您的密碼來登入此 Windows 資源 {0}。",
        "app.launchPassword.label.userName": "使用者",
        "app.launchPassword.label.password": "密碼",
        "app.launchPassword.button.label.signin": "登入",

        "app.changePassword.title": "變更密碼",
        "app.changePassword.enterCurrentPassword": "輸入目前的密碼",
        "app.changePassword.enterNewPassword": "輸入新的密碼",
        "app.changePassword.confirmNewPassword": "確認新的密碼",
        "app.changePassword.error.passwordsNoMatch": "新密碼不相符。",
        "app.changePassword.error.requirementsNoMatch": "新密碼不符合要求。",
        "app.changePassword.success": "已儲存新密碼！",
        "app.changePassword.label.email": "電子郵件",
        "app.changePassword.label.phone": "電話",

        "app.passwordPolicy.passwordRequirements": "密碼要求",
        "app.passwordPolicy.label.currentpassword": "目前的密碼",
        "app.passwordPolicy.label.newpassword": "新密碼",
        "app.passwordPolicy.label.confirmpassword": "確認新的密碼",
        "app.passwordPolicy.minLength": "至少 {0} 位數",
        "app.passwordPolicy.leastIncludes": "至少包括：",
        "app.passwordPolicy.minLower": "{0} 個字母",
        "app.passwordPolicy.minUpper": "{0} 個大寫字元",
        "app.passwordPolicy.minDigit": "{0} 個數字",
        "app.passwordPolicy.minSpecial": "{0} 個特殊字元",

        "app.coachmarks.bookmarkTitle": "如何使用書籤",
        "app.coachmarks.bookmarkMessage": "點選以啟動網站，按住以進一步探索。",
        "app.coachmarks.catalogTitle": "如何使用目錄",
        "app.coachmarks.catalogMessage": "安裝或更新 APP，新增至書籤或直接從這裡開啟。",
        "app.coachmarks.buttonText": "了解！",

        "app.logout.confirm.msg": "登出 Workspace ONE 會結束目前的工作階段。從目錄中下載的所有 APP 都會保留在裝置中，但新的 APP 則會在您再次登入時取得。",
        "app.logout.title": "警告",

        "app.passwordVault.banner.msg": "您的 APP 可使用 Workspace ONE 延伸。",
        "app.passwordVault.banner.button.install": "安裝",
        "app.passwordVault.banner.setPreference": "可稍後在「設定」-「偏好設定」中取得。",
        "app.passwordVault.banner.donotshowagain": "不要再顯示",
        "app.passwordVault.banner.button.later": "稍後",
        "app.passwordVault.banner.button.get": "取得",
        "app.passwordVault.preference.title": "Workspace ONE 延伸功能",
        "app.passwordVault.preference.instruction": "您的 APP 可使用 Workspace ONE 延伸。",
        "app.passwordVault.preference.getextension": "取得延伸功能。",
        "app.bookmarking.change.tab.title": "仍要排列書籤嗎？",
        "app.bookmarking.change.tab.body": "將不會儲存您所做的變更。要繼續排列書籤嗎？",
        "app.bookmarking.touch.disabled": "使用觸控式軌跡板或滑鼠時，您可以重新整理 APP。",
        "app.bookmarking.change.tab.exit": "否，結束",
        "app.bookmarking.change.tab.stay": "是，繼續",
        "app.virtual.disabled": "已由管理員停用",
        "app.virtual.unavailable": "此 APP 已無法在此裝置上使用",
        "app.virtual.not.available": "不適用",

        "app.notification.type.NEW_ENTITLEMENTS": "簽出",
        "app.notification.type.PASSWORD_EXPIRING": "更新密碼",
        "app.notification.action.delete": "刪除",
        "notification.new.entitlements.heading": "新增權益",
        "notification.new.entitlements.message": "已對您指派 {0} 項新權益",
        "app.notification.delete.header": "刪除此通知？",
        "app.notification.delete.msg": "確定要刪除此通知？若要稍後封存，您可以選擇「封存」。",
        "app.notification.delete.text": "刪除",
        "app.notification.keep.text": "保留",
        "app.notification.restore.text": "還原",
        "app.notification.delete.toast.msg": "通知已刪除。",
        "app.notification.empty": "沒有新的更新！",
        "app.notification.more.actions": "更多動作",
        "app.notification.archive.all": "全部封存",

        "app.notification.bookmark.all.error": "很抱歉，我們無法將您新的 APP 全部加入書籤",
        "app.notification.bookmark.all.success": "所有新的 APP 已新增至我的最愛",
        "app.notification.delete.all": "全部刪除",
        "app.notification.see.archived": "已封存視圖",
        "app.notification.see.all": "查看所有通知",
        "app.notification.newApps.title": "您已獲得新的 APP！",
        "app.notification.newApps.excessIconsMessage": "還有額外 {0} 個",
        "app.notification.newApps.subtitle": "You can open them here or find them in your catalog.",

        "app.tooltip.viewdetails": "檢視詳細資料",
        "app.tooltip.clicktolaunch": "按一下以啟動",

        "recommendedApps.install.proceed": "繼續",
        "recommendedApps.install.title": "安裝建議的 APP",
        "recommendedApps.install.confirm.msg": "您將取得繼續安裝 APP 的提示。",
        "recommendedApps.text1": "這些 APP 常由您的同事使用。",
        "recommendedApps.text2": "您可以現在安裝這些 APP 或稍後在目錄中找到它們。",
        "recommendedApps.selectAll": "全選",
        "recommendedApps.apps": "APP",
        "recommendedApps.install": "安裝",
        "recommendedApps.skip": "略過",

        "app.desktopapp.settings.title.account": "帳戶",
        "app.desktopapp.settings.title.devices": "裝置",
        "app.desktopapp.settings.title.preferences": "偏好設定",

        "appCenter.peopleSearch.placeholder": "搜尋人員",
        "app.tooltip.copyEmail": "複製電子郵件",
        "app.peopleSearch.emailCopied": "電子郵件已複製",
        "appCenter.peopleSearch.noResults": "沒有找到任何結果",
        "appCenter.peopleSearch.tryNewSearch": "請嘗試新的搜尋。",
        "appCenter.peopleSearch.atLeastThreeChars": "在上方輸入 3 個或更多字元以進行搜尋。",
        "appCenter.searchPeople": "搜尋人員。",
        "myapps.mobilepagetitle.people": "人員",
        "app.people.labels.team": "我的團隊",
        "app.people.labels.recent": "最近使用",
        "app.people.labels.manager": "經理",
        "app.people.labels.peers": "同事",
        "app.people.labels.directReports": "直屬員工",
        "app.people.labels.profile": "設定檔",
        "app.people.labels.org": "組織",
        "app.people.labels.workEmail": "工作電子郵件",
        "app.people.labels.workPhone": "工作電話",
        "app.people.labels.alternateNumber": "備用電話",
        "app.people.labels.mobile": "行動電話",
        "app.people.labels.address": "地址",
        "app.people.labels.twitter": "Twitter",
        "app.people.labels.facebook": "Facebook",
        "app.people.labels.linkedIn": "LinkedIn",
        "app.people.labels.slack": "Slack",
        "app.people.labels.socialcast": "Socialcast",
        "app.people.labels.managers": "經理",
        "app.people.labels.skypeForBusiness": "商務用 Skype",
        "app.people.labels.employeeNumber": "員工編號",
        "app.people.labels.skills": "技能",
        "app.people.labels.businessUnit": "業務單位",
        "app.people.labels.costCenter": "成本中心",
        "app.people.labels.physicalDeliveryOfficeName": "辦公室位置",

        "hub.apps": "APP",
        "hub.notifications": "通知",
        "hub.notifications.welcome": "歡迎使用!",
        "hub.notifications.first.time.message": "當您開始使用 Hub 時，通知將會出現在此處。",
        "hub.notifications.new.apps.favorite.all": "全部加入我的最愛",
        "hub.notifications.congratulations": "恭喜!",
        "hub.notifications.empty.description1": "無新的通知。",
        "hub.notifications.empty.description2": "享受額外空間。",
        "hub.v2.notifications.empty.description": "您已獲知所有的通知",
        "hub.v2.notifications.first.time.description": "當您開始使用 Hub 時，通知將會出現在此處。",
        "hub.notifications.empty.description.archived": "無已封存的通知。",
        "hub.notifications.priority": "優先順序",
        "hub.notifications.today": "今天",
        "hub.notifications.yesterday": "昨天",
        "hub.notifications.lastWeek": "上一週",
        "hub.notifications.lastMonth": "上個月",
        "hub.notifications.older": "更早",
        "hub.notifications.archived.label": "已封存",
        "hub.notifications.action.success": "成功!",
        "hub.notifications.action.failure": "很抱歉，執行該動作時似乎發生錯誤",
        "hub.notifications.moreDetails": "更多詳細資料",
        "hub.notifications.dialog.action.completed": "已完成",
        "hub.notifications.dialog.action.needed": "擱置中",
        "hub.notifications.dialog.action.all.notifications": "所有通知",
        "hub.snack.bar.generic.message": "You’ve got {0} important notifications.",
        "hub.snack.bar.mobile.generic.action": "Tap here to view",
        "hub.snack.bar.browser.generic.action": "Click here to view",
        "hub.notifications.informational.card.unread.label": "Mark as Read",
        "hub.notifications.informational.card.read.label": "Read",
        "hub.apps.search.text": "搜尋 APP",
        "hub.apps.favorites": "我的最愛",
        "hub.apps.newApps": "新增",
        "hub.apps.recommended": "建議",
        "hub.apps.categories": "類別",
        "hub.apps.see.all": "See all",
        "hub.apps.see.less": "See less",
        "hub.apps.no.apps.msg1": "哇，這裡還有很多空間。",
        "hub.apps.no.apps.msg2": "請連絡管理員以取得工作 APP。",
        "hub.apps.search.in.category": "{0} 類別結果:",
        "hub.apps.search.in.app": "{0} APP 名稱和說明結果",
        "hub.apps.search.header": "結果總數",
        "hub.apps.search.no.result.header": "沒有結果。",
        "hub.apps.search.no.result.msg": "請嘗試再次使用不同的詞彙。",
        "hub.apps.searchpeople.no.result.msg": "使用不同的名稱再試一次。",
        "hub.apps.type.web": "Web",
        "hub.apps.type.Virtual": "Web",
        "hub.apps.type.application": "應用程式",
        "hub.apps.type.anyApp": "任何 APP",
        "hub.people": "人員",
        "hub.people.search.text": "搜尋人員",
        "hub.people.labels.mypeers": "我的同事",
        "hub.people.labels.directreports": "直屬員工",
        "hub.people.labels.manager": "我的經理",
        "hub.people.labels.organization": "組織",
        "hub.people.search.result": "結果",
        "hub.app.install.prompt.title": "您要安裝嗎",

        "hub.actionsheet.label.viewDetails": "檢視詳細資料",
        "hub.actionsheet.label.removeFavorites": "從我的最愛移除",
        "hub.actionsheet.label.addFavorites": "新增至我的最愛",
        "hub.password.done": "完成",

        "hub.placeholder.changepassword.username": "使用者名稱",
        "hub.placeholder.changepassword.password": "密碼",
        "hub.placeholder.changepassword.confirmpassword": "確認密碼",

        "hub.tunnel.text.line1": "需要 Tunnel 才能存取",
        "hub.tunnel.text.line2": "Tunnel 應用程式將自動隨您的 APP 一起下載。",

        "hub.promotions.banner.category.title": "類別反白顯示",
        "hub.promotions.banner.category.open": "開啟",
        "hub.promotions.banner.app.get": "取得",
        "hub.promotions.banner.disabled": "已由管理員停用",
        "hub.require.app.management": "受管的",
        "hub.app.installing.alert.mobile.message": "正在安裝應用程式 {0}，請檢查您手機的主畫面以取得更新資訊。",
        "hub.app.installing.alert.desktop.message": "正在安裝應用程式 {0}，請檢查您桌面平台的 APP 啟動器以取得更新資訊。",

        "hub.nav.label.apps": "APP",
        "hub.nav.label.people": "人員",
        "hub.nav.label.notification": "通知",
        "hub.nav.label.settings": "設定",
        "hub.nav.label.account": "帳戶",
        "hub.nav.label.signout": "登出",
        "hub.userInfo.adminConsole": "管理主控台",
        "hub.userInfo.signout": "登出",
        "hub.userInfo.settings": "設定",
        "hub.userInfo.account": "帳戶",
        "hub.userInfo.devices": "裝置",
        "hub.userInfo.whatsnew": "新增功能",
        "hub.userInfo.about": "相關內容",
        "hub.download.ios": "iOS 版 Hub",
        "hub.download.android": "Android 版 Hub",
        "hub.download.mac": "Mac 版 Hub",
        "hub.download.windows": "Windows 版 Hub",
        "hub.download.subtitle.mobile": "在同一個地方存取通知、首頁及更多。",
        "hub.download.subtitle.desktop": "取得桌面平台通知並直接從 Dock 啟動。",
        "hub.preferences.title": "偏好設定",
        "hub.preferences.horizon.subtitle": "Horizon 遠端 APP",
        "hub.preferences.launch.question": "您想如何啟動 Horizon 遠端 APP?",
        "hub.about.title": "關於 VMware Intelligent Hub",
        "hub.apps.allApps": "所有 APP",
        "hub.apps.configure.favorites.msg": "在此處新增我的最愛 APP，以便更快速存取",
        "hub.apps.configure.favorites": "設定",
        "hub.apps.edit.favorites": "編輯",

        "hub.contextDialog.label.removeFavorites": "從我的最愛移除",
        "hub.contextDialog.label.addFavorites": "新增至我的最愛",
        "hub.contextDialog.label.viewDetails": "檢視詳細資料",
        "hub.apps.edit.favorites.header": "我的最愛編輯模式",
        "hub.apps.edit.favorites.prompt": "拖放進行重新排序。",
        "hub.apps.edit.favorites.save": "儲存",
        "hub.apps.edit.favorites.cancel": "取消變更",
        "hub.apps.edit.favorites.favoritesupdatedwithoutactions": "您已更新順序，請取消或儲存，然後再結束",
        "hub.apps.edit.favorites.savecustomordering": "正在儲存自訂排序，請勿導覽離開以避免結果遺失",
        "hub.apps.edit.favorites.windowstouchscreenmessage": "在觸控式螢幕上無法使用重新排列。",
        "hub.apps.edit.favorites.notify.success": "重新排序我的最愛已儲存!",
        "hub.apps.edit.favorites.notify.error": "發生錯誤，無法儲存重新排序，稍後再試",

        "hub.nav.label.settings.settings": "設定",
        "hub.nav.label.settings.account": "帳戶",
        "hub.nav.label.settings.about": "關於",
        "hub.nav.label.settings.devices": "裝置",
        "hub.nav.label.settings.preferences": "偏好設定",
        "hub.nav.label.settings.whatsnew": "新增功能",

        "hub.apps.detail.back": "回到 APP",
        "hub.people.detail.back": "回到人員",
        "hub.people.notifications.back": "回到通知",

        "hub.nav.label.notifications.filter": "篩選條件",
        "hub.nav.label.notifications.all.notifications": "所有通知",
        "hub.nav.label.notifications.action.needed": "擱置中",
        "hub.nav.label.notifications.completed": "已完成",
        "hub.long.card.description": "說明",
        "hub.long.card.Comment": "註解",
        "hub.long.card.Comment.placeholder": "新增註解",

        "hub.appLaunch.open": "開啟",
        "hub.appLaunch.cancel": "取消"
    });
})(angular.module('com.vmware.greenbox.l10n'));

(function(module) {
    'use strict';
    module.controller('NewAppsNotificationController', [
        '$scope',
        '$rootScope',
        '$state',
        'ConfigService',
        'EventsService',
        'Resource',
        'OfflineService',
        'CatalogService',
        '$notify',
        'HttpProxyService',
        'UpdateUrlParamsService',
        'ModalService',
        'UserAgent',
        'UtilService',
        '$filter',
        function($scope,
                 $rootScope,
                 $state,
                 ConfigService,
                 EventsService,
                 Resource,
                 OfflineService,
                 CatalogService,
                 $notify,
                 HttpProxyService,
                 UpdateUrlParamsService,
                 ModalService,
                 UserAgent,
                 UtilService,
                 $filter) {
            var vm = this;
            var notificationId = $state.params.notificationId || $scope.notificationId;
            vm.newAppsLabel = $filter('i18n')('myapps.mobilepagetitle.notification.newapps');
            vm.isIOS = UserAgent.isIOS();
            vm.emptyCatalogModalFillers = [1, 2, 3, 4];
            vm.showNewAppsNotificationsOverflowActions = false;
            vm.newApps = [];
            vm.isLoading = false;
            vm.favoriteEnabled = false;
            vm.hideVirtualApp = UtilService.hideVirtualApps();

            UpdateUrlParamsService.hideNativenav().then(function() {
                ConfigService.getEntitlementsUrl().then(function(url) {
                    var params = {};
                    params.notificationId = notificationId;
                    var headers = {headers: {'Accept': 'application/hal+json', 'method': 'GET'}, params: params};
                    var request = Resource(url, headers);
                    vm.isLoading = true;
                    request.get().then(function(newAppEntitlementsResponse) {
                        vm.newApps = newAppEntitlementsResponse._embedded.entitlements;
                        vm.favoriteEnabled = _.get(newAppEntitlementsResponse, 'loadFromDbFailed', false);
                        vm.isLoading = false;
                        EventsService.getEvents().then(function(events) {
                            var handledApps = [];
                            for (var i = 0; i < events.length; i++) {
                                if (events[i] && events[i].action === 'INSTALL') {
                                    if (_.contains(handledApps, events[i].eventData.appId)) {
                                        EventsService.deleteEvent(events[i].eventId);
                                    } else {
                                        handledApps.push(events[i].eventData.appId);
                                        var toBeInstalledApp = _.find(vm.newApps, {'appId': events[i].eventData.appId});
                                        toBeInstalledApp.eventId = events[i].eventId;
                                        CatalogService.activateApp(toBeInstalledApp, $scope.deviceStatus);
                                    }
                                }
                            }
                        });
                    }, function() {
                        vm.isLoading = false;
                    });
                });
            });

            $scope.$on('notification-newapps-overlflow-actions', function(event, status) {
                vm.showNewAppsNotificationsOverflowActions = status;
            });

            vm.hideNewAppsNotificationOverflowActions = function() {
                vm.showNewAppsNotificationsOverflowActions = false;
            };

            vm.toggleNewAppsNotificationsOverflowContainer = function() {
                vm.showNewAppsNotificationsOverflowActions = !vm.showNewAppsNotificationsOverflowActions;
            };

            vm.goToAppDetails = function(appId) {
                location.hash = '#/apps/details/' + appId + "?nativenav=Hide";
            };

            vm.bookmarkAll = function() {
                var markAllNewAppsBookmarking = function(val) {
                    angular.forEach(vm.newApps, function(app) {
                        app.bookmarking = val;
                    });
                };

                var setFavStatusForAllNewApps = function(val) {
                    angular.forEach(vm.newApps, function(app) {
                        app.favorite = val;
                        $rootScope.$broadcast('new-app-notification-bookmark', app);
                    });
                };

                var appIds = [];
                for (var i = 0; i < vm.newApps.length; i++) {
                    appIds.push(vm.newApps[i].appId);
                }

                markAllNewAppsBookmarking(true);
                CatalogService.bookmarkAllNewEntitledApps(appIds).then(function() {
                    HttpProxyService.updateBookmark();
                    ConfigService.refreshCache();
                    setFavStatusForAllNewApps(true);
                    markAllNewAppsBookmarking(false);
                    if (UtilService.isHub()) {
                        $notify.success('app.notification.bookmark.all.success');
                    }
                }, function(error) {
                    markAllNewAppsBookmarking(false);
                    if (error.handled) { //When system is under maintenance
                        return;
                    }
                    $notify.error('app.notification.bookmark.all.error');
                });
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

// (c) 2016 VMware, Inc.  All rights reserved.

(function(module) {
    'use strict';
    module.controller('NotificationCardController', ['$scope', '$state', '$rootScope', 'UserAgent', '$sce', '$filter', '$notify', 'UtilService', 'Resource', '$http', 'RequestFactory', 'ConfigService', 'ModalService', 'NotificationService', 'ClientRuntimeService', 'hznLocalStorage', function($scope, $state, $rootScope, UserAgent, $sce, $filter, $notify, UtilService, Resource, $http, RequestFactory, ConfigService, ModalService, NotificationService, ClientRuntimeService, hznLocalStorage) {
        var notificationCardCtrl = this;
        var notification = notificationCardCtrl.notification;
        notificationCardCtrl.id = notification.id;
        var title = _.get(notification, 'notification_card.header.title', '');
        var subtitle = _.get(notification, 'notification_card.header.subtitle[0]', '');
        var notificationType = _.get(notification, 'notification_card.body.fields[0].type', '');
        var supportedActions = ['WS1_NEW_ENTITLEMENTS', 'OPEN_IN', 'INSTALL_APP', 'DIRECT', 'USER_INPUT'];
        var lastActionId = _.get(notification, 'last_action_id', '');
        this.read_at = _.get(notification, 'read_at', '');
        var priority = _.get(notification, 'notification_card.importance', -1);

        notificationCardCtrl.titleAndSubtitle = title && subtitle;
        notificationCardCtrl.title = title || subtitle;
        notificationCardCtrl.subtitle = subtitle;
        notificationCardCtrl.isNewAppNotification = false;
        notificationCardCtrl.excessIconsMessage = '';
        notificationCardCtrl.actions = _.get(notification, 'notification_card.actions', []);
        notificationCardCtrl.newApps = _.get(notification, 'notification_card.body.fields[0].content', []);
        notificationCardCtrl.image = _.get(notification, 'notification_card.image.href', '');
        notificationCardCtrl.message = $filter('linky')((_.get(notification, 'notification_card.body.description', '')), '_blank');
        notificationCardCtrl.isPriority = (priority == 1);
        notificationCardCtrl.hideVirtualApp = UtilService.hideVirtualApps();

        var isNewNotification = !this.read_at;
        var isDismissed = (this.read_at && !lastActionId);

        notificationCardCtrl.cardEnabled = (isDismissed || isNewNotification);

        notificationCardCtrl.additionalBodySection = false;
        notificationCardCtrl.bodyFieldsSection = false;

        notificationCardCtrl.bodyFields = _.get(notification, 'notification_card.body.fields', []);
        if (notificationType != "WS1_NEW_ENTITLEMENTS" && notificationCardCtrl.bodyFields.length > 0) {
            notificationCardCtrl.bodyFieldsSection = true;
            notificationCardCtrl.cardBodyFieldTitle = _.get(notification, 'notification_card.body.fields[0].title', '');
            notificationCardCtrl.cardBodyFieldDescription = _.get(notification, 'notification_card.body.fields[0].description', '');
            notificationCardCtrl.cardBodyFieldContent = _.get(notification, 'notification_card.body.fields[0].content[0]', {});
        }

        if (notificationType === "WS1_NEW_ENTITLEMENTS") {
            if (notificationCardCtrl.newApps) {
                notificationCardCtrl.isNewAppNotification = true;
                notificationCardCtrl.additionalBodySection = true;
                if (notificationCardCtrl.newApps.length > 4) {
                    var excessIconsNum = notificationCardCtrl.newApps.length - 4;
                    notificationCardCtrl.newApps = notificationCardCtrl.newApps.slice(0, 4);
                    notificationCardCtrl.excessIconsMessage = $filter('i18n')('app.notification.newApps.excessIconsMessage', excessIconsNum);
                }
            }
        }

        var formattedCreatedDate = moment.utc(notification.created_at).format("YYYY-MM-DDTHH:mm:ss");
        var created = moment(formattedCreatedDate, "YYYY-MM-DDTHH:mm:ss");
        var formattedCurrentDate = moment.utc(new Date()).format("YYYY-MM-DDTHH:mm:ss");
        var now = moment(formattedCurrentDate, "YYYY-MM-DDTHH:mm:ss");
        notificationCardCtrl.date = created.from(now);

        this.getLabelClass = function(action) {
            var primary = _.get(action, 'primary', '');
            var allow_repeated = _.get(action, 'allow_repeated', '');
            var buttonClass = '';
            if ((primary == true) || !action.hasOwnProperty('primary')) {
                buttonClass += 'notifications-action-button-primary';
            } else {
                buttonClass += 'notifications-action-button-secondary';
            }

            if (!this.isNotificationActionSupported(action) || (!allow_repeated && this.read_at && lastActionId)) {
                buttonClass += ' disabled';
            }
            return buttonClass;
        };

        this.getHubLabelClass = function(action) {
            var allow_repeated = _.get(action, 'allow_repeated', '');
            var hubLabel = '';
            if (!this.isNotificationActionSupported(action) || (!allow_repeated && this.read_at && lastActionId)) {
                hubLabel += ' disabled';
            }
            return hubLabel;
        };

        this.showArchivedMessage = function() {
            var repeatableActions = false;
            var noActions = (notificationCardCtrl.actions.length == 0);
            notificationCardCtrl.actions.forEach(function(element) {
                var allowRepeated = _.get(element, 'allow_repeated', '');
                if (allowRepeated) {
                    repeatableActions = true;
                }
            });
            if (this.read_at && !repeatableActions) {
                if (!lastActionId && noActions) {
                    // Archived card without actions
                    return true;
                } else if (lastActionId && !noActions) {
                    // Acted on archived card with non-repeatable actions
                    return true;
                } else if (!lastActionId && !noActions) {
                    // Not acted on archived card with non-repeatable actions
                    return false;
                }
            }
        };

        this.archivedTimeLabel = function() {
            return moment.utc(this.read_at).format('MMMM Do, YYYY');
        };

        this.isAppStoreURL = function(url) {
            var appleAppStoreUrl = "itunes.apple.com";
            var androidAppStoreUrl = "play.google.com";
            var windowsAppStoreUrl = "microsoft.com";
            return (url.indexOf(windowsAppStoreUrl) !== -1) || (url.indexOf(appleAppStoreUrl) !== -1) || (url.indexOf(androidAppStoreUrl) !== -1);
        };

        var acceptUserInput = function(format, inputLabel, inputKey, selectOptions, minLength, maxLength) {
             /*
                Returns a promise to deal with user input, placeholder input data sent back for now
             */
             return Promise.resolve("Test user input");
        };

        var userActionCancel = function() {
            /*
                Handler if user clicks on approve/deny -> text box opens up -> user decides to not type anything and click out. In case nothing needs to happen, we can remove this.
            */
        };

        this.performAction = function(action, isHub) {
            if (this.isNotificationActionSupported(action)) {
                var actionKey = _.get(action, 'action_key', '');
                var requestData = _.get(action, 'request', {});
                var url = _.get(action, 'url.href', {});
                var type = _.get(action, 'type', '');
                var id = _.get(action, 'id', '');

                var handleMultipleNewApps = function() {
                    if (UserAgent.isAWJadeMobile() || UserAgent.isPhone()) {
                        location.hash = isHub ? '#/apps/notifications/newApps/' + notification.id + '?nativenav=Hide' : '#/notifications/newApps/' + notification.id;
                    } else {
                        ModalService.getCurrentModal().open('app-v2/notifications/newEntitlementsDesktopModal.html', {notificationId: notification.id});
                    }
                };

                if (notificationType === "WS1_NEW_ENTITLEMENTS") {
                    if (notificationCardCtrl.newApps.length > 1) {
                        handleMultipleNewApps();
                    } else {
                        var appId = _.get(notification, 'notification_card.body.fields[0].content[0].appId', '');
                        if (isHub) {
                            location.hash = '#/apps/details/' + appId + '?nativenav=Hide';
                        } else {
                            $state.go('catalog.details', {
                                appId: encodeURIComponent(appId)
                            });
                        }
                    }
                } else {
                    switch (actionKey) {
                        case "OPEN_IN" :
                            NotificationService.openInAction(url);
                            break;
                        case "DIRECT" :
                            NotificationService.directAction(url, type, requestData);
                            break;
                        case "USER_INPUT" :
                            var format = _.get(action, 'user_input[0].format', '');
                            var inputLabel = _.get(action, 'user_input[0].label', '');
                            var inputKey = _.get(action, 'user_input[0].id', '');
                            var selectOptions = _.get(action, 'user_input[0].options', {});
                            var minLength = _.get(action, 'user_input[0].min_length', -1);
                            var maxLength = _.get(action, 'user_input[0].max_length', -1);

                            acceptUserInput(format, inputLabel, inputKey, selectOptions, minLength, maxLength).then(function(inputData) {
                                var dataObj = {};
                                if (UtilService.isEmpty(requestData)) {
                                    dataObj[inputKey] = inputData;
                                } else {
                                    dataObj = requestData;
                                    dataObj[inputKey] = inputData;
                                }
                                NotificationService.directAction(url, type, dataObj);
                            }, function() {
                                userActionCancel();
                            });
                            break;
                        case "INSTALL_APP" :
                            NotificationService.installAppAction(url);
                            break;
                        default :
                            break;
                    }
                }

                if (isNewNotification || isDismissed) {
                    notificationCardCtrl.archiveNotification(this.read_at, id);
                }
            }
        };

        notificationCardCtrl.getLabel = function(action) {
            var allowRepeated = _.get(action, 'allow_repeated', '');
            var label = _.get(action, 'label', '');
            var completed_label = _.get(action, 'completed_label', '');
            if (!allowRepeated && lastActionId && (action.id === lastActionId)) {
                var completedLabel = completed_label || label;
                return completedLabel;
            }
            return label;
        };

        notificationCardCtrl.getHubLabel = function(action) {
            var allowRepeated = _.get(action, 'allow_repeated', '');
            var label = _.get(action, 'label', '');
            var completed_label = _.get(action, 'completed_label', '');
            if (!allowRepeated && lastActionId && (action.id === lastActionId)) {
                var completedLabel = completed_label || label;
                return $filter('uppercase')(completedLabel);
            }
            return $filter('uppercase')(label);
        };

        // Dynamically assigning a max-width on the desktop notification card action buttons depending on number of actions to prevent truncation of button text.
        var numActions = this.actions.length;
        if (numActions !== 0) {
            var desktopMaxButtonWidth = (100 / numActions) + '%';
            notificationCardCtrl.desktopMaxButtonWidthStyle = {'max-width': desktopMaxButtonWidth};
        } else {
            notificationCardCtrl.desktopMaxButtonWidthStyle = {};
        }

        this.archiveNotification = function(read_at, actionId) {
            var url = notification._links.markRead.href;
            NotificationService.archiveNotification(url, actionId)
                .then(function() {
                    if (!read_at) {
                        notificationCardCtrl.onArchive();
                    }
                    if (actionId) {
                        notificationCardCtrl.cardEnabled = false;
                    }
                });
        };

        this.isNotificationActionSupported = function(action) {
            var actionKey = _.get(action, 'action_key', '');
            return supportedActions.indexOf(actionKey) > -1;
        };

        notificationCardCtrl.dismissNotification = function() {
            notificationCardCtrl.archiveNotification(this.read_at);
        };
    }]);
})(angular.module("com.vmware.greenbox.appCenter"));

(function(module) {
    'use strict';

    module.directive('notificationCard', ['UserAgent', function(UserAgent) {
        if (UserAgent.isAWJadeMobile()) {
            var template = 'app-v2/notifications/notificationCardMobile.html';
        } else {
            var template = 'app-v2/notifications/notificationCardDesktop.html';
        }

        return {
            restrict: 'A',
            replace: true,
            scope: { notification: '=data', onArchive: '&'},
            templateUrl: template,
            controller: 'NotificationCardController',
            bindToController: true,
            controllerAs: 'notificationCardCtrl'
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.controller('NotificationController', ['NotificationService', 'UserAgent', 'hznLocalStorage', 'UpdateUrlParamsService', '$timeout', '$scope', '$state', 'ModalService', '$filter', '$notify', '$rootScope', 'UtilService',
        function(NotificationService, UserAgent, hznLocalStorage, UpdateUrlParamsService, $timeout, $scope, $state, ModalService, $filter, $notify, $rootScope, UtilService) {
            var vm = this;
            var appCenterCtrl = $scope.appCenterCtrl;
            vm.isIOS = UserAgent.isIOS();
            vm.notifications = [];
            vm.priority = [];
            vm.today = [];
            vm.yesterday = [];
            vm.lastWeek = [];
            vm.lastMonth = [];
            vm.older = [];

            var OneDay = 1440;
            var TwoDays = 2880;
            var OneWeek = 10080;
            var OneMonth = 43200;

            vm.showFirstTimeMessage = false;
            vm.showNoNotificationsMessage = false;

            $rootScope.$on('new-notification-count-update', function(event, data) {
                if (appCenterCtrl.isNotificationDropdownActive) {
                    vm.notifications = data;
                }
            });

            var emptyStateCheck = function(notifications) {
                if (notifications.length == 0) {
                    vm.showNoNotificationsMessage = true;
                }
            };

            vm.archivedTab = $state.current.activeTab === "archivedNotifications";
            if (UserAgent.isAWJadeMobile()) {
                vm.notificationId = $state.params.notificationId || '';
            }

            if (UserAgent.isAWJadeWithNativenav()) {
                if (($state.prev.name === 'bookmarks' || $state.prev.name === 'catalog') && $state.current.name === 'notifications') {
                    hznLocalStorage.nativenav_people = 'false';
                }
                if (($state.prev.name === 'people') && ($state.current.name === 'notifications')) {
                    hznLocalStorage.nativenav_people = 'true';
                }
            }

            vm.timeDifference = function(created) {
                var createdTime = moment.utc(created);
                var now = moment();
                return UtilService.timeDifference(createdTime, now);
            };

            vm.notificationInSection = function(arr, notificationId) {
                var notificationIndex = arr.findIndex(function(element) {
                    return element.id === notificationId;
                });

                if (notificationIndex != -1) {
                    arr.splice(notificationIndex, 1);
                    return true;
                }
                return false;
            };

            vm.hubArchiveNotification = function(notificationId) {
               var found = false;
               var sections = [vm.priority, vm.today, vm.yesterday, vm.lastWeek, vm.lastMonth, vm.older];
               sections.forEach(function(array) {
                   if (!found) {
                       var foundInSection = vm.notificationInSection(array, notificationId);
                       if (foundInSection) {
                           found = true;
                       }
                   }
               });
            };

            vm.getNotifications = function(archived) {
                vm.isLoading = true;
                vm.notifications = [];
                vm.showNotificationsOverflowActions = false;
                vm.showArchived = archived;

                NotificationService.getNotifications(archived).then(function(notifications) {
                    vm.notifications = notifications;

                    if (!vm.notifications.length) {
                        NotificationService.getNotifications(!archived).then(function(notifications) {
                            if (!notifications.length) {
                                vm.showFirstTimeMessage = true;
                                vm.isLoading = false;
                            } else {
                                vm.showNoNotificationsMessage = true;
                                vm.isLoading = false;
                            }
                        }, function() {
                            vm.showNoNotificationsMessage = true;
                            vm.isLoading = false;
                        });
                    }

                    vm.notifications.forEach(function(notification) {
                        var priority = false;
                        var importance = _.get(notification, 'notification_card.importance', -1);

                        if (importance == 1) {
                            vm.priority.push(notification);
                            priority = true;
                        }

                        var created_time = _.get(notification, 'created_at', '');
                        var timeDifference = vm.timeDifference(created_time);

                        if (!priority) {
                            if (timeDifference < OneDay) {
                                vm.today.push(notification);
                            } else if (timeDifference >= OneDay && timeDifference < TwoDays) {
                                vm.yesterday.push(notification);
                            } else if (timeDifference >= TwoDays && timeDifference < OneWeek) {
                                vm.lastWeek.push(notification);
                            } else if (timeDifference >= OneWeek && timeDifference < OneMonth) {
                                vm.lastMonth.push(notification);
                            } else if (timeDifference >= OneMonth) {
                                vm.older.push(notification);
                            }
                        }
                    });

                    vm.isLoading = false;

                    /*
                    We use a timeout of 800 ms here to wait for the cards to load. Without it they can't be found
                    in the DOM as the cards are directives which dynamically rendered in an ng-repeat loop.
                    */

                    $timeout(function() {
                        if (vm.notificationId) {
                            var notificationElement = angular.element('#' + vm.notificationId);
                            if (notificationElement) {
                                notificationElement[0].scrollIntoView(true);
                                notificationElement[0].classList.add("notification-highlight");
                            }
                        }
                    }, 800);
                }, function() {
                    vm.isLoading = false;
                    vm.showNoNotificationsMessage = true;
                });
            };

            vm.archiveNotification = function(id) {
                var notificationIndex = vm.notifications.findIndex(function(element) {
                    return element.id === id;
                });
                vm.notifications.splice(notificationIndex, 1);
                vm.hubArchiveNotification(id);
                emptyStateCheck(vm.notifications);
            };

            vm.toggleNotificationsOverflowContainer = function() {
                vm.showNotificationsOverflowActions = !vm.showNotificationsOverflowActions;
            };

            vm.archiveAll = function() {
                NotificationService.archiveAllNotifications().then(function() {
                    if ($state.current.name == 'apps.notifications') {
                        $state.reload('apps.notifications');
                    } else {
                        $state.go('apps.notifications', {}, {reload: 'apps.notifications'});
                    }
                });
            };

            vm.hideNotificationOverflowActions = function() {
                vm.showNotificationsOverflowActions = false;
            };

            $scope.$on('notification-overlflow-actions', function(event, status) {
                vm.showNotificationsOverflowActions = status;
            });

            vm.goToArchived = function() {
                $state.go('archivedNotifications');
            };

            vm.hubGoToArchived = function() {
                location.hash = '#/apps/archivedNotifications?nativenav=Hide';
            };

            /*
            The below function is used in Hub only. Notifications can only be navigated to from the apps page and when push notifications are sent the app first navigates to the apps tab
            and then loads notifications. Therefore, the back button notifications will always lead back to the apps page on Hub.
            */
            vm.goBack = function() {
                // Archived tab goes to notification -- still hide nativenav
                if (vm.archivedTab) {
                    UtilService.goBack();
                } else {
                    // Only go back to apps needs to show the nativenav
                    UpdateUrlParamsService.showNativenav().then(function() {
                        $state.go('apps');
                    });
                }
            };

            if (UtilService.isHubNative()) {
                UpdateUrlParamsService.hideNativenav().then(function() {
                    vm.getNotifications(vm.archivedTab);
                });
            } else {
                vm.getNotifications(vm.archivedTab);
            }
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.service('NotificationService', [
        'ConfigService',
        'ClientRuntimeService',
        'Resource',
        'RequestFactory',
        'UserAgent',
        '$http',
        '$q',
        '$notify',
        '$filter',
        'UtilService',
        '$rootScope',
        '$state',
        function(
            ConfigService,
            ClientRuntimeService,
            Resource,
            RequestFactory,
            UserAgent,
            $http,
            $q,
            $notify,
            $filter,
            UtilService,
            $rootScope,
            $state) {
            var service = this;
            var OneDay = 1440;
            var TwoDays = 2880;
            var OneWeek = 10080;
            var OneMonth = 43200;
            var notificationList = [];
            var snackBarNotifications = [];
            var notificationsStructure = {
                priority: {
                    label: $filter('i18n')('hub.notifications.priority'),
                    notifications: []
                },
                today: {
                    label: $filter('i18n')('hub.notifications.today'),
                    notifications: []
                },
                yesterday: {
                    label: $filter('i18n')('hub.notifications.yesterday'),
                    notifications: []
                },
                lastWeek: {
                    label: $filter('i18n')('hub.notifications.lastWeek'),
                    notifications: []
                },
                lastMonth: {
                    label: $filter('i18n')('hub.notifications.lastMonth'),
                    notifications: []
                },
                older: {
                    label: $filter('i18n')('hub.notifications.older'),
                    notifications: []
                }
            };

            service.filters = [{
                label: $filter('i18n')('hub.nav.label.notifications.all.notifications'),
                link: 'notifications({filter:"all"})',
                class: 'marginbottom',
                filterName: 'all'
            }, {
                label: $filter('i18n')('hub.nav.label.notifications.action.needed'),
                link: 'notifications({filter:"pending"})',
                class: 'topline',
                filterName: 'pending'
            }, {
                label: $filter('i18n')('hub.nav.label.notifications.completed'),
                link: 'notifications({filter:"completed"})',
                filterName: 'completed'
            }];

            service.showNativeBell = function() {
                return UserAgent.isHubApp() && UserAgent.isNativeAppVersionIsEqualOrAbove("9.2");
            };

            service.isAppStoreURL = function(url) {
                var appleAppStoreUrl = "itunes.apple.com";
                var androidAppStoreUrl = "play.google.com";
                var windowsAppStoreUrl = "microsoft.com";
                return (url.indexOf(windowsAppStoreUrl) !== -1) || (url.indexOf(appleAppStoreUrl) !== -1) || (url.indexOf(androidAppStoreUrl) !== -1);
            };

            var getTimeDifference = function(created) {
                var createdTime = moment.utc(created);
                var now = moment();
                return UtilService.timeDifference(createdTime, now);
            };

            service.directAction = function(url, type, requestData) {
                // makes rest API call with the given type, url and authentication parameters
                // The notifications service sanity checks the type to make sure that it's a valid HTTP method
                // General implementation is an unauthenticated REST API call

                var data = UtilService.isEmpty(requestData) ? null : requestData;

                service.makeRestApiCall(url, type, data).then(function() {
                    $notify.success('hub.notifications.action.success');
                }, function() {
                    $notify.error('hub.notifications.action.failure');
                });
            };

            service.openInAction = function(url) {
                //opens external browser
                ClientRuntimeService.openUrl(url, 3);
            };

            service.installAppAction = function(url) {
                if (service.isAppStoreURL(url)) {
                    ClientRuntimeService.openUrl(url, 3);
                }
            };

            service.setNotifications = function(notifications) {
                notificationList = notifications;
            };

            service.getNotificationsById = function(notificationId) {
                return _.find(notificationList, {'id': notificationId});
            };

            service.getNotifications = function(readState) {
                var deferred = $q.defer();
                ConfigService.getNotificationUrl().then(function(url) {
                    if (readState != 'emptyReadState') {
                        if (readState) {
                            url += "?readState=READ";
                        } else {
                            url += "?readState=UNREAD";
                        }
                    }
                    var request = Resource(url);
                    return request.get().then(function(data) {
                        deferred.resolve(_.get(data, 'userNotifications', []));
                    }, function(error) {
                        deferred.reject(error);
                    });
                });
                return deferred.promise;
            };

            service.makeRestApiCall = function(url, type, data) {
                var request = RequestFactory(url, {
                    method: type,
                    data: data
                });
                return $http(request);
            };

            service.archiveNotification = function(url, actionId) {
                var req = RequestFactory(url, {method: 'PATCH'});
                if (actionId) {
                    req.params = {'actionId': actionId};
                }
                return $http(req);
            };

            service.archiveAllNotifications = function() {
                return ConfigService.getNotificationBeaconUrl().then(function(url) {
                    var req = RequestFactory(url, {method: 'DELETE'});
                    return $http(req);
                });
            };

            service.getNotificationNewApps = function(entitlementsUrl, notificationId) {
                var params = {};
                params.notificationId = notificationId;
                var headers = {headers: {'Accept': 'application/hal+json', 'method': 'GET'}, params: params};
                var request = Resource(entitlementsUrl, headers);
                return request.get();
            };

            service.parseNotification = function(notifications, completedState) {
                var notificationsTypes = _.cloneDeep(notificationsStructure);
                notifications.forEach(function(notification) {
                    var priority = false;
                    var importance = _.get(notification, 'notification_card.importance', -1);
                    var read_at = _.get(notification, 'read_at', '');
                    var lastActionId = _.get(notification, 'last_action_id', '');

                    if (importance == 1 && !completedState) {
                        notificationsTypes.priority.notifications.push(notification);
                        priority = true;
                    }

                    var created_time = _.get(notification, 'created_at', '');
                    var timeDifference = getTimeDifference(created_time);

                    if (!priority) {
                        if (timeDifference < OneDay) {
                            notificationsTypes.today.notifications.push(notification);
                        } else if (timeDifference >= OneDay && timeDifference < TwoDays) {
                            notificationsTypes.yesterday.notifications.push(notification);
                        } else if (timeDifference >= TwoDays && timeDifference < OneWeek) {
                            notificationsTypes.lastWeek.notifications.push(notification);
                        } else if (timeDifference >= OneWeek && timeDifference < OneMonth) {
                            notificationsTypes.lastMonth.notifications.push(notification);
                        } else if (timeDifference >= OneMonth) {
                            notificationsTypes.older.notifications.push(notification);
                        }
                    }
                });

                return notificationsTypes;
            };

            var showSnackBarNotifications = function(notifications) {
                $notify.closeAll();
                if (notifications.length === 1) {
                    $notify.info('', '', 'app-v2/components/notifications-v2/snackBarNotifications/snackBarNotifications.html', notifications[0]);
                } else {
                    $notify.info('', '', 'app-v2/components/notifications-v2/snackBarNotifications/genericSnackBarNotifications.html', notifications.length);
                }
            };

            var registerForPriorityNotifications = function() {
                $rootScope.$on('new-priority-notifications', function(event, notification) {
                    var priority = _.get(notification, 'notification_card.importance', -1);
                    if (priority === 1 && !_.includes(['notifications', 'notificationsDeeplink', 'notifications.details'], $state.current.name)) {
                        snackBarNotifications.push(notification);
                        showSnackBarNotifications(snackBarNotifications);
                    }
                });
            };

            service.checkForPriorityNotifications = function() {
                registerForPriorityNotifications();
            };

            service.getNotificationsByIdFromServer = function(notificationId) {
                return ConfigService.getNotificationUrl().then(function(url) {
                    url = url + '/' + notificationId;
                    var request = Resource(url);
                    return request.get();
                });
            };

            service.clearSnackNotifications = function() {
                snackBarNotifications = [];
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

// Project Horizon
// (c) 2013-2014 VMware, Inc. All rights reserved.
// VMware Confidential.

(function(module) {
    module.directive('notify', ['$http', '$compile', '$templateCache', '$log', '$templateRequest', '$notify',
        function($http, $compile, $templateCache, $log, $templateRequest, $notify) {
            return {
                restrict: 'AE',
                scope: true,
                bindToController: true,
                controller: function($scope, $element) {
                    var $message = this;
                    var TEMPLATE_URL = "app-v2/notify/templates/messageContextTemplate.html";
                    var messages = $notify.message;

                    $templateRequest(TEMPLATE_URL)
                        .then(function(templateData) {
                            $compile(angular.element(templateData))($scope, function(clonedElement) {
                                angular.element($element).append(clonedElement);
                            });
                        })
                        .catch(function(e) {
                            $log.error('Failed to load template: ' + TEMPLATE_URL + ' [' + e.message + ']');
                        });

                    function show(messageArray) {
                        $notify.show(messageArray);
                    }

                    function info(messageKey, params, templateUrl) {
                        $notify.showMessage("info", messageKey, params, templateUrl);
                    }

                    function error(messageKey, params, templateUrl) {
                        $notify.showMessage("error", messageKey, params, templateUrl);
                    }

                    function warning(messageKey, params, templateUrl) {
                        $notify.showMessage("warning", messageKey, params, templateUrl);
                    }

                    function success(messageKey, params, templateUrl) {
                        $notify.showMessage("success", messageKey, params, templateUrl);
                    }

                    function progress(messageKey, params, templateUrl) {
                        $notify.showMessage("progress", messageKey, params, templateUrl);
                    }

                    // Close a message dialog.
                    function close(index) {
                        $notify.close(index);
                    }

                    $scope._messagesArray_ = messages;
                    $scope.close = close; // TODO: remove? we have $message.close

                    $message.info = info;
                    $message.error = error;
                    $message.warning = warning;
                    $message.success = success;
                    $message.show = show;
                    $message.close = close;
                    $message.progress = progress;
                },
                link: function($scope, element) {
                    element.addClass('notify-container');
                }
            };
        }]);

    module.directive('notifyMessage', ['$templateCache', '$http', '$compile', '$log', '$templateRequest', 'UtilService',
        function($templateCache, $http, $compile, $log, $templateRequest, UtilService) {
            return {
                restrict: 'AE',
                require: '^notify',
                scope: false,
                transclude: true,
                replace: true,
                link: function($scope, element, attrs, message) {
                    var isHubApp = UtilService.isHub();
                    var DEFAULT_TEMPLATE_URL = isHubApp ? "app-v2/notify/templates/defaultMessageTemplateHub.html" : "app-v2/notify/templates/defaultMessageTemplate.html",
                        url = $scope.message.templateUrl || DEFAULT_TEMPLATE_URL;
                    var template = $templateCache.get(url);
                    $templateRequest(url)
                        .then(function(templateData) {
                            populateDialog(angular.element(templateData));
                        })
                        .catch(function(e) {
                            $log.error('Failed to load template: ' + url + ' [' + e.message + ']');
                        });
                    function populateDialog(template) {
                        $compile(template)($scope, function(clonedElement) {
                            element.append(clonedElement);
                        });
                    }
                }
            };
        }]);

    module.provider('$notify', function() {
        var defaultTimeouts = {
            // time before messages will be dismissed, in milliseconds:
            success: 3000,
            error: 0, // no auto-dismiss
            info: 0,
            warning: 10000,
            progress: 3000
        };
        var incrementalDelay = 100; // delay between multiple messages requested at once.
        var messagesQueue = [];
        var message = [];

        this.$get = ['Localization', '$timeout', '$rootScope', function(Localization, $timeout, $rootScope) { //noinspection JSValidateTypes
            function show(messageArray) {
                var delay = 0;
                if (!angular.isArray(messageArray)) {
                    messageArray = [messageArray];
                }
                messageArray.forEach(function(msg) {
                    var timeout = angular.isDefined(msg.timeout) ? msg.timeout :
                        (defaultTimeouts[msg.type] || 0);
                    function isMsgPresent(existingMsg) {
                        return existingMsg.text === msg.text;
                    }
                    var duplicate = messagesQueue.filter(isMsgPresent).length > 0;
                    // avoid duplicates, both for ux and ng-repeat
                    if (duplicate) {
                        return;
                    }
                    //close( duplicate );
                    // space out the messages in time, for improved animation
                    messagesQueue.push(msg);
                    //message.splice(0,message.length);
                    message.push(msg);
                    if (timeout) {
                        // schedule the auto-dismiss
                        $timeout(function() {
                            close(messagesQueue.indexOf(msg));
                        }, timeout);
                    }
                    delay = delay + incrementalDelay;
                });
            }

            function info(messageKey, params, templateUrl, arg) {
                showMessage("info", messageKey, params, templateUrl, arg);
            }

            function error(messageKey, params, templateUrl, arg) {
                showMessage("error", messageKey, params, templateUrl, arg);
            }

            function warning(messageKey, params, templateUrl, arg) {
                showMessage("warning", messageKey, params, templateUrl, arg);
            }

            function success(messageKey, params, templateUrl, arg) {
                showMessage("success", messageKey, params, templateUrl, arg);
            }

            function progress(messageKey, params, templateUrl, arg) {
                showMessage("progress", messageKey, params, templateUrl, arg);
            }

            function close(msgOrIndex, params) {
                var duplicate = msgOrIndex;
                if (angular.isString(msgOrIndex)) {
                    var msgToClose = Localization.getLocalizedString(msgOrIndex, params ? params : []);
                    duplicate = messagesQueue.indexOf(messagesQueue.filter(function(item) {
                        return item.text === msgToClose;
                    })[0]);
                }
                if (duplicate >= 0) {
                    $rootScope.$applyAsync(function() {
                        messagesQueue.splice(duplicate, 1);
                        message.splice(duplicate, 1);
                    });
                }
            }

            function closeAll() {
                if (message && message.length > 0) {
                    $rootScope.$applyAsync(function() {
                        for (var i = message.length - 1; i >= 0; i--) {
                            messagesQueue.splice(i, 1);
                            message.splice(i, 1);
                        }
                    });
                }
            }

            function showMessage(messageType, message, params, templateUrl, arg) {
                close(message); // If same message is already open, close it.
                var msg = {};
                msg.type = messageType;
                msg.text = Localization.getLocalizedString(message, params ? params : []);
                msg.argument = arg ? arg : "";

                if (templateUrl) {
                    msg.templateUrl = templateUrl;
                }
                $rootScope.$applyAsync(function() {
                    show(msg);
                });
            }

            return {
                message: message,
                show: show,
                success: success,
                warning: warning,
                error: error,
                info: info,
                close: close,
                progress: progress,
                showMessage: showMessage,
                closeAll: closeAll
            };
        }];
    });
})(angular.module('com.vmware.workspace.components.notify', []));

(function(module) {
    'use strict';

    module.controller('PeopleController', [
        'TenantCustomizationService',
        'UtilService',
        'PeopleService',
        'SettingsService',
        '$rootScope',
        '$state',
        '$scope',
        'UserAgent',
        'hznLocalStorage',
        'PeopleSearchService',
        'HttpProxyService',
        function(TenantCustomizationService,
                 UtilService,
                 PeopleService,
                 SettingsService,
                 $rootScope,
                 $state,
                 $scope,
                 UserAgent,
                 hznLocalStorage,
                 PeopleSearchService,
                 HttpProxyService) {
            var vm = this;
            vm.collapsible = UserAgent.isMobile() && UserAgent.isPhone();
            var appCenterCtrl = $scope.appCenterCtrl || $scope.$parent.appCenterCtrl;
            appCenterCtrl.searchFieldOn = true;
            vm.scrollDisabled = false;
            this.templateUrl = UtilService.loadTemplateForPlatform('people.html', 'peopleDesktop.html', 'peopleBrowser.html');

            // Because of the localStorage is one domain one origin, apps with nativenav enabled will have shared local storage on multiple webview, do not save it
            // If it is inside the WS1 app which the people tab will go directly to "#/people" instead, otherwise the apps page (which go to #/index) will keep loading people
            // Nativenav on iOS and Android load multiple webview simultaneously, so the the people controller will be Instantialized;
            var customizationSettings = TenantCustomizationService.getCustomizationSettings();
            if (UtilService.isNativeNavNotEnabled(customizationSettings)) {
                hznLocalStorage.last_active_page_v2 = "people";
            }

            function init() {
                vm.emptyFillers = [1, 2, 3, 4, 5, 6];
                vm.directReports = [];
                vm.managers = [];
                vm.peers = [];
                vm.visitedUsers = [];
                vm.visistedUserLoaded = false;
                vm.active = false;
                vm.isLoading = false;
                startLoading(false);
                getVisitedUsers();
                loadMyTeam();
            }

            function loadMyTeam(refresh) {
                startLoading(refresh);
                return getLoggedInUserDetails().then(function(user) {
                    vm.userId = user.id;
                    var orgHierarchyUrl = _.get(user._links, 'orgHierarchy.href', undefined);
                    if (orgHierarchyUrl) {
                        loadOrgHierarchy(orgHierarchyUrl, refresh);
                    } else {
                        doneLoading(refresh);
                    }
                }, function() {
                    doneLoading(refresh);
                });
            }

            function getVisitedUsers() {
                return PeopleService.getVisitedUsers().then(function(visitedUser) {
                    var users = PeopleService.getUsers(visitedUser);
                    PeopleSearchService.setRecentVisitedUser(users);
                    vm.visistedUserLoaded = true;
                });
            }

            function startLoading(refresh) {
                if (!refresh) {
                    vm.isLoading = true;
                }
            }

            function doneLoading(refresh) {
                if (!refresh) {
                    vm.isLoading = false;
                }
            }

            var getLoggedInUserDetails = function() {
                return SettingsService.getUserInfo().then(function(user) {
                    return user;
                });
            };

            var loadOrgHierarchy = function(orgHierarchyUrl, refresh) {
                PeopleService.getOrgHierarchy(orgHierarchyUrl, 'PEOPLE_DIRECTS_DETAILS').then(function(response) {
                    vm.directReports = PeopleService.getUsers(response.directReports);
                    var manager = _.take(response.managers);
                    vm.managers = PeopleService.getUsers(manager);
                    var immediateManager = _.head(manager);
                    if (immediateManager) {
                        loadUserPeers(immediateManager);
                    } else {
                        doneLoading(refresh);
                    }
                }, function() {
                    doneLoading(refresh);
                });
            };

            var loadUserPeers = function(manager, refresh) {
                var orgHierarchyUrl = _.find(manager.links, {'rel': 'orgHierarchy'}).href;
                PeopleService.getOrgHierarchy(orgHierarchyUrl, 'PEOPLE_PEER_DETAILS', refresh).then(function(response) {
                    var peerList = PeopleService.getUsers(response.directReports);
                    vm.peers = _.filter(peerList, function(user) {
                        return user.id !== vm.userId;
                    });
                    doneLoading(refresh);
                }, function() {
                    doneLoading(refresh);
                });
            };
            init();

            vm.userDetails = function(user) {
                $state.go('people.details', {
                    userId: encodeURIComponent(user.id)
                });
            };

            $scope.$on('Desktop-People-Refresh', function() {
                vm.clearCache();
            });

            vm.clearCache = function() {
                HttpProxyService.clearPeopleSearch();
                return loadMyTeam(true);
            };

            // For Hub Browser, the search is part of the people landing, not a different url
            $rootScope.$on('hub-browser-people-search-on', function() {
                vm.scrollDisabled = true;
            });

            $rootScope.$on('hub-browser-people-search-off', function() {
                vm.scrollDisabled = false;
            });
        }
    ]);
})(angular.module("com.vmware.greenbox.appCenter"));

(function(module) {
    'use strict';

    module.controller('PeopleSearchController',
        ['PeopleService',
            '$timeout',
            '$scope',
            '$element',
            'PeopleSearchService',
            'CopyToClipboardService',
            'UserAgent',
            '$rootScope',
            '$state',
            'UtilService',
            'ClientRuntimeService',
            function(PeopleService,
                     $timeout,
                     $scope,
                     $element,
                     PeopleSearchService,
                     CopyToClipboardService,
                     UserAgent,
                     $rootScope,
                     $state,
                     UtilService,
                     ClientRuntimeService) {
                var vm = this;
                vm.innerControl = vm.control || {};
                var MIN_SEARCH_CHARS = 3;
                vm.nativeEmailClientSupported = UserAgent.isNativeAppVersionIsEqualOrAbove('3.3');
                vm.copyEmailSupported = UtilService.copyEmailSupported();
                vm.isMobile = UserAgent.isMobile();
                vm.recentVisitedUser = [];
                vm.showScrim = false;
                vm.isLoading = false;
                var getFirstPageTimeout;
                function init() {
                    vm.users = [];

                    vm.query = {
                        name: ''
                    };

                    var searchObj = PeopleSearchService.getSearchQueryAndResults();

                    if (searchObj && searchObj.query) {
                        vm.query.name = searchObj.query;
                    }

                    if (searchObj && searchObj.result) {
                        vm.users = searchObj.result;
                    }
                }

                vm.onSearch = function() {
                    var query = vm.query.name;
                    vm.showScrim = true;
                    vm.noResults = false;
                    vm.reqChars = false;

                    $rootScope.$emit('people-search-field-on', true);
                    vm.recentVisitedUser = PeopleSearchService.getRecentVisitedUser();

                    if ((query.length > 0 && query.length < MIN_SEARCH_CHARS) || (query.length === 0 && vm.recentVisitedUser.length === 0)) {
                        vm.reqChars = true;
                        vm.users = [];
                    } else if (query.length === 0 && vm.recentVisitedUser.length > 0) {
                        // Needs to empty the users array to prevent users list and recent list shown together
                        vm.users = [];
                    }

                    if (query.length >= MIN_SEARCH_CHARS) {
                        vm.reqChars = false;
                        vm.recentVisitedUser = [];
                        vm.isLoading = true;

                        if (getFirstPageTimeout) {
                            $timeout.cancel(getFirstPageTimeout);
                        }
                        getFirstPageTimeout = $timeout(function() {
                            PeopleService.getFirstPage({searchText: query}, false).then(function(response) {
                                if (response.users) {
                                    vm.users = PeopleService.getUsers(response.users);
                                }
                                vm.noResults = response.totalResults === 0;
                                vm.isLoading = false;
                            }, function(err) {
                                vm.isLoading = false;
                                // Ideally should give out some kind of message to user to inform them there is error fetch data from the server
                            });
                        }, 500);
                    } else if (getFirstPageTimeout) {
                        $timeout.cancel(getFirstPageTimeout);
                        // When user started a search (query.name exceeds 3 characters, then using the back key to erase the query, need to reset the isLoading to false
                        vm.isLoading = false;
                    }
                };

                $scope.$watch('ctrl.isActive', function(isActive) {
                    if (isActive) {
                        vm.users = [];
                        vm.onSearch();
                        $element.find('input').focus();
                    }
                });

                vm.innerControl.clearSearch = function() {
                    closeSearch();
                };

                vm.clearText = function() {
                    vm.query.name = '';
                    vm.users = [];
                    vm.onSearch();
                };

                vm.clearSearch = function() {
                    vm.reqChars = false;
                    vm.showScrim = false;
                    vm.users = [];
                    vm.query.name = '';
                    vm.recentVisitedUser = PeopleSearchService.getRecentVisitedUser();
                    vm.recentVisitedUser = [];
                };

                vm.scrimClearSearch = function() {
                    if (UserAgent.isAWJadeMobile() && !UserAgent.isAWJadeDocked()) {
                        return;
                    }

                    $rootScope.$emit('people-search-field-on', false);

                    vm.clearSearch();
                };

                vm.copyEmail = function(value) {
                    var copyStatus = CopyToClipboardService.copy(value.email);
                    if (copyStatus) {
                        value.isCopied = true;
                        $timeout(function() {
                            value.isCopied = false;
                        }, 3000);
                    }
                };

                vm.openEmail = function(emailAddress) {
                    ClientRuntimeService.openEmail(emailAddress);
                };

                vm.userDetails = function(user) {
                    $rootScope.$emit('people-search-field-on', false);
                    PeopleSearchService.clearSearchQueryAndResults();
                    closeSearch();
                    $state.go('people.details', {
                        userId: encodeURIComponent(user.id)
                    });
                };

                vm.closeOnBlur = function() {
                    $rootScope.$emit('people-search-field-on', false);
                    closeSearch();
                };

                function closeSearch() {
                    vm.clearSearch();
                    $element.find('input').blur();
                }

                //navigating to other page, close search if open
                $rootScope.$on('$stateChangeStart', function() {
                    closeSearch();
                });

                init();
            }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.service('PeopleSearchService', [function() {
        var service = this;
        service.recentVisitedUsers = [];

        service.setSearchQueryAndResults = function(searchQueryAndResults) {
            this.searchQueryAndResults = searchQueryAndResults;
        };
        service.getSearchQueryAndResults = function() {
            return this.searchQueryAndResults;
        };
        service.clearSearchQueryAndResults = function() {
            this.searchQueryAndResults = [];
        };
        service.setRecentVisitedUser = function(users) {
            this.recentVisitedUsers = users;
        };
        service.addRecentVisitedUser = function(user) {
            if (this.recentVisitedUsers.length) {
                var index = _.findIndex(this.recentVisitedUsers, {id: user.id});
                if (index < 0) {
                    this.recentVisitedUsers.splice(0, 0, user);
                } else {
                    this.recentVisitedUsers.splice(index, 1);
                    this.recentVisitedUsers.unshift(user);
                }

                if (this.recentVisitedUsers.length > 6) {
                    this.recentVisitedUsers.splice(-1, 1);
                }
            } else {
                this.recentVisitedUsers.push(user);
            }
        };
        service.getRecentVisitedUser = function() {
            return this.recentVisitedUsers || [];
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.service('PeopleService',
        ['Resource',
        'ConfigService',
        'LocalStorageConstants',
        'HttpProxyService',
        function(Resource,
                 ConfigService,
                 LocalStorageConstants,
                 HttpProxyService) {
            this.getFirstPage = function(peopleSearchContext) {
                return ConfigService.getPeopleUrl().then(function(url) {
                    var response = {};
                    var peopleSearchUrl = url.replace("{userFilter}", peopleSearchContext.searchText);
                    var request = Resource(peopleSearchUrl, {
                        headers: {'Accept': 'application/vnd.vmware.catalog.user-hal+json', 'method': 'GET'}
                    });
                    return request.get().then(function(peopleResponse) {
                        response.totalResults = peopleResponse.totalResults;
                        response.itemsPerPage = peopleResponse.itemsPerPage;
                        response.users = peopleResponse.userResources;
                        return response;
                    });
                });
            };

            this.getUsers = function(userList) {
                var finalUserList = [];
                var that = this;
                if (userList) {
                    finalUserList = _.map(userList, function(user) {
                        return that.constructUserObj(user);
                    });
                }
                return finalUserList;
            };

            this.constructUserObj = function(user) {
                return {
                    id: user.id,
                    userName: user.firstName + " " + user.lastName,
                    initial: this.getInitial(user),
                    title: user.title,
                    email: user.emailAddress,
                    avatar: user.imageURL,
                    userDetailUrl: _.find(user.links, {'rel': 'userDetails'}) ? _.find(user.links, {'rel': 'userDetails'}).href : '',
                    isCopied: false
                };
            };

            this.getInitial = function(user) {
                return _.get(window, 'workspaceOne.language', '') === 'en' ? _.get(user, 'firstName[0]', '') + _.get(user, 'lastName[0]', '') : '';
            };

            this.getAddress = function(user) {
                return [user.address, user.locality, user.region, user.postalCode, user.country].filter(Boolean).join(", ");
            };

            this.getOrgHierarchy = function(orgHierarchyUrl, type) {
                var request = HttpProxyService.get(LocalStorageConstants[type], orgHierarchyUrl,
                    {
                        headers: {
                            'Accept': 'application/vnd.vmware.catalog.user-hal+json',
                            'method': 'GET'
                        }
                    });

                return request.then(function(peopleResponse) {
                    var response = {};
                    response.directReports = peopleResponse.directReportUsers ? peopleResponse.directReportUsers : [];
                    response.managers = peopleResponse.managementHierarchyUsers ? peopleResponse.managementHierarchyUsers : [];
                    return response;
                });
            };

            this.getUserOrgHierarchy = function(orgHierarchyUrl) {
                var request = Resource(orgHierarchyUrl, {
                    headers: {'Accept': 'application/vnd.vmware.catalog.user-hal+json', 'method': 'GET'}
                });
                return request.get().then(function(peopleResponse) {
                    var response = {};
                    response.directReports = peopleResponse.directReportUsers ? peopleResponse.directReportUsers : [];
                    response.managers = peopleResponse.managementHierarchyUsers ? peopleResponse.managementHierarchyUsers : [];
                    return response;
                });
            };

            this.getUserDetails = function(userId) {
                return ConfigService.getUserDetailsUrl().then(function(url) {
                    var detailsUrl = url.replace("{userId}", userId);
                    var request = Resource(detailsUrl, {
                        headers: {'Accept': 'application/vnd.vmware.catalog.user-hal+json', 'method': 'GET'}
                    });
                    return request.get().then(function(response) {
                        return response;
                    });
                });
            };

            this.getVisitedUsers = function() {
                return ConfigService.getVisitedUsersUrl().then(function(url) {
                    var request = Resource(url, {
                        headers: {'Accept': 'application/vnd.vmware.catalog.user-hal+json', 'method': 'GET'}
                    });
                    return request.get().then(function(response) {
                        return _.get(response, 'userResources', []);
                    });
                });
            };
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';
    module.controller('UserDetailsController', [
        '$scope',
        '$rootScope',
        'PeopleService',
        'SettingsService',
        '$state',
        'UtilService',
        '$timeout',
        'CopyToClipboardService',
        '$window',
        'ClientRuntimeService',
        'ProgressIndicatorService',
        'UserAgent',
        '$filter',
        'PeopleSearchService',
        function($scope,
                 $rootScope,
                 PeopleService,
                 SettingsService,
                 $state,
                 UtilService,
                 $timeout,
                 CopyToClipboardService,
                 $window,
                 ClientRuntimeService,
                 ProgressIndicatorService,
                 UserAgent,
                 $filter,
                 PeopleSearchService) {
            var vm = this;
            vm.isScrolled = false;
            vm.isLoading = false;
            vm.appCenterCtrl = $scope.appCenterCtrl || {};
            vm.copyEmailFieldOn = false;
            vm.isProfile = true;
            vm.directReportsToogle = true;
            vm.managerToggle = true;
            vm.isIE = UserAgent.isIE();
            vm.linksSupported = UserAgent.isNativeAppVersionIsEqualOrAbove('3.3') || UserAgent.isBrowser();
            // Do not use the nativeEmail for hub macapp v1 as the client side has not implemented it yet, the current macapp version is 9.1 so need to exclude the mac
            vm.nativeEmailClientSupported = UserAgent.isNativeAppVersionIsEqualOrAbove('3.3') && !UserAgent.isMac();
            vm.copyEmailSupported = UtilService.copyEmailSupported();
            vm.appCenterCtrl.searchFieldOn = false;
            vm.isBrowser = UserAgent.isBrowser();

            this.isAWJadeDesktop = UserAgent.isAWJadeDesktop();
            this.templateUrl = UserAgent.isAWJadeMobile() ? 'peopleDetail.html' : 'peopleDetailBrowser.html';

            // Added for hub
            vm.isIOS = UserAgent.isIOS();

            function init() {
                vm.userId = $state.params.userId;
                getUserDetails(vm.userId);
            }

            function startLoading() {
                vm.isLoading = true;
            }

            function doneLoading() {
                vm.isLoading = false;
            }

            var getUserDetails = function(userId) {
                startLoading();
                PeopleService.getUserDetails(userId).then(function(response) {
                    vm.user = response;
                    vm.user.initial = PeopleService.getInitial(vm.user);
                    vm.user.address = PeopleService.getAddress(vm.user);
                    PeopleSearchService.addRecentVisitedUser(PeopleService.constructUserObj(vm.user));
                    loadOrgHierarchy(vm.user);
                }, function() {
                    doneLoading();
                });
            };

            var loadOrgHierarchy = function(user) {
                vm.directReports = [];
                vm.managers = [];
                vm.peers = [];
                var orgUrl = _.find(user.links, {'rel': 'orgHierarchy'}).href;
                PeopleService.getUserOrgHierarchy(orgUrl).then(function(response) {
                    vm.directReports = PeopleService.getUsers(response.directReports);
                    vm.managers = PeopleService.getUsers(response.managers);
                    vm.managers.unshift(PeopleService.constructUserObj(vm.user));
                    doneLoading();
                });
            };

            vm.backBtnAction = function() {
                window.history.back();
            };

            vm.copyEmail = function(value) {
                var copyStatus = CopyToClipboardService.copy(value.emailAddress);
                if (copyStatus) {
                    value.isCopied = true;
                    $timeout(function() {
                        value.isCopied = false;
                    }, 3000);
                }
            };

            vm.openSocialUrl = function(value) {
                ClientRuntimeService.openUrl(value, 3); //3 means the url should always be opened in external browser. Refer JadeV2RuntimeService for other types
            };

            vm.toggleProfileTab = function() {
                vm.isProfile = !vm.isProfile;
            };

            vm.getManagerLabel = function() {
                var managerCount = vm.managerToggle ? vm.managers.length - 2 : vm.managers.length - 1;
                return managerCount > 1 ? managerCount + ' ' + $filter('i18n')('app.people.labels.managers') : managerCount + ' ' + $filter('i18n')('app.people.labels.manager');
            };

            vm.openEmail = function(emailAddress) {
                ClientRuntimeService.openEmail(emailAddress);
            };

            vm.openTel = function(phoneNumber) {
                ClientRuntimeService.openTel(phoneNumber);
            };

            vm.openSms = function(phoneNumber) {
                ClientRuntimeService.openSms(phoneNumber);
            };

            vm.openMaps = function(address) {
                if (UserAgent.isAWJadeMobile()) {
                    ClientRuntimeService.openMaps(address);
                } else {
                    ClientRuntimeService.openUrl("https://www.google.com/maps?q=" + address, 3); //3 means the url should always be opened in external browser. Refer JadeV2RuntimeService for other types
                }
            };

            // Hub specific functions
            vm.openSearch = function() {
                $state.go("people.search");
            };

            $scope.$on('Desktop-People-Details-Refresh', function() {
                init();
            });

            init();
        }]);
})(angular.module("com.vmware.greenbox.appCenter"));

// Directive will be needed when Copy Email functionality is integrated in future.
(function(module) {
    module.directive('userItem', ['$state', '$timeout', 'CopyToClipboardService', 'ClientRuntimeService', 'UserAgent', 'UtilService', function($state, $timeout, CopyToClipboardService, ClientRuntimeService, UserAgent, UtilService) {
        return {
            restrict: 'A',
            scope: {
                user: '='
            },
            replace: true,
            templateUrl: 'app-v2/people/userItem.html',
            link: function(scope, element, attr) {
                scope.nativeEmailClientSupported = UserAgent.isNativeAppVersionIsEqualOrAbove('3.3');
                scope.copyEmailSupported = UtilService.copyEmailSupported();

                scope.userDetails = function(user) {
                    $state.go('people.details', {
                        userId: encodeURIComponent(user.id)
                    });
                };

                scope.copyEmail = function(value) {
                    var copyStatus = CopyToClipboardService.copy(value.email);
                    if (copyStatus) {
                        value.isCopied = true;
                        $timeout(function() {
                            value.isCopied = false;
                        }, 3000);
                    }
                };

                scope.openEmail = function(emailAddress) {
                    ClientRuntimeService.openEmail(emailAddress);
                };
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

var appCenter = angular.module("com.vmware.greenbox.appCenter", [
    'ngCookies',
    'ngSanitize',
    'greenbox.appcenter.templates',
    'greenbox.components.templates',
    'com.vmware.workspace.services.rest',
    'com.vmware.workspace.components.modal',
    'com.vmware.greenbox.services.offlineService',
    'com.vmware.workspace.services.localization',
    'com.vmware.workspace.components.rating',
    'com.vmware.workspace.components.symbol',
    'com.vmware.workspace.components.spinner',
    'com.vmware.workspace.components.dropdown',
    'com.vmware.workspace.components.notify',
    'com.vmware.workspace.components.toast',
    'com.vmware.workspace.components.frameDrawer',
    'com.vmware.workspace.components.lineClamp',
    'com.vmware.workspace.components.message',
    'com.vmware.greenbox.l10n',
    'angular-gestures',
    'angular-carousel',
    'ui.sortable',
    'ui.router']);

appCenter.config(['$stateProvider', '$urlRouterProvider', '$provide', function($stateProvider, $urlRouterProvider, $provide) {
    $provide.decorator('$state', function($delegate, $rootScope) {
        $rootScope.$on('$stateChangeStart', function(event, state, params, fromState) {
            $delegate.next = state;
            $delegate.prev = fromState;
            $delegate.toParams = params;
        });
        return $delegate;
    });

    $stateProvider.state('catalog', {
        url: '/catalog',
        templateUrl: 'app-v2/catalog/catalog.html',
        controller: 'CatalogController',
        controllerAs: 'catalogCtrl',
        activeTab: 'catalog',
        mobilePageTitle: 'myapps.mobilepagetitle.apps',
        resolve: {resolver: resolver}
    }).state('bookmarks', {
        url: '/bookmarks',
        templateUrl: 'app-v2/bookmarks/bookmarks.html',
        controller: 'BookmarksController',
        controllerAs: 'bookmarksCtrl',
        activeTab: 'bookmarks',
        mobilePageTitle: 'myapps.mobilepagetitle.apps',
        resolve: {resolver: resolver}
    }).state('catalog.details', {
        url: '/details/:appId',
        templateUrl: 'app-v2/details/details.html',
        controller: 'DetailsController',
        controllerAs: 'detailsCtrl',
        activeTab: 'details',
        mobilePageTitle: 'myapps.mobilepagetitle.details'
    }).state('bookmarks.details', {
        url: '/details/:appId',
        templateUrl: 'app-v2/details/details.html',
        controller: 'DetailsController',
        controllerAs: 'detailsCtrl',
        activeTab: 'details',
        mobilePageTitle: 'myapps.mobilepagetitle.details'
    }).state('support', {
        url: '/support',
        templateUrl: 'app-v2/support/support.html',
        controller: 'SupportController',
        controllerAs: 'supportCtrl',
        activeTab: 'support',
        mobilePageTitle: 'myapps.mobilepagetitle.support'
    }).state('support.pageLink', {
        url: '/:pageLink',
        templateUrl: 'app-v2/support/support.html',
        controller: 'SupportController',
        controllerAs: 'supportCtrl',
        activeTab: 'support',
        mobilePageTitle: 'myapps.mobilepagetitle.support'
    }).state('people', {
        url: '/people',
        templateUrl: 'app-v2/people/people.html',
        controller: 'PeopleController',
        controllerAs: 'peopleCtrl',
        activeTab: 'people',
        mobilePageTitle: '',
        resolve: {resolver: resolver}
    }).state('people.details', {
        url: '/details/:userId',
        templateUrl: 'app-v2/people/userDetails.html',
        controller: 'UserDetailsController',
        controllerAs: 'userDetailsCtrl',
        activeTab: 'peopleDetails',
        mobilePageTitle: ''
    }).state('settings', {
        url: '/settings',
        templateUrl: 'app-v2/settings/settings.html',
        controller: 'SettingsController',
        controllerAs: 'settingsCtrl',
        activeTab: 'settings',
        mobilePageTitle: 'myapps.mobilepagetitle.settings'
    }).state('settings.pageLink', {
        url: '/:pageLink',
        templateUrl: 'app-v2/settings/settings.html',
        controller: 'SettingsController',
        controllerAs: 'settingsCtrl',
        activeTab: 'settings',
        mobilePageTitle: 'myapps.mobilepagetitle.settings'
    }).state('recommendedApps', {
        url: '/recommendedApps',
        templateUrl: 'app-v2/catalog/recommendedAppsContainer.html',
        controller: 'CatalogController',
        controllerAs: 'catalogCtrl',
        activeTab: 'recommendedApps',
        mobilePageTitle: 'myapps.mobilepagetitle.recommendedapps'
    }).state('notifications', {
        url: '/notifications',
        templateUrl: 'app-v2/notifications/notificationMobile.html',
        controller: 'NotificationController',
        controllerAs: 'notificationCtrl',
        activeTab: 'notifications',
        mobilePageTitle: 'myapps.mobilepagetitle.notification'
    }).state('notificationsDeeplink', {
        url: '/notifications/:notificationId',
        templateUrl: 'app-v2/notifications/notificationMobile.html',
        controller: 'NotificationController',
        controllerAs: 'notificationCtrl',
        activeTab: 'notifications',
        mobilePageTitle: 'myapps.mobilepagetitle.notification'
    }).state('newApps', {
        url: '/notifications/newApps/:notificationId',
        templateUrl: 'app-v2/notifications/newEntitlementsMobile.html',
        controller: 'NewAppsNotificationController',
        controllerAs: 'ctrl',
        activeTab: 'notifications',
        mobilePageTitle: 'myapps.mobilepagetitle.notification.newapps'
    }).state('archivedNotifications', {
        url: '/archivedNotifications',
        templateUrl: 'app-v2/notifications/notificationMobile.html',
        controller: 'NotificationController',
        controllerAs: 'notificationCtrl',
        activeTab: 'archivedNotifications',
        mobilePageTitle: 'myapps.mobilepagetitle.archived'
    }).state('newEntitlementsDisplay', {
        url: '/newEntitlementsDisplay',
        templateUrl: 'app-v2/catalog/catalog.html',
        controller: 'CatalogController',
        controllerAs: 'catalogCtrl',
        activeTab: 'catalog',
        mobilePageTitle: 'myapps.mobilepagetitle.apps',
        resolve: {resolver: resolver}
    });

    $stateProvider.state('index', {
        url: '/index',
        controller: ['StateResolveService', function(StateResolveService) {
            StateResolveService.navigateToLastVisitedPage();
        }],
        /* Waiting on following promises to resolved. This would all the promises that would be required for app to initialize
        before loading index controller. */
        resolve: {
            initAppCalls: function(BootstrapService) {
                return BootstrapService.getInitAppCallsPromise();
            }
        }
    });

    $urlRouterProvider.otherwise('/index');

    //state resolver, to check if user is allowed to navigate to the state
    function resolver(StateResolveService, $q, $state) {
        var deferred = $q.defer();
        if (StateResolveService.canNavigate($state)) {
            deferred.resolve();
        } else {
            deferred.reject();
        }
        return deferred.promise;
    }
}]);

var $stateProviderRef = null;
//state resolver, to check if user is allowed to navigate to the state
function resolver(StateResolveService, $q, $state) {
    var deferred = $q.defer();
    if (StateResolveService.canHubNavigate($state)) {
        deferred.resolve();
    } else {
        deferred.reject();
    }
    return deferred.promise;
}

appCenter.config(['$stateProvider', '$urlRouterProvider', '$provide', '$transitionsProvider',
    function($stateProvider, $urlRouterProvider, $provide, $transitionsProvider) {
        $provide.decorator('$state', function($delegate, UpdateUrlParamsService, $rootScope, $window) {
            $transitionsProvider.onStart({}, function(trans) {
                $delegate.next = trans.to();
                $delegate.prev = trans.from();
                $delegate.toParams = trans.params();

                // Only show the nativenav on the following states
                var showNativenavPages = function() {
                    return ['apps', 'apps.list', 'apps.search', 'people', 'people.details', 'people.search'].indexOf($delegate.next.name) > -1;
                };

                if ($delegate.next.name !== $delegate.prev.name && showNativenavPages()) {
                    UpdateUrlParamsService.showNativenav();
                }

                if ($delegate.prev.name == 'apps.notifications' && $delegate.next.name == 'apps') {
                    var deviceOnline = $window.navigator.onLine || true;
                    $rootScope.$broadcast('tabShown', deviceOnline);
                }
            });
            return $delegate;
        });

        $stateProvider.state('apps', {
            url: '/apps',
            component: 'apps',
            resolve: {resolver: resolver}
        }).state('apps.search', {
            url: '/search-app',
            component: 'appSearch'
        }).state('apps.list', {
            url: '/:type/:category',
            component: 'appList',
            params: {
                category: {squash: true, value: null}
            }
        }).state('apps.details', {
            url: '/details/:appId',
            component: 'appDetails'
        }).state('apps.list.details', {
            url: '/details/:appId',
            component: 'appDetails'
        }).state('people', {
            url: '/people',
            component: 'people',
            resolve: {resolver: resolver}
        }).state('people.details', {
            url: '/details/:userId',
            component: 'peopleDetail',
            resolve: {resolver: resolver}
        }).state('people.search', {
            url: '/search-people',
            component: 'peopleSearch'
        }).state('changePassword', {
            url: '/support/change-password',
            component: 'changePassword',
            activeTab: 'changePassword',
            resolve: {resolver: resolver}
        });

        $stateProvider.state('index', {
            url: '/index',
            controller: ['$location', function($location) {
                $location.path('/apps');
                //replace the location index to /apps, else back button will always take to /index
                $location.replace();
            }],
            /* Waiting on following promises to resolved. This would all the promises that would be required for app to initialize
            before loading index controller. */
            resolve: {
                initAppCalls: function(BootstrapService) {
                    return BootstrapService.getInitAppCallsPromise();
                }
            }
        });

        $urlRouterProvider.otherwise('/index');
        $stateProviderRef = $stateProvider;
    }]);

appCenter.run(['UserAgent', function(UserAgent) {
    var V2HubNotifications = _.get(window, 'workspaceOne.featureFlags.V2_HUB_NOTIFICATIONS', false);
    if (UserAgent.isNativeAppVersionIsEqualOrAbove("9.2")) {
        $stateProviderRef.state('notifications', {
            url: '/notifications/:filter',
            component: 'notificationsV2',
            resolve: {resolver: resolver},
            params: {
                filter: {squash: true, value: 'all'}
            }
        }).state('notificationsDeeplink', {
            url: '/notifications/:notificationId/:filter',
            component: 'notificationsV2',
            resolve: {resolver: resolver},
            params: {
                filter: {squash: true, value: 'all'}
            }
        }).state('notifications.details', {
            url: '/details/:notificationId',
            component: 'notificationDetails',
            resolve: {resolver: resolver}
        }).state('notifications.filter-details', {
            url: '/details/:filter/:notificationId',
            component: 'notificationDetails',
            resolve: {resolver: resolver}
        }).state('newApps', {
            url: '/notifications/newApps/:notificationId',
            component: 'newAppsNotificationsList',
            activeTab: 'newApps',
            resolve: {resolver: resolver}
        });
    } else if (V2HubNotifications && UserAgent.isNativeAppVersionBelow("9.2")) {
        $stateProviderRef.state('apps.notifications', {
            url: '/notifications/:filter',
            component: 'notificationsV2',
            resolve: {resolver: resolver},
            params: {
                filter: {squash: true, value: 'all'}
            }
        }).state('apps.notificationsDeeplink', {
            url: '/notifications/:notificationId/:filter',
            component: 'notificationsV2',
            resolve: {resolver: resolver},
            params: {
                filter: {squash: true, value: 'all'}
            }
        }).state('notificationsDeeplink', {
            url: '/notifications/:notificationId',
            redirectTo: 'apps.notificationsDeeplink'
        }).state('apps.notifications.details', {
            url: '/details/:notificationId',
            component: 'notificationDetails',
            resolve: {resolver: resolver}
        }).state('apps.notifications.filter-details', {
            url: '/details/:filter/:notificationId',
            component: 'notificationDetails',
            resolve: {resolver: resolver}
        }).state('apps.newApps', {
            url: '/notifications/newApps/:notificationId',
            component: 'newAppsNotificationsList',
            activeTab: 'newApps',
            resolve: {resolver: resolver}
        });
    } else {
        $stateProviderRef.state('apps.notifications', {
            url: '/notifications',
            component: 'notifications',
            resolve: {resolver: resolver}
        }).state('apps.notificationsDeeplink', {
            url: '/notifications/:notificationId',
            component: 'notifications',
            resolve: {resolver: resolver}
        }).state('notificationsDeeplink', {
            url: '/notifications/:notificationId',
            redirectTo: 'apps.notificationsDeeplink'
        }).state('apps.archivedNotifications', {
            url: '/archivedNotifications',
            component: 'notifications',
            activeTab: 'archivedNotifications',
            resolve: {resolver: resolver}
        }).state('apps.newApps', {
            url: '/notifications/newApps/:notificationId',
            component: 'newAppsNotificationsList',
            activeTab: 'newApps',
            resolve: {resolver: resolver}
        });
    }
}]);

appCenter.config(['$stateProvider', '$urlRouterProvider', '$provide', '$transitionsProvider',
    function($stateProvider, $urlRouterProvider, $provide, $transitionsProvider) {
        $provide.decorator('$state', function($delegate) {
            $transitionsProvider.onStart({}, function(trans) {
                $delegate.next = trans.to();
                $delegate.prev = trans.from();
                $delegate.toParams = trans.params();
            });
            return $delegate;
        });

        $stateProvider.state('apps', {
            url: '/apps',
            component: 'apps',
            activeTab: 'apps',
            browserPageTitle: 'hub.nav.label.apps',
            resolve: {resolver: resolver}
        }).state('apps.list', {
            url: '/:type/:category',
            component: 'appList',
            params: {
                category: {squash: true, value: null}
            },
            activeTab: 'apps',
            browserPageTitle: 'hub.nav.label.apps'
        }).state('apps.details', {
            url: '/details/:appId',
            component: 'appDetails'
        }).state('apps.list.details', {
            url: '/details/:appId',
            component: 'appDetails',
            activeTab: 'apps',
            browserPageTitle: 'hub.nav.label.apps'
        }).state('apps.favoritesedit', {
            url: '/favoritesedit',
            component: 'favorites'
        }).state('people', {
            url: '/people',
            component: 'people',
            activeTab: 'people',
            browserPageTitle: 'hub.nav.label.people',
            resolve: {resolver: resolver}
        }).state('people.details', {
            url: '/details/:userId',
            component: 'peopleDetail',
            browserPageTitle: 'hub.nav.label.people',
            resolve: {resolver: resolver}
        }).state('people.search', {
            url: '/search-people',
            component: 'peopleSearch',
            browserPageTitle: 'hub.nav.label.people'
        }).state('settings', {
            url: '/settings',
            component: 'settings',
            activeTab: 'settings',
            browserPageTitle: 'hub.nav.label.settings'
        }).state('notifications', {
            url: '/notifications/:filter',
            component: 'notificationsV2',
            activeTab: 'notifications',
            browserPageTitle: 'hub.nav.label.notification',
            resolve: {resolver: resolver},
            params: {
                filter: {squash: true, value: 'all'}
            }
        }).state('notifications.details', {
            url: '/details/:notificationId',
            component: 'notificationDetails',
            browserPageTitle: 'hub.nav.label.notification',
            resolve: {resolver: resolver}
        }).state('notifications.filter-details', {
            url: '/details/:filter/:notificationId',
            component: 'notificationDetails',
            resolve: {resolver: resolver}
        }).state('notifications.newApps', {
            url: '/newApps/:notificationId',
            component: 'notificationsNewAppsV2',
            browserPageTitle: 'hub.nav.label.notification',
            resolve: {resolver: resolver}
        }).state('newAppsList', {
            url: '/newApps/:notificationId',
            component: 'newAppsNotificationsList',
            resolve: {resolver: resolver},
            activeTab: 'newApps'
        });

        $stateProvider.state('index', {
            url: '/index',
            controller: ['StateResolveService', '$location', function(StateResolveService, $location) {
                $location.path('/apps');
                //replace the location index to /apps, else back button will always take to /index
                $location.replace();
            }],
            /* Waiting on following promises to resolved. This would all the promises that would be required for app to initialize
            before loading index controller. */
            resolve: {
                initAppCalls: function(BootstrapService) {
                    return BootstrapService.getInitAppCallsPromise();
                }
            }
        });

        $urlRouterProvider.otherwise('/index');

        //state resolver, to check if user is allowed to navigate to the state
        function resolver(StateResolveService, $q, $state) {
            var deferred = $q.defer();
            if (StateResolveService.canHubNavigate($state)) {
                deferred.resolve();
            } else {
                deferred.reject();
            }
            return deferred.promise;
        }
    }]);

appCenter.config(['$stateProvider', '$urlRouterProvider', '$provide', '$transitionsProvider',
    function($stateProvider, $urlRouterProvider, $provide, $transitionsProvider) {
        $provide.decorator('$state', function($delegate) {
            $transitionsProvider.onStart({}, function(trans) {
                $delegate.next = trans.to();
                $delegate.prev = trans.from();
                $delegate.toParams = trans.params();
            });
            return $delegate;
        });

        $stateProvider.state('apps', {
            url: '/apps',
            component: 'apps',
            desktopPageTitle: 'hub.nav.label.apps',
            currentTab: 'apps'
        }).state('apps.list', {
            url: '/:type/:category',
            component: 'appList',
            desktopPageTitle: 'hub.nav.label.apps',
            currentTab: 'apps',
            params: {
                category: {squash: true, value: null}
            }
        }).state('apps.details', {
            url: '/details/:appId',
            component: 'appDetails',
            currentTab: 'apps'
        }).state('apps.list.details', {
            url: '/details/:appId',
            component: 'appDetails'
        }).state('apps.favoritesedit', {
            url: '/favoritesedit',
            component: 'favorites',
            currentTab: 'apps'
        }).state('people', {
            url: '/people',
            component: 'people',
            desktopPageTitle: 'hub.nav.label.people',
            currentTab: 'people'
        }).state('people.details', {
            url: '/details/:userId',
            component: 'peopleDetail',
            currentTab: 'people'
        }).state('notifications', {
            url: '/notifications/:filter',
            component: 'notificationsV2',
            activeTab: 'notifications',
            desktopPageTitle: 'hub.nav.label.notification',
            params: {
                filter: {squash: true, value: 'all'}
            }
        }).state('notifications.details', {
            url: '/details/:notificationId',
            component: 'notificationDetails',
            desktopPageTitle: 'hub.nav.label.notification'
        }).state('notifications.filter-details', {
            url: '/details/:filter/:notificationId',
            component: 'notificationDetails'
        }).state('notifications.newApps', {
            url: '/newApps/:notificationId',
            desktopPageTitle: 'hub.nav.label.notification',
            component: 'notificationsNewAppsV2'
        });

        $stateProvider.state('index', {
            url: '/index',
            controller: ['$location', function($location) {
                $location.path('/apps');
                //replace the location index to /apps, else back button will always take to /index
                $location.replace();
            }],
            /* Waiting on following promises to resolved. This would all the promises that would be required for app to initialize
            before loading index controller. */
            resolve: {
                initAppCalls: function(BootstrapService) {
                    return BootstrapService.getInitAppCallsPromise();
                }
            }
        });

        $urlRouterProvider.otherwise('/index');
    }]);

(function(module) {
    'use strict';

    module.controller('SearchController',
        ['CatalogService',
            '$timeout',
            '$scope',
            '$element',
            '$location',
            'DetailsService',
            'SearchService',
            'INSTALL_STATUS',
            'UserAgent',
            'UtilService',
            '$rootScope',
            'TenantCustomizationService',
            'ClientRuntimeService',
    function(CatalogService,
             $timeout,
             $scope,
             $element,
             $location,
             DetailsService,
             SearchService,
             INSTALL_STATUS,
             UserAgent,
             UtilService,
             $rootScope,
             TenantCustomizationService,
             ClientRuntimeService) {
        var vm = this;
        vm.excludeThinApps = !UserAgent.isThinAppSortSupportedBrowser();
        vm.innerControl = vm.control || {};
        vm.loading = false;
        vm.appCount = 0;
        vm.totalAppCount = 0;
        vm.isAWJadeMobile = UserAgent.isAWJadeMobile();
        var isHubApp = UtilService.isHub();

        function init() {
            vm.apps = [];

            vm.query = {
                name: ''
            };

            var searchObj = SearchService.getSearchQueryAndResults();

            vm.query.name = _.get(searchObj, "query", "");
            vm.apps = _.get(searchObj, "result", []);
            vm.appCount = _.get(searchObj, "appCount", 0);
            vm.totalAppCount = _.get(searchObj, "totalAppCount", 0);
        }

        var searchApplications = function(query) {
            return CatalogService.getFirstPage({searchText: query, selectedCategory: {}}, false, vm.excludeThinApps, false, true);
        };

        var getCatalogApps = function(entitlements) {
            var catalogApps = [];
            entitlements.forEach(function(entitlement) {
                var catalogApp = entitlement;

                var appStatus = catalogApp.installStatus;

                if (appStatus === "" || appStatus === undefined) {
                    appStatus = INSTALL_STATUS.NOT_ACTIVATED.nativeAction;
                } else if (!catalogApp.visible) {
                    appStatus = 'HIDDEN';
                } else if ((catalogApp.approvalRequired && ['NOT_ACTIVATED', 'ACTIVATION_FAILED'].indexOf(appStatus) >= 0) || (catalogApp.subType === 'THINAPP' && catalogApp.perDeviceActivationRequired)) {
                    appStatus = 'REQUEST';
                }

                catalogApp.isMdmApp = CatalogService.isMdmApp(catalogApp.type, catalogApp.subType);
                catalogApp.statusCode = CatalogService.getAppStatusCode(appStatus);
                catalogApp.isWebApp = CatalogService.isWebApp(catalogApp.type);
                catalogApp.isLaunchableApp = CatalogService.isLaunchableApp(catalogApp);
                catalogApp.isThinApp = CatalogService.isThinApp(catalogApp);
                catalogApp.isThinAppPackage = CatalogService.isThinAppPackage(catalogApp);
                catalogApp.isLaunchableThinapp = CatalogService.isLaunchableThinapp(catalogApp);
                catalogApp.isBookmarkableApp = CatalogService.isBookmarkableApp(catalogApp);
                catalogApp.isViewableThinappPackage = CatalogService.isViewableThinappPackage(catalogApp);
                catalogApp.launch = catalogApp._links.launch != undefined ? catalogApp._links.launch.href : "";
                CatalogService.populateTypeNameAndPlatformName(catalogApp);
                CatalogService.populateDisplayValForAppType(catalogApp);
                catalogApp.isTunnelRequired = CatalogService.isTunnelRequired(catalogApp);
                catalogApps.push(catalogApp);
            });
            return catalogApps;
        };

        vm.onsearch = function() {
            var query = vm.query.name;
            if (!query.length) {
                vm.clearSearchResults();
                return;
            }
            vm.noResults = false;
            vm.loading = true;
            searchApplications(query).then(function(response) {
                var hideCatalogTab = UtilService.getObjValue(TenantCustomizationService.getCustomizationSettings(), 'hideCatalogTab', false);
                vm.isLoadFromDbFailed = _.get(response, 'loadFromDbFailed', false);
                if (hideCatalogTab) {
                    response.entitlements = [];
                    response.categories = [];
                    vm.apps = [];
                    if (response.bookmarks) {
                        vm.apps = getCatalogApps(response.bookmarks);
                    }
                } else {
                    vm.apps = getCatalogApps(response.entitlements);
                }

                // then categories pushed in the same array to be able to
                // use keyboard shortcuts: up/down arrows
                var categoryApps = [];
                if (isHubApp && !TenantCustomizationService.isHubCategoryEnabled()) {
                    categoryApps = [];
                    vm.appCount = vm.apps.length;
                } else {
                    vm.categories = response.categories.forEach(function(category) {
                        categoryApps.push({
                            isCategory: true,
                            categoryName: category.categoryName,
                            length: category.entitlements.length,
                        });
                        categoryApps = categoryApps.concat(getCatalogApps(category.entitlements));
                    });
                    vm.apps = (categoryApps.length > 0) ? vm.apps.concat(categoryApps) : vm.apps;
                    vm.appCount = vm.apps.length - response.categories.length;
                }
                vm.totalAppCount = response.entitlements.length;
                vm.noResults = vm.apps.length === 0;
                vm.loading = false;
            });

            // for hub browsers, needs to disable scroll on the content-container while search is on
            if (UtilService.isHubBrowsers()) {
                $rootScope.$broadcast('hub-browser-search-on');
            }
        };

        vm.details = function(app) {
            var searchObj = {
                query: vm.query.name,
                result: vm.apps,
                appCount: vm.appCount,
                totalAppCount: vm.totalAppCount
            };
            SearchService.setSearchQueryAndResults(searchObj);
            location.hash = '#' + $location.path() + '/details/' + encodeURIComponent(app.appId);
        };

        $scope.$watch('ctrl.isActive', function(isActive) {
            if (isActive) {
                $element.find('input').focus();
            }
        });

        vm.clearSearchResults = function() {
            vm.apps = [];
            vm.query.name = '';
            vm.appCount = 0;
            vm.totalAppCount = 0;
            // for hub browsers, needs to disable scroll on the content-container
            if (UtilService.isHubBrowsers()) {
                $rootScope.$broadcast('hub-browser-search-off');
            }
        };

        vm.innerControl.clearSearch = function() {
            vm.clearSearchResults();
            $element.find('input').blur();
        };

        vm.scrimClearSearch = function() {
            // In WS1 ios and android mobile app and Samsung DeX non-docked mode, clicking on the scrim DOES NOT dismiss the search results
            // In browser and desktopapp and Samsung DeX including docked mode click on scrim will clear search
            if (UserAgent.isAWJadeMobile() && !UserAgent.isAWJadeDocked()) {
                return;
            }
            vm.clearSearchResults();
        };

        // This clean search is for the x button inside the input field
        vm.xButtonClearSearch = function() {
            vm.clearSearchResults();
        };

        vm.goBack = function() {
            vm.clearSearchResults();
            SearchService.clearSearchQueryAndResults();
            UtilService.goBack();
        };

        init();
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('searchDropdown', ['$document', '$timeout', function($document, $timeout) {
        var index = -1;

        function onIndexChange(element, activeIndex, searchItem) {
            $timeout(function() {
                if (activeIndex >= 0) {
                    $timeout(function() {
                        var container = element;
                        var item = element.find(searchItem);
                        if (item && item[0]) {
                            var fromTop = item.offset().top;
                            var height = item.outerHeight();
                            container.animate({scrollTop: container.scrollTop() + fromTop - height}, 'fast');
                        }
                    });
                }
            });
        }

        function link(scope, element, attrs) {
            function onKeyDown(evt) {
                var activeIndex = index;
                if (evt.which === 40) { // down arrow
                    activeIndex += 1;
                } else if (evt.which === 38) { // up arrow
                    activeIndex -= 1;
                }

                if (activeIndex !== index) {
                    index = activeIndex;
                    scope.activeIndex = activeIndex;
                    onIndexChange(element, activeIndex, attrs.searchItem);
                }
            }

            $document.on('keydown', onKeyDown);

            scope.$on('$destroy', function() {
                index = -1;
                $document.off('keydown', onKeyDown);
            });
        }

        return {
            restrict: 'A',
            replace: true,
            link: link,
            templateUrl: function(tElement, tAttrs) {
                return tAttrs.templateUrl;
            }
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    module.directive('searchInput', ['$document', '$timeout', function($document, $timeout) {
        return {
            restrict: 'A',
            replace: true,
            scope: {
                isActive: '=',
                control: '='
            },
            controller: '@',
            name: 'searchController',
            controllerAs: 'ctrl',
            templateUrl: function(tElement, tAttrs) {
                return tAttrs.templateUrl;
            },
            bindToController: true
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.service('SearchService', [function() {
        var service = this;
        var searchQueryAndResults;

        service.setSearchQueryAndResults = function(searchQueryAndResults) {
            this.searchQueryAndResults = searchQueryAndResults;
        };
        service.getSearchQueryAndResults = function() {
            return this.searchQueryAndResults;
        };
        service.clearSearchQueryAndResults = function() {
            this.searchQueryAndResults = undefined;
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));

//TODO: Move services, appCenter, launcher components into different modules
// Define a new module for our app. The array holds the names of dependencies if any.
appCenter.factory('lodash', ['$window',
    function($window) {
        // place lodash include before angular
        return $window._;
    }
]);

//Retrieves or overrides whether to generate an error when a rejected promise is not handled.
//This feature is enabled by default.
appCenter.config(['$qProvider', function($qProvider) {
    $qProvider.errorOnUnhandledRejections(false);
}]);

//angular 1.6.x adds ! in URL, we need to remove this for our routes to work correctly
appCenter.config(['$locationProvider', function($locationProvider) {
    $locationProvider.hashPrefix("");
}]);

//prevent pre-assignment bindings, we need to use $onInit in directive controller
appCenter.config(function($compileProvider) {
    $compileProvider.preAssignBindingsEnabled(true);
});

appCenter.config(['LocalizationProvider', '$injector', 'l10n_en', function(LocalizationProvider, $injector, l10n_en) {
    var l10n = $injector.has('l10n') ? $injector.get('l10n') : {};
    angular.extend(l10n_en, l10n);
    LocalizationProvider.setL10nMap(l10n_en);
}]);

//HammerJs Configuration
appCenter.config(['hammerDefaultOptsProvider', function(hammerDefaultOptsProvider) {
    //Setting up gestures that need to be recognized by HammerJs
    hammerDefaultOptsProvider.set({
        recognizers: [[Hammer.Press, {time: 500}]]//Minimum time to detect press as a hold event.
    });
}]);

appCenter.config(function($httpProvider) {
    var uccRetryCount = 0;
    var refreshingUccCookie = null;

    function notifyAndRefresh($notify, ConfigService, $timeout, $injector, entitlementRefreshMsg) {
        $notify.warning(entitlementRefreshMsg || 'api.session.expired.retry');
        ConfigService.doNotRefreshCache = true;
        if (!ConfigService.isReloading) {
            ConfigService.isReloading = true;
            $timeout(function() {
                var LocationReloadService = $injector.get('LocationReloadService');
                LocationReloadService.reload();
            }, 3000, false);
        }
    }

    function tryRenewingUserCatalogContext(ConfigService, $injector, $notify, $q, response, $timeout) {
        return ConfigService.refreshUserCatalogContextToken().then(function() {
            return $q.resolve();
        }, function() {
            //If refresh UCC renew call failed for some reason, notify session expired and refresh
            notifyAndRefresh($notify, ConfigService, $timeout, $injector);
        });
    }

    function checkisHZNAndRenewSession(ConfigService, $injector, $notify, $q, response, $timeout) {
        return ConfigService.apiAuthenticationVerify()
            .then(function(successResponse) {
                ConfigService.refreshingCookie = false;
            }, function(failureResponse) {
                if (failureResponse.status === 404 && uccRetryCount < 3) {//UCC is not valid, then try to renew it
                    //Increment ucc count
                    uccRetryCount++;
                    return tryRenewingUserCatalogContext(ConfigService, $injector, $notify, $q, response);
                } else if (uccRetryCount >= 3) {
                    uccRetryCount = 0;
                    var SignOutService = $injector.get('SignOutService');
                    SignOutService.continueSignOut();
                } else {//We get 401 if HZN is not valid, then notify and refresh
                    notifyAndRefresh($notify, ConfigService, $timeout, $injector);
                }
                ConfigService.refreshingCookie = false;
            });
    }

    var http401Interceptor = ['$q', '$notify', '$timeout', '$injector', 'LocalStorageConstants',
        function($q, $notify, $timeout, $injector, localStorageConstants) {
        return {
            'responseError': function(response) {
                var status = response.status;
                var ConfigService = $injector.get('ConfigService');
                var httpProxyService = $injector.get('HttpProxyService');
                var ClientRuntimeService = $injector.get('ClientRuntimeService');
                var UserAgent = $injector.get('UserAgent');
                var deferred = $q.defer();
                if (status === 401 && !ConfigService.isReloading) {
                    //If user context is missing or invalid
                    //first 401 will try to refresh the UCC cookie, any other UCC after that will be Queued
                    //because we use the same promise for all the subsequent 401
                    if (!refreshingUccCookie) {
                        refreshingUccCookie = checkisHZNAndRenewSession(ConfigService, $injector, $notify, $q, response, $timeout);
                    }
                    if (response.data && response.data.code && (response.data.code === "userContext.invalid" || response.data.code === "userContext.missing")) {
                        refreshingUccCookie.then(function() {
                            refreshingUccCookie = null;
                            $injector.get("$http")(response.config).then(function(resp) {
                                if (UserAgent.isHubApp()) {
                                    ClientRuntimeService.refreshUCC();
                                }
                                deferred.resolve(resp);
                            }, function() {
                                deferred.reject();
                            });
                        }, function() {
                            refreshingUccCookie = null;
                            deferred.reject();
                        });
                    } else {
                        //All other scenarios like HZN is expired or invalid
                        notifyAndRefresh($notify, ConfigService, $timeout, $injector);
                    }
                } else if (status === 403 || status === 409) {
                    if (response.data.code === "appId.not.found.incache") {
                            httpProxyService.clear(localStorageConstants.ENTITLEMENTS);
                            httpProxyService.clear(localStorageConstants.BOOKMARKS);
                            httpProxyService.clear(localStorageConstants.NEW_APP);
                            httpProxyService.clear(localStorageConstants.RECOMMENDED_APPS);
                            var currentHash = window.location.hash;
                            if (currentHash.indexOf('/details/') !== -1) {
                                window.history.back();
                            }
                            notifyAndRefresh($notify, ConfigService, $timeout, $injector, "api.entitlements.reload");
                        } else if (response.data.code !== "admin.terms.not.accepted") {
                        notifyAndRefresh($notify, ConfigService, $timeout, $injector);
                    }
                    return $q.reject(response);
                } else {
                    return $q.reject(response);
                }

                return deferred.promise;
            }
        };
    }];

    var http412Interceptor = ['$q', '$notify', '$timeout', '$injector', 'JadeV2Scheme', 'HorizonClientScheme',
        function($q, $notify, $timeout, $injector, JadeV2Scheme, HorizonClientScheme) {
            return {
                'responseError': function(response) {
                    var status = response.status;
                    var ConfigService = $injector.get('ConfigService');
                    var UtilService = $injector.get('UtilService');
                    var UserAgent = $injector.get('UserAgent');
                    http412InterceptorHelper(status, $notify, $timeout, ConfigService, UserAgent, UtilService, JadeV2Scheme, HorizonClientScheme);
                    // otherwise
                    return $q.reject(response);
                }
            };
        }];

    //Prompt user if a 5xx error occurs.
    var http5xxInterceptor = ['$q', '$notify', function($q, $notify) {
        return {
            'responseError': function(response) {
                http5xxInterceptorHelper(response, $notify);
                return $q.reject(response);
            }
        };
    }];

    var timeoutInterceptor = ['$q', '$notify', '$injector', function($q, $notify, $injector) {
        return {

            'request': function(config) {
                var TIMEOUT_MILLIS = 120000;
                //For every new request set the retry attempt to 0. This variable serves as count of how many times
                //a request is retried.
                if (!config.retryAtempt) {
                    config.retryAtempt = 0;
                }
                if (!config.timeout) {
                    config.timeout = TIMEOUT_MILLIS;
                }
                return config || $q.when(config);
            },

            'responseError': function(response) {
                var MAX_RETRY = 3;
                var TIMEOUT_STATUS = 0;
                if (response.status === TIMEOUT_STATUS) {
                    if (response.config.retryAtempt < MAX_RETRY) {
                        response.config.retryAtempt++;
                        var $http = $injector.get('$http');
                        return $http(response.config);
                    } else {
                        $notify.warning('api.timeout');
                        return $q.reject(response);
                    }
                }
                return $q.reject(response);
            }
        };
    }];

    var httpCsrfInterceptor = ['$cookies', function($cookies) {
        return {
            'request': function(request) {
                if ($cookies.get('EUC_XSRF_TOKEN')) {
                    request.headers['X-XSRF-TOKEN'] = $cookies.get('EUC_XSRF_TOKEN');
                } else {
                    request.headers['X-XSRF-TOKEN'] = '';
                }
                return request;
            }
        };
    }];

    //implement sync call in angular
    var httpQueue = ['$q', function($q) {
        var queue = [];
        var syncEnabled = false;

        function executeTheQueuedCall() {
            syncEnabled = false;
            queue.shift();
            if (queue.length > 0) {
                queue[0]();
            }
        }

        return {
            request: function(config) {
                //queue only api calls not html and js files
                if ((syncEnabled || config.sync) && config.url.indexOf('.html') === -1) {
                    var deferred = $q.defer();
                    queue.push(function() {
                        deferred.resolve(config);
                    });

                    if (queue.length === 1) {
                        queue[0]();
                    }
                    syncEnabled = true;
                    return deferred.promise;
                } else {
                    return config;
                }
            },

            response: function(response) {
                executeTheQueuedCall();
                return response;
            },

            responseError: function(responseError) {
                executeTheQueuedCall();
                return $q.reject(responseError);
            }
        };
    }];

    $httpProvider.interceptors.push(httpCsrfInterceptor);
    $httpProvider.interceptors.push(timeoutInterceptor);
    $httpProvider.interceptors.push(http401Interceptor);
    $httpProvider.interceptors.push(http412Interceptor);
    $httpProvider.interceptors.push(http5xxInterceptor);
    $httpProvider.interceptors.push(httpQueue);
});

appCenter.run(['$http', '$cookies', function($http) {
    $http.defaults.xsrfCookieName = 'EUC_XSRF_TOKEN';
}]);

function http412InterceptorHelper(status, $notify, $timeout, ConfigService, UserAgent, UtilService, JadeV2Scheme, HorizonClientScheme) {
    // 412 is thrown when a security header expected is missing.
    // When API returns this error, then that means, we can try login.
    if (status === 412) {
        $notify.error('api.security.header.invalid.relogin');
        $timeout(function() {
            if (UserAgent.isHorizon()) {
                UtilService.openURIScheme(HorizonClientScheme.LOGOUT);
            } else if (UserAgent.isAWJadeV2()) {
                UtilService.openURIScheme(JadeV2Scheme.REFRESH_COOKIE);
            } else {
                ConfigService.getLogoutUrl().then(function(logoutUrl) {
                    window.location.href = logoutUrl;
                });
            }
        }, 3000, false);
    }
}

function http5xxInterceptorHelper(error, $notify) {
    var suppressErrors = ['mobile.flows.notifications.registration.failed'];
    if (error.config.url.indexOf('/user/announcements/current') !== -1) {
        return;
    }
    var status = error.status;
    var errorCode = _.get(error, 'data.code', undefined);
    var errorMsg = errorCode === 'installation.error' ? 'installation.error' : 'api.error';
    if (status === 503) {
        error.handled = true;
        errorMsg = 'service.under.maintenance.error';
    }
    if (status >= 500 && suppressErrors.indexOf(errorCode) === -1) {
        $notify.warning(errorMsg);
    }
}

(function(module) {
    'use strict';

    module.controller('AppTipsController', [
        '$scope',
        '$sce',
        '$filter',
        '$parse',
        '$compile',
        '$templateRequest',
        'UserAgent', '$q',
        function($scope,
                  $sce,
                  $filter,
                  $parse,
                  $compile,
                  $templateRequest,
                  UserAgent, $q) {
            var vm = this;

            var tipsTemplates = {
                tipsOpen: 'app-v2/svgincludes/tips-open.html',
                tipsBookmark: 'app-v2/svgincludes/tips-bookmark.html',
                tipsInstall: 'app-v2/svgincludes/tips-install.html',
                tipsMdm: 'app-v2/svgincludes/tips-mdm.html',
                tipsPeople: 'app-v2/svgincludes/tips-people.html',
                tipsNotification: 'app-v2/svgincludes/tips-bell.html'
            };

            // Store the svg values to an object
            var newSvgArray = {};
            var appCenterCtrl = $scope.appCenterCtrl;

            $scope.getSvgValues = function() {
                var deferred = $q.defer();
                angular.forEach(tipsTemplates, function(name, key) {
                    var label = key;
                    $templateRequest(name).then(function(template) {
                        newSvgArray[label] = template;
                        deferred.resolve(newSvgArray);
                    }, function() {
                        // An error has occurred
                    });
                });

                return deferred.promise;
            };

            $scope.getSvgValues().then(function(svgValue) {
                vm.tipsDesktopCatalogText1 = $sce.trustAsHtml($filter('i18n')('userInfo.tips.catalog.desktop1', svgValue.tipsBookmark));

                vm.tipsDesktopCatalogMobileText1 = $sce.trustAsHtml($filter('i18n')('userInfo.tips.catalog.mobile1', svgValue.tipsOpen, svgValue.tipsBookmark));
                vm.tipsDesktopCatalogMobileText2 = $sce.trustAsHtml($filter('i18n')('userInfo.tips.catalog.mobile2', svgValue.tipsInstall, svgValue.tipsMdm));
                vm.tipsDesktopCatalogMobileText3 = $sce.trustAsHtml($filter('i18n')('userInfo.tips.catalog.mobile3'));
                vm.tipsDesktopPeopleMobileText1 = $sce.trustAsHtml($filter('i18n')('userInfo.tips.people.mobile', svgValue.tipsPeople));
                vm.tipsDesktopNotificationMobileText1 = $sce.trustAsHtml($filter('i18n')('userInfo.tips.notification.mobile', svgValue.tipsNotification));

                var mobileBookmarkMessage = $sce.trustAsHtml($filter('i18n')('userInfo.tips.bookmarks.mobile'));
                var mobileCatalogActionsMessage = $sce.trustAsHtml($filter('i18n')('userInfo.tips.catalog.bookmark.launch.phone', svgValue.tipsOpen, svgValue.tipsBookmark));
                var mobileCatalogInstallMessage = $sce.trustAsHtml($filter('i18n')('userInfo.tips.catalog.download.phone', svgValue.tipsInstall, svgValue.tipsMdm));
                var mobilePeopleMessage = $sce.trustAsHtml($filter('i18n')('userInfo.tips.people.mobile', svgValue.tipsPeople));
                var mobileNotificationMessage = $sce.trustAsHtml($filter('i18n')('userInfo.tips.notification.mobile', svgValue.tipsNotification));

                $scope.carouselPhoneImages = [
                    {"svglink": "app-v2/svgincludes/tips-bookmarks-phone.html", "header": "userInfo.tips.bookmarks", "message": mobileBookmarkMessage},
                    {"svglink": "app-v2/svgincludes/tips-catalog-actions-phone.html", "header": "userInfo.tips.catalog", "message": mobileCatalogActionsMessage},
                    {"svglink": "app-v2/svgincludes/tips-catalog-install-phone.html", "header": "userInfo.tips.catalog", "message": mobileCatalogInstallMessage},
                    {"svglink": "app-v2/svgincludes/tips-people-phone.html", "header": "userInfo.tips.people", "message": mobilePeopleMessage},
                    {"svglink": "app-v2/svgincludes/tips-notification-phone.html", "header": "userInfo.tips.notification", "message": mobileNotificationMessage}];

                $scope.carouselTabletImages = [
                    {"svglink": "app-v2/svgincludes/tips-bookmarks-tablet.html", "header": "userInfo.tips.bookmarks", "message": mobileBookmarkMessage},
                    {"svglink": "app-v2/svgincludes/tips-catalog-actions-tablet.html", "header": "userInfo.tips.catalog", "message": mobileCatalogActionsMessage},
                    {"svglink": "app-v2/svgincludes/tips-catalog-install-tablet.html", "header": "userInfo.tips.catalog", "message": mobileCatalogInstallMessage},
                    {"svglink": "app-v2/svgincludes/tips-people-tablet.html", "header": "userInfo.tips.people", "message": mobilePeopleMessage},
                    {"svglink": "app-v2/svgincludes/tips-notification-tablet.html", "header": "userInfo.tips.notification", "message": mobileNotificationMessage}];

                vm.device = '';

                if (UserAgent.isDesktopBrowser()) {
                    vm.device = 'desktop';
                }

                if (UserAgent.isTablet() && UserAgent.isBrowser() || UserAgent.isWindowsTabletBrowser()) {
                    vm.device = 'tablet-browser';
                }

                //Since reordering will appear for the windows tablet browser so we need a new condition
                if (UserAgent.isTablet() && UserAgent.isBrowser()) {
                    vm.device = 'non-windows-tablet-browser';
                }

                if (UserAgent.isPhone() || UserAgent.isAnyWindowsPhone()) {
                    vm.device = 'phone';
                    if (appCenterCtrl.mdmOnlyWS1) {
                        //remove bookmarks tips in MDM only mode
                        _.remove($scope.carouselPhoneImages, function(appTip) {
                            return appTip.message === mobileBookmarkMessage;
                        });
                    }

                    if (!appCenterCtrl.showPeopleTab) {
                        //remove people tips in if the feature flag or the tab does not exist
                        _.remove($scope.carouselPhoneImages, function(appTip) {
                            return appTip.message === mobilePeopleMessage;
                        });
                    }

                    if (!appCenterCtrl.inAppNotificationEnabled) {
                        //remove notification tips in if the feature flag or the tab does not exist
                        _.remove($scope.carouselPhoneImages, function(appTip) {
                            return appTip.message === mobileNotificationMessage;
                        });
                    }
                }

                if ((UserAgent.isTablet() && !UserAgent.isBrowser()) || UserAgent.isWindowsTabletJade()) {
                    vm.device = 'tablet';
                    if (appCenterCtrl.mdmOnlyWS1) {
                        //remove bookmarks tips in MDM only mode
                        _.remove($scope.carouselTabletImages, function(appTip) {
                            return appTip.message === mobileBookmarkMessage;
                        });
                    }

                    if (!appCenterCtrl.showPeopleTab) {
                        //remove people tips in if the feature flag or the tab does not exist
                        _.remove($scope.carouselTabletImages, function(appTip) {
                            return appTip.message === mobilePeopleMessage;
                        });
                    }

                    if (!appCenterCtrl.inAppNotificationEnabled) {
                        //remove notification tips in if the feature flag or the tab does not exist
                        _.remove($scope.carouselTabletImages, function(appTip) {
                            return appTip.message === mobileNotificationMessage;
                        });
                    }
                }
            });
        }]);
})(angular.module('com.vmware.greenbox.appCenter'));

(function(module) {
    'use strict';

    module.controller('PreferencesController', ['$scope',
        '$notify',
        '$filter',
        'HorizonResourcesLaunchService',
        'PasswordVaultService',
        'BootstrapService',
        function($scope,
                  $notify,
                  $filter,
                  HorizonResourcesLaunchService,
                  PasswordVaultService,
                  BootstrapService) {
            var vm = this;
            vm.preferredClient = HorizonResourcesLaunchService.getPreferredClient();
            vm.showPVPreference = false;
            vm.showActions = false;
            vm.changeThenCancel = false;
            vm.notificationPreference = _.get(window, 'workspaceOne.featureFlags.HUB_MOBILE_FLOWS_INTEGRATION', false);

            $scope.$on('$locationChangeStart', function(event, newURL, oldURL) {
                // When leaving preferences, the last saved option is highlighted.
                if (oldURL.toString().indexOf("preferences") > -1) {
                    vm.preferredClientTemp = vm.preferredClient;
                }
                // When getting to preferences, hide action buttons
                if (newURL.toString().indexOf("preferences") > -1) {
                    vm.showActions = false;
                }
            });
            /*
                Watch the preferredClientTemp variable and show action buttons when user toggles options except in the
                change-then-cancel scenario when the highlight is reset to the last saved option and the button are hidden.
             */
            $scope.$watch(function() {
                return vm.preferredClientTemp;
            }, function(newValue, oldValue) {
                if (newValue && oldValue) {
                    if (!vm.changeThenCancel) {
                        vm.showActions = true;
                    } else {
                        vm.changeThenCancel = false;
                    }
                }
            });

            if (!vm.preferredClient) {
                vm.preferredClient = HorizonResourcesLaunchService.CLIENT_NATIVE;
                HorizonResourcesLaunchService.setPreferredClient(vm.preferredClient);
            }

            vm.installLink = HorizonResourcesLaunchService.getDownloadLink();

            //change-then-cancel scenario - highlight is reset to the last saved option and the buttons are hidden.
            vm.cancelPreferenceChange = function() {
                if (vm.preferredClientTemp != vm.preferredClient) {
                    vm.preferredClientTemp = vm.preferredClient;
                    vm.changeThenCancel = true;
                    vm.showActions = false;
                } else {
                    vm.showActions = false;
                }
            };

            /*
                If user saves a new selection, highlighted option updates and action buttons disappear.
             */
            vm.saveLaunchDesktopPreference = function() {
                vm.preferredClient = vm.preferredClientTemp;
                HorizonResourcesLaunchService.setPreferredClient(vm.preferredClient);
                vm.showActions = false;
                $notify.success('myapps.launch.view.preferredClient.saveSuccess');
            };

            BootstrapService.init().then(function() {
                if (PasswordVaultService.getHasPvApps) {
                    PasswordVaultService.pingExtension().then(function(extentionDetected) {
                        if (!extentionDetected) {
                            vm.showPVPreference = true;
                            vm.pvstoreInstallLink = PasswordVaultService.getPVExtensionDownloadUrl();
                        }
                    });
                }
            });

            vm.installPasswordVaultPlugin = function() {
                window.open(vm.pvstoreInstallLink);
            };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.controller('SettingsController', [
        '$scope',
        '$location',
        '$rootScope',
        'SettingsService',
        'ConfigService',
        '$timeout',
        '$notify',
        'EventsService',
        'PAGING',
        'UserAgent',
        'BootstrapService',
        'ClientRuntimeService',
        'ModalService',
        '$sce',
        '$state',
        'AppDownloadService',
        'hznLocalStorage',
        function($scope,
                 $location,
                 $rootScope,
                 SettingsService,
                 ConfigService,
                 $timeout,
                 $notify,
                 EventsService,
                 PAGING,
                 UserAgent,
                 BootstrapService,
                 ClientRuntimeService,
                 ModalService,
                 $sce,
                 $state,
                 AppDownloadService,
                 hznLocalStorage) {
            var vm = this;
            vm.userInfo = SettingsService.getCurrentUser();
            vm.removeAccountOrSignOutEnabled = true;
            vm.showNotificationTab = UserAgent.isNativeAppVersionIsEqualOrAbove('3.3.1');
            var appCenterCtrl = $scope.appCenterCtrl;
            // need this to bring handle the stacking on the headers so the detail page will be on top of the header and footer
            appCenterCtrl.settingsDetailIn = false;
            //Setting up the default right tab in case user go directly to this url
            vm.settingActiveTab = "account";
            //This almost is a hack, need to wait for route change happen then add the "is-selected" class

            var initialRoute = "";

            $scope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {
                //remember the initial route the user start before they land on the settings page
                if (toState.url !== "/settings") {
                    //Need timeout to able the animation otherwise the detail panel just come on suddenly
                    $timeout(function() {
                        vm.settingActiveTab = $state.params.pageLink;
                        appCenterCtrl.settingsDetailIn = true;

                        if (vm.settingActiveTab === "termsofuse") {
                            getTermsofUse();
                        }
                    }, 10);
                }
                if (vm.settingActiveTab !== "account") {
                    vm.settingActiveTab = "account";
                    appCenterCtrl.settingsDetailIn = false;
                }
            });

            //This is for the mobile view the back arrow
            vm.dismissSettingsDetail = function() {
                vm.settingActiveTab = "account";

                // wait for the animation to finish to change the route, 350 is the animation sliding out
                $timeout(function() {
                    $location.path('/settings');
                    appCenterCtrl.settingsDetailIn = false;
                }, 350);
            };

            vm.nativeAbout = function() {
                ClientRuntimeService.about();
            };

            vm.nativeNotification = function() {
                ClientRuntimeService.notification();
            };

            vm.openPasswordDialog = function($event) {
                if ($event) {
                    $event.preventDefault();
                }
               ModalService.getCurrentModal().open('app-v2/settings/changePasswordDialog.html');
            };

            vm.downloadApp = function() {
                AppDownloadService.downloadApp();
            };

            vm.openDeviceListForDesktopappNativenav = function() {
                ModalService.getCurrentModal().open('app-v2/settings/devicelist-desktopapp-nativenav.html');
            };

            vm.termsOfUseForDesktopApp = function() {
                ModalService.getCurrentModal().open('app-v2/settings/termsofuse-desktopapp.html');
                getTermsofUse();
            };

            vm.termsOfUseForDesktopAppNativenav = function() {
                ModalService.getCurrentModal().open('app-v2/settings/termsofuse-desktopapp-nativenav.html');
                getTermsofUse();
            };

            vm.subPageNavigate = function(link) {
                $state.go('settings.pageLink', {
                    pageLink: link
                }, {
                    location: ''
                });
            };

            function getRemoveAccountSettings() {
                // pick up the value of key from local storage
                if ((UserAgent.isAndroid() || UserAgent.isIOS()) && UserAgent.isAWJadeMobile()) {
                    vm.removeAccountOrSignOutEnabled = !parseInt(hznLocalStorage.getItem('RemoveAccountSignOut'));
                }
            }

            function getTermsofUse() {
                ConfigService.getTermsOfUse().then(function(response) {
                    vm.touContent = $sce.trustAsHtml(response.content);
                    appCenterCtrl.touContent = vm.touContent;
                });
            }

            function onLoadContent() {
                if ($location.path().indexOf("termsofuse") > -1) {
                    getTermsofUse();
                }
                // in browser view while user on the sublink such as /settings/about and do a refresh
                // This will ensure the sub url will be loaded and the correct tab will be selected
                if ($location.path().indexOf("/settings/") > -1 && $location.path().length >= 10) {
                    var pagelink = $location.path();
                    // the output is /settings/about for example so extract from the 10th string
                    var subroute = pagelink.substring(10);

                    $timeout(function() {
                        vm.settingActiveTab = subroute;
                        appCenterCtrl.settingsDetailIn = true;
                    }, 10);
                }

                if (UserAgent.isMacAppDownloadSupported('10.11.0')) {
                    AppDownloadService.checkIfMacAppExists().then(function(data) {
                        if (data && data.downloadUrl) {
                            vm.showMacAppDownloadBanner = true;
                        }
                    });
                }
                getRemoveAccountSettings();
            }

            onLoadContent();
        }]);
})(angular.module("com.vmware.greenbox.appCenter"));

(function(module) {
    'use strict';

    module.service('SettingsService', ['Resource', 'ConfigService', function(Resource, ConfigService) {
        var currentUser = {};
        var currentBranding = {};
        var settingsService = this;

        settingsService.setCurrentUser = function(user) {
            currentUser = user;
        };
        settingsService.getCurrentUser = function() {
            return currentUser;
        };

        settingsService.getUserInfo = function() {
            return ConfigService.getUserInfoUrl().then(function(userUrl) {
                return Resource(userUrl, {cache: true, headers: {'Accept': 'application/hal+json', 'method': 'GET'}}).get();
            });
        };

        settingsService.getUserAnnouncement = function() {
            return ConfigService.getUserAnnouncementUrl().then(function(userAnnouncementUrl) {
                return Resource(userAnnouncementUrl, {headers: {'Accept': 'application/hal+json', 'method': 'GET'}}).get();
            });
        };

        settingsService.dismissUserAnnouncement = function() {
            return ConfigService.getUserAnnouncementUrl().then(function(userAnnouncementUrl) {
                return Resource(userAnnouncementUrl, {headers: {'method': 'DELETE'}}).deleteResource();
            });
        };

        settingsService.setCurrentBranding = function(branding) {
            currentBranding = branding;
        };
        settingsService.getCurrentBranding = function() {
            return currentBranding;
        };
    }]);
})(angular.module('com.vmware.greenbox.appCenter'));


(function(module) {
    'use strict';

    module.controller('SupportController', [
        '$scope',
        'ModalService',
        'UserAgent',
        '$timeout',
        '$state',
        '$location',
        function($scope,
                 ModalService,
                 UserAgent,
                 $timeout,
                 $state,
                 $location) {
            var vm = this;

            var appCenterCtrl = $scope.appCenterCtrl;
            // need this to bring handle the stacking on the headers so the detail page will be on top of the header and footer
            appCenterCtrl.settingsDetailIn = false;
            vm.hideDevicesTab = appCenterCtrl.mdmOnlyWS1;

            var init = function() {
                vm.isAWJadeMobile = UserAgent.isAWJadeMobile();
                vm.isAndroid = UserAgent.isAndroid();
                vm.isIOS = UserAgent.isIOS();
            };

            $scope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {
                //remember the initial route the user start before they land on the settings page
                if (toState.url !== "/support") {
                    //Need timeout to able the animation otherwise the detail panel just come on suddenly
                    $timeout(function() {
                        vm.settingActiveTab = $state.params.pageLink;
                        appCenterCtrl.settingsDetailIn = true;
                    }, 10);
                }
                if (vm.settingActiveTab) {
                    vm.settingActiveTab = "";
                    appCenterCtrl.settingsDetailIn = false;
                }
            });

            vm.dismissSupportDetail = function() {
                vm.settingActiveTab = "";

                // wait for the animation to finish to change the route, 350 is the animation sliding out
                $timeout(function() {
                    $location.path('/support');
                    appCenterCtrl.settingsDetailIn = false;
                }, 350);
            };

            init();
        }]);
})(angular.module("com.vmware.greenbox.appCenter"));

// Project Horizon
// (c) 2013-2014 VMware, Inc. All rights reserved.
// VMware Confidential.

(function(module) {
    module.directive('toast', ['$http', '$compile', '$templateCache', '$log', '$templateRequest', '$toast',
        function($http, $compile, $templateCache, $log, $templateRequest, $toast) {
            return {
                restrict: 'AE',
                scope: true,
                bindToController: true,
                controller: function($scope, $element) {
                    var $message = this;
                    var TEMPLATE_URL = "app-v2/toast/templates/messageContextTemplate.html";
                    var messages = $toast.message;

                    $templateRequest(TEMPLATE_URL)
                        .then(function(templateData) {
                            $compile(angular.element(templateData))($scope, function(clonedElement) {
                                angular.element($element).append(clonedElement);
                            });
                        })
                        .catch(function(e) {
                            $log.error('Failed to load template: ' + TEMPLATE_URL + ' [' + e.message + ']');
                        });

                    function show(messageArray) {
                        $toast.show(messageArray);
                    }

                    function toast(messageKey, params, templateUrl) {
                        $toast.showMessage("toast", messageKey, params, templateUrl);
                    }

                    // Close a message dialog.
                    function close(index) {
                        $toast.close(index);
                    }

                    $scope._messagesArray_ = messages;
                    $scope.close = close; // TODO: remove? we have $message.close

                    $message.toast = toast;
                    $message.show = show;
                    $message.close = close;
                },
                link: function($scope, element) {
                    element.addClass('toast-container');
                }
            };
        }]);

    module.directive('toastMessage', ['$templateCache', '$http', '$compile', '$log', '$templateRequest',
        function($templateCache, $http, $compile, $log, $templateRequest) {
            return {
                restrict: 'AE',
                require: '^toast',
                scope: false,
                transclude: true,
                replace: true,
                link: function($scope, element, attrs, message) {
                    var DEFAULT_TEMPLATE_URL = "app-v2/toast/templates/defaultMessageTemplate.html",
                        url = $scope.message.templateUrl || DEFAULT_TEMPLATE_URL;
                    var template = $templateCache.get(url);
                    $templateRequest(url)
                        .then(function(templateData) {
                            populateDialog(angular.element(templateData));
                        })
                        .catch(function(e) {
                            $log.error('Failed to load template: ' + url + ' [' + e.message + ']');
                        });
                    function populateDialog(template) {
                        $compile(template)($scope, function(clonedElement) {
                            element.append(clonedElement);
                        });
                    }
                }
            };
        }]);

    module.provider('$toast', function() {
        var defaultTimeouts = {
            // time before messages will be dismissed, in milliseconds:
            toast: 0,
        };
        var incrementalDelay = 100; // delay between multiple messages requested at once.
        var messagesQueue = [];
        var message = [];

        this.$get = ['Localization', '$timeout', '$rootScope', function(Localization, $timeout, $rootScope) { //noinspection JSValidateTypes
            function show(messageArray) {
                var delay = 0;
                if (!angular.isArray(messageArray)) {
                    messageArray = [messageArray];
                }
                messageArray.forEach(function(msg) {
                    var timeout = angular.isDefined(msg.timeout) ? msg.timeout : (defaultTimeouts[msg.type] || 0);
                    function isMsgPresent(existingMsg) {
                        return existingMsg.text === msg.text;
                    }
                    var duplicate = messagesQueue.filter(isMsgPresent).length > 0;
                    // avoid duplicates, both for ux and ng-repeat
                    if (duplicate) {
                        return;
                    }
                    //close( duplicate );
                    // space out the messages in time, for improved animation
                    messagesQueue.push(msg);
                    //message.splice(0,message.length);
                    message.push(msg);
                    if (timeout) {
                        // schedule the auto-dismiss
                        $timeout(function() {
                            close(messagesQueue.indexOf(msg));
                        }, timeout);
                    }
                    delay = delay + incrementalDelay;
                });
            }

            function toast(messageKey, params, templateUrl, arg) {
                showMessage("toast", messageKey, params, templateUrl, arg);
            }

            function error(messageKey, params, templateUrl, arg) {
                showMessage("error", messageKey, params, templateUrl, arg);
            }

            function close(msgOrIndex, params) {
                var duplicate = msgOrIndex;
                if (angular.isString(msgOrIndex)) {
                    var msgToClose = Localization.getLocalizedString(msgOrIndex, params ? params : []);
                    duplicate = messagesQueue.indexOf(messagesQueue.filter(function(item) {
                        return item.text === msgToClose;
                    })[0]);
                }
                if (duplicate >= 0) {
                    $rootScope.$applyAsync(function() {
                        messagesQueue.splice(duplicate, 1);
                        message.splice(duplicate, 1);
                    });
                }
            }

            function closeAll() {
                if (message && message.length > 0) {
                    $rootScope.$applyAsync(function() {
                        for (var i = message.length - 1; i >= 0; i--) {
                            messagesQueue.splice(i, 1);
                            message.splice(i, 1);
                        }
                    });
                }
            }

            function showMessage(messageType, message, params, templateUrl, arg) {
                close(message); // If same message is already open, close it.
                var msg = {};
                msg.type = messageType;
                msg.text = Localization.getLocalizedString(message, params ? params : []);
                msg.argument = arg ? arg : "";

                if (templateUrl) {
                    msg.templateUrl = templateUrl;
                }
                $rootScope.$applyAsync(function() {
                    show(msg);
                });
            }

            return {
                message: message,
                show: show,
                toast: toast,
                close: close,
                showMessage: showMessage,
                closeAll: closeAll
            };
        }];
    });
})(angular.module('com.vmware.workspace.components.toast', []));
